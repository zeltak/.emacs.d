"b31ff93d3a359c14f1c44b313c6260f3cddab113"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil (#2=[nil nil ((#("elif [[ \"$backend\" == \"dmenu\" ]]
    then function dmenu_t () {
    dmenu -l 15 -fn \"$font\" -nf \"$nf\" -nb \"$nb\" -sf \"$sf\" -sb \"$sb\" -o 90 \"$@\"
}
fi

" 0 4 (fontified t face font-lock-keyword-face) 4 8 (fontified t) 8 18 (fontified t face font-lock-string-face) 18 22 (fontified t) 22 29 (fontified t face font-lock-string-face) 29 33 (fontified t) 33 37 (fontified t) 37 50 (fontified t face font-lock-keyword-face) 50 51 (fontified t) 51 58 (fontified t face font-lock-function-name-face) 58 64 (fontified t) 64 84 (fontified t) 84 91 (fontified t face font-lock-string-face) 91 96 (fontified t) 96 101 (fontified t face font-lock-string-face) 101 106 (fontified t) 106 111 (fontified t face font-lock-string-face) 111 116 (fontified t) 116 121 (fontified t face font-lock-string-face) 121 126 (fontified t) 126 131 (fontified t face font-lock-string-face) 131 138 (fontified t) 138 140 (fontified t face font-lock-string-face) 140 141 (syntax-table #1=(3) fontified t face font-lock-string-face) 141 142 (fontified t face font-lock-string-face) 142 145 (fontified t) 145 147 (fontified t face font-lock-keyword-face) 147 149 (fontified t)) . 14866) 15014 (undo-tree-id12 . -148) (undo-tree-id13 . -148) (undo-tree-id14 . -148) (undo-tree-id15 . 149)) nil (21450 26424 913998 461000) 0 nil]) ((nil rear-nonsticky nil 14863 . 14864) (nil fontified nil 14693 . 14864) (14693 . 14864)) nil (21450 26424 914012 67000) 0 nil] [nil nil ((14693 . 14719)) ((#("https://paste.xinu.at/eOB/" 0 26 (fontified t)) . 14693) (undo-tree-id10 . -25) (undo-tree-id11 . -25)) (21450 26408 337873 831000) 0 nil] [nil nil ((nil rear-nonsticky nil 14863 . 14864) (nil fontified nil 14693 . 14864) (14693 . 14864)) ((#("backend=rofi
if [[ \"$backend\" == \"rofi\" ]]
then function dmenu_t () {
rofi -dmenu \"$@\"
}
elif [[ \"$backend\" == \"dmenu\" ]]
then function dmenu_t () {
dmenu -l 15 \"$@\"
}
fi " 0 7 (fontified nil face font-lock-variable-name-face) 7 13 (fontified nil) 13 15 (fontified nil face font-lock-keyword-face) 15 19 (fontified nil) 19 29 (fontified nil face font-lock-string-face) 29 33 (fontified nil) 33 39 (fontified nil face font-lock-string-face) 39 43 (fontified nil) 43 56 (fontified nil face font-lock-keyword-face) 56 57 (fontified nil) 57 64 (fontified nil face font-lock-function-name-face) 64 82 (fontified nil) 82 84 (fontified nil face font-lock-string-face) 84 85 (fontified nil syntax-table #1# face font-lock-string-face) 85 86 (fontified nil face font-lock-string-face) 86 89 (fontified nil) 89 93 (fontified nil face font-lock-keyword-face) 93 97 (fontified nil) 97 107 (fontified nil face font-lock-string-face) 107 111 (fontified nil) 111 118 (fontified nil face font-lock-string-face) 118 122 (fontified nil) 122 135 (fontified nil face font-lock-keyword-face) 135 136 (fontified nil) 136 143 (fontified nil face font-lock-function-name-face) 143 161 (fontified nil) 161 163 (fontified nil face font-lock-string-face) 163 164 (fontified nil syntax-table #1# face font-lock-string-face) 164 165 (fontified nil face font-lock-string-face) 165 168 (fontified nil) 168 170 (fontified nil face font-lock-keyword-face) 170 171 (fontified nil rear-nonsticky nil)) . 14693) (undo-tree-id8 . -170) (undo-tree-id9 . -170) (nil fontified t 14858 . 14861) (nil fontified t 14857 . 14858) (nil fontified t 14856 . 14857) (nil fontified t 14854 . 14856) (nil fontified t 14836 . 14854) (nil fontified t 14829 . 14836) (nil fontified t 14828 . 14829) (nil fontified t 14815 . 14828) (nil fontified t 14811 . 14815) (nil fontified t 14804 . 14811) (nil fontified t 14800 . 14804) (nil fontified t 14790 . 14800) (nil fontified t 14786 . 14790) (nil fontified t 14782 . 14786) (nil fontified t 14779 . 14782) (nil fontified t 14778 . 14779) (nil fontified t 14777 . 14778) (nil fontified t 14775 . 14777) (nil fontified t 14757 . 14775) (nil fontified t 14750 . 14757) (nil fontified t 14749 . 14750) (nil fontified t 14736 . 14749) (nil fontified t 14732 . 14736) (nil fontified t 14726 . 14732) (nil fontified t 14722 . 14726) (nil fontified t 14712 . 14722) (nil fontified t 14708 . 14712) (nil fontified t 14706 . 14708) (nil fontified t 14700 . 14706) (nil fontified t 14693 . 14700) (nil rear-nonsticky t 14863 . 14864)) (21450 26400 705706 74000) 0 nil]) ((#("source $HOME/.config/dmenurc
" 0 6 (fontified t face font-lock-builtin-face) 6 8 (fontified t) 8 12 (fontified t face font-lock-variable-name-face) 12 29 (fontified t)) . 14693) (undo-tree-id0 . -29) (undo-tree-id1 . -29) (undo-tree-id2 . -29) (undo-tree-id3 . -29) (undo-tree-id4 . 29)) nil (21450 26408 337940 943000) 0 nil]) ((14722 . 14724)) nil (21450 26400 705735 224000) 0 nil]) ((#("if [[ \"$backend\" == \"rofi\" ]]
    then function dmenu_t () {
    rofi -font \"$font\" -fg \"$nf\" -bg \"$nb\" -hlfg \"$sf\" -hlbg \"$sb\" -o 90 -bc \"$bc\" -dmenu \"$@\"
}

" 0 2 (fontified t face font-lock-keyword-face) 2 6 (fontified t) 6 16 (fontified t face font-lock-string-face) 16 20 (fontified t) 20 26 (fontified t face font-lock-string-face) 26 34 (fontified t) 34 47 (fontified t face font-lock-keyword-face) 47 48 (fontified t) 48 55 (fontified t face font-lock-function-name-face) 55 76 (fontified t) 76 83 (fontified t face font-lock-string-face) 83 88 (fontified t) 88 93 (fontified t face font-lock-string-face) 93 98 (fontified t) 98 103 (fontified t face font-lock-string-face) 103 110 (fontified t) 110 115 (fontified t face font-lock-string-face) 115 122 (fontified t) 122 127 (fontified t face font-lock-string-face) 127 138 (fontified t) 138 143 (fontified t face font-lock-string-face) 143 151 (fontified t) 151 153 (fontified t face font-lock-string-face) 153 154 (fontified t syntax-table #1# face font-lock-string-face) 154 155 (fontified t face font-lock-string-face) 155 159 (fontified t)) . 14722) 14880 (t 21450 9772 850422 700000) (undo-tree-id5 . -158) (undo-tree-id6 . -158) (undo-tree-id7 . -158)) nil (21450 26400 705742 899000) 0 nil]) nil nil (21450 26400 705745 831000) 0 nil] #2# 1038 7 nil]