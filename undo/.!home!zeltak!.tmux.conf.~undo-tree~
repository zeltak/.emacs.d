"edc98ec8ab12a3cda225e9aec579061efd9e64d8"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#(" " 0 1 (fontified t)) . 1434) (undo-tree-id3663 . 1) (t 21666 58922 205587 808000)) nil (21666 60936 171965 715000) 0 nil]) ((2694 . 2695)) nil (21666 58922 60900 389000) 0 nil]) ((2691 . 2694)) nil (21666 58922 60909 363000) 0 nil]) ((#("b" 0 1 (fontified t face font-lock-comment-face)) . -2691)) nil (21666 58922 60913 595000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -2692)) nil (21666 58922 60917 731000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -2693)) nil (21666 58922 60921 718000) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -2694)) nil (21666 58922 60925 166000) 0 nil]) ((2676 . 2695)) nil (21666 58922 60928 875000) 0 nil]) ((2676 . 2677)) nil (21666 58922 60931 878000) 0 nil]) ((#("#unbind C-b		#removes the default Command Prefix binding (Control-b).
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-face) 7 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 68 (fontified t face font-lock-comment-face) 68 69 (fontified t rear-nonsticky t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face)) . 2633) (undo-tree-id3634 . -70) (undo-tree-id3635 . -70) (undo-tree-id3636 . -70) (undo-tree-id3637 . -70) (undo-tree-id3638 . -70) (undo-tree-id3639 . -70) (undo-tree-id3640 . -70) (undo-tree-id3641 . -70) (undo-tree-id3642 . -70) (undo-tree-id3643 . -70) (undo-tree-id3644 . -70) (undo-tree-id3645 . -70) (undo-tree-id3646 . -70) (undo-tree-id3647 . 70)) nil (21666 58922 60985 564000) 0 nil]) ((#("#bind c new-window \\;  command-prompt -I #W \"rename-window '%%'\" 
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-face) 5 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t rear-nonsticky t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face) 42 65 (fontified t face font-lock-comment-face) 65 66 (fontified t rear-nonsticky t face font-lock-comment-face)) . 2703) (undo-tree-id3648 . 44) (undo-tree-id3649 . -23) (undo-tree-id3650 . -23) (undo-tree-id3651 . -23) (undo-tree-id3652 . -66) (undo-tree-id3653 . -66) (undo-tree-id3654 . -19) (undo-tree-id3655 . -23) (undo-tree-id3656 . -23) (undo-tree-id3657 . -21) (undo-tree-id3658 . -21) (undo-tree-id3659 . -22) (undo-tree-id3660 . -23) (undo-tree-id3661 . 44) (undo-tree-id3662 . 45) 2724 (t 21666 58653 255727 471000)) nil (21666 58922 61040 99000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2791) (undo-tree-id3596 . 1) (undo-tree-id3597 . 1) (undo-tree-id3598 . 1) (undo-tree-id3599 . 1) (undo-tree-id3600 . 1) (undo-tree-id3601 . 1) (undo-tree-id3602 . 1) (undo-tree-id3603 . 1)) nil (21666 58653 139006 719000) 0 nil]) ((#("-" 0 1 (fontified t)) . -2791) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1)) nil (21666 58653 139030 428000) 0 nil]) ((#("I" 0 1 (fontified t)) . -2792) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1)) nil (21666 58653 139049 672000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2793) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1)) nil (21666 58653 139065 540000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2794) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1)) nil (21666 58653 139080 583000) 0 nil]) ((#("W" 0 1 (fontified t face font-lock-comment-face)) . -2795) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (t 21666 58507 572542 414000)) nil (21666 58653 139092 580000) 0 nil]) ((2703 . 2704)) nil (21666 58507 446916 890000) 0 nil]) ((nil rear-nonsticky nil 2815 . 2816) (nil fontified nil 2768 . 2816) (2768 . 2816) (t 21666 58449 215790 644000)) nil (21666 58507 446929 221000) 0 nil]) ((nil rear-nonsticky nil 2767 . 2768) (nil fontified nil 2725 . 2768) (2725 . 2768) 2724) nil (21666 58449 90873 89000) 0 nil] [nil nil ((nil rear-nonsticky nil 8008 . 8009) (nil fontified nil 8006 . 8009) (nil fontified nil 7901 . 8006) (nil fontified nil 7868 . 7901) (nil fontified nil 7866 . 7868) (nil fontified nil 7861 . 7866) (nil fontified nil 7835 . 7861) (nil fontified nil 7834 . 7835) (nil fontified nil 7811 . 7834) (nil fontified nil 7810 . 7811) (nil fontified nil 7791 . 7810) (nil fontified nil 7790 . 7791) (nil fontified nil 7762 . 7790) (nil fontified nil 7760 . 7762) (nil fontified nil 7747 . 7760) (nil fontified nil 7732 . 7747) (nil fontified nil 7730 . 7732) (nil fontified nil 7632 . 7730) (nil fontified nil 7630 . 7632) (nil fontified nil 7625 . 7630) (nil fontified nil 7598 . 7625) (nil fontified nil 7597 . 7598) (nil fontified nil 7525 . 7597) (nil fontified nil 7523 . 7525) (nil fontified nil 7378 . 7523) (nil fontified nil 7376 . 7378) (nil fontified nil 7302 . 7376) (nil fontified nil 7231 . 7302) (nil fontified nil 7229 . 7231) (nil fontified nil 7155 . 7229) (nil fontified nil 7084 . 7155) (nil fontified nil 7082 . 7084) (nil fontified nil 6937 . 7082) (nil fontified nil 6935 . 6937) (nil fontified nil 6790 . 6935) (nil fontified nil 6788 . 6790) (nil fontified nil 6744 . 6788) (nil fontified nil 6714 . 6744) (nil fontified nil 6675 . 6714) (nil fontified nil 6674 . 6675) (nil fontified nil 6647 . 6674) (nil fontified nil 6646 . 6647) (nil fontified nil 6643 . 6646) (nil fontified nil 6606 . 6643) (nil fontified nil 6604 . 6606) (nil fontified nil 6545 . 6604) (nil fontified nil 6543 . 6545) (nil fontified nil 6484 . 6543) (nil fontified nil 6482 . 6484) (nil fontified nil 6423 . 6482) (nil fontified nil 6421 . 6423) (nil fontified nil 6362 . 6421) (nil fontified nil 6360 . 6362) (nil fontified nil 6301 . 6360) (nil fontified nil 6299 . 6301) (nil fontified nil 6277 . 6299) (nil fontified nil 6241 . 6277) (nil fontified nil 6240 . 6241) (nil fontified nil 6239 . 6240) (nil fontified nil 6232 . 6239) (nil fontified nil 6230 . 6232) (nil fontified nil 6207 . 6230) (nil fontified nil 6205 . 6207) (nil fontified nil 6182 . 6205) (nil fontified nil 6180 . 6182) (nil fontified nil 6157 . 6180) (nil fontified nil 6155 . 6157) (nil fontified nil 6139 . 6155) (nil fontified nil 6132 . 6139) (nil fontified nil 6130 . 6132) (nil fontified nil 6107 . 6130) (nil fontified nil 6105 . 6107) (nil fontified nil 6089 . 6105) (nil fontified nil 6046 . 6089) (nil fontified nil 6045 . 6046) (nil fontified nil 6020 . 6045) (nil fontified nil 6018 . 6020) (nil fontified nil 5980 . 6018) (nil fontified nil 5978 . 5980) (nil fontified nil 5940 . 5978) (nil fontified nil 5938 . 5940) (nil fontified nil 5900 . 5938) (nil fontified nil 5898 . 5900) (nil fontified nil 5860 . 5898) (nil fontified nil 5858 . 5860) (nil fontified nil 5820 . 5858) (nil fontified nil 5818 . 5820) (nil fontified nil 5803 . 5818) (nil fontified nil 5722 . 5803) (nil fontified nil 5721 . 5722) (nil fontified nil 5704 . 5721) (nil fontified nil 5699 . 5704) (nil fontified nil 5697 . 5699) (nil fontified nil 5693 . 5697) (nil fontified nil 5689 . 5693) (nil fontified nil 5651 . 5689) (nil fontified nil 5647 . 5651) (nil fontified nil 5611 . 5647) (nil fontified nil 5607 . 5611) (nil fontified nil 5571 . 5607) (nil fontified nil 5567 . 5571) (nil fontified nil 5487 . 5567) (nil fontified nil 5485 . 5487) (nil fontified nil 5479 . 5485) (nil fontified nil 5460 . 5479) (nil fontified nil 5459 . 5460) (nil fontified nil 5424 . 5459) (nil fontified nil 5422 . 5424) (nil fontified nil 5402 . 5422) (nil fontified nil 5376 . 5402) (nil fontified nil 5375 . 5376) (nil fontified nil 5348 . 5375) (nil fontified nil 5346 . 5348) (nil fontified nil 5278 . 5346) (nil fontified nil 5276 . 5278) (nil fontified nil 5271 . 5276) (nil fontified nil 5235 . 5271) (nil fontified nil 5233 . 5235) (nil fontified nil 5225 . 5233) (nil fontified nil 5216 . 5225) (nil fontified nil 5215 . 5216) (nil fontified nil 5214 . 5215) (nil fontified nil 5212 . 5214) (nil fontified nil 5117 . 5212) (nil fontified nil 5108 . 5117) (nil fontified nil 5106 . 5108) (nil fontified nil 5098 . 5106) (nil fontified nil 5085 . 5098) (nil fontified nil 5084 . 5085) (nil fontified nil 5056 . 5084) (nil fontified nil 5055 . 5056) (nil fontified nil 4990 . 5055) (nil fontified nil 4988 . 4990) (nil fontified nil 4986 . 4988) (nil fontified nil 4978 . 4986) (nil fontified nil 4976 . 4978) (nil fontified nil 4970 . 4976) (nil fontified nil 4956 . 4970) (nil fontified nil 4937 . 4956) (nil fontified nil 4936 . 4937) (nil fontified nil 4890 . 4936) (nil fontified nil 4872 . 4890) (nil fontified nil 4865 . 4872) (nil fontified nil 4777 . 4865) (nil fontified nil 4775 . 4777) (nil fontified nil 4760 . 4775) (nil fontified nil 4689 . 4760) (nil fontified nil 4688 . 4689) (nil fontified nil 4661 . 4688) (nil fontified nil 4603 . 4661) (nil fontified nil 4602 . 4603) (nil fontified nil 4545 . 4602) (nil fontified nil 4543 . 4545) (nil fontified nil 4527 . 4543) (nil fontified nil 4509 . 4527) (nil fontified nil 4508 . 4509) (nil fontified nil 4467 . 4508) (nil fontified nil 4465 . 4467) (nil fontified nil 4417 . 4465) (nil fontified nil 4415 . 4417) (nil fontified nil 4367 . 4415) (nil fontified nil 4365 . 4367) (nil fontified nil 4357 . 4365) (nil fontified nil 4317 . 4357) (nil fontified nil 4315 . 4317) (nil fontified nil 4267 . 4315) (nil fontified nil 4265 . 4267) (nil fontified nil 4257 . 4265) (nil fontified nil 4217 . 4257) (nil fontified nil 4215 . 4217) (nil fontified nil 4207 . 4215) (nil fontified nil 4181 . 4207) (nil fontified nil 4180 . 4181) (nil fontified nil 4121 . 4180) (nil fontified nil 4119 . 4121) (nil fontified nil 4054 . 4119) (nil fontified nil 4052 . 4054) (nil fontified nil 3987 . 4052) (nil fontified nil 3985 . 3987) (nil fontified nil 3920 . 3985) (nil fontified nil 3918 . 3920) (nil fontified nil 3853 . 3918) (nil fontified nil 3851 . 3853) (nil fontified nil 3844 . 3851) (nil fontified nil 3786 . 3844) (nil fontified nil 3784 . 3786) (nil fontified nil 3777 . 3784) (nil fontified nil 3709 . 3777) (nil fontified nil 3708 . 3709) (nil fontified nil 3647 . 3708) (nil fontified nil 3646 . 3647) (nil fontified nil 3643 . 3646) (nil fontified nil 3640 . 3643) (nil fontified nil 3608 . 3640) (nil fontified nil 3606 . 3608) (nil fontified nil 3592 . 3606) (nil fontified nil 3589 . 3592) (nil fontified nil 3557 . 3589) (nil fontified nil 3555 . 3557) (nil fontified nil 3541 . 3555) (nil fontified nil 3538 . 3541) (nil fontified nil 3506 . 3538) (nil fontified nil 3504 . 3506) (nil fontified nil 3490 . 3504) (nil fontified nil 3487 . 3490) (nil fontified nil 3455 . 3487) (nil fontified nil 3453 . 3455) (nil fontified nil 3439 . 3453) (nil fontified nil 3436 . 3439) (nil fontified nil 3404 . 3436) (nil fontified nil 3402 . 3404) (nil fontified nil 3388 . 3402) (nil fontified nil 3385 . 3388) (nil fontified nil 3353 . 3385) (nil fontified nil 3351 . 3353) (nil fontified nil 3339 . 3351) (nil fontified nil 3288 . 3339) (nil fontified nil 3287 . 3288) (nil fontified nil 3285 . 3287) (nil fontified nil 3225 . 3285) (nil fontified nil 3223 . 3225) (nil fontified nil 3221 . 3223) (nil fontified nil 3213 . 3221) (nil fontified nil 3211 . 3213) (nil fontified nil 3205 . 3211) (nil fontified nil 3191 . 3205) (nil fontified nil 3150 . 3191) (nil fontified nil 3109 . 3150) (nil fontified nil 3053 . 3109) (nil fontified nil 3052 . 3053) (nil fontified nil 2979 . 3052) (nil fontified nil 2978 . 2979) (nil fontified nil 2960 . 2978) (nil fontified nil 2953 . 2960) (nil fontified nil 2857 . 2953) (nil fontified nil 2780 . 2857) (nil fontified nil 2779 . 2780) (nil fontified nil 2726 . 2779) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (2724 . 8009)) ((#("
#run the lmer part regressing stage 2 pred Vs mean pm
#in israel check per month, also check 30km band and other methods for meanpm
m2.smooth = lme(pred.m2 ~ meanPM25,random = list(aodid= ~1 + meanPM25),control=lmeControl(opt = \"optim\"), data= m2.all )
#xm2.smooth = lmer(pred.m2 ~ meanPM25+(1+ meanPM25|aodid), data= m2.all )
#correlate to see everything from mod2 and the mpm works
m2.all[, pred.t31 := predict(m2.smooth)]
m2.all[, resid  := residuals(m2.smooth)]
res[res$type==\"PM25\", 'm3.t31'] <- print(summary(lm(pred.m2~pred.t31,data=m2.all))$r.squared)


#split the files to the separate bi monthly datsets
Tall_bimon1 <- subset(m2.all ,m2.all$bimon == \"1\")
Tall_bimon2 <- subset(m2.all ,m2.all$bimon == \"2\")
Tall_bimon3 <- subset(m2.all ,m2.all$bimon == \"3\")
Tall_bimon4 <- subset(m2.all ,m2.all$bimon == \"4\")
Tall_bimon5 <- subset(m2.all ,m2.all$bimon == \"5\")
Tall_bimon6 <- subset(m2.all ,m2.all$bimon == \"6\")

#run the separate splines (smooth) for x and y for each bimon
#whats the default band (distance) that the spline goes out and uses
fit2_1 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon1 )
fit2_2 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon2 )
fit2_3 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon3 )
fit2_4 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon4 )
fit2_5 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon5 )
fit2_6 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon6 )

#get the predicted-fitted 
Xpred_1 <- (Tall_bimon1$pred.t31 - fit2_1$fitted)
Xpred_2 <- (Tall_bimon2$pred.t31 - fit2_2$fitted)
Xpred_3 <- (Tall_bimon3$pred.t31 - fit2_3$fitted)
Xpred_4 <- (Tall_bimon4$pred.t31 - fit2_4$fitted)
Xpred_5 <- (Tall_bimon5$pred.t31 - fit2_5$fitted)
Xpred_6 <- (Tall_bimon6$pred.t31 - fit2_6$fitted)

#remerge to 1 file
m2.all$pred.t32 <- c( Xpred_1,Xpred_2, Xpred_3, Xpred_4, Xpred_5, Xpred_6)
#this is important so that its sorted as in the first gamm
setkey(m2.all,day, aodid)

#rerun the lme on the predictions including the spatial spline (smooth)
Final_pred_all <- lme(pred.t32 ~ meanPM25 ,random = list(aodid= ~1 + meanPM25 ),control=lmeControl(opt = \"optim\"),data= m2.all  )
m2.all[, pred.t33 := predict(Final_pred_all)]
#check correlations
res[res$type==\"PM25\", 'm3.t33'] <- print(summary(lm(pred.m2 ~ pred.t33,data=m2.all))$r.squared) 


#------------------------>>>
#import mod3 
data.m3 <- readRDS(\"/media/NAS/Uni/Projects/P046_Israel_MAIAC/3.Work/2.Gather_data/FN000_RWORKDIR/mod3.AQ.all.rds\")

#for PM25
data.m3 <- data.m3[,c(1,2,5,29:32,52,53),with=FALSE]
data.m3[, bimon := (m + 1) %/% 2]
setkey(data.m3,day, aodid)
data.m3<-data.m3[!is.na(meanPM25)]

#generate m.3 initial pred
data.m3$pred.m3.mix <-  predict(Final_pred_all,data.m3)

#create unique grid
ugrid <-data.m3 %>%
    group_by(aodid) %>%
    summarise(lat_aod = mean(lat_aod, na.rm=TRUE),  long_aod = mean(long_aod, na.rm=TRUE),x_aod_ITM = mean(x_aod_ITM, na.rm=TRUE),  y_aod_ITM = mean(y_aod_ITM, na.rm=TRUE)) 


#### PREDICT Gam part
#split back into bimons to include the gam prediction in final prediction        
data.m3_bimon1 <- data.m3[bimon == 1, ]
data.m3_bimon2 <- data.m3[bimon == 2, ]
data.m3_bimon3 <- data.m3[bimon == 3, ]
data.m3_bimon4 <- data.m3[bimon == 4, ]
data.m3_bimon5 <- data.m3[bimon == 5, ]
data.m3_bimon6 <- data.m3[bimon == 6, ]


#addin unique grid to each bimon           
uniq_gid_bimon1 <- ugrid
uniq_gid_bimon2 <- ugrid
uniq_gid_bimon3 <- ugrid
uniq_gid_bimon4 <- ugrid
uniq_gid_bimon5 <- ugrid
uniq_gid_bimon6 <- ugrid

#get predictions for Bimon residuals
uniq_gid_bimon1$gpred <- predict.gam(fit2_1,uniq_gid_bimon1)
uniq_gid_bimon2$gpred <- predict.gam(fit2_2,uniq_gid_bimon2)
uniq_gid_bimon3$gpred <- predict.gam(fit2_3,uniq_gid_bimon3)
uniq_gid_bimon4$gpred <- predict.gam(fit2_4,uniq_gid_bimon4)
uniq_gid_bimon5$gpred <- predict.gam(fit2_5,uniq_gid_bimon5)
uniq_gid_bimon6$gpred <- predict.gam(fit2_6,uniq_gid_bimon6)



#merge things back togheter
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> merges
setkey(uniq_gid_bimon1,aodid)
setkey(data.m3_bimon1,aodid)
data.m3_bimon1 <- merge(data.m3_bimon1, uniq_gid_bimon1[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon2,aodid)
setkey(data.m3_bimon2,aodid)
data.m3_bimon2 <- merge(data.m3_bimon2, uniq_gid_bimon2[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon3,aodid)
setkey(data.m3_bimon3,aodid)
data.m3_bimon3 <- merge(data.m3_bimon3, uniq_gid_bimon3[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon4,aodid)
setkey(data.m3_bimon4,aodid)
data.m3_bimon4 <- merge(data.m3_bimon4, uniq_gid_bimon4[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon5,aodid)
setkey(data.m3_bimon5,aodid)
data.m3_bimon5 <- merge(data.m3_bimon5, uniq_gid_bimon5[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon6,aodid)
setkey(data.m3_bimon6,aodid)
data.m3_bimon6 <- merge(data.m3_bimon6, uniq_gid_bimon6[,list(aodid,gpred)], all.x = T)

#reattach all parts        
mod3 <- rbind(data.m3_bimon1,data.m3_bimon2,data.m3_bimon3,data.m3_bimon4,data.m3_bimon5,data.m3_bimon6)
# create pred.m3
mod3$pred.m3 <-mod3$pred.m3.mix+mod3$gpred
#hist(mod3$pred.m3)
#describe(mod3$pred.m3)
#recode negative into zero
mod3 <- mod3[pred.m3 >= 0]
saveRDS(mod3,\"/media/NAS/Uni/Projects/P046_Israel_MAIAC/3.Work/2.Gather_data/FN000_RWORKDIR/mod3.AQ.allYEARS.pred.rds\")

" 0 1 (fontified nil) 1 2 (fontified nil face font-lock-comment-delimiter-face) 2 55 (fontified nil face font-lock-comment-face) 55 56 (fontified nil face font-lock-comment-delimiter-face) 56 133 (fontified nil face font-lock-comment-face) 133 142 (fontified nil face font-lock-variable-name-face) 142 229 (fontified nil) 229 236 (fontified nil face font-lock-string-face) 236 254 (fontified nil) 254 255 (fontified nil face font-lock-comment-delimiter-face) 255 328 (fontified nil face font-lock-comment-face) 328 329 (fontified nil face font-lock-comment-delimiter-face) 329 385 (fontified nil face font-lock-comment-face) 385 393 (fontified nil face font-lock-variable-name-face) 393 426 (fontified nil) 426 434 (fontified nil face font-lock-variable-name-face) 434 467 (fontified nil) 467 481 (fontified nil) 481 487 (fontified nil face font-lock-string-face) 487 489 (fontified nil) 489 497 (fontified nil face font-lock-string-face) 497 499 (fontified nil) 499 501 (fontified nil) 501 561 (fontified nil) 561 563 (fontified nil) 563 564 (fontified nil face font-lock-comment-delimiter-face) 564 615 (fontified nil face font-lock-comment-face) 615 626 (fontified nil face font-lock-variable-name-face) 626 627 (fontified nil) 627 629 (fontified nil) 629 661 (fontified nil) 661 664 (fontified nil face font-lock-string-face) 664 666 (fontified nil) 666 677 (fontified nil face font-lock-variable-name-face) 677 678 (fontified nil) 678 680 (fontified nil) 680 712 (fontified nil) 712 715 (fontified nil face font-lock-string-face) 715 717 (fontified nil) 717 728 (fontified nil face font-lock-variable-name-face) 728 729 (fontified nil) 729 731 (fontified nil) 731 763 (fontified nil) 763 766 (fontified nil face font-lock-string-face) 766 768 (fontified nil) 768 779 (fontified nil face font-lock-variable-name-face) 779 780 (fontified nil) 780 782 (fontified nil) 782 814 (fontified nil) 814 817 (fontified nil face font-lock-string-face) 817 819 (fontified nil) 819 830 (fontified nil face font-lock-variable-name-face) 830 831 (fontified nil) 831 833 (fontified nil) 833 865 (fontified nil) 865 868 (fontified nil face font-lock-string-face) 868 870 (fontified nil) 870 881 (fontified nil face font-lock-variable-name-face) 881 882 (fontified nil) 882 884 (fontified nil) 884 916 (fontified nil) 916 919 (fontified nil face font-lock-string-face) 919 922 (fontified nil) 922 923 (fontified nil face font-lock-comment-delimiter-face) 923 984 (fontified nil face font-lock-comment-face) 984 985 (fontified nil face font-lock-comment-delimiter-face) 985 1053 (fontified nil face font-lock-comment-face) 1053 1059 (fontified nil face font-lock-variable-name-face) 1059 1060 (fontified nil) 1060 1062 (fontified nil) 1062 1120 (fontified nil) 1120 1126 (fontified nil face font-lock-variable-name-face) 1126 1127 (fontified nil) 1127 1129 (fontified nil) 1129 1187 (fontified nil) 1187 1193 (fontified nil face font-lock-variable-name-face) 1193 1194 (fontified nil) 1194 1196 (fontified nil) 1196 1254 (fontified nil) 1254 1260 (fontified nil face font-lock-variable-name-face) 1260 1261 (fontified nil) 1261 1263 (fontified nil) 1263 1321 (fontified nil) 1321 1327 (fontified nil face font-lock-variable-name-face) 1327 1328 (fontified nil) 1328 1330 (fontified nil) 1330 1388 (fontified nil) 1388 1394 (fontified nil face font-lock-variable-name-face) 1394 1395 (fontified nil) 1395 1397 (fontified nil) 1397 1456 (fontified nil) 1456 1457 (fontified nil face font-lock-comment-delimiter-face) 1457 1483 (fontified nil face font-lock-comment-face) 1483 1490 (fontified nil face font-lock-variable-name-face) 1490 1491 (fontified nil) 1491 1493 (fontified nil) 1493 1533 (fontified nil) 1533 1540 (fontified nil face font-lock-variable-name-face) 1540 1541 (fontified nil) 1541 1543 (fontified nil) 1543 1583 (fontified nil) 1583 1590 (fontified nil face font-lock-variable-name-face) 1590 1591 (fontified nil) 1591 1593 (fontified nil) 1593 1633 (fontified nil) 1633 1641 (fontified nil) 1641 1643 (face font-lock-constant-face fontified nil) 1643 1683 (fontified nil) 1683 1691 (fontified nil) 1691 1693 (face font-lock-constant-face fontified nil) 1693 1733 (fontified nil) 1733 1741 (fontified nil) 1741 1743 (face font-lock-constant-face fontified nil) 1743 1784 (fontified nil) 1784 1785 (face font-lock-comment-delimiter-face fontified nil) 1785 1803 (face font-lock-comment-face fontified nil) 1803 1819 (fontified nil) 1819 1821 (face font-lock-constant-face fontified nil) 1821 1878 (fontified nil) 1878 1879 (face font-lock-comment-delimiter-face fontified nil) 1879 1937 (face font-lock-comment-face fontified nil) 1937 1964 (fontified nil) 1964 1965 (face font-lock-comment-delimiter-face fontified nil) 1965 2036 (face font-lock-comment-face fontified nil) 2036 2051 (fontified nil) 2051 2053 (face font-lock-constant-face fontified nil) 2053 2141 (fontified nil) 2141 2148 (face font-lock-string-face fontified nil) 2148 2166 (fontified nil) 2166 2212 (fontified nil) 2212 2213 (face font-lock-comment-delimiter-face fontified nil) 2213 2232 (face font-lock-comment-face fontified nil) 2232 2246 (fontified nil) 2246 2252 (face font-lock-string-face fontified nil) 2252 2254 (fontified nil) 2254 2262 (face font-lock-string-face fontified nil) 2262 2264 (fontified nil) 2264 2266 (face font-lock-constant-face fontified nil) 2266 2331 (fontified nil) 2331 2332 (face font-lock-comment-delimiter-face fontified nil) 2332 2360 (face font-lock-comment-face fontified nil) 2360 2361 (face font-lock-comment-delimiter-face fontified nil) 2361 2374 (face font-lock-comment-face fontified nil) 2374 2382 (fontified nil) 2382 2384 (face font-lock-constant-face fontified nil) 2384 2393 (fontified nil) 2393 2488 (face font-lock-string-face fontified nil) 2488 2490 (fontified nil) 2490 2491 (fontified nil) 2491 2492 (face font-lock-comment-delimiter-face fontified nil) 2492 2501 (face font-lock-comment-face fontified nil) 2501 2509 (fontified nil) 2509 2511 (face font-lock-constant-face fontified nil) 2511 2547 (fontified nil) 2547 2552 (face font-lock-type-face fontified nil) 2552 2554 (fontified nil) 2554 2615 (fontified nil) 2615 2622 (fontified nil) 2622 2624 (face font-lock-constant-face fontified nil) 2624 2651 (fontified nil) 2651 2652 (face font-lock-comment-delimiter-face fontified nil) 2652 2678 (face font-lock-comment-face fontified nil) 2678 2698 (fontified nil) 2698 2700 (face font-lock-constant-face fontified nil) 2700 2735 (fontified nil) 2735 2736 (face font-lock-comment-delimiter-face fontified nil) 2736 2755 (face font-lock-comment-face fontified nil) 2755 2761 (fontified nil) 2761 2763 (face font-lock-constant-face fontified nil) 2763 2799 (fontified nil) 2799 2843 (fontified nil) 2843 2847 (face font-lock-type-face fontified nil) 2847 2883 (fontified nil) 2883 2887 (face font-lock-type-face fontified nil) 2887 2923 (fontified nil) 2923 2927 (face font-lock-type-face fontified nil) 2927 2965 (fontified nil) 2965 2969 (face font-lock-type-face fontified nil) 2969 2973 (fontified nil) 2973 2975 (fontified nil) 2975 2980 (face font-lock-comment-delimiter-face fontified nil) 2980 2997 (face font-lock-comment-face fontified nil) 2997 2998 (face font-lock-comment-delimiter-face fontified nil) 2998 3079 (face font-lock-comment-face fontified nil) 3079 3094 (fontified nil) 3094 3096 (face font-lock-constant-face fontified nil) 3096 3119 (fontified nil) 3119 3134 (fontified nil) 3134 3136 (face font-lock-constant-face fontified nil) 3136 3159 (fontified nil) 3159 3174 (fontified nil) 3174 3176 (face font-lock-constant-face fontified nil) 3176 3199 (fontified nil) 3199 3214 (fontified nil) 3214 3216 (face font-lock-constant-face fontified nil) 3216 3239 (fontified nil) 3239 3254 (fontified nil) 3254 3256 (face font-lock-constant-face fontified nil) 3256 3279 (fontified nil) 3279 3294 (fontified nil) 3294 3296 (face font-lock-constant-face fontified nil) 3296 3321 (fontified nil) 3321 3322 (face font-lock-comment-delimiter-face fontified nil) 3322 3365 (face font-lock-comment-face fontified nil) 3365 3381 (fontified nil) 3381 3383 (face font-lock-constant-face fontified nil) 3383 3390 (fontified nil) 3390 3406 (fontified nil) 3406 3408 (face font-lock-constant-face fontified nil) 3408 3415 (fontified nil) 3415 3431 (fontified nil) 3431 3433 (face font-lock-constant-face fontified nil) 3433 3440 (fontified nil) 3440 3456 (fontified nil) 3456 3458 (face font-lock-constant-face fontified nil) 3458 3465 (fontified nil) 3465 3481 (fontified nil) 3481 3483 (face font-lock-constant-face fontified nil) 3483 3490 (fontified nil) 3490 3506 (fontified nil) 3506 3508 (face font-lock-constant-face fontified nil) 3508 3515 (fontified nil) 3515 3516 (fontified nil) 3516 3517 (face font-lock-comment-delimiter-face fontified nil) 3517 3553 (face font-lock-comment-face fontified nil) 3553 3575 (fontified nil) 3575 3577 (face font-lock-constant-face fontified nil) 3577 3614 (fontified nil) 3614 3636 (fontified nil) 3636 3638 (face font-lock-constant-face fontified nil) 3638 3675 (fontified nil) 3675 3697 (fontified nil) 3697 3699 (face font-lock-constant-face fontified nil) 3699 3736 (fontified nil) 3736 3758 (fontified nil) 3758 3760 (face font-lock-constant-face fontified nil) 3760 3797 (fontified nil) 3797 3819 (fontified nil) 3819 3821 (face font-lock-constant-face fontified nil) 3821 3858 (fontified nil) 3858 3880 (fontified nil) 3880 3882 (face font-lock-constant-face fontified nil) 3882 3919 (fontified nil) 3919 3922 (fontified nil) 3922 3923 (face font-lock-comment-delimiter-face fontified nil) 3923 3950 (face font-lock-comment-face fontified nil) 3950 3951 (face font-lock-comment-delimiter-face fontified nil) 3951 3990 (face font-lock-comment-face fontified nil) 3990 4020 (fontified nil) 4020 4049 (fontified nil) 4049 4064 (fontified nil) 4064 4066 (face font-lock-constant-face fontified nil) 4066 4196 (fontified nil) 4196 4211 (fontified nil) 4211 4213 (face font-lock-constant-face fontified nil) 4213 4343 (fontified nil) 4343 4358 (fontified nil) 4358 4360 (face font-lock-constant-face fontified nil) 4360 4431 (fontified nil) 4431 4461 (fontified nil) 4461 4489 (fontified nil face font-lock-variable-name-face) 4489 4490 (fontified nil) 4490 4504 (fontified nil face font-lock-variable-name-face) 4504 4505 (fontified nil) 4505 4507 (fontified nil) 4507 4578 (fontified nil) 4578 4607 (fontified nil face font-lock-variable-name-face) 4607 4608 (fontified nil) 4608 4636 (fontified nil face font-lock-variable-name-face) 4636 4637 (fontified nil) 4637 4651 (fontified nil face font-lock-variable-name-face) 4651 4652 (fontified nil) 4652 4654 (fontified nil) 4654 4725 (fontified nil) 4725 4754 (fontified nil face font-lock-variable-name-face) 4754 4755 (fontified nil) 4755 4783 (fontified nil face font-lock-variable-name-face) 4783 4784 (fontified nil) 4784 4798 (fontified nil face font-lock-variable-name-face) 4798 4799 (fontified nil) 4799 4801 (fontified nil) 4801 4873 (fontified nil) 4873 4874 (fontified nil face font-lock-comment-delimiter-face) 4874 4901 (fontified nil face font-lock-comment-face) 4901 4905 (fontified nil face font-lock-variable-name-face) 4905 4906 (fontified nil) 4906 4908 (fontified nil) 4908 5006 (fontified nil) 5006 5008 (fontified nil face font-lock-comment-delimiter-face) 5008 5023 (fontified nil face font-lock-comment-face) 5023 5035 (fontified nil face font-lock-variable-name-face) 5035 5036 (fontified nil) 5036 5038 (fontified nil) 5038 5066 (fontified nil) 5066 5067 (fontified nil face font-lock-comment-delimiter-face) 5067 5086 (fontified nil face font-lock-comment-face) 5086 5087 (fontified nil face font-lock-comment-delimiter-face) 5087 5110 (fontified nil face font-lock-comment-face) 5110 5111 (fontified nil face font-lock-comment-delimiter-face) 5111 5137 (fontified nil face font-lock-comment-face) 5137 5141 (fontified nil face font-lock-variable-name-face) 5141 5142 (fontified nil) 5142 5144 (fontified nil) 5144 5164 (fontified nil) 5164 5177 (fontified nil) 5177 5282 (fontified nil face font-lock-string-face) 5282 5284 (fontified nil) 5284 5285 (rear-nonsticky nil fontified nil)) . 2724) (undo-tree-id3553 . -5285) (undo-tree-id3554 . -5285) (undo-tree-id3555 . -5137) (undo-tree-id3556 . -5137) (undo-tree-id3557 . -5164) (undo-tree-id3558 . -5164) (undo-tree-id3559 . -4461) (undo-tree-id3560 . -5086) (undo-tree-id3561 . -5086) (undo-tree-id3562 . -5066) (undo-tree-id3563 . -5066) (undo-tree-id3564 . -5023) (undo-tree-id3565 . -5023) (undo-tree-id3566 . -5006) (undo-tree-id3567 . -5006) (undo-tree-id3568 . -4901) (undo-tree-id3569 . -4901) (undo-tree-id3570 . -4873) (undo-tree-id3571 . -4873) (undo-tree-id3572 . -4872) (undo-tree-id3573 . -4872) (undo-tree-id3574 . -4784) (undo-tree-id3575 . -4784) (undo-tree-id3576 . -4755) (undo-tree-id3577 . -4755) (undo-tree-id3578 . -4725) (undo-tree-id3579 . -4725) (undo-tree-id3580 . -4637) (undo-tree-id3581 . -4637) (undo-tree-id3582 . -4608) (undo-tree-id3583 . -4608) (undo-tree-id3584 . -4578) (undo-tree-id3585 . -4578) (undo-tree-id3586 . -4461) (undo-tree-id3587 . -4461) (undo-tree-id3588 . -5284) (undo-tree-id3589 . -5284) (undo-tree-id3590 . -4490) (undo-tree-id3591 . -4490) (undo-tree-id3592 . -5110) (undo-tree-id3593 . -5110) (undo-tree-id3594 . -4461) (undo-tree-id3595 . -4461) (nil fontified t 2724 . 2725) (nil fontified t 2726 . 2779) (nil fontified t 2780 . 2857) (nil fontified t 2960 . 2978) (nil fontified t 2979 . 3052) (nil fontified t 3053 . 3109) (nil fontified t 3117 . 3150) (nil fontified t 3109 . 3117) (nil fontified t 3158 . 3191) (nil fontified t 3150 . 3158) (nil fontified t 3225 . 3285) (nil fontified t 3285 . 3287) (nil fontified t 3288 . 3339) (nil fontified t 3388 . 3390) (nil fontified t 3439 . 3441) (nil fontified t 3490 . 3492) (nil fontified t 3541 . 3543) (nil fontified t 3592 . 3594) (nil fontified t 3643 . 3646) (nil fontified t 3647 . 3708) (nil fontified t 3709 . 3777) (nil fontified t 3786 . 3844) (nil fontified t 3853 . 3911) (nil fontified t 3920 . 3978) (nil fontified t 3987 . 4045) (nil fontified t 4054 . 4112) (nil fontified t 4121 . 4180) (nil fontified t 4181 . 4207) (nil fontified t 4217 . 4257) (nil fontified t 4267 . 4307) (nil fontified t 4317 . 4357) (nil fontified nil 4367 . 4407) (nil fontified nil 4417 . 4457) (nil fontified nil 4467 . 4508) (nil fontified nil 4509 . 4527) (nil fontified nil 4545 . 4602) (nil fontified nil 4603 . 4661) (nil fontified nil 4661 . 4688) (nil fontified nil 4689 . 4760) (nil fontified nil 4872 . 4890) (nil fontified nil 4890 . 4936) (nil fontified nil 4937 . 4956) (nil fontified nil 4990 . 5055) (nil fontified nil 5056 . 5084) (nil fontified nil 5085 . 5098) (nil fontified nil 5212 . 5214) (nil fontified nil 5214 . 5215) (nil fontified nil 5216 . 5225) (nil fontified nil 5276 . 5278) (nil fontified nil 5278 . 5339) (nil fontified nil 5348 . 5375) (nil fontified nil 5376 . 5402) (nil fontified nil 5424 . 5459) (nil fontified nil 5460 . 5479) (nil fontified nil 5487 . 5523) (nil fontified nil 5693 . 5697) (nil fontified nil 5697 . 5699) (nil fontified nil 5704 . 5721) (nil fontified nil 5722 . 5803) (nil fontified nil 5820 . 5843) (nil fontified nil 5860 . 5883) (nil fontified nil 5900 . 5923) (nil fontified nil 5940 . 5963) (nil fontified nil 5980 . 6003) (nil fontified nil 6020 . 6045) (nil fontified nil 6046 . 6089) (nil fontified nil 6107 . 6114) (nil fontified nil 6132 . 6139) (nil fontified nil 6157 . 6164) (nil fontified nil 6182 . 6189) (nil fontified nil 6207 . 6214) (nil fontified nil 6232 . 6239) (nil fontified nil 6239 . 6240) (nil fontified nil 6241 . 6277) (nil fontified nil 6301 . 6338) (nil fontified nil 6362 . 6399) (nil fontified nil 6423 . 6460) (nil fontified nil 6484 . 6521) (nil fontified nil 6545 . 6582) (nil fontified nil 6606 . 6643) (nil fontified nil 6643 . 6646) (nil fontified nil 6647 . 6674) (nil fontified nil 6675 . 6714) (nil fontified nil 6714 . 6744) (nil fontified nil 6744 . 6773) (nil fontified nil 6790 . 6920) (nil fontified nil 6937 . 7067) (nil fontified nil 7084 . 7155) (nil fontified t 7213 . 7214) (nil fontified t 7185 . 7213) (nil fontified nil 7155 . 7185) (nil fontified t 7231 . 7302) (nil fontified t 7360 . 7361) (nil fontified t 7332 . 7360) (nil fontified t 7331 . 7332) (nil fontified t 7302 . 7331) (nil fontified t 7507 . 7508) (nil fontified t 7479 . 7507) (nil fontified t 7478 . 7479) (nil fontified t 7449 . 7478) (nil fontified t 7378 . 7449) (nil fontified t 7525 . 7597) (nil fontified t 7598 . 7625) (nil fontified t 7632 . 7730) (nil fontified t 7732 . 7747) (nil fontified t 7762 . 7790) (nil fontified t 7791 . 7810) (nil fontified t 7811 . 7834) (nil fontified t 7835 . 7861) (nil fontified t 7868 . 7888) (nil fontified t 8006 . 8008) (nil rear-nonsticky t 8008 . 8009)) (21666 58444 241711 140000) 0 nil]) ((#("r" 0 1 (fontified t)) . -2724) (undo-tree-id3536 . -1)) nil (21666 58444 243830 415000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2725) (undo-tree-id3537 . -1)) nil (21666 58444 241748 294000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2726) (undo-tree-id3538 . -1)) nil (21666 58444 241752 235000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2727) (undo-tree-id3539 . -1)) nil (21666 58444 241755 857000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2728) (undo-tree-id3540 . -1)) nil (21666 58444 241759 479000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2729) (undo-tree-id3541 . -1)) nil (21666 58444 241763 410000) 0 nil]) ((#("-" 0 1 (fontified t)) . -2730) (undo-tree-id3542 . -1)) nil (21666 58444 241767 12000) 0 nil]) ((#("w" 0 1 (fontified t)) . -2731) (undo-tree-id3543 . -1)) nil (21666 58444 241770 954000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2732) (undo-tree-id3544 . -1)) nil (21666 58444 241774 787000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2733) (undo-tree-id3545 . -1)) nil (21666 58444 241778 519000) 0 nil]) ((#("d" 0 1 (fontified t)) . -2734) (undo-tree-id3546 . -1)) nil (21666 58444 241782 175000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2735) (undo-tree-id3547 . -1)) nil (21666 58444 241785 982000) 0 nil]) ((#("w" 0 1 (fontified t)) . -2736) (undo-tree-id3548 . -1)) nil (21666 58444 241789 953000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2737) (undo-tree-id3549 . -1)) nil (21666 58444 241793 873000) 0 nil]) ((#("%" 0 1 (fontified t)) . -2738) (undo-tree-id3550 . -1)) nil (21666 58444 241797 621000) 0 nil]) ((#("%" 0 1 (fontified t)) . -2739) (undo-tree-id3551 . -1)) nil (21666 58444 241801 245000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2740) (undo-tree-id3552 . -1) (t 21666 58421 429082 380000)) nil (21666 58444 241805 346000) 0 nil]) ((2737 . 2741)) nil (21666 58421 83649 781000) 0 nil]) ((#("w" 0 1 (fontified t rear-nonsticky t)) . 2759) (undo-tree-id3486 . 1) (undo-tree-id3487 . 1) (undo-tree-id3488 . 1) (undo-tree-id3489 . 1) (undo-tree-id3490 . 1) (undo-tree-id3491 . 1) (undo-tree-id3492 . 1) (undo-tree-id3493 . 1) (undo-tree-id3494 . 1) (undo-tree-id3495 . 1) (undo-tree-id3496 . 1) (undo-tree-id3497 . 1) (undo-tree-id3498 . 1)) nil (21666 58421 83726 631000) 0 nil]) ((#("o" 0 1 (fontified t)) . 2759) (undo-tree-id3499 . -1) (undo-tree-id3500 . 1) (undo-tree-id3501 . 1) (undo-tree-id3502 . 1) (undo-tree-id3503 . 1) (undo-tree-id3504 . 1) (undo-tree-id3505 . 1) (undo-tree-id3506 . 1) (undo-tree-id3507 . 1) (undo-tree-id3508 . 1) (undo-tree-id3509 . 1) (undo-tree-id3510 . 1)) nil (21666 58421 83790 988000) 0 nil]) ((#("d" 0 1 (fontified t)) . 2759) (undo-tree-id3511 . 1) (undo-tree-id3512 . 1) (undo-tree-id3513 . 1) (undo-tree-id3514 . 1) (undo-tree-id3515 . 1) (undo-tree-id3516 . 1) (undo-tree-id3517 . 1) (undo-tree-id3518 . 1) (undo-tree-id3519 . 1)) nil (21666 58421 83841 752000) 0 nil]) ((#("n" 0 1 (fontified t)) . 2759) (undo-tree-id3520 . 1) (undo-tree-id3521 . 1) (undo-tree-id3522 . 1) (undo-tree-id3523 . 1) (undo-tree-id3524 . 1) (undo-tree-id3525 . 1) (undo-tree-id3526 . 1)) nil (21666 58421 83894 906000) 0 nil]) ((#("i" 0 1 (fontified t)) . 2759) (undo-tree-id3527 . 1) (undo-tree-id3528 . 1) (undo-tree-id3529 . 1) (undo-tree-id3530 . 1) (undo-tree-id3531 . 1)) nil (21666 58421 83931 251000) 0 nil]) ((#("w" 0 1 (fontified t)) . 2759) (undo-tree-id3532 . 1) (undo-tree-id3533 . 1) (undo-tree-id3534 . 1)) nil (21666 58421 83944 387000) 0 nil]) ((#("-" 0 1 (fontified t)) . 2759) (undo-tree-id3535 . 1)) nil (21666 58421 83952 184000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((nil rear-nonsticky nil 8008 . 8009) (nil fontified nil 8006 . 8009) (nil fontified nil 7901 . 8006) (nil fontified nil 7868 . 7901) (nil fontified nil 7866 . 7868) (nil fontified nil 7861 . 7866) (nil fontified nil 7835 . 7861) (nil fontified nil 7834 . 7835) (nil fontified nil 7811 . 7834) (nil fontified nil 7810 . 7811) (nil fontified nil 7791 . 7810) (nil fontified nil 7790 . 7791) (nil fontified nil 7762 . 7790) (nil fontified nil 7760 . 7762) (nil fontified nil 7747 . 7760) (nil fontified nil 7732 . 7747) (nil fontified nil 7730 . 7732) (nil fontified nil 7632 . 7730) (nil fontified nil 7630 . 7632) (nil fontified nil 7625 . 7630) (nil fontified nil 7598 . 7625) (nil fontified nil 7597 . 7598) (nil fontified nil 7525 . 7597) (nil fontified nil 7523 . 7525) (nil fontified nil 7378 . 7523) (nil fontified nil 7376 . 7378) (nil fontified nil 7302 . 7376) (nil fontified nil 7231 . 7302) (nil fontified nil 7229 . 7231) (nil fontified nil 7155 . 7229) (nil fontified nil 7084 . 7155) (nil fontified nil 7082 . 7084) (nil fontified nil 6937 . 7082) (nil fontified nil 6935 . 6937) (nil fontified nil 6790 . 6935) (nil fontified nil 6788 . 6790) (nil fontified nil 6744 . 6788) (nil fontified nil 6714 . 6744) (nil fontified nil 6675 . 6714) (nil fontified nil 6674 . 6675) (nil fontified nil 6647 . 6674) (nil fontified nil 6646 . 6647) (nil fontified nil 6643 . 6646) (nil fontified nil 6606 . 6643) (nil fontified nil 6604 . 6606) (nil fontified nil 6545 . 6604) (nil fontified nil 6543 . 6545) (nil fontified nil 6484 . 6543) (nil fontified nil 6482 . 6484) (nil fontified nil 6423 . 6482) (nil fontified nil 6421 . 6423) (nil fontified nil 6362 . 6421) (nil fontified nil 6360 . 6362) (nil fontified nil 6301 . 6360) (nil fontified nil 6299 . 6301) (nil fontified nil 6277 . 6299) (nil fontified nil 6241 . 6277) (nil fontified nil 6240 . 6241) (nil fontified nil 6239 . 6240) (nil fontified nil 6232 . 6239) (nil fontified nil 6230 . 6232) (nil fontified nil 6207 . 6230) (nil fontified nil 6205 . 6207) (nil fontified nil 6182 . 6205) (nil fontified nil 6180 . 6182) (nil fontified nil 6157 . 6180) (nil fontified nil 6155 . 6157) (nil fontified nil 6139 . 6155) (nil fontified nil 6132 . 6139) (nil fontified nil 6130 . 6132) (nil fontified nil 6107 . 6130) (nil fontified nil 6105 . 6107) (nil fontified nil 6089 . 6105) (nil fontified nil 6046 . 6089) (nil fontified nil 6045 . 6046) (nil fontified nil 6020 . 6045) (nil fontified nil 6018 . 6020) (nil fontified nil 5980 . 6018) (nil fontified nil 5978 . 5980) (nil fontified nil 5940 . 5978) (nil fontified nil 5938 . 5940) (nil fontified nil 5900 . 5938) (nil fontified nil 5898 . 5900) (nil fontified nil 5860 . 5898) (nil fontified nil 5858 . 5860) (nil fontified nil 5820 . 5858) (nil fontified nil 5818 . 5820) (nil fontified nil 5803 . 5818) (nil fontified nil 5722 . 5803) (nil fontified nil 5721 . 5722) (nil fontified nil 5704 . 5721) (nil fontified nil 5699 . 5704) (nil fontified nil 5697 . 5699) (nil fontified nil 5693 . 5697) (nil fontified nil 5689 . 5693) (nil fontified nil 5651 . 5689) (nil fontified nil 5647 . 5651) (nil fontified nil 5611 . 5647) (nil fontified nil 5607 . 5611) (nil fontified nil 5571 . 5607) (nil fontified nil 5567 . 5571) (nil fontified nil 5487 . 5567) (nil fontified nil 5485 . 5487) (nil fontified nil 5479 . 5485) (nil fontified nil 5460 . 5479) (nil fontified nil 5459 . 5460) (nil fontified nil 5424 . 5459) (nil fontified nil 5422 . 5424) (nil fontified nil 5402 . 5422) (nil fontified nil 5376 . 5402) (nil fontified nil 5375 . 5376) (nil fontified nil 5348 . 5375) (nil fontified nil 5346 . 5348) (nil fontified nil 5278 . 5346) (nil fontified nil 5276 . 5278) (nil fontified nil 5271 . 5276) (nil fontified nil 5235 . 5271) (nil fontified nil 5233 . 5235) (nil fontified nil 5225 . 5233) (nil fontified nil 5216 . 5225) (nil fontified nil 5215 . 5216) (nil fontified nil 5214 . 5215) (nil fontified nil 5212 . 5214) (nil fontified nil 5117 . 5212) (nil fontified nil 5108 . 5117) (nil fontified nil 5106 . 5108) (nil fontified nil 5098 . 5106) (nil fontified nil 5085 . 5098) (nil fontified nil 5084 . 5085) (nil fontified nil 5056 . 5084) (nil fontified nil 5055 . 5056) (nil fontified nil 4990 . 5055) (nil fontified nil 4988 . 4990) (nil fontified nil 4986 . 4988) (nil fontified nil 4978 . 4986) (nil fontified nil 4976 . 4978) (nil fontified nil 4970 . 4976) (nil fontified nil 4956 . 4970) (nil fontified nil 4937 . 4956) (nil fontified nil 4936 . 4937) (nil fontified nil 4890 . 4936) (nil fontified nil 4872 . 4890) (nil fontified nil 4865 . 4872) (nil fontified nil 4777 . 4865) (nil fontified nil 4775 . 4777) (nil fontified nil 4760 . 4775) (nil fontified nil 4689 . 4760) (nil fontified nil 4688 . 4689) (nil fontified nil 4661 . 4688) (nil fontified nil 4603 . 4661) (nil fontified nil 4602 . 4603) (nil fontified nil 4545 . 4602) (nil fontified nil 4543 . 4545) (nil fontified nil 4527 . 4543) (nil fontified nil 4509 . 4527) (nil fontified nil 4508 . 4509) (nil fontified nil 4467 . 4508) (nil fontified nil 4465 . 4467) (nil fontified nil 4417 . 4465) (nil fontified nil 4415 . 4417) (nil fontified nil 4367 . 4415) (nil fontified nil 4365 . 4367) (nil fontified nil 4357 . 4365) (nil fontified nil 4317 . 4357) (nil fontified nil 4315 . 4317) (nil fontified nil 4267 . 4315) (nil fontified nil 4265 . 4267) (nil fontified nil 4257 . 4265) (nil fontified nil 4217 . 4257) (nil fontified nil 4215 . 4217) (nil fontified nil 4207 . 4215) (nil fontified nil 4181 . 4207) (nil fontified nil 4180 . 4181) (nil fontified nil 4121 . 4180) (nil fontified nil 4119 . 4121) (nil fontified nil 4054 . 4119) (nil fontified nil 4052 . 4054) (nil fontified nil 3987 . 4052) (nil fontified nil 3985 . 3987) (nil fontified nil 3920 . 3985) (nil fontified nil 3918 . 3920) (nil fontified nil 3853 . 3918) (nil fontified nil 3851 . 3853) (nil fontified nil 3844 . 3851) (nil fontified nil 3786 . 3844) (nil fontified nil 3784 . 3786) (nil fontified nil 3777 . 3784) (nil fontified nil 3709 . 3777) (nil fontified nil 3708 . 3709) (nil fontified nil 3647 . 3708) (nil fontified nil 3646 . 3647) (nil fontified nil 3643 . 3646) (nil fontified nil 3640 . 3643) (nil fontified nil 3608 . 3640) (nil fontified nil 3606 . 3608) (nil fontified nil 3592 . 3606) (nil fontified nil 3589 . 3592) (nil fontified nil 3557 . 3589) (nil fontified nil 3555 . 3557) (nil fontified nil 3541 . 3555) (nil fontified nil 3538 . 3541) (nil fontified nil 3506 . 3538) (nil fontified nil 3504 . 3506) (nil fontified nil 3490 . 3504) (nil fontified nil 3487 . 3490) (nil fontified nil 3455 . 3487) (nil fontified nil 3453 . 3455) (nil fontified nil 3439 . 3453) (nil fontified nil 3436 . 3439) (nil fontified nil 3404 . 3436) (nil fontified nil 3402 . 3404) (nil fontified nil 3388 . 3402) (nil fontified nil 3385 . 3388) (nil fontified nil 3353 . 3385) (nil fontified nil 3351 . 3353) (nil fontified nil 3339 . 3351) (nil fontified nil 3288 . 3339) (nil fontified nil 3287 . 3288) (nil fontified nil 3285 . 3287) (nil fontified nil 3225 . 3285) (nil fontified nil 3223 . 3225) (nil fontified nil 3221 . 3223) (nil fontified nil 3213 . 3221) (nil fontified nil 3211 . 3213) (nil fontified nil 3205 . 3211) (nil fontified nil 3191 . 3205) (nil fontified nil 3150 . 3191) (nil fontified nil 3109 . 3150) (nil fontified nil 3053 . 3109) (nil fontified nil 3052 . 3053) (nil fontified nil 2979 . 3052) (nil fontified nil 2978 . 2979) (nil fontified nil 2960 . 2978) (nil fontified nil 2953 . 2960) (nil fontified nil 2857 . 2953) (nil fontified nil 2780 . 2857) (nil fontified nil 2779 . 2780) (nil fontified nil 2726 . 2779) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (2724 . 8009)) ((#("
#run the lmer part regressing stage 2 pred Vs mean pm
#in israel check per month, also check 30km band and other methods for meanpm
m2.smooth = lme(pred.m2 ~ meanPM25,random = list(aodid= ~1 + meanPM25),control=lmeControl(opt = \"optim\"), data= m2.all )
#xm2.smooth = lmer(pred.m2 ~ meanPM25+(1+ meanPM25|aodid), data= m2.all )
#correlate to see everything from mod2 and the mpm works
m2.all[, pred.t31 := predict(m2.smooth)]
m2.all[, resid  := residuals(m2.smooth)]
res[res$type==\"PM25\", 'm3.t31'] <- print(summary(lm(pred.m2~pred.t31,data=m2.all))$r.squared)


#split the files to the separate bi monthly datsets
Tall_bimon1 <- subset(m2.all ,m2.all$bimon == \"1\")
Tall_bimon2 <- subset(m2.all ,m2.all$bimon == \"2\")
Tall_bimon3 <- subset(m2.all ,m2.all$bimon == \"3\")
Tall_bimon4 <- subset(m2.all ,m2.all$bimon == \"4\")
Tall_bimon5 <- subset(m2.all ,m2.all$bimon == \"5\")
Tall_bimon6 <- subset(m2.all ,m2.all$bimon == \"6\")

#run the separate splines (smooth) for x and y for each bimon
#whats the default band (distance) that the spline goes out and uses
fit2_1 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon1 )
fit2_2 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon2 )
fit2_3 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon3 )
fit2_4 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon4 )
fit2_5 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon5 )
fit2_6 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon6 )

#get the predicted-fitted 
Xpred_1 <- (Tall_bimon1$pred.t31 - fit2_1$fitted)
Xpred_2 <- (Tall_bimon2$pred.t31 - fit2_2$fitted)
Xpred_3 <- (Tall_bimon3$pred.t31 - fit2_3$fitted)
Xpred_4 <- (Tall_bimon4$pred.t31 - fit2_4$fitted)
Xpred_5 <- (Tall_bimon5$pred.t31 - fit2_5$fitted)
Xpred_6 <- (Tall_bimon6$pred.t31 - fit2_6$fitted)

#remerge to 1 file
m2.all$pred.t32 <- c( Xpred_1,Xpred_2, Xpred_3, Xpred_4, Xpred_5, Xpred_6)
#this is important so that its sorted as in the first gamm
setkey(m2.all,day, aodid)

#rerun the lme on the predictions including the spatial spline (smooth)
Final_pred_all <- lme(pred.t32 ~ meanPM25 ,random = list(aodid= ~1 + meanPM25 ),control=lmeControl(opt = \"optim\"),data= m2.all  )
m2.all[, pred.t33 := predict(Final_pred_all)]
#check correlations
res[res$type==\"PM25\", 'm3.t33'] <- print(summary(lm(pred.m2 ~ pred.t33,data=m2.all))$r.squared) 


#------------------------>>>
#import mod3 
data.m3 <- readRDS(\"/media/NAS/Uni/Projects/P046_Israel_MAIAC/3.Work/2.Gather_data/FN000_RWORKDIR/mod3.AQ.all.rds\")

#for PM25
data.m3 <- data.m3[,c(1,2,5,29:32,52,53),with=FALSE]
data.m3[, bimon := (m + 1) %/% 2]
setkey(data.m3,day, aodid)
data.m3<-data.m3[!is.na(meanPM25)]

#generate m.3 initial pred
data.m3$pred.m3.mix <-  predict(Final_pred_all,data.m3)

#create unique grid
ugrid <-data.m3 %>%
    group_by(aodid) %>%
    summarise(lat_aod = mean(lat_aod, na.rm=TRUE),  long_aod = mean(long_aod, na.rm=TRUE),x_aod_ITM = mean(x_aod_ITM, na.rm=TRUE),  y_aod_ITM = mean(y_aod_ITM, na.rm=TRUE)) 


#### PREDICT Gam part
#split back into bimons to include the gam prediction in final prediction        
data.m3_bimon1 <- data.m3[bimon == 1, ]
data.m3_bimon2 <- data.m3[bimon == 2, ]
data.m3_bimon3 <- data.m3[bimon == 3, ]
data.m3_bimon4 <- data.m3[bimon == 4, ]
data.m3_bimon5 <- data.m3[bimon == 5, ]
data.m3_bimon6 <- data.m3[bimon == 6, ]


#addin unique grid to each bimon           
uniq_gid_bimon1 <- ugrid
uniq_gid_bimon2 <- ugrid
uniq_gid_bimon3 <- ugrid
uniq_gid_bimon4 <- ugrid
uniq_gid_bimon5 <- ugrid
uniq_gid_bimon6 <- ugrid

#get predictions for Bimon residuals
uniq_gid_bimon1$gpred <- predict.gam(fit2_1,uniq_gid_bimon1)
uniq_gid_bimon2$gpred <- predict.gam(fit2_2,uniq_gid_bimon2)
uniq_gid_bimon3$gpred <- predict.gam(fit2_3,uniq_gid_bimon3)
uniq_gid_bimon4$gpred <- predict.gam(fit2_4,uniq_gid_bimon4)
uniq_gid_bimon5$gpred <- predict.gam(fit2_5,uniq_gid_bimon5)
uniq_gid_bimon6$gpred <- predict.gam(fit2_6,uniq_gid_bimon6)



#merge things back togheter
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> merges
setkey(uniq_gid_bimon1,aodid)
setkey(data.m3_bimon1,aodid)
data.m3_bimon1 <- merge(data.m3_bimon1, uniq_gid_bimon1[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon2,aodid)
setkey(data.m3_bimon2,aodid)
data.m3_bimon2 <- merge(data.m3_bimon2, uniq_gid_bimon2[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon3,aodid)
setkey(data.m3_bimon3,aodid)
data.m3_bimon3 <- merge(data.m3_bimon3, uniq_gid_bimon3[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon4,aodid)
setkey(data.m3_bimon4,aodid)
data.m3_bimon4 <- merge(data.m3_bimon4, uniq_gid_bimon4[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon5,aodid)
setkey(data.m3_bimon5,aodid)
data.m3_bimon5 <- merge(data.m3_bimon5, uniq_gid_bimon5[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon6,aodid)
setkey(data.m3_bimon6,aodid)
data.m3_bimon6 <- merge(data.m3_bimon6, uniq_gid_bimon6[,list(aodid,gpred)], all.x = T)

#reattach all parts        
mod3 <- rbind(data.m3_bimon1,data.m3_bimon2,data.m3_bimon3,data.m3_bimon4,data.m3_bimon5,data.m3_bimon6)
# create pred.m3
mod3$pred.m3 <-mod3$pred.m3.mix+mod3$gpred
#hist(mod3$pred.m3)
#describe(mod3$pred.m3)
#recode negative into zero
mod3 <- mod3[pred.m3 >= 0]
saveRDS(mod3,\"/media/NAS/Uni/Projects/P046_Israel_MAIAC/3.Work/2.Gather_data/FN000_RWORKDIR/mod3.AQ.allYEARS.pred.rds\")

" 0 1 (fontified nil) 1 2 (fontified nil face font-lock-comment-delimiter-face) 2 55 (fontified nil face font-lock-comment-face) 55 56 (fontified nil face font-lock-comment-delimiter-face) 56 133 (fontified nil face font-lock-comment-face) 133 142 (fontified nil face font-lock-variable-name-face) 142 229 (fontified nil) 229 236 (fontified nil face font-lock-string-face) 236 254 (fontified nil) 254 255 (fontified nil face font-lock-comment-delimiter-face) 255 328 (fontified nil face font-lock-comment-face) 328 329 (fontified nil face font-lock-comment-delimiter-face) 329 385 (fontified nil face font-lock-comment-face) 385 393 (fontified nil face font-lock-variable-name-face) 393 426 (fontified nil) 426 434 (fontified nil face font-lock-variable-name-face) 434 467 (fontified nil) 467 481 (fontified nil) 481 487 (fontified nil face font-lock-string-face) 487 489 (fontified nil) 489 497 (fontified nil face font-lock-string-face) 497 499 (fontified nil) 499 501 (fontified nil) 501 561 (fontified nil) 561 563 (fontified nil) 563 564 (fontified nil face font-lock-comment-delimiter-face) 564 615 (fontified nil face font-lock-comment-face) 615 626 (fontified nil face font-lock-variable-name-face) 626 627 (fontified nil) 627 629 (fontified nil) 629 661 (fontified nil) 661 664 (fontified nil face font-lock-string-face) 664 666 (fontified nil) 666 677 (fontified nil face font-lock-variable-name-face) 677 678 (fontified nil) 678 680 (fontified nil) 680 712 (fontified nil) 712 715 (fontified nil face font-lock-string-face) 715 717 (fontified nil) 717 728 (fontified nil face font-lock-variable-name-face) 728 729 (fontified nil) 729 731 (fontified nil) 731 763 (fontified nil) 763 766 (fontified nil face font-lock-string-face) 766 768 (fontified nil) 768 779 (fontified nil face font-lock-variable-name-face) 779 780 (fontified nil) 780 782 (fontified nil) 782 814 (fontified nil) 814 817 (fontified nil face font-lock-string-face) 817 819 (fontified nil) 819 830 (fontified nil face font-lock-variable-name-face) 830 831 (fontified nil) 831 833 (fontified nil) 833 865 (fontified nil) 865 868 (fontified nil face font-lock-string-face) 868 870 (fontified nil) 870 881 (fontified nil face font-lock-variable-name-face) 881 882 (fontified nil) 882 884 (fontified nil) 884 916 (fontified nil) 916 919 (fontified nil face font-lock-string-face) 919 922 (fontified nil) 922 923 (fontified nil face font-lock-comment-delimiter-face) 923 984 (fontified nil face font-lock-comment-face) 984 985 (fontified nil face font-lock-comment-delimiter-face) 985 1053 (fontified nil face font-lock-comment-face) 1053 1059 (fontified nil face font-lock-variable-name-face) 1059 1060 (fontified nil) 1060 1062 (fontified nil) 1062 1120 (fontified nil) 1120 1126 (fontified nil face font-lock-variable-name-face) 1126 1127 (fontified nil) 1127 1129 (fontified nil) 1129 1187 (fontified nil) 1187 1193 (fontified nil face font-lock-variable-name-face) 1193 1194 (fontified nil) 1194 1196 (fontified nil) 1196 1254 (fontified nil) 1254 1260 (fontified nil face font-lock-variable-name-face) 1260 1261 (fontified nil) 1261 1263 (fontified nil) 1263 1321 (fontified nil) 1321 1327 (fontified nil face font-lock-variable-name-face) 1327 1328 (fontified nil) 1328 1330 (fontified nil) 1330 1388 (fontified nil) 1388 1394 (fontified nil face font-lock-variable-name-face) 1394 1395 (fontified nil) 1395 1397 (fontified nil) 1397 1456 (fontified nil) 1456 1457 (fontified nil face font-lock-comment-delimiter-face) 1457 1483 (fontified nil face font-lock-comment-face) 1483 1490 (fontified nil face font-lock-variable-name-face) 1490 1491 (fontified nil) 1491 1493 (fontified nil) 1493 1533 (fontified nil) 1533 1540 (fontified nil face font-lock-variable-name-face) 1540 1541 (fontified nil) 1541 1543 (fontified nil) 1543 1583 (fontified nil) 1583 1590 (fontified nil face font-lock-variable-name-face) 1590 1591 (fontified nil) 1591 1593 (fontified nil) 1593 1633 (fontified nil) 1633 1641 (fontified nil) 1641 1643 (face font-lock-constant-face fontified nil) 1643 1683 (fontified nil) 1683 1691 (fontified nil) 1691 1693 (face font-lock-constant-face fontified nil) 1693 1733 (fontified nil) 1733 1741 (fontified nil) 1741 1743 (face font-lock-constant-face fontified nil) 1743 1784 (fontified nil) 1784 1785 (face font-lock-comment-delimiter-face fontified nil) 1785 1803 (face font-lock-comment-face fontified nil) 1803 1819 (fontified nil) 1819 1821 (face font-lock-constant-face fontified nil) 1821 1878 (fontified nil) 1878 1879 (face font-lock-comment-delimiter-face fontified nil) 1879 1937 (face font-lock-comment-face fontified nil) 1937 1964 (fontified nil) 1964 1965 (face font-lock-comment-delimiter-face fontified nil) 1965 2036 (face font-lock-comment-face fontified nil) 2036 2051 (fontified nil) 2051 2053 (face font-lock-constant-face fontified nil) 2053 2141 (fontified nil) 2141 2148 (face font-lock-string-face fontified nil) 2148 2166 (fontified nil) 2166 2212 (fontified nil) 2212 2213 (face font-lock-comment-delimiter-face fontified nil) 2213 2232 (face font-lock-comment-face fontified nil) 2232 2246 (fontified nil) 2246 2252 (face font-lock-string-face fontified nil) 2252 2254 (fontified nil) 2254 2262 (face font-lock-string-face fontified nil) 2262 2264 (fontified nil) 2264 2266 (face font-lock-constant-face fontified nil) 2266 2331 (fontified nil) 2331 2332 (face font-lock-comment-delimiter-face fontified nil) 2332 2360 (face font-lock-comment-face fontified nil) 2360 2361 (face font-lock-comment-delimiter-face fontified nil) 2361 2374 (face font-lock-comment-face fontified nil) 2374 2382 (fontified nil) 2382 2384 (face font-lock-constant-face fontified nil) 2384 2393 (fontified nil) 2393 2488 (face font-lock-string-face fontified nil) 2488 2490 (fontified nil) 2490 2491 (fontified nil) 2491 2492 (face font-lock-comment-delimiter-face fontified nil) 2492 2501 (face font-lock-comment-face fontified nil) 2501 2509 (fontified nil) 2509 2511 (face font-lock-constant-face fontified nil) 2511 2547 (fontified nil) 2547 2552 (face font-lock-type-face fontified nil) 2552 2554 (fontified nil) 2554 2615 (fontified nil) 2615 2622 (fontified nil) 2622 2624 (face font-lock-constant-face fontified nil) 2624 2651 (fontified nil) 2651 2652 (face font-lock-comment-delimiter-face fontified nil) 2652 2678 (face font-lock-comment-face fontified nil) 2678 2698 (fontified nil) 2698 2700 (face font-lock-constant-face fontified nil) 2700 2735 (fontified nil) 2735 2736 (face font-lock-comment-delimiter-face fontified nil) 2736 2755 (face font-lock-comment-face fontified nil) 2755 2761 (fontified nil) 2761 2763 (face font-lock-constant-face fontified nil) 2763 2799 (fontified nil) 2799 2843 (fontified nil) 2843 2847 (face font-lock-type-face fontified nil) 2847 2883 (fontified nil) 2883 2887 (face font-lock-type-face fontified nil) 2887 2923 (fontified nil) 2923 2927 (face font-lock-type-face fontified nil) 2927 2965 (fontified nil) 2965 2969 (face font-lock-type-face fontified nil) 2969 2973 (fontified nil) 2973 2975 (fontified nil) 2975 2980 (face font-lock-comment-delimiter-face fontified nil) 2980 2997 (face font-lock-comment-face fontified nil) 2997 2998 (face font-lock-comment-delimiter-face fontified nil) 2998 3079 (face font-lock-comment-face fontified nil) 3079 3094 (fontified nil) 3094 3096 (face font-lock-constant-face fontified nil) 3096 3119 (fontified nil) 3119 3134 (fontified nil) 3134 3136 (face font-lock-constant-face fontified nil) 3136 3159 (fontified nil) 3159 3174 (fontified nil) 3174 3176 (face font-lock-constant-face fontified nil) 3176 3199 (fontified nil) 3199 3214 (fontified nil) 3214 3216 (face font-lock-constant-face fontified nil) 3216 3239 (fontified nil) 3239 3254 (fontified nil) 3254 3256 (face font-lock-constant-face fontified nil) 3256 3279 (fontified nil) 3279 3294 (fontified nil) 3294 3296 (face font-lock-constant-face fontified nil) 3296 3321 (fontified nil) 3321 3322 (face font-lock-comment-delimiter-face fontified nil) 3322 3365 (face font-lock-comment-face fontified nil) 3365 3381 (fontified nil) 3381 3383 (face font-lock-constant-face fontified nil) 3383 3390 (fontified nil) 3390 3406 (fontified nil) 3406 3408 (face font-lock-constant-face fontified nil) 3408 3415 (fontified nil) 3415 3431 (fontified nil) 3431 3433 (face font-lock-constant-face fontified nil) 3433 3440 (fontified nil) 3440 3456 (fontified nil) 3456 3458 (face font-lock-constant-face fontified nil) 3458 3465 (fontified nil) 3465 3481 (fontified nil) 3481 3483 (face font-lock-constant-face fontified nil) 3483 3490 (fontified nil) 3490 3506 (fontified nil) 3506 3508 (face font-lock-constant-face fontified nil) 3508 3515 (fontified nil) 3515 3516 (fontified nil) 3516 3517 (face font-lock-comment-delimiter-face fontified nil) 3517 3553 (face font-lock-comment-face fontified nil) 3553 3575 (fontified nil) 3575 3577 (face font-lock-constant-face fontified nil) 3577 3614 (fontified nil) 3614 3636 (fontified nil) 3636 3638 (face font-lock-constant-face fontified nil) 3638 3675 (fontified nil) 3675 3697 (fontified nil) 3697 3699 (face font-lock-constant-face fontified nil) 3699 3736 (fontified nil) 3736 3758 (fontified nil) 3758 3760 (face font-lock-constant-face fontified nil) 3760 3797 (fontified nil) 3797 3819 (fontified nil) 3819 3821 (face font-lock-constant-face fontified nil) 3821 3858 (fontified nil) 3858 3880 (fontified nil) 3880 3882 (face font-lock-constant-face fontified nil) 3882 3919 (fontified nil) 3919 3922 (fontified nil) 3922 3923 (face font-lock-comment-delimiter-face fontified nil) 3923 3950 (face font-lock-comment-face fontified nil) 3950 3951 (face font-lock-comment-delimiter-face fontified nil) 3951 3990 (face font-lock-comment-face fontified nil) 3990 4020 (fontified nil) 4020 4049 (fontified nil) 4049 4064 (fontified nil) 4064 4066 (face font-lock-constant-face fontified nil) 4066 4196 (fontified nil) 4196 4211 (fontified nil) 4211 4213 (face font-lock-constant-face fontified nil) 4213 4343 (fontified nil) 4343 4358 (fontified nil) 4358 4360 (face font-lock-constant-face fontified nil) 4360 4431 (fontified nil) 4431 4461 (fontified nil) 4461 4489 (fontified nil face font-lock-variable-name-face) 4489 4490 (fontified nil) 4490 4504 (fontified nil face font-lock-variable-name-face) 4504 4505 (fontified nil) 4505 4507 (fontified nil) 4507 4578 (fontified nil) 4578 4607 (fontified nil face font-lock-variable-name-face) 4607 4608 (fontified nil) 4608 4636 (fontified nil face font-lock-variable-name-face) 4636 4637 (fontified nil) 4637 4651 (fontified nil face font-lock-variable-name-face) 4651 4652 (fontified nil) 4652 4654 (fontified nil) 4654 4725 (fontified nil) 4725 4754 (fontified nil face font-lock-variable-name-face) 4754 4755 (fontified nil) 4755 4783 (fontified nil face font-lock-variable-name-face) 4783 4784 (fontified nil) 4784 4798 (fontified nil face font-lock-variable-name-face) 4798 4799 (fontified nil) 4799 4801 (fontified nil) 4801 4873 (fontified nil) 4873 4874 (fontified nil face font-lock-comment-delimiter-face) 4874 4901 (fontified nil face font-lock-comment-face) 4901 4905 (fontified nil face font-lock-variable-name-face) 4905 4906 (fontified nil) 4906 4908 (fontified nil) 4908 5006 (fontified nil) 5006 5008 (fontified nil face font-lock-comment-delimiter-face) 5008 5023 (fontified nil face font-lock-comment-face) 5023 5035 (fontified nil face font-lock-variable-name-face) 5035 5036 (fontified nil) 5036 5038 (fontified nil) 5038 5066 (fontified nil) 5066 5067 (fontified nil face font-lock-comment-delimiter-face) 5067 5086 (fontified nil face font-lock-comment-face) 5086 5087 (fontified nil face font-lock-comment-delimiter-face) 5087 5110 (fontified nil face font-lock-comment-face) 5110 5111 (fontified nil face font-lock-comment-delimiter-face) 5111 5137 (fontified nil face font-lock-comment-face) 5137 5141 (fontified nil face font-lock-variable-name-face) 5141 5142 (fontified nil) 5142 5144 (fontified nil) 5144 5164 (fontified nil) 5164 5177 (fontified nil) 5177 5282 (fontified nil face font-lock-string-face) 5282 5284 (fontified nil) 5284 5285 (rear-nonsticky nil fontified nil)) . 2724) (undo-tree-id3423 . -4755) (undo-tree-id3424 . -4755) (undo-tree-id3425 . -4784) (undo-tree-id3426 . -4784) (undo-tree-id3427 . -5006) (undo-tree-id3428 . -5006) (undo-tree-id3429 . -4901) (undo-tree-id3430 . -4901) (undo-tree-id3431 . -5023) (undo-tree-id3432 . -5023) (undo-tree-id3433 . -5284) (undo-tree-id3434 . -5284) (undo-tree-id3435 . -4461) (undo-tree-id3436 . -4461) (undo-tree-id3437 . -5285) (undo-tree-id3438 . -5285) (undo-tree-id3439 . -5164) (undo-tree-id3440 . -5164) (undo-tree-id3441 . -4578) (undo-tree-id3442 . -4578) (undo-tree-id3443 . -4608) (undo-tree-id3444 . -4608) (undo-tree-id3445 . -5086) (undo-tree-id3446 . -5086) (undo-tree-id3447 . -4873) (undo-tree-id3448 . -4873) (undo-tree-id3449 . -4872) (undo-tree-id3450 . -4872) (undo-tree-id3451 . -5137) (undo-tree-id3452 . -5137) (undo-tree-id3453 . -4725) (undo-tree-id3454 . -4725) (undo-tree-id3455 . -4637) (undo-tree-id3456 . -4637) (undo-tree-id3457 . -5110) (undo-tree-id3458 . -5110) (undo-tree-id3459 . -4461) (undo-tree-id3460 . -5066) (undo-tree-id3461 . -5066) (undo-tree-id3462 . -4490) (undo-tree-id3463 . -4490) (undo-tree-id3464 . -4461) (undo-tree-id3465 . -4461) (nil fontified t 2724 . 2725) (nil fontified t 2726 . 2779) (nil fontified t 2780 . 2857) (nil fontified t 2960 . 2978) (nil fontified t 2979 . 3052) (nil fontified t 3053 . 3109) (nil fontified t 3117 . 3150) (nil fontified t 3109 . 3117) (nil fontified t 3158 . 3191) (nil fontified t 3150 . 3158) (nil fontified t 3225 . 3285) (nil fontified t 3285 . 3287) (nil fontified t 3288 . 3339) (nil fontified t 3388 . 3390) (nil fontified t 3439 . 3441) (nil fontified t 3490 . 3492) (nil fontified t 3541 . 3543) (nil fontified t 3592 . 3594) (nil fontified t 3643 . 3646) (nil fontified t 3647 . 3708) (nil fontified t 3709 . 3777) (nil fontified t 3786 . 3844) (nil fontified t 3853 . 3911) (nil fontified t 3920 . 3978) (nil fontified t 3987 . 4045) (nil fontified t 4054 . 4112) (nil fontified t 4121 . 4180) (nil fontified t 4181 . 4207) (nil fontified t 4217 . 4257) (nil fontified t 4267 . 4307) (nil fontified t 4317 . 4357) (nil fontified nil 4367 . 4407) (nil fontified nil 4417 . 4457) (nil fontified nil 4467 . 4508) (nil fontified nil 4509 . 4527) (nil fontified nil 4545 . 4602) (nil fontified nil 4603 . 4661) (nil fontified nil 4661 . 4688) (nil fontified nil 4689 . 4760) (nil fontified nil 4872 . 4890) (nil fontified nil 4890 . 4936) (nil fontified nil 4937 . 4956) (nil fontified nil 4990 . 5055) (nil fontified nil 5056 . 5084) (nil fontified nil 5085 . 5098) (nil fontified nil 5212 . 5214) (nil fontified nil 5214 . 5215) (nil fontified nil 5216 . 5225) (nil fontified nil 5276 . 5278) (nil fontified nil 5278 . 5339) (nil fontified nil 5348 . 5375) (nil fontified nil 5376 . 5402) (nil fontified nil 5424 . 5459) (nil fontified nil 5460 . 5479) (nil fontified nil 5487 . 5523) (nil fontified nil 5693 . 5697) (nil fontified nil 5697 . 5699) (nil fontified nil 5704 . 5721) (nil fontified nil 5722 . 5803) (nil fontified nil 5820 . 5843) (nil fontified nil 5860 . 5883) (nil fontified nil 5900 . 5923) (nil fontified nil 5940 . 5963) (nil fontified nil 5980 . 6003) (nil fontified nil 6020 . 6045) (nil fontified nil 6046 . 6089) (nil fontified nil 6107 . 6114) (nil fontified nil 6132 . 6139) (nil fontified nil 6157 . 6164) (nil fontified nil 6182 . 6189) (nil fontified nil 6207 . 6214) (nil fontified nil 6232 . 6239) (nil fontified nil 6239 . 6240) (nil fontified nil 6241 . 6277) (nil fontified nil 6301 . 6338) (nil fontified nil 6362 . 6399) (nil fontified nil 6423 . 6460) (nil fontified nil 6484 . 6521) (nil fontified nil 6545 . 6582) (nil fontified nil 6606 . 6643) (nil fontified nil 6643 . 6646) (nil fontified nil 6647 . 6674) (nil fontified nil 6675 . 6714) (nil fontified nil 6714 . 6744) (nil fontified nil 6744 . 6773) (nil fontified nil 6790 . 6920) (nil fontified nil 6937 . 7067) (nil fontified nil 7084 . 7155) (nil fontified t 7213 . 7214) (nil fontified t 7185 . 7213) (nil fontified nil 7155 . 7185) (nil fontified t 7231 . 7302) (nil fontified t 7360 . 7361) (nil fontified t 7332 . 7360) (nil fontified t 7331 . 7332) (nil fontified t 7302 . 7331) (nil fontified t 7507 . 7508) (nil fontified t 7479 . 7507) (nil fontified t 7478 . 7479) (nil fontified t 7449 . 7478) (nil fontified t 7378 . 7449) (nil fontified t 7525 . 7597) (nil fontified t 7598 . 7625) (nil fontified t 7632 . 7730) (nil fontified t 7732 . 7747) (nil fontified t 7762 . 7790) (nil fontified t 7791 . 7810) (nil fontified t 7811 . 7834) (nil fontified t 7835 . 7861) (nil fontified t 7868 . 7888) (nil fontified t 8006 . 8008) (nil rear-nonsticky t 8008 . 8009)) (21666 58391 215581 127000) 0 nil] [nil nil ((nil rear-nonsticky nil 8008 . 8009) (nil fontified nil 8006 . 8009) (nil fontified nil 7901 . 8006) (nil fontified nil 7868 . 7901) (nil fontified nil 7866 . 7868) (nil fontified nil 7861 . 7866) (nil fontified nil 7835 . 7861) (nil fontified nil 7834 . 7835) (nil fontified nil 7811 . 7834) (nil fontified nil 7810 . 7811) (nil fontified nil 7791 . 7810) (nil fontified nil 7790 . 7791) (nil fontified nil 7762 . 7790) (nil fontified nil 7760 . 7762) (nil fontified nil 7747 . 7760) (nil fontified nil 7732 . 7747) (nil fontified nil 7730 . 7732) (nil fontified nil 7632 . 7730) (nil fontified nil 7630 . 7632) (nil fontified nil 7625 . 7630) (nil fontified nil 7598 . 7625) (nil fontified nil 7597 . 7598) (nil fontified nil 7525 . 7597) (nil fontified nil 7523 . 7525) (nil fontified nil 7378 . 7523) (nil fontified nil 7376 . 7378) (nil fontified nil 7302 . 7376) (nil fontified nil 7231 . 7302) (nil fontified nil 7229 . 7231) (nil fontified nil 7155 . 7229) (nil fontified nil 7084 . 7155) (nil fontified nil 7082 . 7084) (nil fontified nil 6937 . 7082) (nil fontified nil 6935 . 6937) (nil fontified nil 6790 . 6935) (nil fontified nil 6788 . 6790) (nil fontified nil 6744 . 6788) (nil fontified nil 6714 . 6744) (nil fontified nil 6675 . 6714) (nil fontified nil 6674 . 6675) (nil fontified nil 6647 . 6674) (nil fontified nil 6646 . 6647) (nil fontified nil 6643 . 6646) (nil fontified nil 6606 . 6643) (nil fontified nil 6604 . 6606) (nil fontified nil 6545 . 6604) (nil fontified nil 6543 . 6545) (nil fontified nil 6484 . 6543) (nil fontified nil 6482 . 6484) (nil fontified nil 6423 . 6482) (nil fontified nil 6421 . 6423) (nil fontified nil 6362 . 6421) (nil fontified nil 6360 . 6362) (nil fontified nil 6301 . 6360) (nil fontified nil 6299 . 6301) (nil fontified nil 6277 . 6299) (nil fontified nil 6241 . 6277) (nil fontified nil 6240 . 6241) (nil fontified nil 6239 . 6240) (nil fontified nil 6232 . 6239) (nil fontified nil 6230 . 6232) (nil fontified nil 6207 . 6230) (nil fontified nil 6205 . 6207) (nil fontified nil 6182 . 6205) (nil fontified nil 6180 . 6182) (nil fontified nil 6157 . 6180) (nil fontified nil 6155 . 6157) (nil fontified nil 6139 . 6155) (nil fontified nil 6132 . 6139) (nil fontified nil 6130 . 6132) (nil fontified nil 6107 . 6130) (nil fontified nil 6105 . 6107) (nil fontified nil 6089 . 6105) (nil fontified nil 6046 . 6089) (nil fontified nil 6045 . 6046) (nil fontified nil 6020 . 6045) (nil fontified nil 6018 . 6020) (nil fontified nil 5980 . 6018) (nil fontified nil 5978 . 5980) (nil fontified nil 5940 . 5978) (nil fontified nil 5938 . 5940) (nil fontified nil 5900 . 5938) (nil fontified nil 5898 . 5900) (nil fontified nil 5860 . 5898) (nil fontified nil 5858 . 5860) (nil fontified nil 5820 . 5858) (nil fontified nil 5818 . 5820) (nil fontified nil 5803 . 5818) (nil fontified nil 5722 . 5803) (nil fontified nil 5721 . 5722) (nil fontified nil 5704 . 5721) (nil fontified nil 5699 . 5704) (nil fontified nil 5697 . 5699) (nil fontified nil 5693 . 5697) (nil fontified nil 5689 . 5693) (nil fontified nil 5651 . 5689) (nil fontified nil 5647 . 5651) (nil fontified nil 5611 . 5647) (nil fontified nil 5607 . 5611) (nil fontified nil 5571 . 5607) (nil fontified nil 5567 . 5571) (nil fontified nil 5487 . 5567) (nil fontified nil 5485 . 5487) (nil fontified nil 5479 . 5485) (nil fontified nil 5460 . 5479) (nil fontified nil 5459 . 5460) (nil fontified nil 5424 . 5459) (nil fontified nil 5422 . 5424) (nil fontified nil 5402 . 5422) (nil fontified nil 5376 . 5402) (nil fontified nil 5375 . 5376) (nil fontified nil 5348 . 5375) (nil fontified nil 5346 . 5348) (nil fontified nil 5278 . 5346) (nil fontified nil 5276 . 5278) (nil fontified nil 5271 . 5276) (nil fontified nil 5235 . 5271) (nil fontified nil 5233 . 5235) (nil fontified nil 5225 . 5233) (nil fontified nil 5216 . 5225) (nil fontified nil 5215 . 5216) (nil fontified nil 5214 . 5215) (nil fontified nil 5212 . 5214) (nil fontified nil 5117 . 5212) (nil fontified nil 5108 . 5117) (nil fontified nil 5106 . 5108) (nil fontified nil 5098 . 5106) (nil fontified nil 5085 . 5098) (nil fontified nil 5084 . 5085) (nil fontified nil 5056 . 5084) (nil fontified nil 5055 . 5056) (nil fontified nil 4990 . 5055) (nil fontified nil 4988 . 4990) (nil fontified nil 4986 . 4988) (nil fontified nil 4978 . 4986) (nil fontified nil 4976 . 4978) (nil fontified nil 4970 . 4976) (nil fontified nil 4956 . 4970) (nil fontified nil 4937 . 4956) (nil fontified nil 4936 . 4937) (nil fontified nil 4890 . 4936) (nil fontified nil 4872 . 4890) (nil fontified nil 4865 . 4872) (nil fontified nil 4777 . 4865) (nil fontified nil 4775 . 4777) (nil fontified nil 4760 . 4775) (nil fontified nil 4689 . 4760) (nil fontified nil 4688 . 4689) (nil fontified nil 4661 . 4688) (nil fontified nil 4603 . 4661) (nil fontified nil 4602 . 4603) (nil fontified nil 4545 . 4602) (nil fontified nil 4543 . 4545) (nil fontified nil 4527 . 4543) (nil fontified nil 4509 . 4527) (nil fontified nil 4508 . 4509) (nil fontified nil 4467 . 4508) (nil fontified nil 4465 . 4467) (nil fontified nil 4417 . 4465) (nil fontified nil 4415 . 4417) (nil fontified nil 4367 . 4415) (nil fontified nil 4365 . 4367) (nil fontified nil 4357 . 4365) (nil fontified nil 4317 . 4357) (nil fontified nil 4315 . 4317) (nil fontified nil 4267 . 4315) (nil fontified nil 4265 . 4267) (nil fontified nil 4257 . 4265) (nil fontified nil 4217 . 4257) (nil fontified nil 4215 . 4217) (nil fontified nil 4207 . 4215) (nil fontified nil 4181 . 4207) (nil fontified nil 4180 . 4181) (nil fontified nil 4121 . 4180) (nil fontified nil 4119 . 4121) (nil fontified nil 4054 . 4119) (nil fontified nil 4052 . 4054) (nil fontified nil 3987 . 4052) (nil fontified nil 3985 . 3987) (nil fontified nil 3920 . 3985) (nil fontified nil 3918 . 3920) (nil fontified nil 3853 . 3918) (nil fontified nil 3851 . 3853) (nil fontified nil 3844 . 3851) (nil fontified nil 3786 . 3844) (nil fontified nil 3784 . 3786) (nil fontified nil 3777 . 3784) (nil fontified nil 3709 . 3777) (nil fontified nil 3708 . 3709) (nil fontified nil 3647 . 3708) (nil fontified nil 3646 . 3647) (nil fontified nil 3643 . 3646) (nil fontified nil 3640 . 3643) (nil fontified nil 3608 . 3640) (nil fontified nil 3606 . 3608) (nil fontified nil 3592 . 3606) (nil fontified nil 3589 . 3592) (nil fontified nil 3557 . 3589) (nil fontified nil 3555 . 3557) (nil fontified nil 3541 . 3555) (nil fontified nil 3538 . 3541) (nil fontified nil 3506 . 3538) (nil fontified nil 3504 . 3506) (nil fontified nil 3490 . 3504) (nil fontified nil 3487 . 3490) (nil fontified nil 3455 . 3487) (nil fontified nil 3453 . 3455) (nil fontified nil 3439 . 3453) (nil fontified nil 3436 . 3439) (nil fontified nil 3404 . 3436) (nil fontified nil 3402 . 3404) (nil fontified nil 3388 . 3402) (nil fontified nil 3385 . 3388) (nil fontified nil 3353 . 3385) (nil fontified nil 3351 . 3353) (nil fontified nil 3339 . 3351) (nil fontified nil 3288 . 3339) (nil fontified nil 3287 . 3288) (nil fontified nil 3285 . 3287) (nil fontified nil 3225 . 3285) (nil fontified nil 3223 . 3225) (nil fontified nil 3221 . 3223) (nil fontified nil 3213 . 3221) (nil fontified nil 3211 . 3213) (nil fontified nil 3205 . 3211) (nil fontified nil 3191 . 3205) (nil fontified nil 3150 . 3191) (nil fontified nil 3109 . 3150) (nil fontified nil 3053 . 3109) (nil fontified nil 3052 . 3053) (nil fontified nil 2979 . 3052) (nil fontified nil 2978 . 2979) (nil fontified nil 2960 . 2978) (nil fontified nil 2953 . 2960) (nil fontified nil 2857 . 2953) (nil fontified nil 2780 . 2857) (nil fontified nil 2779 . 2780) (nil fontified nil 2726 . 2779) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (2724 . 8009)) ((#("
#run the lmer part regressing stage 2 pred Vs mean pm
#in israel check per month, also check 30km band and other methods for meanpm
m2.smooth = lme(pred.m2 ~ meanPM25,random = list(aodid= ~1 + meanPM25),control=lmeControl(opt = \"optim\"), data= m2.all )
#xm2.smooth = lmer(pred.m2 ~ meanPM25+(1+ meanPM25|aodid), data= m2.all )
#correlate to see everything from mod2 and the mpm works
m2.all[, pred.t31 := predict(m2.smooth)]
m2.all[, resid  := residuals(m2.smooth)]
res[res$type==\"PM25\", 'm3.t31'] <- print(summary(lm(pred.m2~pred.t31,data=m2.all))$r.squared)


#split the files to the separate bi monthly datsets
Tall_bimon1 <- subset(m2.all ,m2.all$bimon == \"1\")
Tall_bimon2 <- subset(m2.all ,m2.all$bimon == \"2\")
Tall_bimon3 <- subset(m2.all ,m2.all$bimon == \"3\")
Tall_bimon4 <- subset(m2.all ,m2.all$bimon == \"4\")
Tall_bimon5 <- subset(m2.all ,m2.all$bimon == \"5\")
Tall_bimon6 <- subset(m2.all ,m2.all$bimon == \"6\")

#run the separate splines (smooth) for x and y for each bimon
#whats the default band (distance) that the spline goes out and uses
fit2_1 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon1 )
fit2_2 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon2 )
fit2_3 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon3 )
fit2_4 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon4 )
fit2_5 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon5 )
fit2_6 <- gam(resid ~ s(x_aod_ITM,y_aod_ITM),  data= Tall_bimon6 )

#get the predicted-fitted 
Xpred_1 <- (Tall_bimon1$pred.t31 - fit2_1$fitted)
Xpred_2 <- (Tall_bimon2$pred.t31 - fit2_2$fitted)
Xpred_3 <- (Tall_bimon3$pred.t31 - fit2_3$fitted)
Xpred_4 <- (Tall_bimon4$pred.t31 - fit2_4$fitted)
Xpred_5 <- (Tall_bimon5$pred.t31 - fit2_5$fitted)
Xpred_6 <- (Tall_bimon6$pred.t31 - fit2_6$fitted)

#remerge to 1 file
m2.all$pred.t32 <- c( Xpred_1,Xpred_2, Xpred_3, Xpred_4, Xpred_5, Xpred_6)
#this is important so that its sorted as in the first gamm
setkey(m2.all,day, aodid)

#rerun the lme on the predictions including the spatial spline (smooth)
Final_pred_all <- lme(pred.t32 ~ meanPM25 ,random = list(aodid= ~1 + meanPM25 ),control=lmeControl(opt = \"optim\"),data= m2.all  )
m2.all[, pred.t33 := predict(Final_pred_all)]
#check correlations
res[res$type==\"PM25\", 'm3.t33'] <- print(summary(lm(pred.m2 ~ pred.t33,data=m2.all))$r.squared) 


#------------------------>>>
#import mod3 
data.m3 <- readRDS(\"/media/NAS/Uni/Projects/P046_Israel_MAIAC/3.Work/2.Gather_data/FN000_RWORKDIR/mod3.AQ.all.rds\")

#for PM25
data.m3 <- data.m3[,c(1,2,5,29:32,52,53),with=FALSE]
data.m3[, bimon := (m + 1) %/% 2]
setkey(data.m3,day, aodid)
data.m3<-data.m3[!is.na(meanPM25)]

#generate m.3 initial pred
data.m3$pred.m3.mix <-  predict(Final_pred_all,data.m3)

#create unique grid
ugrid <-data.m3 %>%
    group_by(aodid) %>%
    summarise(lat_aod = mean(lat_aod, na.rm=TRUE),  long_aod = mean(long_aod, na.rm=TRUE),x_aod_ITM = mean(x_aod_ITM, na.rm=TRUE),  y_aod_ITM = mean(y_aod_ITM, na.rm=TRUE)) 


#### PREDICT Gam part
#split back into bimons to include the gam prediction in final prediction        
data.m3_bimon1 <- data.m3[bimon == 1, ]
data.m3_bimon2 <- data.m3[bimon == 2, ]
data.m3_bimon3 <- data.m3[bimon == 3, ]
data.m3_bimon4 <- data.m3[bimon == 4, ]
data.m3_bimon5 <- data.m3[bimon == 5, ]
data.m3_bimon6 <- data.m3[bimon == 6, ]


#addin unique grid to each bimon           
uniq_gid_bimon1 <- ugrid
uniq_gid_bimon2 <- ugrid
uniq_gid_bimon3 <- ugrid
uniq_gid_bimon4 <- ugrid
uniq_gid_bimon5 <- ugrid
uniq_gid_bimon6 <- ugrid

#get predictions for Bimon residuals
uniq_gid_bimon1$gpred <- predict.gam(fit2_1,uniq_gid_bimon1)
uniq_gid_bimon2$gpred <- predict.gam(fit2_2,uniq_gid_bimon2)
uniq_gid_bimon3$gpred <- predict.gam(fit2_3,uniq_gid_bimon3)
uniq_gid_bimon4$gpred <- predict.gam(fit2_4,uniq_gid_bimon4)
uniq_gid_bimon5$gpred <- predict.gam(fit2_5,uniq_gid_bimon5)
uniq_gid_bimon6$gpred <- predict.gam(fit2_6,uniq_gid_bimon6)



#merge things back togheter
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> merges
setkey(uniq_gid_bimon1,aodid)
setkey(data.m3_bimon1,aodid)
data.m3_bimon1 <- merge(data.m3_bimon1, uniq_gid_bimon1[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon2,aodid)
setkey(data.m3_bimon2,aodid)
data.m3_bimon2 <- merge(data.m3_bimon2, uniq_gid_bimon2[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon3,aodid)
setkey(data.m3_bimon3,aodid)
data.m3_bimon3 <- merge(data.m3_bimon3, uniq_gid_bimon3[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon4,aodid)
setkey(data.m3_bimon4,aodid)
data.m3_bimon4 <- merge(data.m3_bimon4, uniq_gid_bimon4[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon5,aodid)
setkey(data.m3_bimon5,aodid)
data.m3_bimon5 <- merge(data.m3_bimon5, uniq_gid_bimon5[,list(aodid,gpred)], all.x = T)
setkey(uniq_gid_bimon6,aodid)
setkey(data.m3_bimon6,aodid)
data.m3_bimon6 <- merge(data.m3_bimon6, uniq_gid_bimon6[,list(aodid,gpred)], all.x = T)

#reattach all parts        
mod3 <- rbind(data.m3_bimon1,data.m3_bimon2,data.m3_bimon3,data.m3_bimon4,data.m3_bimon5,data.m3_bimon6)
# create pred.m3
mod3$pred.m3 <-mod3$pred.m3.mix+mod3$gpred
#hist(mod3$pred.m3)
#describe(mod3$pred.m3)
#recode negative into zero
mod3 <- mod3[pred.m3 >= 0]
saveRDS(mod3,\"/media/NAS/Uni/Projects/P046_Israel_MAIAC/3.Work/2.Gather_data/FN000_RWORKDIR/mod3.AQ.allYEARS.pred.rds\")

" 0 1 (fontified nil) 1 2 (fontified nil face font-lock-comment-delimiter-face) 2 55 (fontified nil face font-lock-comment-face) 55 56 (fontified nil face font-lock-comment-delimiter-face) 56 133 (fontified nil face font-lock-comment-face) 133 142 (fontified nil face font-lock-variable-name-face) 142 229 (fontified nil) 229 236 (fontified nil face font-lock-string-face) 236 254 (fontified nil) 254 255 (fontified nil face font-lock-comment-delimiter-face) 255 328 (fontified nil face font-lock-comment-face) 328 329 (fontified nil face font-lock-comment-delimiter-face) 329 385 (fontified nil face font-lock-comment-face) 385 393 (fontified nil face font-lock-variable-name-face) 393 426 (fontified nil) 426 434 (fontified nil face font-lock-variable-name-face) 434 467 (fontified nil) 467 481 (fontified nil) 481 487 (fontified nil face font-lock-string-face) 487 489 (fontified nil) 489 497 (fontified nil face font-lock-string-face) 497 499 (fontified nil) 499 501 (fontified nil) 501 561 (fontified nil) 561 563 (fontified nil) 563 564 (fontified nil face font-lock-comment-delimiter-face) 564 615 (fontified nil face font-lock-comment-face) 615 626 (fontified nil face font-lock-variable-name-face) 626 627 (fontified nil) 627 629 (fontified nil) 629 661 (fontified nil) 661 664 (fontified nil face font-lock-string-face) 664 666 (fontified nil) 666 677 (fontified nil face font-lock-variable-name-face) 677 678 (fontified nil) 678 680 (fontified nil) 680 712 (fontified nil) 712 715 (fontified nil face font-lock-string-face) 715 717 (fontified nil) 717 728 (fontified nil face font-lock-variable-name-face) 728 729 (fontified nil) 729 731 (fontified nil) 731 763 (fontified nil) 763 766 (fontified nil face font-lock-string-face) 766 768 (fontified nil) 768 779 (fontified nil face font-lock-variable-name-face) 779 780 (fontified nil) 780 782 (fontified nil) 782 814 (fontified nil) 814 817 (fontified nil face font-lock-string-face) 817 819 (fontified nil) 819 830 (fontified nil face font-lock-variable-name-face) 830 831 (fontified nil) 831 833 (fontified nil) 833 865 (fontified nil) 865 868 (fontified nil face font-lock-string-face) 868 870 (fontified nil) 870 881 (fontified nil face font-lock-variable-name-face) 881 882 (fontified nil) 882 884 (fontified nil) 884 916 (fontified nil) 916 919 (fontified nil face font-lock-string-face) 919 922 (fontified nil) 922 923 (fontified nil face font-lock-comment-delimiter-face) 923 984 (fontified nil face font-lock-comment-face) 984 985 (fontified nil face font-lock-comment-delimiter-face) 985 1053 (fontified nil face font-lock-comment-face) 1053 1059 (fontified nil face font-lock-variable-name-face) 1059 1060 (fontified nil) 1060 1062 (fontified nil) 1062 1120 (fontified nil) 1120 1126 (fontified nil face font-lock-variable-name-face) 1126 1127 (fontified nil) 1127 1129 (fontified nil) 1129 1187 (fontified nil) 1187 1193 (fontified nil face font-lock-variable-name-face) 1193 1194 (fontified nil) 1194 1196 (fontified nil) 1196 1254 (fontified nil) 1254 1260 (fontified nil face font-lock-variable-name-face) 1260 1261 (fontified nil) 1261 1263 (fontified nil) 1263 1321 (fontified nil) 1321 1327 (fontified nil face font-lock-variable-name-face) 1327 1328 (fontified nil) 1328 1330 (fontified nil) 1330 1388 (fontified nil) 1388 1394 (fontified nil face font-lock-variable-name-face) 1394 1395 (fontified nil) 1395 1397 (fontified nil) 1397 1456 (fontified nil) 1456 1457 (fontified nil face font-lock-comment-delimiter-face) 1457 1483 (fontified nil face font-lock-comment-face) 1483 1490 (fontified nil face font-lock-variable-name-face) 1490 1491 (fontified nil) 1491 1493 (fontified nil) 1493 1533 (fontified nil) 1533 1540 (fontified nil face font-lock-variable-name-face) 1540 1541 (fontified nil) 1541 1543 (fontified nil) 1543 1583 (fontified nil) 1583 1590 (fontified nil face font-lock-variable-name-face) 1590 1591 (fontified nil) 1591 1593 (fontified nil) 1593 1633 (fontified nil) 1633 1641 (fontified nil) 1641 1643 (face font-lock-constant-face fontified nil) 1643 1683 (fontified nil) 1683 1691 (fontified nil) 1691 1693 (face font-lock-constant-face fontified nil) 1693 1733 (fontified nil) 1733 1741 (fontified nil) 1741 1743 (face font-lock-constant-face fontified nil) 1743 1784 (fontified nil) 1784 1785 (face font-lock-comment-delimiter-face fontified nil) 1785 1803 (face font-lock-comment-face fontified nil) 1803 1819 (fontified nil) 1819 1821 (face font-lock-constant-face fontified nil) 1821 1878 (fontified nil) 1878 1879 (face font-lock-comment-delimiter-face fontified nil) 1879 1937 (face font-lock-comment-face fontified nil) 1937 1964 (fontified nil) 1964 1965 (face font-lock-comment-delimiter-face fontified nil) 1965 2036 (face font-lock-comment-face fontified nil) 2036 2051 (fontified nil) 2051 2053 (face font-lock-constant-face fontified nil) 2053 2141 (fontified nil) 2141 2148 (face font-lock-string-face fontified nil) 2148 2166 (fontified nil) 2166 2212 (fontified nil) 2212 2213 (face font-lock-comment-delimiter-face fontified nil) 2213 2232 (face font-lock-comment-face fontified nil) 2232 2246 (fontified nil) 2246 2252 (face font-lock-string-face fontified nil) 2252 2254 (fontified nil) 2254 2262 (face font-lock-string-face fontified nil) 2262 2264 (fontified nil) 2264 2266 (face font-lock-constant-face fontified nil) 2266 2331 (fontified nil) 2331 2332 (face font-lock-comment-delimiter-face fontified nil) 2332 2360 (face font-lock-comment-face fontified nil) 2360 2361 (face font-lock-comment-delimiter-face fontified nil) 2361 2374 (face font-lock-comment-face fontified nil) 2374 2382 (fontified nil) 2382 2384 (face font-lock-constant-face fontified nil) 2384 2393 (fontified nil) 2393 2488 (face font-lock-string-face fontified nil) 2488 2490 (fontified nil) 2490 2491 (fontified nil) 2491 2492 (face font-lock-comment-delimiter-face fontified nil) 2492 2501 (face font-lock-comment-face fontified nil) 2501 2509 (fontified nil) 2509 2511 (face font-lock-constant-face fontified nil) 2511 2547 (fontified nil) 2547 2552 (face font-lock-type-face fontified nil) 2552 2554 (fontified nil) 2554 2615 (fontified nil) 2615 2622 (fontified nil) 2622 2624 (face font-lock-constant-face fontified nil) 2624 2651 (fontified nil) 2651 2652 (face font-lock-comment-delimiter-face fontified nil) 2652 2678 (face font-lock-comment-face fontified nil) 2678 2698 (fontified nil) 2698 2700 (face font-lock-constant-face fontified nil) 2700 2735 (fontified nil) 2735 2736 (face font-lock-comment-delimiter-face fontified nil) 2736 2755 (face font-lock-comment-face fontified nil) 2755 2761 (fontified nil) 2761 2763 (face font-lock-constant-face fontified nil) 2763 2799 (fontified nil) 2799 2843 (fontified nil) 2843 2847 (face font-lock-type-face fontified nil) 2847 2883 (fontified nil) 2883 2887 (face font-lock-type-face fontified nil) 2887 2923 (fontified nil) 2923 2927 (face font-lock-type-face fontified nil) 2927 2965 (fontified nil) 2965 2969 (face font-lock-type-face fontified nil) 2969 2973 (fontified nil) 2973 2975 (fontified nil) 2975 2980 (face font-lock-comment-delimiter-face fontified nil) 2980 2997 (face font-lock-comment-face fontified nil) 2997 2998 (face font-lock-comment-delimiter-face fontified nil) 2998 3079 (face font-lock-comment-face fontified nil) 3079 3094 (fontified nil) 3094 3096 (face font-lock-constant-face fontified nil) 3096 3119 (fontified nil) 3119 3134 (fontified nil) 3134 3136 (face font-lock-constant-face fontified nil) 3136 3159 (fontified nil) 3159 3174 (fontified nil) 3174 3176 (face font-lock-constant-face fontified nil) 3176 3199 (fontified nil) 3199 3214 (fontified nil) 3214 3216 (face font-lock-constant-face fontified nil) 3216 3239 (fontified nil) 3239 3254 (fontified nil) 3254 3256 (face font-lock-constant-face fontified nil) 3256 3279 (fontified nil) 3279 3294 (fontified nil) 3294 3296 (face font-lock-constant-face fontified nil) 3296 3321 (fontified nil) 3321 3322 (face font-lock-comment-delimiter-face fontified nil) 3322 3365 (face font-lock-comment-face fontified nil) 3365 3381 (fontified nil) 3381 3383 (face font-lock-constant-face fontified nil) 3383 3390 (fontified nil) 3390 3406 (fontified nil) 3406 3408 (face font-lock-constant-face fontified nil) 3408 3415 (fontified nil) 3415 3431 (fontified nil) 3431 3433 (face font-lock-constant-face fontified nil) 3433 3440 (fontified nil) 3440 3456 (fontified nil) 3456 3458 (face font-lock-constant-face fontified nil) 3458 3465 (fontified nil) 3465 3481 (fontified nil) 3481 3483 (face font-lock-constant-face fontified nil) 3483 3490 (fontified nil) 3490 3506 (fontified nil) 3506 3508 (face font-lock-constant-face fontified nil) 3508 3515 (fontified nil) 3515 3516 (fontified nil) 3516 3517 (face font-lock-comment-delimiter-face fontified nil) 3517 3553 (face font-lock-comment-face fontified nil) 3553 3575 (fontified nil) 3575 3577 (face font-lock-constant-face fontified nil) 3577 3614 (fontified nil) 3614 3636 (fontified nil) 3636 3638 (face font-lock-constant-face fontified nil) 3638 3675 (fontified nil) 3675 3697 (fontified nil) 3697 3699 (face font-lock-constant-face fontified nil) 3699 3736 (fontified nil) 3736 3758 (fontified nil) 3758 3760 (face font-lock-constant-face fontified nil) 3760 3797 (fontified nil) 3797 3819 (fontified nil) 3819 3821 (face font-lock-constant-face fontified nil) 3821 3858 (fontified nil) 3858 3880 (fontified nil) 3880 3882 (face font-lock-constant-face fontified nil) 3882 3919 (fontified nil) 3919 3922 (fontified nil) 3922 3923 (face font-lock-comment-delimiter-face fontified nil) 3923 3950 (face font-lock-comment-face fontified nil) 3950 3951 (face font-lock-comment-delimiter-face fontified nil) 3951 3990 (face font-lock-comment-face fontified nil) 3990 4020 (fontified nil) 4020 4049 (fontified nil) 4049 4064 (fontified nil) 4064 4066 (face font-lock-constant-face fontified nil) 4066 4196 (fontified nil) 4196 4211 (fontified nil) 4211 4213 (face font-lock-constant-face fontified nil) 4213 4343 (fontified nil) 4343 4358 (fontified nil) 4358 4360 (face font-lock-constant-face fontified nil) 4360 4431 (fontified nil) 4431 4461 (fontified nil) 4461 4489 (fontified nil face font-lock-variable-name-face) 4489 4490 (fontified nil) 4490 4504 (fontified nil face font-lock-variable-name-face) 4504 4505 (fontified nil) 4505 4507 (fontified nil) 4507 4578 (fontified nil) 4578 4607 (fontified nil face font-lock-variable-name-face) 4607 4608 (fontified nil) 4608 4636 (fontified nil face font-lock-variable-name-face) 4636 4637 (fontified nil) 4637 4651 (fontified nil face font-lock-variable-name-face) 4651 4652 (fontified nil) 4652 4654 (fontified nil) 4654 4725 (fontified nil) 4725 4754 (fontified nil face font-lock-variable-name-face) 4754 4755 (fontified nil) 4755 4783 (fontified nil face font-lock-variable-name-face) 4783 4784 (fontified nil) 4784 4798 (fontified nil face font-lock-variable-name-face) 4798 4799 (fontified nil) 4799 4801 (fontified nil) 4801 4873 (fontified nil) 4873 4874 (fontified nil face font-lock-comment-delimiter-face) 4874 4901 (fontified nil face font-lock-comment-face) 4901 4905 (fontified nil face font-lock-variable-name-face) 4905 4906 (fontified nil) 4906 4908 (fontified nil) 4908 5006 (fontified nil) 5006 5008 (fontified nil face font-lock-comment-delimiter-face) 5008 5023 (fontified nil face font-lock-comment-face) 5023 5035 (fontified nil face font-lock-variable-name-face) 5035 5036 (fontified nil) 5036 5038 (fontified nil) 5038 5066 (fontified nil) 5066 5067 (fontified nil face font-lock-comment-delimiter-face) 5067 5086 (fontified nil face font-lock-comment-face) 5086 5087 (fontified nil face font-lock-comment-delimiter-face) 5087 5110 (fontified nil face font-lock-comment-face) 5110 5111 (fontified nil face font-lock-comment-delimiter-face) 5111 5137 (fontified nil face font-lock-comment-face) 5137 5141 (fontified nil face font-lock-variable-name-face) 5141 5142 (fontified nil) 5142 5144 (fontified nil) 5144 5164 (fontified nil) 5164 5177 (fontified nil) 5177 5282 (fontified nil face font-lock-string-face) 5282 5284 (fontified nil) 5284 5285 (rear-nonsticky nil fontified nil)) . 2724) (undo-tree-id3380 . -5164) (undo-tree-id3381 . -5164) (undo-tree-id3382 . -5284) (undo-tree-id3383 . -5284) (undo-tree-id3384 . -5285) (undo-tree-id3385 . -5285) (undo-tree-id3386 . -4461) (undo-tree-id3387 . -5110) (undo-tree-id3388 . -5110) (undo-tree-id3389 . -5086) (undo-tree-id3390 . -5086) (undo-tree-id3391 . -5066) (undo-tree-id3392 . -5066) (undo-tree-id3393 . -5023) (undo-tree-id3394 . -5023) (undo-tree-id3395 . -5006) (undo-tree-id3396 . -5006) (undo-tree-id3397 . -4901) (undo-tree-id3398 . -4901) (undo-tree-id3399 . -4873) (undo-tree-id3400 . -4873) (undo-tree-id3401 . -4872) (undo-tree-id3402 . -4872) (undo-tree-id3403 . -4784) (undo-tree-id3404 . -4784) (undo-tree-id3405 . -4755) (undo-tree-id3406 . -4755) (undo-tree-id3407 . -4725) (undo-tree-id3408 . -4725) (undo-tree-id3409 . -4637) (undo-tree-id3410 . -4637) (undo-tree-id3411 . -4608) (undo-tree-id3412 . -4608) (undo-tree-id3413 . -4490) (undo-tree-id3414 . -4490) (undo-tree-id3415 . -4461) (undo-tree-id3416 . -4461) (undo-tree-id3417 . -4578) (undo-tree-id3418 . -4578) (undo-tree-id3419 . -5137) (undo-tree-id3420 . -5137) (undo-tree-id3421 . -4461) (undo-tree-id3422 . -4461) (nil fontified t 2724 . 2725) (nil fontified t 2726 . 2779) (nil fontified t 2780 . 2857) (nil fontified t 2960 . 2978) (nil fontified t 2979 . 3052) (nil fontified t 3053 . 3109) (nil fontified t 3117 . 3150) (nil fontified t 3109 . 3117) (nil fontified t 3158 . 3191) (nil fontified t 3150 . 3158) (nil fontified t 3225 . 3285) (nil fontified t 3285 . 3287) (nil fontified t 3288 . 3339) (nil fontified t 3388 . 3390) (nil fontified t 3439 . 3441) (nil fontified t 3490 . 3492) (nil fontified t 3541 . 3543) (nil fontified t 3592 . 3594) (nil fontified t 3643 . 3646) (nil fontified t 3647 . 3708) (nil fontified t 3709 . 3777) (nil fontified t 3786 . 3844) (nil fontified t 3853 . 3911) (nil fontified t 3920 . 3978) (nil fontified t 3987 . 4045) (nil fontified t 4054 . 4112) (nil fontified t 4121 . 4180) (nil fontified t 4181 . 4207) (nil fontified t 4217 . 4257) (nil fontified t 4267 . 4307) (nil fontified t 4317 . 4357) (nil fontified nil 4367 . 4407) (nil fontified nil 4417 . 4457) (nil fontified nil 4467 . 4508) (nil fontified nil 4509 . 4527) (nil fontified nil 4545 . 4602) (nil fontified nil 4603 . 4661) (nil fontified nil 4661 . 4688) (nil fontified nil 4689 . 4760) (nil fontified nil 4872 . 4890) (nil fontified nil 4890 . 4936) (nil fontified nil 4937 . 4956) (nil fontified nil 4990 . 5055) (nil fontified nil 5056 . 5084) (nil fontified nil 5085 . 5098) (nil fontified nil 5212 . 5214) (nil fontified nil 5214 . 5215) (nil fontified nil 5216 . 5225) (nil fontified nil 5276 . 5278) (nil fontified nil 5278 . 5339) (nil fontified nil 5348 . 5375) (nil fontified nil 5376 . 5402) (nil fontified nil 5424 . 5459) (nil fontified nil 5460 . 5479) (nil fontified nil 5487 . 5523) (nil fontified nil 5693 . 5697) (nil fontified nil 5697 . 5699) (nil fontified nil 5704 . 5721) (nil fontified nil 5722 . 5803) (nil fontified nil 5820 . 5843) (nil fontified nil 5860 . 5883) (nil fontified nil 5900 . 5923) (nil fontified nil 5940 . 5963) (nil fontified nil 5980 . 6003) (nil fontified nil 6020 . 6045) (nil fontified nil 6046 . 6089) (nil fontified nil 6107 . 6114) (nil fontified nil 6132 . 6139) (nil fontified nil 6157 . 6164) (nil fontified nil 6182 . 6189) (nil fontified nil 6207 . 6214) (nil fontified nil 6232 . 6239) (nil fontified nil 6239 . 6240) (nil fontified nil 6241 . 6277) (nil fontified nil 6301 . 6338) (nil fontified nil 6362 . 6399) (nil fontified nil 6423 . 6460) (nil fontified nil 6484 . 6521) (nil fontified nil 6545 . 6582) (nil fontified nil 6606 . 6643) (nil fontified nil 6643 . 6646) (nil fontified nil 6647 . 6674) (nil fontified nil 6675 . 6714) (nil fontified nil 6714 . 6744) (nil fontified nil 6744 . 6773) (nil fontified nil 6790 . 6920) (nil fontified nil 6937 . 7067) (nil fontified nil 7084 . 7155) (nil fontified t 7213 . 7214) (nil fontified t 7185 . 7213) (nil fontified nil 7155 . 7185) (nil fontified t 7231 . 7302) (nil fontified t 7360 . 7361) (nil fontified t 7332 . 7360) (nil fontified t 7331 . 7332) (nil fontified t 7302 . 7331) (nil fontified t 7507 . 7508) (nil fontified t 7479 . 7507) (nil fontified t 7478 . 7479) (nil fontified t 7449 . 7478) (nil fontified t 7378 . 7449) (nil fontified t 7525 . 7597) (nil fontified t 7598 . 7625) (nil fontified t 7632 . 7730) (nil fontified t 7732 . 7747) (nil fontified t 7762 . 7790) (nil fontified t 7791 . 7810) (nil fontified t 7811 . 7834) (nil fontified t 7835 . 7861) (nil fontified t 7868 . 7888) (nil fontified t 8006 . 8008) (nil rear-nonsticky t 8008 . 8009)) (21666 58385 846029 710000) 0 nil]) ((2723 . 2724)) ((#(" " 0 1 (fontified t)) . 2723) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1)) (21666 58391 219945 401000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2723)) ((2723 . 2724)) (21666 58401 36973 918000) 0 nil]) ((#("r" 0 1 (fontified t)) . -2724)) ((2724 . 2725)) (21666 58401 457285 984000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2725)) ((2725 . 2726)) (21666 58401 837589 254000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2726)) ((2726 . 2727)) (21666 58402 353840 897000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2727)) ((2727 . 2728)) (21666 58402 567059 242000) 0 nil]) ((#("m" 0 1 (fontified t)) . -2728)) ((2728 . 2729)) (21666 58403 227384 252000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2729)) ((2729 . 2730)) (21666 58403 267293 789000) 0 nil]) ((#("-" 0 1 (fontified t)) . -2730)) ((2730 . 2731)) (21666 58403 307509 226000) 0 nil]) ((#("w" 0 1 (fontified t)) . -2731)) ((2731 . 2732)) (21666 58403 347812 645000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2732)) ((2732 . 2733)) (21666 58403 388229 358000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2733)) ((2733 . 2734)) (21666 58403 428270 199000) 0 nil]) ((#("d" 0 1 (fontified t)) . -2734)) ((2734 . 2735)) (21666 58403 468584 357000) 0 nil]) ((#("o" 0 1 (fontified t)) . -2735)) ((2735 . 2736)) (21666 58403 509028 149000) 0 nil]) ((#("w" 0 1 (fontified t)) . -2736) (undo-tree-id3379 . 1) (t 21666 58098 338531 427000)) ((2736 . 2737)) (21666 58403 549074 555000) 0 nil]) ((#("w" 0 1 (fontified t rear-nonsticky t)) . 2759) (undo-tree-id3106 . 1) (undo-tree-id3108 . 1) (undo-tree-id3110 . 1) (undo-tree-id3112 . 1) (undo-tree-id3114 . 1) (undo-tree-id3116 . 1) (undo-tree-id3118 . 1) (undo-tree-id3120 . 1) (undo-tree-id3122 . 1) (undo-tree-id3124 . 1) (undo-tree-id3126 . 1) (undo-tree-id3128 . 1) (undo-tree-id3130 . 1) (undo-tree-id3132 . 1) (undo-tree-id3134 . 1) (undo-tree-id3136 . 1)) ((2759 . 2760) (t 21666 58098 338531 427000)) (21666 58403 744981 492000) 0 nil]) ((#("o" 0 1 (fontified t)) . 2759) (undo-tree-id3138 . -1) (undo-tree-id3140 . 1) (undo-tree-id3142 . 1) (undo-tree-id3144 . 1) (undo-tree-id3146 . 1) (undo-tree-id3148 . 1) (undo-tree-id3150 . 1) (undo-tree-id3152 . 1) (undo-tree-id3154 . 1) (undo-tree-id3156 . 1) (undo-tree-id3158 . 1) (undo-tree-id3160 . 1) (undo-tree-id3162 . 1) (undo-tree-id3164 . 1) (undo-tree-id3166 . 1) (undo-tree-id3168 . 1)) ((2759 . 2760)) (21666 58403 942382 183000) 0 nil]) ((#("d" 0 1 (fontified t)) . 2759) (undo-tree-id3170 . 1) (undo-tree-id3172 . 1) (undo-tree-id3174 . 1) (undo-tree-id3176 . 1) (undo-tree-id3178 . 1) (undo-tree-id3180 . 1) (undo-tree-id3182 . 1) (undo-tree-id3184 . 1) (undo-tree-id3186 . 1) (undo-tree-id3188 . 1) (undo-tree-id3190 . 1) (undo-tree-id3192 . 1) (undo-tree-id3194 . 1) (undo-tree-id3196 . 1)) ((2759 . 2760)) (21666 58404 123165 18000) 0 nil]) ((#("n" 0 1 (fontified t)) . 2759) (undo-tree-id3198 . 1) (undo-tree-id3200 . 1) (undo-tree-id3202 . 1) (undo-tree-id3204 . 1) (undo-tree-id3206 . 1) (undo-tree-id3208 . 1) (undo-tree-id3210 . 1) (undo-tree-id3212 . 1) (undo-tree-id3214 . 1) (undo-tree-id3216 . 1) (undo-tree-id3218 . 1) (undo-tree-id3220 . 1) (undo-tree-id3222 . 1)) ((2759 . 2760)) (21666 58406 472711 271000) 0 nil]) ((#("i" 0 1 (fontified t)) . 2759) (undo-tree-id3224 . 1) (undo-tree-id3226 . 1) (undo-tree-id3228 . 1) (undo-tree-id3230 . 1) (undo-tree-id3232 . 1) (undo-tree-id3234 . 1) (undo-tree-id3236 . 1) (undo-tree-id3238 . 1) (undo-tree-id3240 . 1) (undo-tree-id3242 . 1) (undo-tree-id3244 . 1) (undo-tree-id3246 . 1)) ((2759 . 2760)) (21666 58406 733735 25000) 0 nil]) ((#("w" 0 1 (fontified t)) . 2759) (undo-tree-id3248 . 1) (undo-tree-id3250 . 1) (undo-tree-id3252 . 1) (undo-tree-id3254 . 1) (undo-tree-id3256 . 1) (undo-tree-id3258 . 1) (undo-tree-id3260 . 1) (undo-tree-id3262 . 1) (undo-tree-id3264 . 1) (undo-tree-id3266 . 1) (undo-tree-id3268 . 1)) ((2759 . 2760)) (21666 58406 970875 702000) 0 nil]) ((#("-" 0 1 (fontified t)) . 2759) (undo-tree-id3270 . 1) (undo-tree-id3272 . 1) (undo-tree-id3274 . 1) (undo-tree-id3276 . 1) (undo-tree-id3278 . 1) (undo-tree-id3280 . 1) (undo-tree-id3282 . 1) (undo-tree-id3284 . 1) (undo-tree-id3286 . 1) (undo-tree-id3288 . 1)) ((2759 . 2760)) (21666 58407 287689 701000) 0 nil]) ((#("e" 0 1 (fontified t)) . 2759) (undo-tree-id3289 . 1) (undo-tree-id3290 . 1) (undo-tree-id3291 . 1) (undo-tree-id3292 . 1) (undo-tree-id3293 . 1) (undo-tree-id3294 . 1) (undo-tree-id3295 . 1) (undo-tree-id3296 . 1) (undo-tree-id3297 . 1) (undo-tree-id3298 . 1) (undo-tree-id3299 . 1) (undo-tree-id3300 . 1) (undo-tree-id3301 . 1) (undo-tree-id3302 . 1) (undo-tree-id3303 . 1) (undo-tree-id3304 . 1) (undo-tree-id3305 . 1) (undo-tree-id3306 . 1)) nil (21666 58407 652373 640000) 0 nil]) ((#("m" 0 1 (fontified t)) . 2759) (undo-tree-id3307 . 1) (undo-tree-id3308 . 1) (undo-tree-id3309 . 1) (undo-tree-id3310 . 1) (undo-tree-id3311 . 1) (undo-tree-id3312 . 1) (undo-tree-id3313 . 1) (undo-tree-id3314 . 1) (undo-tree-id3315 . 1) (undo-tree-id3316 . 1) (undo-tree-id3317 . 1) (undo-tree-id3318 . 1) (undo-tree-id3319 . 1) (undo-tree-id3320 . 1) (undo-tree-id3321 . 1) (undo-tree-id3322 . 1)) nil (21666 58098 196049 813000) 0 nil]) ((#("a" 0 1 (fontified t)) . 2759) (undo-tree-id3323 . 1) (undo-tree-id3324 . 1) (undo-tree-id3325 . 1) (undo-tree-id3326 . 1) (undo-tree-id3327 . 1) (undo-tree-id3328 . 1) (undo-tree-id3329 . 1) (undo-tree-id3330 . 1) (undo-tree-id3331 . 1) (undo-tree-id3332 . 1) (undo-tree-id3333 . 1) (undo-tree-id3334 . 1) (undo-tree-id3335 . 1) (undo-tree-id3336 . 1)) nil (21666 58098 196091 639000) 0 nil]) ((#("n" 0 1 (fontified t)) . 2759) (undo-tree-id3337 . 1) (undo-tree-id3338 . 1) (undo-tree-id3339 . 1) (undo-tree-id3340 . 1) (undo-tree-id3341 . 1) (undo-tree-id3342 . 1) (undo-tree-id3343 . 1) (undo-tree-id3344 . 1) (undo-tree-id3345 . 1) (undo-tree-id3346 . 1) (undo-tree-id3347 . 1) (undo-tree-id3348 . 1)) nil (21666 58098 196129 780000) 0 nil]) ((#("e" 0 1 (fontified t)) . 2759) (undo-tree-id3349 . 1) (undo-tree-id3350 . 1) (undo-tree-id3351 . 1) (undo-tree-id3352 . 1) (undo-tree-id3353 . 1) (undo-tree-id3354 . 1) (undo-tree-id3355 . 1) (undo-tree-id3356 . 1) (undo-tree-id3357 . 1) (undo-tree-id3358 . 1)) nil (21666 58098 196161 300000) 0 nil]) ((#("r" 0 1 (fontified t)) . 2759) (undo-tree-id3359 . 1) (undo-tree-id3360 . 1) (undo-tree-id3361 . 1) (undo-tree-id3362 . 1) (undo-tree-id3363 . 1) (undo-tree-id3364 . 1) (undo-tree-id3365 . 1) (undo-tree-id3366 . 1)) nil (21666 58098 196205 96000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2759) (undo-tree-id3367 . 1) (undo-tree-id3368 . 1) (undo-tree-id3369 . 1) (undo-tree-id3370 . 1) (undo-tree-id3371 . 1) (undo-tree-id3372 . 1)) nil (21666 58098 196226 762000) 0 nil]) ((#(";" 0 1 (fontified t)) . 2759) (undo-tree-id3373 . 1) (undo-tree-id3374 . 1) (undo-tree-id3375 . 1) (undo-tree-id3376 . 1)) nil (21666 58098 196242 661000) 0 nil]) ((#("\\" 0 1 (fontified t)) . 2759) (undo-tree-id3377 . 1) (undo-tree-id3378 . 1)) nil (21666 58098 196253 873000) 0 nil]) ((2744 . 2746)) nil (21666 58098 196259 127000) 0 nil]) ((nil rear-nonsticky nil 2772 . 2773) (nil fontified nil 2739 . 2773) (2739 . 2773)) nil (21666 58098 196264 202000) 0 nil]) ((2738 . 2739) 2737 (t 21666 58079 208493 866000)) nil (21666 58098 196269 912000) 0 nil] [nil nil ((nil rear-nonsticky nil 2771 . 2772) (nil fontified nil 2738 . 2772) (2738 . 2772) 2737 (t 21666 58079 208493 866000)) ((#("bind c new-window \\; rename-window" 0 33 (fontified nil) 33 34 (fontified nil rear-nonsticky nil)) . 2738) (undo-tree-id3100 . -33) (undo-tree-id3101 . -34) (undo-tree-id3102 . 1) (undo-tree-id3103 . 1) (undo-tree-id3104 . 1) (nil rear-nonsticky t 2771 . 2772)) (21666 58084 863878 916000) 0 nil]) ((2734 . 2738)) nil (21666 58084 864356 943000) 0 nil]) ((2730 . 2734)) nil (21666 58078 926378 897000) 0 nil]) ((2724 . 2730)) nil (21666 58078 926383 92000) 0 nil]) ((#("r" 0 1 (fontified t)) . -2724)) nil (21666 58078 926386 442000) 0 nil]) ((2723 . 2725)) nil (21666 58078 926392 694000) 0 nil]) ((nil rear-nonsticky nil 2722 . 2723) (nil fontified nil 2721 . 2723) (2721 . 2723) 2720) nil (21666 58078 926398 71000) 0 nil]) ((#("y" 0 1 (fontified t)) . -4331)) nil (21666 58078 926402 169000) 0 nil]) ((4331 . 4332)) nil (21666 58078 926405 909000) 0 nil]) ((2719 . 2721)) nil (21666 58078 926409 160000) 0 nil]) ((2713 . 2719)) nil (21666 58078 926412 453000) 0 nil]) ((2707 . 2713)) nil (21666 58078 926415 557000) 0 nil]) ((2706 . 2707)) nil (21666 58078 926418 630000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -2706)) nil (21666 58078 926423 523000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2707)) nil (21666 58078 926431 195000) 0 nil]) ((2703 . 2708)) nil (21666 58078 926435 459000) 0 nil]) ((2703 . 2705)) nil (21666 58078 926439 285000) 0 nil]) ((2633 . 2634)) nil (21666 58078 926443 153000) 0 nil]) ((nil rear-nonsticky nil 2700 . 2701) (nil fontified nil 2633 . 2701) (2633 . 2701)) nil (21666 58078 926448 557000) 0 nil]) ((2629 . 2632)) nil (21666 58078 926453 88000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -2629)) nil (21666 58078 926456 781000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -2630)) nil (21666 58078 926462 389000) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -2631)) nil (21666 58078 926467 194000) 0 nil]) ((2616 . 2632)) nil (21666 58078 926471 444000) 0 nil]) ((#("b" 0 1 (fontified t face font-lock-comment-face)) . -2616)) nil (21666 58078 926475 186000) 0 nil]) ((2605 . 2617)) nil (21666 58078 926479 259000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -2605)) nil (21666 58078 926483 76000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2606)) nil (21666 58078 926487 168000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -2607)) nil (21666 58078 926491 707000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -2608)) nil (21666 58078 926495 839000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -2609)) nil (21666 58078 926501 345000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2610)) nil (21666 58078 926505 504000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2611)) nil (21666 58078 926509 676000) 0 nil]) ((2605 . 2612)) nil (21666 58078 926513 753000) 0 nil]) ((2604 . 2606) (t 21666 56919 476374 954000)) nil (21666 58078 926518 78000) 0 nil]) ((nil rear-nonsticky nil 1925 . 1926) (nil fontified nil 1875 . 1926) (1875 . 1926)) nil (21666 56919 318063 938000) 0 nil]) ((1874 . 1875)) nil (21666 56919 318075 580000) 0 nil]) ((1873 . 1874)) nil (21666 56919 318080 287000) 0 nil]) ((1818 . 1819)) nil (21666 56919 318084 440000) 0 nil]) ((1742 . 1744) (#("	" 0 1 (fontified t)) . 1742) 1743) nil (21666 56919 318089 864000) 0 nil]) ((1742 . 1743) (#(" " 0 1 (fontified t)) . 1742) 1743) nil (21666 56919 318096 819000) 0 nil]) ((1817 . 1819)) nil (21666 56919 318101 925000) 0 nil]) ((nil rear-nonsticky nil 1849 . 1850) (nil fontified nil 1817 . 1850) (1817 . 1850)) nil (21666 56919 318107 100000) 0 nil]) ((1816 . 1817)) nil (21666 56919 318111 759000) 0 nil]) ((nil rear-nonsticky nil 1799 . 1800) (nil fontified nil 1744 . 1800) (1744 . 1800)) nil (21666 56919 318117 37000) 0 nil]) ((1742 . 1744) (t 21666 54516 821313 155000)) nil (21666 56919 318122 303000) 0 nil]) ((1709 . 1710)) nil (21666 54516 651883 978000) 0 nil]) ((1690 . 1691)) nil (21666 54516 651894 436000) 0 nil]) ((1678 . 1679)) nil (21666 54516 651899 465000) 0 nil]) ((#("I" 0 1 (fontified t face font-lock-variable-name-face)) . -1678) (undo-tree-id3078 . -1)) nil (21666 54516 651913 542000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1679) (undo-tree-id3079 . -1)) nil (21666 54516 651922 900000) 0 nil]) ((1679 . 1680) (#("i" 0 1 (fontified nil face font-lock-variable-name-face)) . 1679) (1678 . 1679) 1679) nil (21666 54516 651929 987000) 0 nil]) ((1678 . 1679)) nil (21666 54516 651935 357000) 0 nil]) ((1727 . 1728)) nil (21666 54516 651939 537000) 0 nil]) ((nil rear-nonsticky nil 1726 . 1727) (nil fontified nil 1707 . 1727) (1707 . 1727)) nil (21666 54516 651944 529000) 0 nil]) ((#("bind C-a send-prefix
" 0 4 (fontified t face font-lock-variable-name-face) 4 20 (fontified t) 20 21 (fontified t)) . 1689) (undo-tree-id3080 . -21) (undo-tree-id3081 . -21) (undo-tree-id3082 . -21) (undo-tree-id3083 . -21) (undo-tree-id3084 . -21) (undo-tree-id3085 . -21) (undo-tree-id3086 . 5) (undo-tree-id3087 . -21) (undo-tree-id3088 . 5) (undo-tree-id3089 . -21) (undo-tree-id3090 . 5) (undo-tree-id3091 . -21) (undo-tree-id3092 . 5) (undo-tree-id3093 . -21) (undo-tree-id3094 . 5) (undo-tree-id3095 . -21) (undo-tree-id3096 . 5) (undo-tree-id3097 . -21) (undo-tree-id3098 . 5) (undo-tree-id3099 . -21) 1705) nil (21666 54516 652010 448000) 0 nil]) ((nil rear-nonsticky nil 1726 . 1727) (nil fontified nil 1710 . 1727) (1710 . 1727)) nil (21666 54516 652020 895000) 0 nil]) ((1709 . 1710) 1689) nil (21666 54516 652025 971000) 0 nil] [nil ([nil nil ((1705 . 1706)) ((#("
" 0 1 (fontified t)) . 1705) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . 1)) (21666 54461 262464 980000) 0 nil]) ((nil rear-nonsticky nil 1705 . 1706) (nil fontified nil 1689 . 1706) (1689 . 1706)) ((#("set -g prefix C-a" 0 3 (fontified nil face font-lock-variable-name-face) 3 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil)) . 1689) (undo-tree-id3069 . 1) (undo-tree-id3070 . -16) (undo-tree-id3071 . 1) (undo-tree-id3072 . 1) (undo-tree-id3073 . 1) (undo-tree-id3074 . 1) (undo-tree-id3075 . 1) (undo-tree-id3076 . 1) (undo-tree-id3077 . 1) (nil rear-nonsticky t 1705 . 1706)) (21666 54461 262774 356000) 0 nil]) ((#("set -g prefix C-a
" 0 3 (fontified t face font-lock-variable-name-face) 3 18 (fontified t)) . 1678) (undo-tree-id3046 . 18) (undo-tree-id3047 . -18) (undo-tree-id3048 . -18) (undo-tree-id3049 . 1) (undo-tree-id3050 . 18) (undo-tree-id3051 . 18) (undo-tree-id3052 . 18) (undo-tree-id3053 . 18) (undo-tree-id3054 . 18) (undo-tree-id3055 . 18) (undo-tree-id3056 . 18) (undo-tree-id3057 . 18) (undo-tree-id3058 . 18) (undo-tree-id3059 . 18) (undo-tree-id3060 . 18) (undo-tree-id3061 . 18) (undo-tree-id3062 . 18) (undo-tree-id3063 . 18) (undo-tree-id3064 . 18) (undo-tree-id3065 . 18)) nil (21666 54461 467992 118000) 0 nil]) ((#("V" 0 1 (fontified t face font-lock-variable-name-face)) . -1678)) nil (21666 54461 262598 312000) 0 nil]) ((1678 . 1679)) nil (21666 54461 262617 145000) 0 nil]) ((nil rear-nonsticky nil 1773 . 1774) (nil fontified nil 1729 . 1774) (1729 . 1774)) nil (21666 54461 262623 36000) 0 nil]) ((1728 . 1730) (t 21665 44406 135109 871000)) nil (21666 54461 262627 185000) 0 nil]) ((nil rear-nonsticky nil 471 . 472) (nil fontified nil 465 . 472) (465 . 472) 472 (#("#002E41" 0 7 (fontified t face font-lock-string-face)) . 465) (undo-tree-id3013 . -7) (undo-tree-id3014 . -7) (undo-tree-id3015 . -6) (undo-tree-id3016 . -4) (undo-tree-id3017 . 1) (undo-tree-id3018 . 2) (undo-tree-id3019 . 3) (undo-tree-id3020 . 4) (undo-tree-id3021 . 5) (undo-tree-id3022 . 6) (undo-tree-id3023 . 7) (undo-tree-id3024 . 7) (undo-tree-id3025 . 6) (undo-tree-id3026 . 5) (undo-tree-id3027 . 4) (undo-tree-id3028 . 3) (undo-tree-id3029 . -4) (undo-tree-id3030 . 3) (undo-tree-id3031 . 4) (undo-tree-id3032 . 5) (undo-tree-id3033 . 6) (undo-tree-id3034 . 7) (undo-tree-id3035 . -7) (undo-tree-id3036 . 7) (undo-tree-id3037 . -6) (undo-tree-id3038 . 6) (undo-tree-id3039 . 5) (undo-tree-id3040 . 4) (undo-tree-id3041 . 3) (undo-tree-id3042 . 2) (undo-tree-id3043 . 1) (undo-tree-id3044 . 1) 472) nil (21665 44405 489173 141000) 0 nil]) ((462 . 463) (#("b" 0 1 (fontified t face font-lock-string-face)) . 462) (undo-tree-id3045 . 1)) nil (21665 44405 489205 812000) 0 nil]) ((nil rear-nonsticky nil 472 . 473) (nil fontified nil 460 . 473) (460 . 473) 459 (t 21665 44368 778116 191000)) nil (21665 44405 489218 103000) 0 nil]) ((449 . 450)) nil (21665 44368 668638 124000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . 449) (undo-tree-id3003 . 1) (undo-tree-id3004 . 1) (undo-tree-id3005 . 1) (undo-tree-id3006 . 1) (undo-tree-id3007 . 1) (undo-tree-id3008 . 1) (undo-tree-id3009 . 1) (undo-tree-id3010 . 1) (undo-tree-id3011 . 1) (undo-tree-id3012 . 1)) nil (21665 44368 668661 574000) 0 nil] [nil ([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . -450)) ((450 . 451)) (21665 44364 449586 762000) 0 nil]) ((449 . 451)) ((#("rb" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 449) (undo-tree-id3002 . 2)) (21665 44364 449892 25000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 361) (undo-tree-id2994 . 1)) nil (21665 44364 902258 759000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 373) (undo-tree-id2995 . 1)) nil (21665 44364 449641 799000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 391) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . 1)) nil (21665 44364 449679 960000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 398) (undo-tree-id3001 . 1) (t 21665 44325 354189 775000)) nil (21665 44364 449696 211000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 414) (undo-tree-id2979 . 1) (undo-tree-id2980 . 1)) nil (21665 44325 204132 640000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 393) (undo-tree-id2981 . 1) (undo-tree-id2982 . 1)) nil (21665 44325 204153 920000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -437)) nil (21665 44325 204161 721000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 439) (undo-tree-id2983 . 1) (undo-tree-id2984 . 1)) nil (21665 44325 204175 236000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -454)) nil (21665 44325 204181 769000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 473) (undo-tree-id2985 . 1) (undo-tree-id2986 . 1) (undo-tree-id2987 . 1)) nil (21665 44325 204198 596000) 0 nil]) ((472 . 473)) nil (21665 44325 204205 273000) 0 nil]) ((469 . 470)) nil (21665 44325 204210 312000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 469) (undo-tree-id2988 . 1) (undo-tree-id2989 . 1) (undo-tree-id2990 . 1) (undo-tree-id2991 . 1) (undo-tree-id2992 . 1)) nil (21665 44325 204234 145000) 0 nil]) ((#(":" 0 1 (fontified t face font-lock-string-face)) . 469) (undo-tree-id2993 . 1) (t 21665 44282 9995 927000)) nil (21665 44325 204246 960000) 0 nil]) ((nil rear-nonsticky nil 594 . 595) (nil fontified nil 588 . 595) (588 . 595)) nil (21665 44281 883576 611000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -588)) nil (21665 44281 883585 132000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . -589)) nil (21665 44281 883590 15000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-string-face)) . -590)) nil (21665 44281 883593 654000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -591)) nil (21665 44281 883597 685000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -592)) nil (21665 44281 883601 101000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . -593)) nil (21665 44281 883604 960000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . -594) (undo-tree-id2934 . 1)) nil (21665 44281 883616 975000) 0 nil]) ((nil rear-nonsticky nil 467 . 468) (nil fontified nil 461 . 468) (461 . 468)) nil (21665 44281 883622 217000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 461) (undo-tree-id2935 . 1) (undo-tree-id2936 . 1) (undo-tree-id2937 . 1) (undo-tree-id2938 . 1) (undo-tree-id2939 . 1) (undo-tree-id2940 . 1) (undo-tree-id2941 . 1)) nil (21665 44281 883642 520000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . 461) (undo-tree-id2942 . 1) (undo-tree-id2943 . 1) (undo-tree-id2944 . 1) (undo-tree-id2945 . 1) (undo-tree-id2946 . 1) (undo-tree-id2947 . 1)) nil (21665 44281 883660 998000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . 461) (undo-tree-id2948 . 1) (undo-tree-id2949 . 1) (undo-tree-id2950 . 1) (undo-tree-id2951 . 1) (undo-tree-id2952 . 1)) nil (21665 44281 883676 701000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 461) (undo-tree-id2953 . 1) (undo-tree-id2954 . 1) (undo-tree-id2955 . 1) (undo-tree-id2956 . 1)) nil (21665 44281 883693 624000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-string-face)) . 461) (undo-tree-id2957 . 1) (undo-tree-id2958 . 1)) nil (21665 44281 883702 541000) 0 nil]) ((456 . 457)) nil (21665 44281 883707 145000) 0 nil]) ((nil rear-nonsticky nil 469 . 470) (nil fontified nil 456 . 470) (456 . 470)) nil (21665 44281 883711 323000) 0 nil]) ((288 . 293)) nil (21665 44281 883715 99000) 0 nil]) ((#("t" 0 1 (fontified t)) . 288) (undo-tree-id2959 . 1) (undo-tree-id2960 . 1) (undo-tree-id2961 . 1) (undo-tree-id2962 . 1) (undo-tree-id2963 . 1) (undo-tree-id2964 . 1) (undo-tree-id2965 . 1) (undo-tree-id2966 . 1)) nil (21665 44281 883735 362000) 0 nil]) ((#("f" 0 1 (fontified t)) . 288) (undo-tree-id2967 . 1) (undo-tree-id2968 . 1) (undo-tree-id2969 . 1) (undo-tree-id2970 . 1) (undo-tree-id2971 . 1) (undo-tree-id2972 . 1)) nil (21665 44281 883752 519000) 0 nil]) ((#("e" 0 1 (fontified t)) . 288) (undo-tree-id2973 . 1) (undo-tree-id2974 . 1) (undo-tree-id2975 . 1) (undo-tree-id2976 . 1)) nil (21665 44281 883766 500000) 0 nil]) ((#("l" 0 1 (fontified t)) . 288) (undo-tree-id2977 . 1) (undo-tree-id2978 . 1)) nil (21665 44281 883775 650000) 0 nil]) ((nil rear-nonsticky nil 302 . 303) (nil fontified nil 274 . 303) (274 . 303)) nil (21665 44281 883780 935000) 0 nil]) ((424 . 425)) nil (21665 44281 883784 757000) 0 nil]) ((nil rear-nonsticky nil 424 . 425) (nil fontified nil 424 . 425) (424 . 425)) nil (21665 44281 883788 850000) 0 nil] [nil ([nil nil ((342 . 343)) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 342) (undo-tree-id2926 . 1) (undo-tree-id2927 . 1) (undo-tree-id2928 . 1) (undo-tree-id2929 . 1) (undo-tree-id2930 . 1) (undo-tree-id2931 . 1) (undo-tree-id2932 . 1) (t 21665 44167 112681 892000)) (21665 44167 12797 713000) 0 nil]) ((nil rear-nonsticky nil 341 . 342) (nil fontified nil 327 . 342) (327 . 342)) ((#("#[fg=green]: #h" 0 14 (fontified nil face font-lock-string-face) 14 15 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 327) (undo-tree-id2933 . -15) (nil rear-nonsticky t 341 . 342)) (21665 44189 420086 43000) 0 nil]) ((#("i" 0 1 (fontified t)) . -326)) nil (21665 44190 426355 259000) 0 nil]) ((326 . 327) (t 21665 44082 7538 926000)) nil (21665 44167 12817 285000) 0 nil]) ((532 . 534)) nil (21665 44081 438590 71000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . -532)) nil (21665 44081 438599 722000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . -533)) nil (21665 44081 438604 548000) 0 nil]) ((532 . 534)) nil (21665 44081 438609 139000) 0 nil]) ((#(":" 0 1 (fontified t face font-lock-string-face)) . -532)) nil (21665 44081 438612 821000) 0 nil]) ((#(":" 0 1 (fontified t face font-lock-string-face)) . -533)) nil (21665 44081 438616 912000) 0 nil]) ((532 . 534)) nil (21665 44081 438621 154000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -532) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (t 21665 44055 422088 823000)) nil (21665 44081 438854 403000) 0 nil]) ((544 . 545)) nil (21665 44055 278774 936000) 0 nil]) ((538 . 544)) nil (21665 44055 278787 887000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 538) (undo-tree-id2832 . 1) (undo-tree-id2833 . 1) (undo-tree-id2834 . 1) (undo-tree-id2835 . 1) (undo-tree-id2836 . 1) (undo-tree-id2837 . 1) (undo-tree-id2838 . 1) (undo-tree-id2839 . 1) (undo-tree-id2840 . 1) (undo-tree-id2841 . 1) (undo-tree-id2842 . 1) (undo-tree-id2843 . 1) (undo-tree-id2844 . 1) (undo-tree-id2845 . 1)) nil (21665 44055 278870 449000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . 538) (undo-tree-id2846 . -1) (undo-tree-id2847 . 1) (undo-tree-id2848 . 1) (undo-tree-id2849 . 1) (undo-tree-id2850 . 1) (undo-tree-id2851 . 1) (undo-tree-id2852 . 1) (undo-tree-id2853 . 1) (undo-tree-id2854 . 1) (undo-tree-id2855 . 1)) nil (21665 44055 278933 96000) 0 nil]) ((#("y" 0 1 (fontified t face font-lock-string-face)) . 538) (undo-tree-id2856 . 1) (undo-tree-id2857 . 1) (undo-tree-id2858 . 1) (undo-tree-id2859 . 1) (undo-tree-id2860 . 1)) nil (21665 44055 278968 181000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-string-face)) . 538) (undo-tree-id2861 . 1) (undo-tree-id2862 . 1)) nil (21665 44055 278988 337000) 0 nil]) ((550 . 551)) nil (21665 44055 278996 78000) 0 nil]) ((#(">" 0 1 (fontified t face font-lock-string-face)) . -549)) nil (21665 44055 279025 828000) 0 nil]) ((549 . 550)) nil (21665 44055 279045 656000) 0 nil]) ((543 . 545) (t 21665 44019 432088 952000)) nil (21665 44055 279051 470000) 0 nil]) ((538 . 542)) nil (21665 44019 317659 974000) 0 nil]) ((#("b" 0 1 (fontified t face font-lock-string-face)) . -538) (undo-tree-id2826 . -1)) nil (21665 44019 317678 887000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-string-face)) . -539) (undo-tree-id2827 . -1)) nil (21665 44019 317687 920000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . -540) (undo-tree-id2828 . -1)) nil (21665 44019 317695 272000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -541) (undo-tree-id2829 . -1) (undo-tree-id2830 . 1) (undo-tree-id2831 . 1)) nil (21665 44019 317712 232000) 0 nil]) ((nil rear-nonsticky nil 542 . 543) (nil fontified nil 533 . 543) (533 . 543)) nil (21665 44019 317718 572000) 0 nil] [nil ([nil nil ((#("v" 0 1 (fontified t face font-lock-string-face)) . -520)) ((520 . 521)) (21665 44003 475399 632000) 0 nil]) ((520 . 521)) ((#("v" 0 1 (fontified t face font-lock-string-face)) . 520)) (21665 44003 476270 460000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -538) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . 1) (undo-tree-id2611 . 1) (undo-tree-id2612 . 1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1)) nil (21665 44004 782815 855000) 0 nil]) ((#("#[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::" 0 81 (fontified t face font-lock-string-face)) . -539) (undo-tree-id2696 . -80) (undo-tree-id2697 . 81) (undo-tree-id2698 . 80) (undo-tree-id2699 . 79) (undo-tree-id2700 . 78) (undo-tree-id2701 . 77) (undo-tree-id2702 . 76) (undo-tree-id2703 . 75) (undo-tree-id2704 . 74) (undo-tree-id2705 . 73) (undo-tree-id2706 . 72) (undo-tree-id2707 . 71) (undo-tree-id2708 . 70) (undo-tree-id2709 . 71) (undo-tree-id2710 . 72) (undo-tree-id2711 . 73) (undo-tree-id2712 . 74) (undo-tree-id2713 . 75) (undo-tree-id2714 . 76) (undo-tree-id2715 . 77) (undo-tree-id2716 . 78) (undo-tree-id2717 . 79) (undo-tree-id2718 . 80) (undo-tree-id2719 . 81) (undo-tree-id2720 . 81) (undo-tree-id2721 . 80) (undo-tree-id2722 . 79) (undo-tree-id2723 . 78) (undo-tree-id2724 . 77) (undo-tree-id2725 . 76) (undo-tree-id2726 . 75) (undo-tree-id2727 . 74) (undo-tree-id2728 . 73) (undo-tree-id2729 . 72) (undo-tree-id2730 . 71) (undo-tree-id2731 . 70) (undo-tree-id2732 . 71) (undo-tree-id2733 . 72) (undo-tree-id2734 . 73) (undo-tree-id2735 . 74) (undo-tree-id2736 . 75) (undo-tree-id2737 . 76) (undo-tree-id2738 . 77) (undo-tree-id2739 . 78) (undo-tree-id2740 . 79) (undo-tree-id2741 . 80) (undo-tree-id2742 . 81) (undo-tree-id2743 . -81) (undo-tree-id2744 . 81) (undo-tree-id2745 . -80) (undo-tree-id2746 . 80) (undo-tree-id2747 . 79) (undo-tree-id2748 . 78) (undo-tree-id2749 . 77) (undo-tree-id2750 . 76) (undo-tree-id2751 . 75) (undo-tree-id2752 . 74) (undo-tree-id2753 . 73) (undo-tree-id2754 . 72) (undo-tree-id2755 . 71) (undo-tree-id2756 . 70) (undo-tree-id2757 . 69) (undo-tree-id2758 . 68) (undo-tree-id2759 . 67) (undo-tree-id2760 . 66) (undo-tree-id2761 . 65) (undo-tree-id2762 . 64) (undo-tree-id2763 . 63) (undo-tree-id2764 . 62) (undo-tree-id2765 . 61) (undo-tree-id2766 . 60) (undo-tree-id2767 . 59) (undo-tree-id2768 . 58) (undo-tree-id2769 . 57) (undo-tree-id2770 . 56) (undo-tree-id2771 . 55) (undo-tree-id2772 . 54) (undo-tree-id2773 . 53) (undo-tree-id2774 . 52) (undo-tree-id2775 . 51) (undo-tree-id2776 . 50) (undo-tree-id2777 . 49) (undo-tree-id2778 . 48) (undo-tree-id2779 . 47) (undo-tree-id2780 . 46) (undo-tree-id2781 . 45) (undo-tree-id2782 . 44) (undo-tree-id2783 . 43) (undo-tree-id2784 . 42) (undo-tree-id2785 . 41) (undo-tree-id2786 . 40) (undo-tree-id2787 . 39) (undo-tree-id2788 . 38) (undo-tree-id2789 . 37) (undo-tree-id2790 . 36) (undo-tree-id2791 . 35) (undo-tree-id2792 . 34) (undo-tree-id2793 . 33) (undo-tree-id2794 . 32) (undo-tree-id2795 . 31) (undo-tree-id2796 . 30) (undo-tree-id2797 . 29) (undo-tree-id2798 . 28) (undo-tree-id2799 . 27) (undo-tree-id2800 . 26) (undo-tree-id2801 . 25) (undo-tree-id2802 . 24) (undo-tree-id2803 . 23) (undo-tree-id2804 . 22) (undo-tree-id2805 . 21) (undo-tree-id2806 . 20) (undo-tree-id2807 . 19) (undo-tree-id2808 . 18) (undo-tree-id2809 . 17) (undo-tree-id2810 . 16) (undo-tree-id2811 . 15) (undo-tree-id2812 . 14) (undo-tree-id2813 . 13) (undo-tree-id2814 . 12) (undo-tree-id2815 . 11) (undo-tree-id2816 . 10) (undo-tree-id2817 . 9) (undo-tree-id2818 . 8) (undo-tree-id2819 . 7) (undo-tree-id2820 . 6) (undo-tree-id2821 . 5) (undo-tree-id2822 . 4) (undo-tree-id2823 . 3) (undo-tree-id2824 . 2) (undo-tree-id2825 . 1) (t 21665 43921 793023 727000)) nil (21665 44003 476104 641000) 0 nil]) ((459 . 461)) nil (21665 43921 504698 811000) 0 nil]) ((#("7" 0 1 (fontified t)) . -459)) nil (21665 43921 504711 272000) 0 nil]) ((#(" " 0 1 (fontified t)) . 433) (undo-tree-id2596 . 1) (undo-tree-id2597 . 1) (undo-tree-id2598 . 1) (undo-tree-id2599 . 1)) nil (21665 43921 504753 225000) 0 nil]) ((#(" " 0 1 (fontified t)) . 433) (undo-tree-id2600 . 1) (undo-tree-id2601 . 1) (undo-tree-id2602 . 1)) nil (21665 43921 504780 28000) 0 nil]) ((#(" " 0 1 (fontified t)) . 433) (undo-tree-id2603 . 1) (undo-tree-id2604 . 1)) nil (21665 43921 504797 956000) 0 nil]) ((#(" " 0 1 (fontified t)) . 433) (undo-tree-id2605 . 1)) nil (21665 43921 504810 172000) 0 nil]) ((nil rear-nonsticky nil 465 . 466) (nil fontified nil 433 . 466) (433 . 466)) nil (21665 43921 504818 31000) 0 nil]) ((432 . 433)) nil (21665 43921 504823 484000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -432)) nil (21665 43921 504828 100000) 0 nil]) ((432 . 433) (t 21665 43837 441146 43000)) nil (21665 43921 504835 235000) 0 nil]) ((#("
" 0 1 (fontified t)) . 488) (undo-tree-id2467 . 1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . 1) (undo-tree-id2472 . 1) (undo-tree-id2473 . 1) (undo-tree-id2474 . 1) (undo-tree-id2475 . 1) (undo-tree-id2476 . 1) (undo-tree-id2477 . 1) (undo-tree-id2478 . 1) (undo-tree-id2479 . 1) (undo-tree-id2480 . 1) (undo-tree-id2481 . 1) (undo-tree-id2482 . 1) (undo-tree-id2483 . 1) (undo-tree-id2484 . 1) (undo-tree-id2485 . 1)) nil (21665 43837 323092 543000) 0 nil]) ((#("\"" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 488) (undo-tree-id2486 . 1) (undo-tree-id2487 . 1) (undo-tree-id2488 . 1) (undo-tree-id2489 . 1) (undo-tree-id2490 . 1) (undo-tree-id2491 . 1) (undo-tree-id2492 . 1) (undo-tree-id2493 . 1) (undo-tree-id2494 . 1) (undo-tree-id2495 . 1) (undo-tree-id2496 . 1) (undo-tree-id2497 . 1) (undo-tree-id2498 . 1) (undo-tree-id2499 . 1)) nil (21665 43837 323150 735000) 0 nil]) ((#("H" 0 1 (fontified t)) . 488) (undo-tree-id2500 . -1) (undo-tree-id2501 . 1) (undo-tree-id2502 . 1) (undo-tree-id2503 . 1) (undo-tree-id2504 . 1) (undo-tree-id2505 . 1) (undo-tree-id2506 . 1) (undo-tree-id2507 . 1) (undo-tree-id2508 . 1) (undo-tree-id2509 . 1) (undo-tree-id2510 . 1) (undo-tree-id2511 . 1) (undo-tree-id2512 . 1) (undo-tree-id2513 . 1)) nil (21665 43837 323199 653000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 488) (undo-tree-id2514 . 1) (undo-tree-id2515 . 1) (undo-tree-id2516 . 1) (undo-tree-id2517 . 1) (undo-tree-id2518 . 1) (undo-tree-id2519 . 1) (undo-tree-id2520 . 1) (undo-tree-id2521 . 1) (undo-tree-id2522 . 1) (undo-tree-id2523 . 1) (undo-tree-id2524 . 1) (undo-tree-id2525 . 1)) nil (21665 43837 323243 565000) 0 nil]) ((#("]" 0 1 (fontified t)) . 488) (undo-tree-id2526 . 1) (undo-tree-id2527 . 1) (undo-tree-id2528 . 1) (undo-tree-id2529 . 1) (undo-tree-id2530 . 1) (undo-tree-id2531 . 1) (undo-tree-id2532 . 1) (undo-tree-id2533 . 1) (undo-tree-id2534 . 1) (undo-tree-id2535 . 1) (undo-tree-id2536 . 1)) nil (21665 43837 323283 780000) 0 nil]) ((#("n" 0 1 (fontified t)) . 488) (undo-tree-id2537 . 1) (undo-tree-id2538 . 1) (undo-tree-id2539 . 1) (undo-tree-id2540 . 1) (undo-tree-id2541 . 1) (undo-tree-id2542 . 1) (undo-tree-id2543 . 1) (undo-tree-id2544 . 1) (undo-tree-id2545 . 1) (undo-tree-id2546 . 1)) nil (21665 43837 323320 74000) 0 nil]) ((#("e" 0 1 (fontified t)) . 488) (undo-tree-id2547 . 1) (undo-tree-id2548 . 1) (undo-tree-id2549 . 1) (undo-tree-id2550 . 1) (undo-tree-id2551 . 1) (undo-tree-id2552 . 1) (undo-tree-id2553 . 1) (undo-tree-id2554 . 1) (undo-tree-id2555 . 1)) nil (21665 43837 323352 870000) 0 nil]) ((#("e" 0 1 (fontified t)) . 488) (undo-tree-id2556 . 1) (undo-tree-id2557 . 1) (undo-tree-id2558 . 1) (undo-tree-id2559 . 1) (undo-tree-id2560 . 1) (undo-tree-id2561 . 1) (undo-tree-id2562 . 1) (undo-tree-id2563 . 1)) nil (21665 43837 323385 315000) 0 nil]) ((#("r" 0 1 (fontified t)) . 488) (undo-tree-id2564 . 1) (undo-tree-id2565 . 1) (undo-tree-id2566 . 1) (undo-tree-id2567 . 1) (undo-tree-id2568 . 1) (undo-tree-id2569 . 1) (undo-tree-id2570 . 1)) nil (21665 43837 323412 405000) 0 nil]) ((#("g" 0 1 (fontified t)) . 488) (undo-tree-id2571 . 1) (undo-tree-id2572 . 1) (undo-tree-id2573 . 1) (undo-tree-id2574 . 1) (undo-tree-id2575 . 1) (undo-tree-id2576 . 1)) nil (21665 43837 323436 178000) 0 nil]) ((#("=" 0 1 (fontified t)) . 488) (undo-tree-id2577 . 1) (undo-tree-id2578 . 1) (undo-tree-id2579 . 1) (undo-tree-id2580 . 1) (undo-tree-id2581 . 1)) nil (21665 43837 323459 955000) 0 nil]) ((#("g" 0 1 (fontified t)) . 488) (undo-tree-id2582 . 1) (undo-tree-id2583 . 1) (undo-tree-id2584 . 1) (undo-tree-id2585 . 1)) nil (21665 43837 323478 21000) 0 nil]) ((#("f" 0 1 (fontified t)) . 488) (undo-tree-id2586 . 1) (undo-tree-id2587 . 1) (undo-tree-id2588 . 1) (undo-tree-id2589 . 1)) nil (21665 43837 323496 345000) 0 nil]) ((#("[" 0 1 (fontified t)) . 488) (undo-tree-id2590 . 1) (undo-tree-id2591 . 1) (undo-tree-id2592 . 1)) nil (21665 43837 323511 382000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 488) (undo-tree-id2593 . 1) (undo-tree-id2594 . 1)) nil (21665 43837 323523 576000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 488) (undo-tree-id2595 . 1)) nil (21665 43837 323532 519000) 0 nil]) ((433 . 434)) nil (21665 43837 323537 907000) 0 nil]) ((nil rear-nonsticky nil 501 . 502) (nil fontified nil 468 . 502) (468 . 502)) nil (21665 43837 323543 837000) 0 nil]) ((467 . 468) 464) nil (21665 43837 323549 316000) 0 nil]) ((nil rear-nonsticky nil 569 . 570) (nil fontified nil 468 . 570) (468 . 570)) nil (21665 43837 323555 232000) 0 nil]) ((467 . 468) 466 (t 21665 43742 648746 976000)) nil (21665 43837 323561 606000) 0 nil]) ((466 . 467)) nil (21665 43742 544479 767000) 0 nil]) ((#("’" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 466) (undo-tree-id2465 . 1)) nil (21665 43742 544505 384000) 0 nil]) ((452 . 453)) nil (21665 43742 544511 704000) 0 nil]) ((#("‘" 0 1 (fontified t)) . 452) (undo-tree-id2466 . 1) (t 21665 43719 863085 169000)) nil (21665 43742 544531 314000) 0 nil]) ((nil rear-nonsticky nil 466 . 467) (nil fontified nil 452 . 467) (452 . 467)) nil (21665 43719 759649 943000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . -452) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1)) nil (21665 43719 759774 423000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-string-face)) . -453) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1)) nil (21665 43719 759884 451000) 0 nil]) ((#("[" 0 1 (fontified t face font-lock-string-face)) . -454) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1)) nil (21665 43719 759989 428000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . -455) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1)) nil (21665 43719 760092 780000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-string-face)) . -456) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1)) nil (21665 43719 760200 354000) 0 nil]) ((#("=" 0 1 (fontified t face font-lock-string-face)) . -457) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1)) nil (21665 43719 760299 614000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-string-face)) . -458) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1)) nil (21665 43719 760396 981000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . -459) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1)) nil (21665 43719 760493 147000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -460) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1)) nil (21665 43719 760605 402000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -461) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1)) nil (21665 43719 760696 896000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -462) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1)) nil (21665 43719 760786 145000) 0 nil]) ((#("]" 0 1 (fontified t face font-lock-string-face)) . -463) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1)) nil (21665 43719 760873 450000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-string-face)) . -464) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1)) nil (21665 43719 760958 559000) 0 nil]) ((#("{" 0 1 (fontified t face font-lock-string-face)) . -465) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1)) nil (21665 43719 761040 490000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -466) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1)) nil (21665 43719 761145 175000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -467) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1)) nil (21665 43719 761224 592000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -468) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1)) nil (21665 43719 761301 260000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . -469) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1)) nil (21665 43719 761377 516000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . -470) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1)) nil (21665 43719 761450 957000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . -471) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1)) nil (21665 43719 761522 455000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -472) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1)) nil (21665 43719 761590 522000) 0 nil]) ((#("_" 0 1 (fontified t face font-lock-string-face)) . -473) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1)) nil (21665 43719 761655 234000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . -474) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1)) nil (21665 43719 761720 17000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . -475) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1)) nil (21665 43719 761780 579000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . -476) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1)) nil (21665 43719 761840 553000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -477) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1)) nil (21665 43719 761899 405000) 0 nil]) ((#("}" 0 1 (fontified t face font-lock-string-face)) . -478) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1)) nil (21665 43719 761991 131000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -479) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1)) nil (21665 43719 762053 602000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-string-face)) . -480) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1)) nil (21665 43719 762132 130000) 0 nil]) ((#("[" 0 1 (fontified t face font-lock-string-face)) . -481) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1)) nil (21665 43719 762194 922000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . -482) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1)) nil (21665 43719 762243 331000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-string-face)) . -483) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1)) nil (21665 43719 762289 967000) 0 nil]) ((#("=" 0 1 (fontified t face font-lock-string-face)) . -484) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1)) nil (21665 43719 762333 672000) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-string-face)) . -485) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1)) nil (21665 43719 762385 819000) 0 nil]) ((#("h" 0 1 (fontified t face font-lock-string-face)) . -486) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1)) nil (21665 43719 762425 322000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . -487) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1)) nil (21665 43719 762463 679000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . -488) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1)) nil (21665 43719 762498 486000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . -489) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1)) nil (21665 43719 762530 615000) 0 nil]) ((#("]" 0 1 (fontified t face font-lock-string-face)) . -490) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1)) nil (21665 43719 762560 641000) 0 nil]) ((#("|" 0 1 (fontified t face font-lock-string-face)) . -491) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . 1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . 1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1)) nil (21665 43719 762591 664000) 0 nil]) ((#("'" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . -492) (undo-tree-id2449 . -1) (undo-tree-id2450 . 1) (undo-tree-id2451 . 1) (undo-tree-id2452 . 1) (undo-tree-id2453 . -1) (undo-tree-id2454 . 1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . 1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . 1) (undo-tree-id2461 . -1) (undo-tree-id2462 . 1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (t 21665 43567 532837 418000)) nil (21665 43719 762630 499000) 0 nil]) ((nil rear-nonsticky nil 492 . 493) (nil fontified nil 433 . 493) (433 . 493)) nil (21665 43567 193117 554000) 0 nil]) ((432 . 433)) nil (21665 43567 193127 317000) 0 nil]) ((427 . 432)) nil (21665 43567 193131 37000) 0 nil]) ((285 . 286)) nil (21665 43567 193133 986000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . 285) (undo-tree-id1218 . 1) (undo-tree-id1219 . 1)) nil (21665 43567 193148 687000) 0 nil]) ((284 . 285)) nil (21665 43567 193153 293000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-variable-name-face)) . -274)) nil (21665 43567 193156 265000) 0 nil]) ((274 . 275)) nil (21665 43567 193159 471000) 0 nil]) ((276 . 285)) nil (21665 43567 193162 347000) 0 nil]) ((273 . 274)) nil (21665 43567 193165 300000) 0 nil]) ((269 . 273)) nil (21665 43567 193168 643000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -269)) nil (21665 43567 193171 544000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -270)) nil (21665 43567 193176 126000) 0 nil]) ((262 . 271)) nil (21665 43567 193179 431000) 0 nil]) ((261 . 262) (#("8c" 0 2 (fontified nil face font-lock-variable-name-face)) . 261) (245 . 261) 247) nil (21665 43567 193183 887000) 0 nil]) ((245 . 247)) nil (21665 43567 193187 856000) 0 nil]) ((nil rear-nonsticky nil 418 . 419) (nil fontified nil 390 . 419) (390 . 419)) nil (21665 43567 193191 972000) 0 nil]) ((389 . 391)) nil (21665 43567 193195 515000) 0 nil]) ((#("
" 0 1 (fontified t)) . 402) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . 1) (undo-tree-id1223 . 1)) nil (21665 43567 193207 529000) 0 nil]) ((401 . 402) 389) nil (21665 43567 193213 171000) 0 nil]) ((#("#--------------> general conf
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 30 (fontified t face font-lock-comment-face)) . 245) (undo-tree-id1224 . 30) (undo-tree-id1225 . -30) (undo-tree-id1226 . -30)) nil (21665 43567 193223 162000) 0 nil]) ((275 . 276)) nil (21665 43567 193227 202000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -2029)) nil (21665 43567 193229 991000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -2031)) nil (21665 43567 193233 131000) 0 nil]) ((2029 . 2031)) nil (21665 43567 193236 380000) 0 nil]) ((1513 . 1514) (t 21665 42911 78069 38000)) nil (21665 43567 193239 898000) 0 nil]) ((1556 . 1559) (t 21665 42898 883914 805000)) nil (21665 42910 977544 549000) 0 nil]) ((1568 . 1587) (#("~/bin/t" 0 7 (fontified t face font-lock-string-face)) . -1568) (undo-tree-id929 . -2) (undo-tree-id930 . 7) (undo-tree-id931 . 6)) nil (21665 42898 787716 6000) 0 nil]) ((1573 . 1575)) nil (21665 42898 787728 633000) 0 nil]) ((1570 . 1573)) nil (21665 42898 787734 630000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id932 . -1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . 1) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (undo-tree-id939 . 1) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . 1) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1) (undo-tree-id950 . 1) (undo-tree-id951 . 1) (undo-tree-id952 . 1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1)) nil (21665 42898 787838 84000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id956 . 1) (undo-tree-id957 . 1) (undo-tree-id958 . 1) (undo-tree-id959 . 1) (undo-tree-id960 . 1) (undo-tree-id961 . 1) (undo-tree-id962 . 1) (undo-tree-id963 . 1) (undo-tree-id964 . 1) (undo-tree-id965 . 1) (undo-tree-id966 . 1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . 1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . 1)) nil (21665 42898 787953 493000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . 1) (undo-tree-id994 . 1) (undo-tree-id995 . 1) (undo-tree-id996 . 1) (undo-tree-id997 . 1) (undo-tree-id998 . 1)) nil (21665 42898 788009 341000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id999 . 1) (undo-tree-id1000 . 1) (undo-tree-id1001 . 1) (undo-tree-id1002 . 1) (undo-tree-id1003 . 1) (undo-tree-id1004 . 1) (undo-tree-id1005 . 1) (undo-tree-id1006 . 1) (undo-tree-id1007 . 1) (undo-tree-id1008 . 1) (undo-tree-id1009 . 1) (undo-tree-id1010 . 1) (undo-tree-id1011 . 1) (undo-tree-id1012 . 1) (undo-tree-id1013 . 1) (undo-tree-id1014 . 1) (undo-tree-id1015 . 1) (undo-tree-id1016 . 1) (undo-tree-id1017 . 1) (undo-tree-id1018 . 1)) nil (21665 42898 788075 771000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1019 . 1) (undo-tree-id1020 . 1) (undo-tree-id1021 . 1) (undo-tree-id1022 . 1) (undo-tree-id1023 . 1) (undo-tree-id1024 . 1) (undo-tree-id1025 . 1) (undo-tree-id1026 . 1) (undo-tree-id1027 . 1) (undo-tree-id1028 . 1) (undo-tree-id1029 . 1) (undo-tree-id1030 . 1) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1) (undo-tree-id1033 . 1) (undo-tree-id1034 . 1) (undo-tree-id1035 . 1) (undo-tree-id1036 . 1) (undo-tree-id1037 . 1)) nil (21665 42898 788124 933000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1038 . 1) (undo-tree-id1039 . 1) (undo-tree-id1040 . 1) (undo-tree-id1041 . 1) (undo-tree-id1042 . 1) (undo-tree-id1043 . 1) (undo-tree-id1044 . 1) (undo-tree-id1045 . 1) (undo-tree-id1046 . 1) (undo-tree-id1047 . 1) (undo-tree-id1048 . 1) (undo-tree-id1049 . 1) (undo-tree-id1050 . 1) (undo-tree-id1051 . 1) (undo-tree-id1052 . 1) (undo-tree-id1053 . 1) (undo-tree-id1054 . 1) (undo-tree-id1055 . 1)) nil (21665 42898 788182 550000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1056 . 1) (undo-tree-id1057 . 1) (undo-tree-id1058 . 1) (undo-tree-id1059 . 1) (undo-tree-id1060 . 1) (undo-tree-id1061 . 1) (undo-tree-id1062 . 1) (undo-tree-id1063 . 1) (undo-tree-id1064 . 1) (undo-tree-id1065 . 1) (undo-tree-id1066 . 1) (undo-tree-id1067 . 1) (undo-tree-id1068 . 1) (undo-tree-id1069 . 1) (undo-tree-id1070 . 1) (undo-tree-id1071 . 1) (undo-tree-id1072 . 1)) nil (21665 42898 788226 307000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1073 . 1) (undo-tree-id1074 . 1) (undo-tree-id1075 . 1) (undo-tree-id1076 . 1) (undo-tree-id1077 . 1) (undo-tree-id1078 . 1) (undo-tree-id1079 . 1) (undo-tree-id1080 . 1) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . 1) (undo-tree-id1084 . 1) (undo-tree-id1085 . 1) (undo-tree-id1086 . 1) (undo-tree-id1087 . 1) (undo-tree-id1088 . 1)) nil (21665 42898 788269 395000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1089 . 1) (undo-tree-id1090 . 1) (undo-tree-id1091 . 1) (undo-tree-id1092 . 1) (undo-tree-id1093 . 1) (undo-tree-id1094 . 1) (undo-tree-id1095 . 1) (undo-tree-id1096 . 1) (undo-tree-id1097 . 1) (undo-tree-id1098 . 1) (undo-tree-id1099 . 1) (undo-tree-id1100 . 1) (undo-tree-id1101 . 1) (undo-tree-id1102 . 1) (undo-tree-id1103 . 1)) nil (21665 42898 788309 832000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1104 . 1) (undo-tree-id1105 . 1) (undo-tree-id1106 . 1) (undo-tree-id1107 . 1) (undo-tree-id1108 . 1) (undo-tree-id1109 . 1) (undo-tree-id1110 . 1) (undo-tree-id1111 . 1) (undo-tree-id1112 . 1) (undo-tree-id1113 . 1) (undo-tree-id1114 . 1) (undo-tree-id1115 . 1) (undo-tree-id1116 . 1) (undo-tree-id1117 . 1)) nil (21665 42898 788346 505000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1118 . 1) (undo-tree-id1119 . 1) (undo-tree-id1120 . 1) (undo-tree-id1121 . 1) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1) (undo-tree-id1124 . 1) (undo-tree-id1125 . 1) (undo-tree-id1126 . 1) (undo-tree-id1127 . 1) (undo-tree-id1128 . 1) (undo-tree-id1129 . 1) (undo-tree-id1130 . 1)) nil (21665 42898 788380 655000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1131 . 1) (undo-tree-id1132 . 1) (undo-tree-id1133 . 1) (undo-tree-id1134 . 1) (undo-tree-id1135 . 1) (undo-tree-id1136 . 1) (undo-tree-id1137 . 1) (undo-tree-id1138 . 1) (undo-tree-id1139 . 1) (undo-tree-id1140 . 1) (undo-tree-id1141 . 1) (undo-tree-id1142 . 1)) nil (21665 42898 788413 547000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1143 . 1) (undo-tree-id1144 . 1) (undo-tree-id1145 . 1) (undo-tree-id1146 . 1) (undo-tree-id1147 . 1) (undo-tree-id1148 . 1) (undo-tree-id1149 . 1) (undo-tree-id1150 . 1) (undo-tree-id1151 . 1) (undo-tree-id1152 . 1) (undo-tree-id1153 . 1)) nil (21665 42898 788443 211000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1154 . 1) (undo-tree-id1155 . 1) (undo-tree-id1156 . 1) (undo-tree-id1157 . 1) (undo-tree-id1158 . 1) (undo-tree-id1159 . 1) (undo-tree-id1160 . 1) (undo-tree-id1161 . 1) (undo-tree-id1162 . 1) (undo-tree-id1163 . 1)) nil (21665 42898 788471 63000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1164 . 1) (undo-tree-id1165 . 1) (undo-tree-id1166 . 1) (undo-tree-id1167 . 1) (undo-tree-id1168 . 1) (undo-tree-id1169 . 1) (undo-tree-id1170 . 1) (undo-tree-id1171 . 1) (undo-tree-id1172 . 1)) nil (21665 42898 788496 235000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1173 . 1) (undo-tree-id1174 . 1) (undo-tree-id1175 . 1) (undo-tree-id1176 . 1) (undo-tree-id1177 . 1) (undo-tree-id1178 . 1) (undo-tree-id1179 . 1) (undo-tree-id1180 . 1)) nil (21665 42898 788520 271000) 0 nil]) ((#("x" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1181 . 1) (undo-tree-id1182 . 1) (undo-tree-id1183 . 1) (undo-tree-id1184 . 1) (undo-tree-id1185 . 1) (undo-tree-id1186 . 1) (undo-tree-id1187 . 1)) nil (21665 42898 788540 536000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1188 . 1) (undo-tree-id1189 . 1) (undo-tree-id1190 . 1) (undo-tree-id1191 . 1) (undo-tree-id1192 . 1) (undo-tree-id1193 . 1)) nil (21665 42898 788558 896000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1194 . 1) (undo-tree-id1195 . 1) (undo-tree-id1196 . 1) (undo-tree-id1197 . 1) (undo-tree-id1198 . 1)) nil (21665 42898 788575 154000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1199 . 1) (undo-tree-id1200 . 1) (undo-tree-id1201 . 1) (undo-tree-id1202 . 1)) nil (21665 42898 788590 232000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . 1570) (undo-tree-id1203 . 1) (undo-tree-id1204 . 1)) nil (21665 42898 788599 466000) 0 nil]) ((1566 . 1567)) nil (21665 42898 788604 39000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1566) (undo-tree-id1205 . 1)) nil (21665 42898 788609 988000) 0 nil]) ((1556 . 1557)) nil (21665 42898 788614 558000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1556) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1)) nil (21665 42898 788637 878000) 0 nil]) ((nil rear-nonsticky nil 1591 . 1592) (nil fontified nil 1557 . 1592) (1557 . 1592)) nil (21665 42898 788644 801000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5385) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . 1) (t 21665 18212 693915 958000)) nil (21665 42898 788656 326000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1556) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . 1)) nil (21665 18212 541055 615000) 0 nil]) ((#("\"" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 1557) (undo-tree-id873 . 1) (undo-tree-id874 . 1) (undo-tree-id875 . 1) (undo-tree-id876 . 1) (undo-tree-id877 . 1) (undo-tree-id878 . 1) (undo-tree-id879 . 1) (undo-tree-id880 . 1) (undo-tree-id881 . 1) (undo-tree-id882 . 1)) nil (21665 18212 541105 834000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1557) (undo-tree-id883 . 1) (undo-tree-id884 . 1) (undo-tree-id885 . 1) (undo-tree-id886 . 1) (undo-tree-id887 . 1) (undo-tree-id888 . 1) (undo-tree-id889 . 1) (undo-tree-id890 . 1) (undo-tree-id891 . 1)) nil (21665 18212 541184 711000) 0 nil]) ((#("\\" 0 1 (fontified t)) . 1557) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . 1) (undo-tree-id899 . 1)) nil (21665 18212 541228 833000) 0 nil]) ((#("%" 0 1 (fontified t)) . 1557) (undo-tree-id900 . 1) (undo-tree-id901 . 1) (undo-tree-id902 . 1) (undo-tree-id903 . 1) (undo-tree-id904 . 1) (undo-tree-id905 . 1) (undo-tree-id906 . 1)) nil (21665 18212 541270 105000) 0 nil]) ((#("%" 0 1 (fontified t)) . 1557) (undo-tree-id907 . 1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . 1) (undo-tree-id911 . 1) (undo-tree-id912 . 1)) nil (21665 18212 541307 282000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1557) (undo-tree-id913 . 1) (undo-tree-id914 . 1) (undo-tree-id915 . 1) (undo-tree-id916 . 1) (undo-tree-id917 . 1)) nil (21665 18212 541337 102000) 0 nil]) ((#("r" 0 1 (fontified t)) . 1557) (undo-tree-id918 . 1) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . 1)) nil (21665 18212 541362 339000) 0 nil]) ((#("e" 0 1 (fontified t)) . 1557) (undo-tree-id922 . 1) (undo-tree-id923 . 1) (undo-tree-id924 . 1)) nil (21665 18212 541382 698000) 0 nil]) ((#("h" 0 1 (fontified t)) . 1557) (undo-tree-id925 . 1) (undo-tree-id926 . 1)) nil (21665 18212 541399 592000) 0 nil]) ((#("c" 0 1 (fontified t)) . 1557) (undo-tree-id927 . 1)) nil (21665 18212 541411 471000) 0 nil]) ((#("n" 0 1 (fontified t)) . 1557)) nil (21665 18212 541418 16000) 0 nil]) ((#("u" 0 1 (fontified t)) . 1557)) nil (21665 18212 541423 872000) 0 nil]) ((#("a" 0 1 (fontified t)) . 1557)) nil (21665 18212 541429 340000) 0 nil]) ((#("l" 0 1 (fontified t)) . 1557)) nil (21665 18212 541434 531000) 0 nil]) ((#("-" 0 1 (fontified t)) . 1557)) nil (21665 18212 541439 448000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1557)) nil (21665 18212 541444 238000) 0 nil]) ((#("u" 0 1 (fontified t)) . 1557)) nil (21665 18212 541449 275000) 0 nil]) ((#("m" 0 1 (fontified t)) . 1557)) nil (21665 18212 541454 228000) 0 nil]) ((#("t" 0 1 (fontified t)) . 1557)) nil (21665 18212 541459 763000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1557)) nil (21665 18212 541465 269000) 0 nil]) ((#("\\" 0 1 (fontified t)) . 1557)) nil (21665 18212 541470 401000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1557)) nil (21665 18212 541475 384000) 0 nil]) ((#("l" 0 1 (fontified t)) . 1557)) nil (21665 18212 541480 405000) 0 nil]) ((#("l" 0 1 (fontified t)) . 1557)) nil (21665 18212 541485 607000) 0 nil]) ((#("e" 0 1 (fontified t)) . 1557)) nil (21665 18212 541490 666000) 0 nil]) ((#("h" 0 1 (fontified t)) . 1557)) nil (21665 18212 541496 38000) 0 nil]) ((#("s" 0 1 (fontified t)) . 1557)) nil (21665 18212 541501 113000) 0 nil]) ((#("-" 0 1 (fontified t)) . 1557) (undo-tree-id928 . -1)) nil (21665 18212 541513 253000) 0 nil]) ((#("n" 0 1 (fontified t)) . 1557)) nil (21665 18212 541520 199000) 0 nil]) ((#("u" 0 1 (fontified t)) . 1557)) nil (21665 18212 541523 741000) 0 nil]) ((#("r" 0 1 (fontified t)) . 1557)) nil (21665 18212 541527 450000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1557)) nil (21665 18212 541546 166000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1557)) nil (21665 18212 541550 760000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1557) (t 21665 18046 725762 362000)) nil (21665 18212 541556 136000) 0 nil]) ((1522 . 1523) (#("x" 0 1 (fontified t)) . 1522) (undo-tree-id691 . 1)) nil (21665 18046 452236 640000) 0 nil]) ((#("bind-key e  command-prompt -p \"launch what?\" \\; run-shell 
" 0 8 (fontified t face font-lock-variable-name-face) 8 30 (fontified t) 30 44 (fontified t face font-lock-string-face) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t rear-nonsticky t) 47 48 (fontified t) 48 58 (fontified t) 58 59 (fontified t)) . 1513) (undo-tree-id692 . -59) (undo-tree-id693 . 1) (undo-tree-id694 . -57) (undo-tree-id695 . -59) (undo-tree-id696 . -59) (undo-tree-id697 . 56) (undo-tree-id698 . 55) (undo-tree-id699 . 54) (undo-tree-id700 . 53) (undo-tree-id701 . 52) (undo-tree-id702 . 51) (undo-tree-id703 . 50) (undo-tree-id704 . 49) (undo-tree-id705 . 48) (undo-tree-id706 . 47) (undo-tree-id707 . 46) (undo-tree-id708 . 45) (undo-tree-id709 . 44) (undo-tree-id710 . 43) (undo-tree-id711 . 42) (undo-tree-id712 . 41) (undo-tree-id713 . 40) (undo-tree-id714 . 39) (undo-tree-id715 . 38) (undo-tree-id716 . 37) (undo-tree-id717 . 36) (undo-tree-id718 . 35) (undo-tree-id719 . 34) (undo-tree-id720 . 33) (undo-tree-id721 . 32) (undo-tree-id722 . 31) (undo-tree-id723 . 30) (undo-tree-id724 . 29) (undo-tree-id725 . 28) (undo-tree-id726 . 27) (undo-tree-id727 . 26) (undo-tree-id728 . 25) (undo-tree-id729 . 24) (undo-tree-id730 . 23) (undo-tree-id731 . 22) (undo-tree-id732 . 21) (undo-tree-id733 . 20) (undo-tree-id734 . 19) (undo-tree-id735 . 18) (undo-tree-id736 . 17) (undo-tree-id737 . 16) (undo-tree-id738 . 15) (undo-tree-id739 . 12) (undo-tree-id740 . 12) (undo-tree-id741 . 12) (undo-tree-id742 . 12) (undo-tree-id743 . -45) (undo-tree-id744 . 11) (undo-tree-id745 . -45) (undo-tree-id746 . 11) (undo-tree-id747 . -45) (undo-tree-id748 . 11) (undo-tree-id749 . -45) (undo-tree-id750 . 11) (undo-tree-id751 . -45) (undo-tree-id752 . 10) (undo-tree-id753 . -45) (undo-tree-id754 . 9) (undo-tree-id755 . -45) (undo-tree-id756 . 8) (undo-tree-id757 . -45) (undo-tree-id758 . 7) (undo-tree-id759 . -45) (undo-tree-id760 . 6) (undo-tree-id761 . -45) (undo-tree-id762 . 5) (undo-tree-id763 . -45) (undo-tree-id764 . 4) (undo-tree-id765 . -45) (undo-tree-id766 . 3) (undo-tree-id767 . -45) (undo-tree-id768 . 1) (undo-tree-id769 . -45) (undo-tree-id770 . 1) (undo-tree-id771 . -45) (undo-tree-id772 . 1) (undo-tree-id773 . -45) (undo-tree-id774 . 1) (undo-tree-id775 . -45) (undo-tree-id776 . 1) (undo-tree-id777 . -45) (undo-tree-id778 . 1) (undo-tree-id779 . -45) (undo-tree-id780 . 1) (undo-tree-id781 . -45) (undo-tree-id782 . 1) (undo-tree-id783 . -45) (undo-tree-id784 . 1) (undo-tree-id785 . -45) (undo-tree-id786 . 1) (undo-tree-id787 . -45) (undo-tree-id788 . 1) (undo-tree-id789 . -45) (undo-tree-id790 . 1) (undo-tree-id791 . -45) (undo-tree-id792 . 1) (undo-tree-id793 . -45) (undo-tree-id794 . 1) (undo-tree-id795 . -45) (undo-tree-id796 . 1) (undo-tree-id797 . -45) (undo-tree-id798 . 1) (undo-tree-id799 . -45) (undo-tree-id800 . 1) (undo-tree-id801 . -45) (undo-tree-id802 . 1) (undo-tree-id803 . -45) (undo-tree-id804 . 1) (undo-tree-id805 . -45) (undo-tree-id806 . 1) (undo-tree-id807 . -45) (undo-tree-id808 . 1) (undo-tree-id809 . -45) (undo-tree-id810 . 1) (undo-tree-id811 . -45) (undo-tree-id812 . 1) (undo-tree-id813 . -45) (undo-tree-id814 . 1) (undo-tree-id815 . -45) (undo-tree-id816 . 1) (undo-tree-id817 . -45) (undo-tree-id818 . 1) (undo-tree-id819 . -45) (undo-tree-id820 . 1) (undo-tree-id821 . -45) (undo-tree-id822 . 1) (undo-tree-id823 . -45) (undo-tree-id824 . 1) (undo-tree-id825 . -45) (undo-tree-id826 . 1) (undo-tree-id827 . -45) (undo-tree-id828 . 1) (undo-tree-id829 . -45) (undo-tree-id830 . 1) (undo-tree-id831 . -45) (undo-tree-id832 . 1) (undo-tree-id833 . -45) (undo-tree-id834 . 1) (undo-tree-id835 . -45) (undo-tree-id836 . 1) (undo-tree-id837 . -45) (undo-tree-id838 . 1) (undo-tree-id839 . -45) (undo-tree-id840 . 1) (undo-tree-id841 . -45) (undo-tree-id842 . 1) (undo-tree-id843 . -45) (undo-tree-id844 . 1) (undo-tree-id845 . -45) (undo-tree-id846 . 1) (undo-tree-id847 . -45) (undo-tree-id848 . 1) (undo-tree-id849 . -45) (undo-tree-id850 . 1) (undo-tree-id851 . -45) (undo-tree-id852 . 1) (undo-tree-id853 . -45) (undo-tree-id854 . 1) (undo-tree-id855 . -45) (undo-tree-id856 . 2) (undo-tree-id857 . -45) (undo-tree-id858 . 2) (undo-tree-id859 . -45) (undo-tree-id860 . 2) (undo-tree-id861 . -45) (undo-tree-id862 . -45) (undo-tree-id863 . -45) (undo-tree-id864 . -59) (undo-tree-id865 . -59) (undo-tree-id866 . 2) (undo-tree-id867 . -59) (undo-tree-id868 . 2) (undo-tree-id869 . -59) 1570) nil (21665 18046 452662 882000) 0 nil]) ((nil rear-nonsticky nil 1649 . 1650) (nil fontified nil 1572 . 1650) (1572 . 1650) (t 21665 18018 68838 954000)) nil (21665 18046 452701 565000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1571)) nil (21665 18017 979861 883000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1572) (undo-tree-id652 . 1) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . 1) (undo-tree-id656 . 1) (undo-tree-id657 . 1)) nil (21665 18017 979905 935000) 0 nil]) ((#("t" 0 1 (fontified t)) . -1573) (undo-tree-id658 . 1)) nil (21665 18017 979925 259000) 0 nil]) ((#("m" 0 1 (fontified t)) . -1574) (undo-tree-id659 . 1)) nil (21665 18017 979933 10000) 0 nil]) ((#("u" 0 1 (fontified t)) . -1575) (undo-tree-id660 . 1)) nil (21665 18017 979939 885000) 0 nil]) ((#("x" 0 1 (fontified t)) . -1576) (undo-tree-id661 . 1)) nil (21665 18017 979948 525000) 0 nil]) ((#("-" 0 1 (fontified t)) . -1577) (undo-tree-id662 . 1)) nil (21665 18017 979959 720000) 0 nil]) ((#("l" 0 1 (fontified t)) . -1578) (undo-tree-id663 . 1)) nil (21665 18017 979974 471000) 0 nil]) ((#("a" 0 1 (fontified t)) . -1579) (undo-tree-id664 . 1)) nil (21665 18017 979985 486000) 0 nil]) ((#("u" 0 1 (fontified t)) . -1580) (undo-tree-id665 . 1)) nil (21665 18017 979996 832000) 0 nil]) ((#("n" 0 1 (fontified t)) . -1581) (undo-tree-id666 . 1)) nil (21665 18017 980009 832000) 0 nil]) ((#("c" 0 1 (fontified t)) . -1582) (undo-tree-id667 . 1)) nil (21665 18017 980018 835000) 0 nil]) ((#("h" 0 1 (fontified t)) . -1583) (undo-tree-id668 . 1)) nil (21665 18017 980029 436000) 0 nil]) ((#("e" 0 1 (fontified t)) . -1584) (undo-tree-id669 . 1)) nil (21665 18017 980040 481000) 0 nil]) ((#("r" 0 1 (fontified t)) . -1585) (undo-tree-id670 . 1)) nil (21665 18017 980053 551000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1586) (undo-tree-id671 . 1)) nil (21665 18017 980061 517000) 0 nil]) ((#("%" 0 1 (fontified t)) . -1587) (undo-tree-id672 . 1)) nil (21665 18017 980068 427000) 0 nil]) ((#("%" 0 1 (fontified t)) . -1588) (undo-tree-id673 . 1)) nil (21665 18017 980075 679000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1589) (undo-tree-id674 . 1) (undo-tree-id675 . 1)) nil (21665 18017 980084 531000) 0 nil]) ((#("\\" 0 1 (fontified t)) . 1589) (undo-tree-id676 . 1)) nil (21665 18017 980091 334000) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 1572) (undo-tree-id677 . 1) (undo-tree-id678 . 1) (undo-tree-id679 . 1) (undo-tree-id680 . 1) (undo-tree-id681 . 1)) nil (21665 18017 980109 210000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 1572) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . 1) (undo-tree-id685 . 1)) nil (21665 18017 980124 46000) 0 nil]) ((1570 . 1572)) nil (21665 18017 980130 992000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1561) (undo-tree-id686 . 1) (undo-tree-id687 . 1)) nil (21665 18017 980145 437000) 0 nil]) ((nil rear-nonsticky nil 1559 . 1560) (nil fontified nil 1558 . 1560) (1558 . 1560)) nil (21665 18017 980152 456000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1558) (undo-tree-id688 . 1) (undo-tree-id689 . 1)) nil (21665 18017 980161 674000) 0 nil]) ((#(";" 0 1 (fontified t)) . 1558) (undo-tree-id690 . 1)) nil (21665 18017 980185 86000) 0 nil]) ((#("v" 0 1 (fontified t)) . -2752)) nil (21665 18017 980189 531000) 0 nil]) ((2752 . 2753)) nil (21665 18017 980193 217000) 0 nil]) ((1558 . 1559) (t 21665 17964 785028 244000)) nil (21665 18017 980197 113000) 0 nil]) ((#("\"" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 1591) (undo-tree-id651 . 1) (t 21665 17911 807886 948000)) nil (21665 17964 641104 46000) 0 nil]) ((1522 . 1523)) nil (21665 17911 714326 697000) 0 nil]) ((#("C" 0 1 (fontified t)) . -1522) (undo-tree-id620 . 1)) nil (21665 17911 714341 906000) 0 nil]) ((#("-" 0 1 (fontified t)) . -1523) (undo-tree-id621 . 1)) nil (21665 17911 714348 577000) 0 nil]) ((#("b" 0 1 (fontified t)) . -1524) (undo-tree-id622 . 1)) nil (21665 17911 714354 230000) 0 nil]) ((3629 . 3630)) nil (21665 17911 714357 387000) 0 nil]) ((3574 . 3575)) nil (21665 17911 714359 653000) 0 nil]) ((1522 . 1526)) nil (21665 17911 714361 889000) 0 nil]) ((#("x" 0 1 (fontified t)) . -1522)) nil (21665 17911 714364 18000) 0 nil]) ((nil rear-nonsticky nil 1590 . 1591) (nil fontified nil 1513 . 1591) (1513 . 1591)) nil (21665 17911 714367 529000) 0 nil]) ((1512 . 1513)) nil (21665 17911 714371 117000) 0 nil]) ((1507 . 1512)) nil (21665 17911 714373 404000) 0 nil]) ((1506 . 1510)) nil (21665 17911 714375 619000) 0 nil]) ((#("#bind-key w command-prompt \"tmux-launcher %%\"
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 46 (fontified t face font-lock-comment-face)) . 3468) (undo-tree-id623 . 46) (undo-tree-id624 . -46) (undo-tree-id625 . -46)) nil (21665 17911 714384 816000) 0 nil]) ((#("bind-key w command-prompt -p \"launch what?\"  \"tmux-launcher %%\"
" 0 8 (fontified t face font-lock-variable-name-face) 8 29 (fontified t) 29 43 (fontified t face font-lock-string-face) 43 45 (fontified t) 45 63 (fontified t face font-lock-string-face) 63 64 (fontified t)) . 3468) (undo-tree-id626 . 64) (undo-tree-id627 . -64) (undo-tree-id628 . -64)) nil (21665 17911 714394 551000) 0 nil]) ((#("#bind-key w command-prompt -p \"launch what?\" \" \"run-shell \\\"/home/zeltak/bin/tmux-launcher/tmux-launcher %%\\\"\"
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 111 (fontified t face font-lock-comment-face)) . 3468) (undo-tree-id629 . 111) (undo-tree-id630 . -111) (undo-tree-id631 . -111)) nil (21665 17911 714404 342000) 0 nil]) ((#("V" 0 1 (fontified t)) . -3468) (undo-tree-id632 . -1)) nil (21665 17911 714410 256000) 0 nil]) ((3468 . 3469)) nil (21665 17911 714413 366000) 0 nil]) ((1364 . 1368)) nil (21665 17911 714416 393000) 0 nil]) ((#("bind-key  command-prompt -p \"launch what?\"  \"run-shell \\\"tmux-launcher %%\\\"
" 0 8 (fontified t face font-lock-variable-name-face) 8 28 (fontified t) 28 42 (fontified t face font-lock-string-face) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t face font-lock-string-face) 45 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face)) . -1887) (undo-tree-id633 . 67) (undo-tree-id634 . -75) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (undo-tree-id637 . 1) (undo-tree-id638 . -76) (undo-tree-id639 . -76) (undo-tree-id640 . -75)) nil (21665 17911 714438 420000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1896)) nil (21665 17911 714442 642000) 0 nil]) ((#("\"" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . -1963)) nil (21665 17911 714445 631000) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1931)) nil (21665 17911 714448 334000) 0 nil]) ((nil rear-nonsticky nil 1964 . 1965) (nil fontified nil 1887 . 1965) (1887 . 1965)) nil (21665 17911 714452 213000) 0 nil]) ((#("bind-key x command-prompt -p \"launch what?\" \" \"run-shell \\\"tmux-launcher %%\\\"\"
" 0 8 (fontified t face font-lock-variable-name-face) 8 29 (fontified t) 29 30 (fontified t face font-lock-string-face) 30 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 77 (fontified t) 77 78 (fontified t rear-nonsticky t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face)) . 1887) (undo-tree-id641 . 79) (undo-tree-id642 . 70) (undo-tree-id643 . 70) (undo-tree-id644 . 70) (undo-tree-id645 . -9) (undo-tree-id646 . -79) (undo-tree-id647 . -79)) nil (21665 17911 714470 713000) 0 nil]) ((#("bind-key C-m  command-prompt -p \"launch what?\" \" \"run-shell \\\"tmux-launcher %%\\\"\"
" 0 8 (fontified t face font-lock-variable-name-face) 8 12 (fontified t) 12 13 (fontified t) 13 32 (fontified t) 32 46 (fontified t face font-lock-string-face) 46 47 (fontified t) 47 50 (fontified t face font-lock-string-face) 50 80 (fontified t) 80 81 (fontified t rear-nonsticky t face font-lock-string-face) 81 82 (fontified t face font-lock-string-face)) . 1887) (undo-tree-id648 . -82) (undo-tree-id649 . 82) (undo-tree-id650 . -11)) nil (21665 17911 714480 746000) 0 nil]) ((2048 . 2050)) nil (21665 17911 714484 47000) 0 nil]) ((nil rear-nonsticky nil 2046 . 2047) (nil fontified nil 1969 . 2047) (1969 . 2047) (t 21664 23378 644330 796000)) nil (21665 17911 714488 57000) 0 nil]) ((1895 . 1899)) nil (21664 23378 510072 568000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1895)) nil (21664 23378 510081 629000) 0 nil]) ((1895 . 1896)) nil (21664 23378 510086 789000) 0 nil]) ((#("m" 0 1 (fontified t)) . -1896) (t 21664 23091 548111 194000)) nil (21664 23378 510091 815000) 0 nil]) ((1896 . 1897)) nil (21664 23091 284044 762000) 0 nil]) ((#("x" 0 1 (fontified t)) . -1896) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (undo-tree-id619 . 1)) nil (21664 23091 284062 304000) 0 nil] [nil nil ((1896 . 1897) (#("x" 0 1 (fontified t)) . 1896) (undo-tree-id575 . 1)) ((1896 . 1897) (#("0" 0 1 (fontified t)) . 1896) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . 1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (t 21664 23045 244293 723000)) (21664 23045 80748 112000) 0 nil]) ((nil rear-nonsticky nil 1964 . 1965) (1887 . 1965)) ((#("bind-key x command-prompt -p \"launch what?\" \" \"run-shell \\\"tmux-launcher %%\\\"\"" 0 8 (fontified nil face font-lock-variable-name-face) 8 9 (fontified nil) 9 10 (fontified nil) 10 29 (fontified nil) 29 43 (fontified nil face font-lock-string-face) 43 44 (fontified nil) 44 47 (fontified nil face font-lock-string-face) 47 77 (fontified nil) 77 78 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 1887) (undo-tree-id587 . 68) (undo-tree-id588 . -9) (undo-tree-id589 . -78) (undo-tree-id590 . 1) (undo-tree-id591 . 2) (undo-tree-id592 . 78) (undo-tree-id593 . 77) (undo-tree-id594 . 76) (undo-tree-id595 . 75) (undo-tree-id596 . 74) (undo-tree-id597 . 73) (undo-tree-id598 . 72) (undo-tree-id599 . 71) (undo-tree-id600 . 70) (undo-tree-id601 . 69) (undo-tree-id602 . 68) (undo-tree-id603 . 68) (undo-tree-id604 . 68) (undo-tree-id605 . 68) (undo-tree-id606 . 68) (undo-tree-id607 . 68) (undo-tree-id608 . 68) (undo-tree-id609 . 68) (undo-tree-id610 . 68) (undo-tree-id611 . 68) (undo-tree-id612 . 70) (undo-tree-id613 . 70) (undo-tree-id614 . 69) (nil rear-nonsticky t 1964 . 1965)) (21664 23073 266575 653000) 0 nil] [nil nil ((nil rear-nonsticky nil 1913 . 1914) (nil fontified nil 1887 . 1914) (1887 . 1914)) ((#("      clerk --insert track
" 0 6 (fontified nil) 6 11 (fontified nil face font-lock-variable-name-face) 11 26 (fontified nil) 26 27 (fontified nil rear-nonsticky nil)) . 1887) (nil rear-nonsticky t 1913 . 1914)) (21664 23026 576758 817000) 0 nil] [nil nil ((nil rear-nonsticky nil 1965 . 1966) (nil fontified nil 1887 . 1966) (1887 . 1966)) ((#("bind-key x command-prompt -p \"launch what?\" \" \"run-shell \\\"tmux-launcher %%\\\"\"
" 0 8 (fontified nil face font-lock-variable-name-face) 8 29 (fontified nil) 29 43 (fontified nil face font-lock-string-face) 43 44 (fontified nil) 44 47 (fontified nil face font-lock-string-face) 47 77 (fontified nil) 77 78 (fontified nil face font-lock-string-face) 78 79 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 1887) (undo-tree-id574 . -79) (nil rear-nonsticky t 1965 . 1966) (t 21664 23001 417162 776000)) (21664 23001 202239 55000) 0 nil] [nil nil ((nil rear-nonsticky nil 1913 . 1914) (nil fontified nil 1887 . 1914) (1887 . 1914)) ((#("      clerk --insert track
" 0 6 (fontified nil) 6 11 (fontified nil face font-lock-variable-name-face) 11 26 (fontified nil) 26 27 (fontified nil rear-nonsticky nil)) . 1887) (nil rear-nonsticky t 1913 . 1914)) (21664 22995 364018 245000) 0 nil]) ((1887 . 1889)) nil (21664 23069 783948 44000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1363) (undo-tree-id537 . -1)) nil (21664 22995 364036 809000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1363)) nil (21664 22995 364040 127000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1363)) nil (21664 22995 364042 713000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1363)) nil (21664 22995 364047 503000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2041) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1)) nil (21664 22995 364060 255000) 0 nil]) ((#("bind-key -n M-Right next-window
" 0 8 (fontified t face font-lock-variable-name-face) 8 31 (fontified t) 31 32 (rear-nonsticky t fontified t)) . 2041) (undo-tree-id542 . -31)) nil (21664 22995 364066 379000) 0 nil]) ((#("bind-key -n M-Left previous-window
" 0 8 (fontified t face font-lock-variable-name-face) 8 35 (fontified t)) . 2041)) nil (21664 22995 364069 767000) 0 nil]) ((#("#bind -n f11 select-pane -t :.+
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-face) 5 32 (fontified t face font-lock-comment-face)) . 2109) (undo-tree-id543 . 32)) nil (21664 22995 364074 880000) 0 nil]) ((#("V" 0 1 (fontified t)) . -2109)) nil (21664 22995 364077 851000) 0 nil]) ((2109 . 2110)) nil (21664 22995 364080 611000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2109)) nil (21664 22995 364082 936000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2109)) nil (21664 22995 364086 539000) 0 nil]) ((2108 . 2111)) nil (21664 22995 364089 109000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2000) (undo-tree-id544 . -1)) nil (21664 22995 364093 957000) 0 nil]) ((nil rear-nonsticky nil 2000 . 2001) (nil fontified nil 2000 . 2001) (#("
" 0 1 (fontified nil)) . -2108) (2000 . 2109)) nil (21664 22995 364098 458000) 0 nil]) ((#("#windows
#move between windows (Alt key)
bind-key -n M-Left previous-window
bind-key -n M-Right next-window
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-delimiter-face) 10 41 (fontified t face font-lock-comment-face) 41 49 (fontified t face font-lock-variable-name-face) 49 76 (fontified t) 76 84 (fontified t face font-lock-variable-name-face) 84 108 (fontified t)) . 2827) (undo-tree-id545 . -76) (undo-tree-id546 . -76) (undo-tree-id547 . -76) 2903) nil (21664 22995 364109 297000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2353) (undo-tree-id548 . 1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1)) nil (21664 22995 364121 437000) 0 nil]) ((nil rear-nonsticky nil 1506 . 1507) (nil fontified nil 1506 . 1507) (#("
" 0 1 (fontified nil)) . -1823) (1506 . 1824)) nil (21664 22995 364126 268000) 0 nil]) ((#("#to still use F keys (use with prefix first so C-a F1 etc)
bind F1 send-keys F1
bind F2 send-keys F2
bind F3 send-keys F3
bind F4 send-keys F4
bind F5 send-keys F5
bind F6 send-keys F6
bind F7 send-keys F7
bind F8 send-keys F8
bind F9 send-keys F9
bind F10 send-keys F10
bind F11 send-keys F11
bind F12 send-keys F12
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 59 (fontified t face font-lock-comment-face) 59 63 (fontified t face font-lock-variable-name-face) 63 80 (fontified t) 80 84 (fontified t face font-lock-variable-name-face) 84 101 (fontified t) 101 105 (fontified t face font-lock-variable-name-face) 105 122 (fontified t) 122 126 (fontified t face font-lock-variable-name-face) 126 143 (fontified t) 143 147 (fontified t face font-lock-variable-name-face) 147 164 (fontified t) 164 168 (fontified t face font-lock-variable-name-face) 168 185 (fontified t) 185 189 (fontified t face font-lock-variable-name-face) 189 206 (fontified t) 206 210 (fontified t face font-lock-variable-name-face) 210 227 (fontified t) 227 231 (fontified t face font-lock-variable-name-face) 231 248 (fontified t) 248 252 (fontified t face font-lock-variable-name-face) 252 271 (fontified t) 271 275 (fontified t face font-lock-variable-name-face) 275 294 (fontified t) 294 298 (fontified t face font-lock-variable-name-face) 298 317 (fontified t)) . 2037) (undo-tree-id552 . -294) (undo-tree-id553 . -294) (undo-tree-id554 . -294) 2331) nil (21664 22995 364137 982000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2036) (undo-tree-id555 . -1) (undo-tree-id556 . -1)) nil (21664 22995 364146 137000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2037) (undo-tree-id557 . -1) (undo-tree-id558 . 1) (undo-tree-id559 . -1)) nil (21664 22995 364155 203000) 0 nil]) ((#("#  (The way I use it, C-a C-a is good for most of my window switching needs)
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 77 (fontified t face font-lock-comment-face)) . 2037) (undo-tree-id560 . 77)) nil (21664 22995 364160 801000) 0 nil]) ((#("dd# Cycle through windows, or panes.   I prefer using it for panes
" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 67 (fontified t face font-lock-comment-face)) . 2037) (undo-tree-id561 . 65) 2038) nil (21664 22995 364166 768000) 0 nil]) ((2037 . 2039)) nil (21664 22995 364169 734000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1859) (undo-tree-id562 . 1)) nil (21664 22995 364174 420000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1859) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1)) nil (21664 22995 364184 997000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1859)) nil (21664 22995 364188 172000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1859)) nil (21664 22995 364190 621000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1859)) nil (21664 22995 364192 948000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1859)) nil (21664 22995 364195 907000) 0 nil]) ((1506 . 1508)) nil (21664 22995 364198 473000) 0 nil]) ((nil rear-nonsticky nil 1397 . 1398) (nil fontified nil 1397 . 1398) (#("
" 0 1 (fontified nil)) . -1505) (1397 . 1506)) nil (21664 22995 364202 240000) 0 nil]) ((#("#change the default control-b to the screenlike control-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 58 (fontified t face font-lock-comment-face) 58 61 (fontified t face font-lock-variable-name-face) 61 76 (fontified t) 76 82 (fontified t face font-lock-variable-name-face) 82 87 (fontified t) 87 91 (fontified t face font-lock-variable-name-face) 91 108 (fontified t)) . 1754) (undo-tree-id566 . -87) (undo-tree-id567 . -87) (undo-tree-id568 . -87) 1841) nil (21664 22995 364215 227000) 0 nil]) ((nil rear-nonsticky nil 1573 . 1574) (nil fontified nil 1573 . 1574) (#("
" 0 1 (fontified nil)) . -1659) (1573 . 1660)) nil (21664 22995 364219 968000) 0 nil]) ((#("#bind -n f11 select-pane -t :.+
bind -n f1 previous-window  
bind -n f2 next-window  
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-face) 5 32 (fontified t face font-lock-comment-face) 32 36 (fontified t face font-lock-variable-name-face) 36 61 (fontified t) 61 65 (fontified t face font-lock-variable-name-face) 65 86 (fontified t)) . 2098) (undo-tree-id569 . -61) (undo-tree-id570 . -33) (undo-tree-id571 . -33) (undo-tree-id572 . -61) (undo-tree-id573 . -61) 2159) nil (21664 22995 364237 154000) 0 nil]) ((1573 . 1575) (t 21662 48131 42417 942000)) nil (21664 22995 364241 758000) 0 nil]) ((1591 . 1592) (#("8c" 0 2 (fontified nil face font-lock-comment-face)) . 1591) (1575 . 1591) 1577) nil (21662 48130 945732 989000) 0 nil]) ((1575 . 1577)) nil (21662 48130 945745 661000) 0 nil]) ((#("9" 0 1 (fontified t face font-lock-comment-face)) . -1575)) nil (21662 48130 945750 515000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1576)) nil (21662 48130 945754 804000) 0 nil]) ((1575 . 1577)) nil (21662 48130 945759 370000) 0 nil]) ((1573 . 1574)) nil (21662 48130 945763 647000) 0 nil]) ((1462 . 1463)) nil (21662 48130 945767 754000) 0 nil]) ((1480 . 1481) (#("8c" 0 2 (fontified nil face font-lock-comment-face)) . 1480) (1464 . 1480) 1466) nil (21662 48130 945773 772000) 0 nil]) ((1465 . 1466)) nil (21662 48130 945779 699000) 0 nil]) ((#("x" 0 1 (fontified t face font-lock-comment-face)) . -1465)) nil (21662 48130 945783 377000) 0 nil]) ((1464 . 1466)) nil (21662 48130 945787 639000) 0 nil]) ((1468 . 1476)) nil (21662 48130 945791 586000) 0 nil]) ((nil rear-nonsticky nil 1469 . 1470) (nil fontified nil 1469 . 1470) (#("
" 0 1 (fontified nil)) . -1546) (1469 . 1547)) nil (21662 48130 945797 745000) 0 nil]) ((1469 . 1470)) nil (21662 48130 945803 483000) 0 nil]) ((#("#make ctrl-a ctrl s work like alt-tab (last window)
bind-key C-a last-window
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 52 (fontified t face font-lock-comment-face) 52 60 (fontified t face font-lock-variable-name-face) 60 77 (fontified t)) . 1830) (undo-tree-id494 . -52) (undo-tree-id495 . 77) (undo-tree-id496 . -52) (undo-tree-id497 . -77) (undo-tree-id498 . -52) (undo-tree-id499 . 25) 1882) nil (21662 48130 945838 753000) 0 nil]) ((#("V" 0 1 (fontified t)) . -1830)) nil (21662 48130 945846 92000) 0 nil]) ((1830 . 1831)) nil (21662 48130 945850 144000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1499)) nil (21662 48130 945853 762000) 0 nil]) ((1499 . 1500)) nil (21662 48130 945857 994000) 0 nil]) ((1537 . 1538)) nil (21662 48130 945862 169000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -1537)) nil (21662 48130 945866 108000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -1538)) nil (21662 48130 945870 456000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1539)) nil (21662 48130 945874 938000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1540)) nil (21662 48130 945879 824000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1541)) nil (21662 48130 945884 600000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -1542)) nil (21662 48130 945888 963000) 0 nil]) ((1537 . 1543)) nil (21662 48130 945893 691000) 0 nil]) ((1533 . 1537)) nil (21662 48130 945897 913000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-face)) . -1533)) nil (21662 48130 945901 970000) 0 nil]) ((1533 . 1534)) nil (21662 48130 945906 9000) 0 nil]) ((1529 . 1533)) nil (21662 48130 945910 116000) 0 nil]) ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . -1530) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (undo-tree-id516 . 1) (1529 . 1530)) nil (21662 48130 945985 139000) 0 nil]) ((1527 . 1529)) nil (21662 48130 945995 257000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -1527)) nil (21662 48130 946021 896000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -1528)) nil (21662 48130 946028 784000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -1529)) nil (21662 48130 946034 106000) 0 nil]) ((1524 . 1530)) nil (21662 48130 946039 47000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1524)) nil (21662 48130 946043 242000) 0 nil]) ((1522 . 1525)) nil (21662 48130 946048 231000) 0 nil]) ((1518 . 1519)) nil (21662 48130 946052 375000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1518)) nil (21662 48130 946056 382000) 0 nil]) ((1518 . 1519)) nil (21662 48130 946060 920000) 0 nil]) ((1518 . 1522)) nil (21662 48130 946065 137000) 0 nil]) ((1503 . 1518)) nil (21662 48130 946069 396000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1503)) nil (21662 48130 946073 543000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -1504)) nil (21662 48130 946078 59000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1505)) nil (21662 48130 946082 421000) 0 nil]) ((1501 . 1506)) nil (21662 48130 946088 265000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1501)) nil (21662 48130 946092 414000) 0 nil]) ((#("h" 0 1 (fontified t face font-lock-comment-face)) . -1502)) nil (21662 48130 946097 428000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -1503)) nil (21662 48130 946102 54000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -1504)) nil (21662 48130 946106 739000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1505)) nil (21662 48130 946111 467000) 0 nil]) ((1500 . 1506)) nil (21662 48130 946117 30000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1500)) nil (21662 48130 946121 465000) 0 nil]) ((1500 . 1501)) nil (21662 48130 946126 369000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1499) (undo-tree-id517 . 1)) nil (21662 48130 946137 632000) 0 nil]) ((1499 . 1500)) nil (21662 48130 946143 809000) 0 nil]) ((#("1" 0 1 (fontified t face font-lock-comment-face)) . -1500)) nil (21662 48130 946148 43000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-comment-face)) . -1501)) nil (21662 48130 946152 739000) 0 nil]) ((1499 . 1502)) nil (21662 48130 946157 420000) 0 nil]) ((1483 . 1485)) nil (21662 48130 946161 952000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-comment-face)) . -1482)) nil (21662 48130 946166 102000) 0 nil]) ((1482 . 1483)) nil (21662 48130 946171 194000) 0 nil]) ((1476 . 1477)) nil (21662 48130 946175 536000) 0 nil]) ((1483 . 1488)) nil (21662 48130 946180 603000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1482) (undo-tree-id518 . 1) (undo-tree-id519 . 1)) nil (21662 48130 946195 804000) 0 nil]) ((1482 . 1491)) nil (21662 48130 946202 269000) 0 nil]) ((1474 . 1482)) nil (21662 48130 946206 917000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1474)) nil (21662 48130 946211 149000) 0 nil]) ((1474 . 1475)) nil (21662 48130 946215 815000) 0 nil]) ((#("# F3 
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face)) . 1475) (undo-tree-id520 . -5) (undo-tree-id521 . 1) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . 1) (undo-tree-id529 . -5) (undo-tree-id530 . 2) (undo-tree-id531 . -5) (undo-tree-id532 . 2) (undo-tree-id533 . -5) (undo-tree-id534 . 2) (undo-tree-id535 . -5) 1479) nil (21662 48130 946310 8000) 0 nil]) ((1472 . 1474)) nil (21662 48130 946321 318000) 0 nil]) ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1472)) nil (21662 48130 946325 287000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1473)) nil (21662 48130 946329 502000) 0 nil]) ((1467 . 1468)) nil (21662 48130 946333 804000) 0 nil]) ((1466 . 1467)) nil (21662 48130 946338 162000) 0 nil]) ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1466)) nil (21662 48130 946342 647000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1467)) nil (21662 48130 946347 443000) 0 nil]) ((1460 . 1462)) nil (21662 48130 946352 349000) 0 nil]) ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1460)) nil (21662 48130 946356 731000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1461)) nil (21662 48130 946362 149000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1457)) nil (21662 48130 946366 890000) 0 nil]) ((nil rear-nonsticky nil 1475 . 1476) (nil fontified nil 1475 . 1476) (nil fontified nil 1474 . 1475) (nil fontified nil 1472 . 1474) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1481) (1475 . 1482) 1470) nil (21662 48130 946377 266000) 0 nil]) ((nil rear-nonsticky nil 1469 . 1470) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1466 . 1468) (nil fontified nil 1465 . 1466) (nil fontified nil 1464 . 1465) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1475) (1469 . 1476) 1464) nil (21662 48130 946391 143000) 0 nil]) ((nil rear-nonsticky nil 1463 . 1464) (nil fontified nil 1463 . 1464) (nil fontified nil 1462 . 1463) (nil fontified nil 1460 . 1462) (nil fontified nil 1459 . 1460) (nil fontified nil 1458 . 1459) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1469) (1463 . 1470) 1458) nil (21662 48130 946405 19000) 0 nil]) ((nil rear-nonsticky nil 1457 . 1458) (nil fontified nil 1457 . 1458) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1463) (1457 . 1464)) nil (21662 48130 946414 225000) 0 nil]) ((1454 . 1455) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1454)) nil (21662 48130 946420 993000) 0 nil]) ((1448 . 1449) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1448)) nil (21662 48130 946427 115000) 0 nil]) ((1442 . 1443) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1442)) nil (21662 48130 946433 354000) 0 nil]) ((1436 . 1437) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1436)) nil (21662 48130 946439 425000) 0 nil]) ((1430 . 1431) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1430)) nil (21662 48130 946445 426000) 0 nil]) ((1424 . 1425) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1424)) nil (21662 48130 946451 277000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1421) (undo-tree-id536 . -1)) nil (21662 48130 946462 866000) 0 nil]) ((nil rear-nonsticky nil 1421 . 1422) (nil fontified nil 1421 . 1422) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1457) (1421 . 1458)) nil (21662 48130 946471 70000) 0 nil] [nil nil ((nil rear-nonsticky nil 1444 . 1445) (nil fontified nil 1441 . 1445) (1441 . 1445) (nil rear-nonsticky nil 1440 . 1441) (nil fontified nil 1437 . 1441) (1437 . 1441) (nil rear-nonsticky nil 1436 . 1437) (nil fontified nil 1433 . 1437) (1433 . 1437) (nil rear-nonsticky nil 1432 . 1433) (nil fontified nil 1429 . 1433) (1429 . 1433) (nil rear-nonsticky nil 1428 . 1429) (nil fontified nil 1425 . 1429) (1425 . 1429) (nil rear-nonsticky nil 1424 . 1425) (nil fontified nil 1421 . 1425) (1421 . 1425)) ((#("# F3" 0 2 (fontified nil face font-lock-comment-delimiter-face) 2 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1421) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (nil rear-nonsticky t 1424 . 1425) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1425) (undo-tree-id462 . 2) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . 1) (undo-tree-id466 . 2) (undo-tree-id467 . 3) (undo-tree-id468 . 3) (nil rear-nonsticky t 1428 . 1429) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1429) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . 1) (undo-tree-id472 . 2) (undo-tree-id473 . 3) (undo-tree-id474 . 4) (nil rear-nonsticky t 1432 . 1433) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1433) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . 1) (undo-tree-id478 . 2) (undo-tree-id479 . 3) (undo-tree-id480 . 4) (nil rear-nonsticky t 1436 . 1437) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1437) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . 1) (undo-tree-id484 . 2) (undo-tree-id485 . 3) (undo-tree-id486 . 4) (nil rear-nonsticky t 1440 . 1441) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1441) (undo-tree-id487 . -3) (undo-tree-id488 . -4) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 2) (undo-tree-id492 . 3) (undo-tree-id493 . 4) (nil rear-nonsticky t 1444 . 1445)) (21662 47902 726609 654000) 0 nil]) ((1420 . 1421) 1415) nil (21662 47902 728239 756000) 0 nil]) ((#("n" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 1420) (undo-tree-id42 . -1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1)) nil (21662 47902 726664 270000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id56 . -1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1)) nil (21662 47902 726688 416000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1)) nil (21662 47902 726720 908000) 0 nil]) ((#("M" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1)) nil (21662 47902 726738 823000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 1)) nil (21662 47902 726754 258000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1) (undo-tree-id91 . 1)) nil (21662 47902 726771 293000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id92 . 1) (undo-tree-id93 . 1) (undo-tree-id94 . 1) (undo-tree-id95 . 1)) nil (21662 47902 726783 549000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id96 . 1) (undo-tree-id97 . 1) (undo-tree-id98 . 1)) nil (21662 47902 726800 142000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id99 . 1) (undo-tree-id100 . 1)) nil (21662 47902 726807 967000) 0 nil]) ((#("E" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id101 . 1)) nil (21662 47902 726813 633000) 0 nil]) ((#("E" 0 1 (fontified t face font-lock-comment-face)) . -1414) (undo-tree-id102 . -1)) nil (21662 47902 726819 68000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-comment-face)) . -1415) (undo-tree-id103 . -1)) nil (21662 47902 726824 687000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -1416) (undo-tree-id104 . -1)) nil (21662 47902 726830 193000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1417) (undo-tree-id105 . -1)) nil (21662 47902 726835 634000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -1418) (undo-tree-id106 . -1)) nil (21662 47902 726841 52000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1419) (undo-tree-id107 . -1) (undo-tree-id108 . 1)) nil (21662 47902 726849 497000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-comment-face)) . -1420) (undo-tree-id109 . -1) (undo-tree-id110 . 1)) nil (21662 47902 726857 375000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1421) (undo-tree-id111 . -1) (undo-tree-id112 . 1)) nil (21662 47902 726866 845000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -1422) (undo-tree-id113 . -1) (undo-tree-id114 . 1)) nil (21662 47902 726874 594000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1423) (undo-tree-id115 . -1) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1)) nil (21662 47902 726885 546000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1424) (undo-tree-id119 . -1) (undo-tree-id120 . 1)) nil (21662 47902 726893 77000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -1425) (undo-tree-id121 . -1) (undo-tree-id122 . 1)) nil (21662 47902 726902 47000) 0 nil]) ((#("s" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . -1426) (undo-tree-id123 . 1)) nil (21662 47902 726907 732000) 0 nil]) ((1403 . 1408)) nil (21662 47902 726911 298000) 0 nil]) ((#("h" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face)) . 1403) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . 1) (undo-tree-id134 . 1) (undo-tree-id135 . 1) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . 1) (undo-tree-id149 . 1) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . 1) (undo-tree-id154 . 1)) nil (21662 47902 726980 672000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id155 . 1) (undo-tree-id156 . 1) (undo-tree-id157 . 1) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . 1) (undo-tree-id163 . 1) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (undo-tree-id169 . 1) (undo-tree-id170 . 1) (undo-tree-id171 . 1) (undo-tree-id172 . 1) (undo-tree-id173 . 1) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (undo-tree-id176 . 1) (undo-tree-id177 . 1) (undo-tree-id178 . 1) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (undo-tree-id182 . 1) (undo-tree-id183 . 1) (undo-tree-id184 . 1)) nil (21662 47902 727056 556000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1)) nil (21662 47902 727117 457000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . 1) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1)) nil (21662 47902 727177 107000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . 1) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1)) nil (21662 47902 727251 543000) 0 nil]) ((#("S" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (undo-tree-id294 . 1)) nil (21662 47902 727307 30000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1)) nil (21662 47902 727361 442000) 0 nil]) ((#("O" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . 1) (undo-tree-id339 . 1) (undo-tree-id340 . 1) (undo-tree-id341 . 1) (undo-tree-id342 . 1) (undo-tree-id343 . 1)) nil (21662 47902 727413 148000) 0 nil]) ((#("D" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id344 . 1) (undo-tree-id345 . 1) (undo-tree-id346 . 1) (undo-tree-id347 . 1) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . 1) (undo-tree-id352 . 1) (undo-tree-id353 . 1) (undo-tree-id354 . 1) (undo-tree-id355 . 1) (undo-tree-id356 . 1) (undo-tree-id357 . 1) (undo-tree-id358 . 1) (undo-tree-id359 . 1) (undo-tree-id360 . 1) (undo-tree-id361 . 1) (undo-tree-id362 . 1) (undo-tree-id363 . 1) (undo-tree-id364 . 1) (undo-tree-id365 . 1) (undo-tree-id366 . 1)) nil (21662 47902 727482 807000) 0 nil]) ((#("O" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id367 . 1) (undo-tree-id368 . 1) (undo-tree-id369 . 1) (undo-tree-id370 . 1) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . 1) (undo-tree-id374 . 1) (undo-tree-id375 . 1) (undo-tree-id376 . 1) (undo-tree-id377 . 1) (undo-tree-id378 . 1) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (undo-tree-id381 . 1) (undo-tree-id382 . 1) (undo-tree-id383 . 1) (undo-tree-id384 . 1)) nil (21662 47902 727523 233000) 0 nil]) ((#("T" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id385 . 1) (undo-tree-id386 . 1) (undo-tree-id387 . 1) (undo-tree-id388 . 1) (undo-tree-id389 . 1) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (undo-tree-id392 . 1) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . 1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1)) nil (21662 47902 727560 709000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . 1) (undo-tree-id411 . 1) (undo-tree-id412 . 1) (undo-tree-id413 . 1) (undo-tree-id414 . 1)) nil (21662 47902 727593 121000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . 1) (undo-tree-id420 . 1) (undo-tree-id421 . 1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) (undo-tree-id425 . 1) (undo-tree-id426 . 1)) nil (21662 47902 727621 421000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1)) nil (21662 47902 727645 929000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1)) nil (21662 47902 727666 121000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (undo-tree-id450 . 1)) nil (21662 47902 727684 453000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1)) nil (21662 47902 727696 488000) 0 nil]) ((#("A" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id455 . 1) (undo-tree-id456 . 1)) nil (21662 47902 727704 435000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1397) (undo-tree-id457 . 1)) nil (21662 47902 727710 90000) 0 nil]) ((1442 . 1443)) nil (21662 47902 727714 554000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1442)) nil (21662 47902 727717 344000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1443) (undo-tree-id458 . 1)) nil (21662 47902 727722 868000) 0 nil]) ((1423 . 1424)) nil (21662 47902 727726 565000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1423)) nil (21662 47902 727729 456000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1424) (undo-tree-id459 . 1)) nil (21662 47902 727734 591000) 0 nil]) ((1399 . 1400)) nil (21662 47902 727738 192000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 1399) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1)) ((1399 . 1400)) (21662 47866 313327 860000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . 1399) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1)) nil (21662 47866 313549 784000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . 1399) (undo-tree-id41 . 1)) nil (21662 47866 313353 178000) 0 nil]) ((nil rear-nonsticky nil 1459 . 1460) (nil fontified nil 1444 . 1460) (1444 . 1460)) nil (21662 47866 313358 648000) 0 nil]) ((1443 . 1444) 1442) nil (21662 47866 313363 188000) 0 nil]) ((nil rear-nonsticky nil 1442 . 1443) (nil fontified nil 1424 . 1443) (1424 . 1443)) nil (21662 47866 313368 72000) 0 nil]) ((1423 . 1424) 1422) nil (21662 47866 313372 573000) 0 nil]) ((nil rear-nonsticky nil 1422 . 1423) (nil fontified nil 1399 . 1423) (1399 . 1423)) nil (21662 47866 313377 223000) 0 nil] [nil nil ((nil rear-nonsticky nil 15008 . 15009) (nil fontified nil 1397 . 15009) (1397 . 15009)) ((#("** 1-unbind keys
#+BEGIN_SRC emacs-lisp :results none
(global-unset-key (kbd \"<f1>\"))
(global-unset-key (kbd \"<f2>\"))
(global-unset-key (kbd \"<f3>\"))
(global-unset-key (kbd \"<f4> \"))
(global-unset-key (kbd \"<f5>\"))
(global-unset-key (kbd \"<f6>\"))
(global-unset-key (kbd \"<f7>\"))
(global-unset-key (kbd \"<f8>\"))
(global-unset-key (kbd \"<f9>\"))
(global-unset-key (kbd \"<f10>\"))
(global-unset-key (kbd \"<f11>\"))
(global-unset-key (kbd \"<f12>\"))
(global-unset-key (kbd \"C-v \"))
(global-unset-key (kbd \"M-p\"))
#+END_SRC
** F1 Agenda/TODO/Search
 
#+BEGIN_SRC emacs-lisp :results none
(define-key org-mode-map (kbd \"<f1> S\") (lambda () (interactive) (org-agenda nil \"s\" \"<\")))
;;below code for by type and todo (cook)
;+TODO=\"COOK\"+Type=\"breakfest\"
(define-key org-mode-map (kbd \"<f1> v\") (lambda () (interactive) (org-agenda nil \"a\" )))
(define-key org-mode-map (kbd \"<f1> r\") (lambda () (interactive) (org-agenda nil \"r\" )))
(global-set-key (kbd \"<f1> h\") 'org-goto)
(global-set-key (kbd \"<f1> d d\") 'org-timestamp-select)
(global-set-key (kbd \"<f1> d n\") 'org-timestamp-now)
(global-set-key (kbd \"<f1> d i\") 'z-insert-date)
(global-set-key (kbd \"<f1> d l\") 'org-deadline)
(global-set-key (kbd \"<f1> d s\") 'org-schedule)
(global-set-key (kbd \"<f1> t\") 'org-todo)
(global-set-key (kbd \"<f1> a\") 'org-agenda)
(global-set-key \"\\C-ca\" 'org-agenda)

;;org cookbook

;(global-set-key (kbd \"<f1> c\") 'my-cooking-sparse-tree-breakfeast)
(define-key org-mode-map (kbd \"<f1> c b\") 'cooking-sparse-tree-breakfeast)
(define-key org-mode-map (kbd \"<f1> c m\") 'cooking-sparse-tree-main)
(define-key org-mode-map (kbd \"<f1> c r\") 'recipe-template)
(define-key org-mode-map (kbd \"<f1> c t\") 'travel-template)
#+END_SRC

** F2 Emacs plugins

#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f2> e\") 'evil-mode)
;;yas
(global-set-key (kbd \"<f2> y y\") 'yas-insert-snippet)
(global-set-key (kbd \"<f2> y n\") 'yas-new-snippet)
(global-set-key (kbd \"<f2> y r \") 'yas-reload-all)
(global-set-key (kbd \"<f2> y v \") 'yas-visit-snippet-file)

#+END_SRC

** F3 Emacs Main

#+BEGIN_SRC emacs-lisp :results none
;dired
(define-key global-map (kbd \"<f3> d\") 'dired)
(global-set-key (kbd \"<f3> j\") 'dired-jump) 
(global-set-key (kbd \"<f3> r\") 'z-edit-file-as-root) 
(global-set-key (kbd \"<f3> E\") 'view-mode) 
(global-set-key (kbd \"<f3> e\") 'read-only-mode) 
(global-set-key (kbd \"<f3> s\") 'babcore-shell-execute)
(global-set-key (kbd \"<f3> b\") 'create-scratch-buffer)
(global-set-key (kbd \"<f3> r\") 'z-edit-file-as-root)
(global-set-key (kbd \"<f3> l\") 'linium-mode)
(global-set-key (kbd \"<f3> ;\") 'comment-region)
(global-set-key (kbd \"<f3> o\") 'back-button-global)

(global-set-key (kbd \"<f3> m s\") 'start-kbd-macro)
(global-set-key (kbd \"<f3> m q\") 'end-kbd-macro)
(global-set-key (kbd \"<f3> m n\") 'name-kbd-macro)
(global-set-key (kbd \"<f3> m i\") 'insert-kbd-macro)



;;; non F3
(global-set-key (kbd \"C-+\") 'text-scale-increase)
(global-set-key (kbd \"C--\") 'text-scale-decrease)
#+END_SRC


** F4 editing 
**** F4 key
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f4> c h\") 'org-set-line-headline); convert selected lines to headers
(global-set-key (kbd \"<f4> c b\") 'org-set-line-checkbox); convert selected lines to checkboxes
;convert region to code blocks
(global-set-key (kbd \"<f4> e\") 'z-wrap-cblock-example)
(global-set-key (kbd \"<f4> b\") 'z-wrap-cblock-sh)
(global-set-key (kbd \"<f4> <f4> b\") 'z-wrap-line-bash)
(global-set-key (kbd \"<f4> r\") 'z-wrap-cblock-r)
(global-set-key (kbd \"<f4> q\") 'z-wrap-cblock-quote)
(global-set-key (kbd \"<f4> l\") 'z-wrap-cblock-lisp)
(global-set-key (kbd \"<f4> s\") 'z-wrap-cblock-sas)
;; easy spell check
(global-set-key (kbd \"<f4> w\") 'ispell-word)
(global-set-key (kbd \"<f4> W\") 'ispell)
(global-set-key (kbd \"<f4> f\") 'flyspell-check-next-highlighted-word)

(global-set-key (kbd \"<f4> ;\") 'z-copy-comment-paste)
(global-set-key (kbd \"<f4> u\") 'z-fix-characters)
(global-set-key (kbd \"<f4> 6 u\") 'upcase-region)
(global-set-key (kbd \"<f4> 6 l\") 'downcase-region)


(global-set-key (kbd \"<f4> k\") 'browse-kill-ring)
(global-set-key (kbd \"<f4> B \") 'flush-blank-lines)
#+END_SRC
**** non F4
#+BEGIN_SRC emacs-lisp :results none
;; move lines up dowb with C-S-pgup/pgdown
(global-set-key [(control shift prior )]  'move-line-up)
(global-set-key [(control shift next)]  'move-line-down)

; kill (delete) from word to back of the line
(global-set-key (kbd \"C-<backspace>\") (lambda ()
                                        (interactive)
                                        (kill-line 0)))

(global-set-key (kbd \"M-2\") 'er/expand-region)					
#+END_SRC

** F5 Gnus
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f5> g\") 'gnus)
#+END_SRC
** F6 org headers

#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f6> <f6>\") 'helm-org-headlines)
#+END_SRC

** F7 Helm
   
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f7> y\") 'helm-show-kill-ring)
(global-set-key (kbd \"<f7> k\") 'helm-show-kill-ring)
(global-set-key (kbd \"<f7> r\") 'helm-recentf)
(global-set-key (kbd \"<f7> l\") 'helm-locate)
(global-set-key (kbd \"<f7> x\") 'helm-M-x)
(global-set-key (kbd \"<f7> f\") 'helm-find-files)
;to replace native C-x C-f
(global-set-key (kbd \"C-x C-f\") 'helm-find-files)
(global-set-key (kbd \"<f7> o\") 'helm-occur)
(global-set-key (kbd \"<f7> h\") 'helm-apropos)
(global-set-key (kbd \"<f7> t\") 'helm-top)

(global-set-key (kbd \"<f7> b\") 'helm-buffers-list)
(global-set-key (kbd \"<f7> <f7>\") 'helm-mini)

(global-set-key (kbd \"C-c h\") 'helm-command-prefix)
#+END_SRC

** F8 Bookmarks/Recents
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f8> <f8> \") 'bookmark-jump)
(global-set-key (kbd \"<f8> h\") 'helm-bookmarks)
(global-set-key (kbd \"<f8> m\") 'bookmark-bmenu-list)
(global-set-key (kbd \"<f8> r\") 'recentf-open-files)
(global-set-key (kbd \"<f8> b\") 'bmkp-bookmark-set-confirm-overwrite)
(global-set-key (kbd \"<f8> s\") 'bmkp-bmenu-filter-tags-incrementally)
#+END_SRC

** F9 org1
   :PROPERTIES:
   :ID:       17b9fc26-20cc-4b8f-94f4-54aaadeeba0f
   :END:
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f9> x\") 'org-archive-subtree)
(global-set-key (kbd \"<f9> u\") 'outline-up-heading)
(global-set-key (kbd \"<f9> e\") 'org-export-dispatch)
(global-set-key (kbd \"<f9> t\") 'org-toggle-inline-images)
(global-set-key (kbd \"<f9> c\") 'org-columns)
(global-set-key (kbd \"<f9> q\") 'org-columns-quit)
(global-set-key (kbd \"<f9> b\") 'org-bibtex-yank)
(global-set-key (kbd \"<f9> r\") 'org-refile)
(global-set-key (kbd \"<f9> B\") 'org-bibtex-create)
(global-set-key (kbd \"<f9> s\") 'org-sort)
(global-set-key (kbd \"<f9> n\") 'org-narrow-to-subtree)
(global-set-key (kbd \"<f9> w\") 'widen)
(global-set-key (kbd \"<f9> d\") 'org-download-screenshot)
(global-set-key (kbd \"<f9> D\") 'org-download-delete)
;Create an ID for the entry at point if it does not yet have one.
(global-set-key (kbd \"<f9> I\") 'org-id-get-create)
(global-set-key (kbd \"C-c c\") 'org-capture)
(global-set-key (kbd \"<f9> p\") 'org-capture)
(global-set-key \"\\C-cl\" 'org-store-link)
(global-set-key (kbd \"<f9> l s\") 'org-store-link)
(global-set-key (kbd \"<f9> l i\") 'org-insert-link)
(global-set-key (kbd \"<f9> l c\") 'org-id-copy)
(global-set-key (kbd \"<f9> l e\") 'org-id-copy)
#+END_SRC 
** F9+F9 org-id goto

$Note For (kbd \"<f9> l\") to work, you need to have f9 to be a prefix key$
!look into per file hooks for the below!

#+BEGIN_EXAMPLE
(lambda () ...) is an anonymous function.

(interactive) makes the function an interactive command, which is
needed for the form to be bound to the key.
#+END_EXAMPLE

#+BEGIN_SRC emacs-lisp :results none
  ;movies DL
  (global-set-key (kbd \"<f9> <f9> v\")
    (lambda ()
      (interactive)
        (org-id-goto \"62b49339-cd19-4a3c-a6fd-70dd45be4670\")))
;  emacs
  (global-set-key (kbd \"<f9> <f9> e \")
    (lambda ()
      (interactive)
        (org-id-goto \"38a15adf-f505-4a54-b1d9-f76b22ce1147\")
        (org-narrow-to-subtree)
))
  
  
  ;org
  (global-set-key (kbd \"<f9> <f9> o\")
    (lambda ()
      (interactive)
        (org-id-goto \"be4759e1-2951-4c91-a155-056bc2a16d9f\")
        (org-narrow-to-subtree)
))
  
  ;ssh
  (global-set-key (kbd \"<f9> <f9> s\")
    (lambda ()
      (interactive)
        (org-id-goto \"bf60adbf-fc3a-4eed-be14-a9244c3fef4e\")))
  
  ;beets
  (global-set-key (kbd \"<f9> <f9> b\")
    (lambda ()
      (interactive)
        (org-id-goto \"e0837792-f794-495e-908f-f75bdb4462b3\")))
  
  
  ;git
  (global-set-key (kbd \"<f9> <f9> g\")
    (lambda ()
      (interactive)
        (org-id-goto \"7816c1c8-be9a-4fd5-8121-15c190885cd7\")))
  
  ;mobileorg
  (global-set-key (kbd \"<f9> <f9> m\")
    (lambda ()
      (interactive)
        (org-id-goto \"0367963c-9ba2-44ee-9b30-bf5b7200b873\")))
  
  ;papers
  (global-set-key (kbd \"<f9> <f9> p\")
    (lambda ()
      (interactive)
        (org-id-goto \"47bad96f-740c-4b93-b739-a4b925d85514\")))
  
  ;capture settings
 ; (global-set-key (kbd \"<f9> <f9> e c\")
  ;  (lambda ()
   ;   (interactive)
    ;    (org-id-goto \"dfffbe27-21bc-4fb9-908e-f492f4afeb60\")))
  
  
  ;papers
  (global-set-key (kbd \"<f9> <f9> c c \")
    (lambda ()
      (interactive)
        (org-id-goto \"8193566d-2dd5-4368-8238-fac2fc9aa7e9\")))
  
#+END_SRC

** F10 org 2

#+BEGIN_SRC emacs-lisp :results none
(global-set-key \"\\C-cs\" 'org-babel-execute-subtree)
(global-set-key (kbd \"<f10> b s \") 'org-babel-execute-subtree)
(global-set-key (kbd \"<f10> s d \") 'org-cut-subtree)
(global-set-key (kbd \"<f10> s y \") 'org-copy-subtree)
(global-set-key (kbd \"<f10> s p \") 'org-paste-subtree)
(global-set-key (kbd \"<f10> 8 \") 'org-toggle-heading)
(global-set-key (kbd \"<f10> 7 \") 'org-toggle-heading)
(global-set-key (kbd \"<f10> h \") 'org-insert-heading)
 (global-set-key (kbd \"<f10> n \") 'org-indent-mode)


(global-set-key (kbd \"<f10> m p \") 'org-mobile-pull)
(global-set-key (kbd \"<f10> m s \") 'org-insert-push)

(global-set-key (kbd \"<f10> t y\") 'org-table-copy-region)
(global-set-key (kbd \"<f10> t d\") 'org-table-cut-region)
(global-set-key (kbd \"<f10> t p\") 'org-table-paste-rectangle)
(global-set-key (kbd \"<f10> t c\") 'org-table-create-or-convert-from-region)

#+END_SRC   


** F11 buffer/window operations (save,close etc)
#+BEGIN_SRC emacs-lisp :results none
;;saving and closing
(global-set-key (kbd \"<f11> s\") 'save-buffer); Aux save
(global-set-key (kbd \"<f11> x\") 'kill-this-buffer) ; Close file and buffer
(global-set-key (kbd \"<f11> C\") 'z-kill-other-buffers ) ; close all buffers but current-based on user script
(global-set-key (kbd \"<f11> W\") (lambda () (interactive) (save-buffer) (kill-buffer)  ))
(global-set-key (kbd \"<f11> X\") 'save-buffers-kill-terminl)
(global-set-key (kbd \"<f11> i\") 'kill-buffer) ; ido kill buffer
(global-set-key (kbd \"<f11> S\") 'z-save-file-close-window) ; 

;buffers movment
(global-set-key (kbd \"<f11> p\") 'previous-user-buffer) ; 
(global-set-key (kbd \"<f11> n\") 'next-user-buffer) ; 
(global-set-key (kbd \"<f11> P\") 'previous-emacs-buffer) ; 
(global-set-key (kbd \"<f11> N\") 'next-emacs-buffer) ; 
(global-set-key (kbd \"<f11> <f11> \") 'switch-to-previous-buffer)


#+END_SRC 

** F12 windows 
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f12> <f12>\") 'other-window)  
(global-set-key (kbd \"<f12> x\") 'delete-window)  
(global-set-key (kbd \"<f12> z\") 'delete-other-windows)  
(global-set-key (kbd \"<f12> v\") 'split-window-vertically)  
(global-set-key (kbd \"<f12> l\") 'split-window-right)  
(global-set-key (kbd \"<f12> j\") 'split-window-below)  
#+END_SRC

* Settings
** XDG/open with 
*** set emacs browser
#+BEGIN_SRC emacs-lisp :results none
(setq browse-url-browser-function (quote browse-url-generic))
(setq browse-url-generic-program \"chromium\")
#+END_SRC
** Backup
#+BEGIN_SRC emacs-lisp :results none
(setq backup-directory-alist '((\".\" . \"/home/zeltak/.cache/emacs/bk\")))

;Make backups of files, even when they're in version control
(setq vc-make-backup-files nil)

(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms '((\".*\" \"~/.emacs.d/auto-save-list/\" t)))

#+END_SRC

** Save and sessions
#+BEGIN_SRC emacs-lisp :results none
;If I reopen a file, I want to start at the line at which I was when I closed it.
; save the place in files
(require 'saveplace)
(setq-default save-place t)

; save minibuffer history
(require 'savehist)
(savehist-mode t)

;;autosave
;(setq auto-save-visited-file-name t)
;(setq auto-save-interval 20) ; twenty keystrokes
(setq auto-save-timeout 60) ; ten idle seconds

#+END_SRC

** history

#+BEGIN_SRC emacs-lisp :results none
(setq savehist-file \"/home/zeltak/.cache/emacs/hist/hist.txt\")
(savehist-mode 1)
(setq history-length t)
(setq history-delete-duplicates t)
(setq savehist-save-minibuffer-history 1)
(setq savehist-additional-variables
      '(kill-ring
        search-ring
        regexp-search-ring))
#+END_SRC

** recentf

$note its built into emacs no intsall needed$

#+BEGIN_SRC emacs-lisp :results none
  ;; (require 'recentf)
  ;; (setq recentf-auto-cleanup 'never) ;; disable before we start recentf!
  ;; (recentf-mode 1)
  ;; (setq recentf-max-menu-items 25)
  ;; ;(global-set-key \"\\C-x\\ \\C-r\" 'recentf-open-files)

;(recentf-mode 1) ; keep a list of recently opened files
;(setq recentf-max-menu-items 500)
;(setq recentf-auto-cleanup 'never) ;; disable before we start recentf!


#+END_SRC

** Remote
*** ssh
#+BEGIN_SRC emacs-lisp :results none
(require 'tramp) ; Remote file editing via ssh
(setq tramp-default-method \"ssh\")
#+END_SRC
** TODO proced
*** auto Update
#+BEGIN_SRC emacs-lisp :results none
(defun proced-settings ()
  (proced-toggle-auto-update))

(add-hook 'proced-mode-hook 'proced-settings)
#+END_SRC" 0 2 (fontified nil face font-lock-variable-name-face) 2 17 (fontified nil) 17 18 (fontified nil face font-lock-comment-delimiter-face) 18 54 (fontified nil face font-lock-comment-face) 54 71 (fontified nil face font-lock-variable-name-face) 71 77 (fontified nil) 77 83 (fontified nil face font-lock-string-face) 83 86 (fontified nil) 86 103 (fontified nil face font-lock-variable-name-face) 103 109 (fontified nil) 109 115 (fontified nil face font-lock-string-face) 115 118 (fontified nil) 118 135 (fontified nil face font-lock-variable-name-face) 135 141 (fontified nil) 141 147 (fontified nil face font-lock-string-face) 147 150 (fontified nil) 150 167 (fontified nil face font-lock-variable-name-face) 167 173 (fontified nil) 173 180 (fontified nil face font-lock-string-face) 180 183 (fontified nil) 183 200 (fontified nil face font-lock-variable-name-face) 200 206 (fontified nil) 206 212 (fontified nil face font-lock-string-face) 212 215 (fontified nil) 215 232 (fontified nil face font-lock-variable-name-face) 232 238 (fontified nil) 238 244 (fontified nil face font-lock-string-face) 244 247 (fontified nil) 247 264 (fontified nil face font-lock-variable-name-face) 264 270 (fontified nil) 270 276 (fontified nil face font-lock-string-face) 276 279 (fontified nil) 279 296 (fontified nil face font-lock-variable-name-face) 296 302 (fontified nil) 302 308 (fontified nil face font-lock-string-face) 308 311 (fontified nil) 311 328 (fontified nil face font-lock-variable-name-face) 328 334 (fontified nil) 334 340 (fontified nil face font-lock-string-face) 340 343 (fontified nil) 343 360 (fontified nil face font-lock-variable-name-face) 360 366 (fontified nil) 366 373 (fontified nil face font-lock-string-face) 373 376 (fontified nil) 376 393 (fontified nil face font-lock-variable-name-face) 393 399 (fontified nil) 399 406 (fontified nil face font-lock-string-face) 406 409 (fontified nil) 409 426 (fontified nil face font-lock-variable-name-face) 426 432 (fontified nil) 432 439 (fontified nil face font-lock-string-face) 439 442 (fontified nil) 442 459 (fontified nil face font-lock-variable-name-face) 459 465 (fontified nil) 465 471 (fontified nil face font-lock-string-face) 471 474 (fontified nil) 474 491 (fontified nil face font-lock-variable-name-face) 491 497 (fontified nil) 497 502 (fontified nil face font-lock-string-face) 502 505 (fontified nil) 505 506 (fontified nil face font-lock-comment-delimiter-face) 506 515 (fontified nil face font-lock-comment-face) 515 517 (fontified nil face font-lock-variable-name-face) 517 542 (fontified nil) 542 543 (fontified nil face font-lock-comment-delimiter-face) 543 579 (fontified nil face font-lock-comment-face) 579 590 (fontified nil face font-lock-variable-name-face) 590 609 (fontified nil) 609 617 (fontified nil face font-lock-string-face) 617 660 (fontified nil) 660 663 (fontified nil face font-lock-string-face) 663 664 (fontified nil) 664 667 (fontified nil face font-lock-string-face) 667 671 (fontified nil) 671 678 (fontified nil face font-lock-variable-name-face) 678 719 (fontified nil) 719 725 (fontified nil face font-lock-string-face) 725 731 (fontified nil) 731 742 (fontified nil face font-lock-string-face) 742 743 (fontified nil) 743 754 (fontified nil face font-lock-variable-name-face) 754 773 (fontified nil) 773 781 (fontified nil face font-lock-string-face) 781 824 (fontified nil) 824 827 (fontified nil face font-lock-string-face) 827 832 (fontified nil) 832 843 (fontified nil face font-lock-variable-name-face) 843 862 (fontified nil) 862 870 (fontified nil face font-lock-string-face) 870 913 (fontified nil) 913 916 (fontified nil face font-lock-string-face) 916 921 (fontified nil) 921 936 (fontified nil face font-lock-variable-name-face) 936 942 (fontified nil) 942 950 (fontified nil face font-lock-string-face) 950 952 (fontified nil) 952 997 (fontified nil face font-lock-string-face) 997 1019 (fontified nil) 1019 9700 (fontified nil) 9700 9737 (fontified nil face font-lock-string-face) 9737 9754 (fontified nil) 9754 9769 (fontified nil face font-lock-variable-name-face) 9769 9775 (fontified nil) 9775 9787 (fontified nil face font-lock-string-face) 9787 9789 (fontified nil) 9789 9843 (fontified nil face font-lock-string-face) 9843 9866 (fontified nil) 9866 9881 (fontified nil face font-lock-variable-name-face) 9881 9887 (fontified nil) 9887 9898 (fontified nil face font-lock-string-face) 9898 9900 (fontified nil) 9900 9958 (fontified nil face font-lock-string-face) 9958 9985 (fontified nil) 9985 10000 (fontified nil face font-lock-variable-name-face) 10000 10006 (fontified nil) 10006 10017 (fontified nil face font-lock-string-face) 10017 10019 (fontified nil) 10019 10217 (fontified nil face font-lock-string-face) 10217 10240 (fontified nil) 10240 10255 (fontified nil face font-lock-variable-name-face) 10255 10261 (fontified nil) 10261 10270 (fontified nil face font-lock-string-face) 10270 10272 (fontified nil) 10272 10348 (fontified nil face font-lock-string-face) 10348 10424 (fontified nil) 10424 10439 (fontified nil face font-lock-variable-name-face) 10439 10445 (fontified nil) 10445 10454 (fontified nil face font-lock-string-face) 10454 10513 (fontified nil) 10513 10528 (fontified nil face font-lock-variable-name-face) 10528 10534 (fontified nil) 10534 10543 (fontified nil face font-lock-string-face) 10543 10545 (fontified nil) 10545 10606 (fontified nil face font-lock-string-face) 10606 10637 (fontified nil) 10637 10652 (fontified nil face font-lock-variable-name-face) 10652 10658 (fontified nil) 10658 10667 (fontified nil face font-lock-string-face) 10667 10669 (fontified nil) 10669 10750 (fontified nil face font-lock-string-face) 10750 10775 (fontified nil) 10775 10790 (fontified nil face font-lock-variable-name-face) 10790 10796 (fontified nil) 10796 10805 (fontified nil face font-lock-string-face) 10805 10807 (fontified nil) 10807 10862 (fontified nil face font-lock-string-face) 10862 10888 (fontified nil) 10888 10903 (fontified nil face font-lock-variable-name-face) 10903 10909 (fontified nil) 10909 10918 (fontified nil face font-lock-string-face) 10918 10920 (fontified nil) 10920 10981 (fontified nil face font-lock-string-face) 10981 11010 (fontified nil) 11010 11011 (fontified nil face font-lock-comment-delimiter-face) 11011 11021 (fontified nil face font-lock-comment-face) 11021 11022 (fontified nil) 11022 11024 (fontified nil face font-lock-variable-name-face) 11024 11038 (fontified nil) 11038 11039 (fontified nil face font-lock-comment-delimiter-face) 11039 11075 (fontified nil face font-lock-comment-face) 11075 11090 (fontified nil face font-lock-variable-name-face) 11090 11096 (fontified nil) 11096 11109 (fontified nil face font-lock-string-face) 11109 11111 (fontified nil) 11111 11128 (fontified nil face font-lock-string-face) 11128 11161 (fontified nil face font-lock-string-face) 11161 11178 (fontified nil) 11178 11193 (fontified nil face font-lock-variable-name-face) 11193 11199 (fontified nil) 11199 11208 (fontified nil face font-lock-string-face) 11208 11210 (fontified nil) 11210 11268 (fontified nil face font-lock-string-face) 11268 11295 (fontified nil) 11295 11310 (fontified nil face font-lock-variable-name-face) 11310 11316 (fontified nil) 11316 11325 (fontified nil face font-lock-string-face) 11325 11327 (fontified nil) 11327 11383 (fontified nil face font-lock-string-face) 11383 11405 (fontified nil) 11405 11406 (fontified nil face font-lock-comment-delimiter-face) 11406 11415 (fontified nil face font-lock-comment-face) 11415 11416 (fontified nil) 11416 11417 (fontified nil face font-lock-variable-name-face) 11417 11427 (fontified nil) 11427 11429 (fontified nil face font-lock-variable-name-face) 11429 11445 (fontified nil) 11445 11448 (fontified nil face font-lock-variable-name-face) 11448 11467 (fontified nil) 11467 11468 (fontified nil face font-lock-comment-delimiter-face) 11468 11504 (fontified nil face font-lock-comment-face) 11504 11509 (fontified nil face font-lock-variable-name-face) 11509 11566 (fontified nil) 11566 11571 (fontified nil face font-lock-variable-name-face) 11571 11599 (fontified nil) 11599 11609 (fontified nil face font-lock-string-face) 11609 11611 (fontified nil) 11611 11612 (fontified nil face font-lock-comment-delimiter-face) 11612 11621 (fontified nil face font-lock-comment-face) 11621 11623 (fontified nil face font-lock-variable-name-face) 11623 11631 (fontified nil) 11631 11632 (fontified nil face font-lock-comment-delimiter-face) 11632 11668 (fontified nil face font-lock-comment-face) 11668 11673 (fontified nil face font-lock-variable-name-face) 11673 11697 (fontified nil) 11697 11780 (fontified nil face font-lock-string-face) 11780 11802 (fontified nil) 11802 11807 (fontified nil face font-lock-variable-name-face) 11807 11835 (fontified nil) 11835 11840 (fontified nil face font-lock-variable-name-face) 11840 11865 (fontified nil) 11865 11870 (fontified nil face font-lock-variable-name-face) 11870 11890 (fontified nil) 11890 11895 (fontified nil face font-lock-variable-name-face) 11895 11920 (fontified nil) 11920 11925 (fontified nil face font-lock-variable-name-face) 11925 11957 (fontified nil) 11957 12151 (fontified nil face font-lock-string-face) 12151 12187 (fontified nil face font-lock-string-face) 12187 12198 (fontified nil) 12198 12211 (fontified nil face font-lock-variable-name-face) 12211 12227 (fontified nil) 12227 12228 (fontified nil face font-lock-variable-name-face) 12228 12253 (fontified nil) 12253 12261 (fontified nil face font-lock-variable-name-face) 12261 12262 (fontified nil) 12262 12273 (fontified nil face font-lock-string-face) 12273 12724 (fontified nil face font-lock-string-face) 12724 12743 (fontified nil) 12743 12754 (fontified nil face font-lock-variable-name-face) 12754 12755 (fontified nil) 12755 12763 (fontified nil) 12763 12783 (fontified nil face font-lock-variable-name-face) 12783 12784 (fontified nil) 12784 12785 (fontified nil face font-lock-comment-delimiter-face) 12785 12794 (fontified nil face font-lock-comment-face) 12794 12795 (fontified nil) 12795 12797 (fontified nil face font-lock-variable-name-face) 12797 12807 (fontified nil) 12807 12812 (fontified nil face font-lock-variable-name-face) 12812 12854 (fontified nil) 12854 12855 (fontified nil face font-lock-comment-delimiter-face) 12855 12891 (fontified nil face font-lock-comment-face) 12891 12893 (fontified nil) 12893 12895 (fontified nil face font-lock-variable-name-face) 12895 12905 (fontified nil) 12905 12948 (fontified nil face font-lock-string-face) 12948 12993 (fontified nil) 12993 12995 (fontified nil face font-lock-variable-name-face) 12995 13015 (fontified nil) 13015 13017 (fontified nil face font-lock-variable-name-face) 13017 13053 (fontified nil) 13053 13055 (fontified nil face font-lock-variable-name-face) 13055 13073 (fontified nil) 13073 13085 (fontified nil face font-lock-string-face) 13085 13086 (fontified nil) 13086 13165 (fontified nil face font-lock-string-face) 13165 13200 (fontified nil face font-lock-string-face) 13200 13229 (fontified nil face font-lock-string-face) 13229 13274 (fontified nil) 13274 13275 (fontified nil face font-lock-comment-delimiter-face) 13275 13284 (fontified nil face font-lock-comment-face) 13284 13285 (fontified nil) 13285 13287 (fontified nil face font-lock-variable-name-face) 13287 13295 (fontified nil) 13295 13298 (fontified nil face font-lock-variable-name-face) 13298 13303 (fontified nil) 13303 13304 (fontified nil face font-lock-comment-delimiter-face) 13304 13340 (fontified nil face font-lock-comment-face) 13340 13348 (fontified nil face font-lock-variable-name-face) 13348 13349 (fontified nil) 13349 13568 (fontified nil face font-lock-string-face) 13568 13585 (fontified nil) 13585 13603 (fontified nil face font-lock-string-face) 13603 13611 (fontified nil face font-lock-string-face) 13611 13612 (rear-nonsticky nil fontified nil face font-lock-string-face)) . 1397) (undo-tree-id0 . -9700) (undo-tree-id1 . -13611) (undo-tree-id2 . 1) (undo-tree-id3 . -13603) (undo-tree-id4 . -13611) (undo-tree-id5 . 1) (undo-tree-id6 . -13165) (undo-tree-id7 . 887) (undo-tree-id8 . -12253) (undo-tree-id9 . 887) (undo-tree-id10 . -12253) (undo-tree-id11 . 887) (undo-tree-id12 . -12253) (undo-tree-id13 . 1863) (undo-tree-id14 . -11128) (undo-tree-id15 . 3091) (undo-tree-id16 . -9700) (undo-tree-id17 . 3091) (undo-tree-id18 . -9700) (undo-tree-id19 . 3091) (undo-tree-id20 . -9700) (undo-tree-id21 . 3091) (undo-tree-id22 . -9700) (undo-tree-id23 . 3091) (undo-tree-id24 . -9700) (undo-tree-id25 . 3091) (undo-tree-id26 . -9700) (undo-tree-id27 . 3091) (undo-tree-id28 . -9700) (undo-tree-id29 . 3091) (undo-tree-id30 . -9700) (undo-tree-id31 . 3091) (undo-tree-id32 . -9700) (nil fontified t 14982 . 15000) (nil fontified t 14965 . 14982) (nil fontified t 14746 . 14965) (nil fontified t 14745 . 14746) (nil fontified t 14737 . 14745) (nil fontified t 14701 . 14737) (nil fontified t 14700 . 14701) (nil fontified t 14695 . 14700) (nil fontified t 14692 . 14695) (nil fontified t 14684 . 14692) (nil fontified t 14682 . 14684) (nil fontified t 14681 . 14682) (nil fontified t 14672 . 14681) (nil fontified t 14671 . 14672) (nil fontified t 14626 . 14671) (nil fontified t 14597 . 14626) (nil fontified t 14562 . 14597) (nil fontified t 14483 . 14562) (nil fontified t 14482 . 14483) (nil fontified t 14470 . 14482) (nil fontified t 14452 . 14470) (nil fontified t 14450 . 14452) (nil fontified t 14414 . 14450) (nil fontified t 14412 . 14414) (nil fontified t 14392 . 14412) (nil fontified t 14390 . 14392) (nil fontified t 14345 . 14390) (nil fontified t 14302 . 14345) (nil fontified t 14292 . 14302) (nil fontified t 14290 . 14292) (nil fontified t 14288 . 14290) (nil fontified t 14252 . 14288) (nil fontified t 14251 . 14252) (nil fontified t 14209 . 14251) (nil fontified t 14204 . 14209) (nil fontified t 14194 . 14204) (nil fontified t 14192 . 14194) (nil fontified t 14191 . 14192) (nil fontified t 14182 . 14191) (nil fontified t 14181 . 14182) (nil fontified t 14180 . 14181) (nil fontified t 14160 . 14180) (nil fontified t 14152 . 14160) (nil fontified t 14151 . 14152) (nil fontified t 14140 . 14151) (nil fontified t 14121 . 14140) (nil fontified t 13670 . 14121) (nil fontified t 13659 . 13670) (nil fontified t 13658 . 13659) (nil fontified t 13650 . 13658) (nil fontified t 13625 . 13650) (nil fontified t 13624 . 13625) (nil fontified t 13608 . 13624) (nil fontified t 13595 . 13608) (nil fontified t 13584 . 13595) (nil fontified t 13548 . 13584) (nil fontified t 13354 . 13548) (nil fontified t 13322 . 13354) (nil fontified t 13317 . 13322) (nil fontified t 13292 . 13317) (nil fontified t 13287 . 13292) (nil fontified t 13267 . 13287) (nil fontified t 13262 . 13267) (nil fontified t 13237 . 13262) (nil fontified t 13232 . 13237) (nil fontified t 13204 . 13232) (nil fontified t 13199 . 13204) (nil fontified t 13177 . 13199) (nil fontified t 13094 . 13177) (nil fontified t 13070 . 13094) (nil fontified t 13065 . 13070) (nil fontified t 13029 . 13065) (nil fontified t 13028 . 13029) (nil fontified t 13020 . 13028) (nil fontified t 13018 . 13020) (nil fontified t 13009 . 13018) (nil fontified t 13008 . 13009) (nil fontified t 13006 . 13008) (nil fontified t 12996 . 13006) (nil fontified t 12968 . 12996) (nil fontified t 12963 . 12968) (nil fontified t 12906 . 12963) (nil fontified t 12901 . 12906) (nil fontified t 12865 . 12901) (nil fontified t 12864 . 12865) (nil fontified t 12845 . 12864) (nil fontified t 12842 . 12845) (nil fontified t 12826 . 12842) (nil fontified t 12824 . 12826) (nil fontified t 12814 . 12824) (nil fontified t 12813 . 12814) (nil fontified t 12812 . 12813) (nil fontified t 12803 . 12812) (nil fontified t 12802 . 12803) (nil fontified t 12780 . 12802) (nil fontified t 12724 . 12780) (nil fontified t 12722 . 12724) (nil fontified t 12713 . 12722) (nil fontified t 12707 . 12713) (nil fontified t 12692 . 12707) (nil fontified t 12665 . 12692) (nil fontified t 12607 . 12665) (nil fontified t 12605 . 12607) (nil fontified t 12596 . 12605) (nil fontified t 12590 . 12596) (nil fontified t 12575 . 12590) (nil fontified t 12558 . 12575) (nil fontified t 12525 . 12558) (nil fontified t 12508 . 12525) (nil fontified t 12506 . 12508) (nil fontified t 12493 . 12506) (nil fontified t 12487 . 12493) (nil fontified t 12472 . 12487) (nil fontified t 12436 . 12472) (nil fontified t 12435 . 12436) (nil fontified t 12421 . 12435) (nil fontified t 12419 . 12421) (nil fontified t 12418 . 12419) (nil fontified t 12408 . 12418) (nil fontified t 12407 . 12408) (nil fontified t 12378 . 12407) (nil fontified t 12317 . 12378) (nil fontified t 12315 . 12317) (nil fontified t 12306 . 12315) (nil fontified t 12300 . 12306) (nil fontified t 12285 . 12300) (nil fontified t 12259 . 12285) (nil fontified t 12204 . 12259) (nil fontified t 12202 . 12204) (nil fontified t 12193 . 12202) (nil fontified t 12187 . 12193) (nil fontified t 12172 . 12187) (nil fontified t 12147 . 12172) (nil fontified t 12066 . 12147) (nil fontified t 12064 . 12066) (nil fontified t 12055 . 12064) (nil fontified t 12049 . 12055) (nil fontified t 12034 . 12049) (nil fontified t 12003 . 12034) (nil fontified t 11942 . 12003) (nil fontified t 11940 . 11942) (nil fontified t 11931 . 11940) (nil fontified t 11925 . 11931) (nil fontified t 11910 . 11925) (nil fontified t 11851 . 11910) (nil fontified t 11842 . 11851) (nil fontified t 11836 . 11842) (nil fontified t 11821 . 11836) (nil fontified t 11745 . 11821) (nil fontified t 11669 . 11745) (nil fontified t 11667 . 11669) (nil fontified t 11658 . 11667) (nil fontified t 11652 . 11658) (nil fontified t 11637 . 11652) (nil fontified t 11614 . 11637) (nil fontified t 11416 . 11614) (nil fontified t 11414 . 11416) (nil fontified t 11403 . 11414) (nil fontified t 11397 . 11403) (nil fontified t 11382 . 11397) (nil fontified t 11355 . 11382) (nil fontified t 11297 . 11355) (nil fontified t 11295 . 11297) (nil fontified t 11284 . 11295) (nil fontified t 11278 . 11284) (nil fontified t 11263 . 11278) (nil fontified t 11240 . 11263) (nil fontified t 11186 . 11240) (nil fontified t 11184 . 11186) (nil fontified t 11172 . 11184) (nil fontified t 11166 . 11172) (nil fontified t 11151 . 11166) (nil fontified t 11134 . 11151) (nil fontified t 11097 . 11134) (nil fontified nil 2416 . 11097) (nil fontified t 2394 . 2416) (nil fontified t 2349 . 2394) (nil fontified t 2347 . 2349) (nil fontified t 2339 . 2347) (nil fontified t 2333 . 2339) (nil fontified t 2318 . 2333) (nil fontified t 2313 . 2318) (nil fontified t 2310 . 2313) (nil fontified t 2267 . 2310) (nil fontified t 2259 . 2267) (nil fontified t 2240 . 2259) (nil fontified t 2229 . 2240) (nil fontified t 2224 . 2229) (nil fontified t 2221 . 2224) (nil fontified t 2178 . 2221) (nil fontified t 2170 . 2178) (nil fontified t 2151 . 2170) (nil fontified t 2140 . 2151) (nil fontified t 2139 . 2140) (nil fontified t 2128 . 2139) (nil fontified t 2122 . 2128) (nil fontified t 2116 . 2122) (nil fontified t 2075 . 2116) (nil fontified t 2068 . 2075) (nil fontified t 2064 . 2068) (nil fontified t 2061 . 2064) (nil fontified t 2060 . 2061) (nil fontified t 2057 . 2060) (nil fontified t 2014 . 2057) (nil fontified t 2006 . 2014) (nil fontified t 1987 . 2006) (nil fontified t 1976 . 1987) (nil fontified t 1940 . 1976) (nil fontified t 1939 . 1940) (nil fontified t 1914 . 1939) (nil fontified t 1912 . 1914) (nil fontified t 1903 . 1912) (nil fontified t 1902 . 1903) (nil fontified t 1899 . 1902) (nil fontified t 1894 . 1899) (nil fontified t 1888 . 1894) (nil fontified t 1871 . 1888) (nil fontified t 1868 . 1871) (nil fontified t 1862 . 1868) (nil fontified t 1856 . 1862) (nil fontified t 1839 . 1856) (nil fontified t 1836 . 1839) (nil fontified t 1829 . 1836) (nil fontified t 1823 . 1829) (nil fontified t 1806 . 1823) (nil fontified t 1803 . 1806) (nil fontified t 1796 . 1803) (nil fontified t 1790 . 1796) (nil fontified t 1773 . 1790) (nil fontified t 1770 . 1773) (nil fontified t 1763 . 1770) (nil fontified t 1757 . 1763) (nil fontified t 1740 . 1757) (nil fontified t 1737 . 1740) (nil fontified t 1731 . 1737) (nil fontified t 1725 . 1731) (nil fontified t 1708 . 1725) (nil fontified t 1705 . 1708) (nil fontified t 1699 . 1705) (nil fontified t 1693 . 1699) (nil fontified t 1676 . 1693) (nil fontified t 1673 . 1676) (nil fontified t 1667 . 1673) (nil fontified t 1661 . 1667) (nil fontified t 1644 . 1661) (nil fontified t 1641 . 1644) (nil fontified t 1635 . 1641) (nil fontified t 1629 . 1635) (nil fontified t 1612 . 1629) (nil fontified t 1609 . 1612) (nil fontified t 1603 . 1609) (nil fontified t 1597 . 1603) (nil fontified t 1580 . 1597) (nil fontified t 1577 . 1580) (nil fontified t 1570 . 1577) (nil fontified t 1564 . 1570) (nil fontified t 1547 . 1564) (nil fontified t 1544 . 1547) (nil fontified t 1538 . 1544) (nil fontified t 1532 . 1538) (nil fontified t 1515 . 1532) (nil fontified t 1512 . 1515) (nil fontified t 1506 . 1512) (nil fontified t 1500 . 1506) (nil fontified t 1483 . 1500) (nil fontified t 1480 . 1483) (nil fontified t 1474 . 1480) (nil fontified t 1468 . 1474) (nil fontified t 1451 . 1468) (nil fontified t 1415 . 1451) (nil fontified t 1414 . 1415) (nil fontified t 1399 . 1414) (nil fontified t 1397 . 1399) (nil rear-nonsticky t 15008 . 15009)) (21662 47818 676764 633000) 0 nil]) ((1397 . 1406)) nil (21662 47818 677572 4000) 0 nil]) ((#("I" 0 1 (fontified t)) . -1397)) nil (21662 47818 676793 902000) 0 nil]) ((1397 . 1398)) nil (21662 47818 676798 321000) 0 nil]) ((1366 . 1368)) nil (21662 47818 676801 788000) 0 nil]) ((1363 . 1366)) nil (21662 47818 676805 546000) 0 nil]) ((1899 . 1900) (t 21646 48184 581440 140000)) nil (21662 47818 676809 761000) 0 nil]) nil nil (21662 47818 676813 86000) 0 nil] #1# 78865 664 nil]