"7f12a7bd8c3fa250a7bdcdc4683eb88f324ca758"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((1591 . 1592) (#("8c" 0 2 (fontified nil face font-lock-comment-face)) . 1591) (1575 . 1591) 1577) nil (21662 48130 945732 989000) 0 nil]) ((1575 . 1577)) nil (21662 48130 945745 661000) 0 nil]) ((#("9" 0 1 (fontified t face font-lock-comment-face)) . -1575)) nil (21662 48130 945750 515000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1576)) nil (21662 48130 945754 804000) 0 nil]) ((1575 . 1577)) nil (21662 48130 945759 370000) 0 nil]) ((1573 . 1574)) nil (21662 48130 945763 647000) 0 nil]) ((1462 . 1463)) nil (21662 48130 945767 754000) 0 nil]) ((1480 . 1481) (#("8c" 0 2 (fontified nil face font-lock-comment-face)) . 1480) (1464 . 1480) 1466) nil (21662 48130 945773 772000) 0 nil]) ((1465 . 1466)) nil (21662 48130 945779 699000) 0 nil]) ((#("x" 0 1 (fontified t face font-lock-comment-face)) . -1465)) nil (21662 48130 945783 377000) 0 nil]) ((1464 . 1466)) nil (21662 48130 945787 639000) 0 nil]) ((1468 . 1476)) nil (21662 48130 945791 586000) 0 nil]) ((nil rear-nonsticky nil 1469 . 1470) (nil fontified nil 1469 . 1470) (#("
" 0 1 (fontified nil)) . -1546) (1469 . 1547)) nil (21662 48130 945797 745000) 0 nil]) ((1469 . 1470)) nil (21662 48130 945803 483000) 0 nil]) ((#("#make ctrl-a ctrl s work like alt-tab (last window)
bind-key C-a last-window
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 52 (fontified t face font-lock-comment-face) 52 60 (fontified t face font-lock-variable-name-face) 60 77 (fontified t)) . 1830) (undo-tree-id494 . -52) (undo-tree-id495 . 77) (undo-tree-id496 . -52) (undo-tree-id497 . -77) (undo-tree-id498 . -52) (undo-tree-id499 . 25) 1882) nil (21662 48130 945838 753000) 0 nil]) ((#("V" 0 1 (fontified t)) . -1830)) nil (21662 48130 945846 92000) 0 nil]) ((1830 . 1831)) nil (21662 48130 945850 144000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1499)) nil (21662 48130 945853 762000) 0 nil]) ((1499 . 1500)) nil (21662 48130 945857 994000) 0 nil]) ((1537 . 1538)) nil (21662 48130 945862 169000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -1537)) nil (21662 48130 945866 108000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -1538)) nil (21662 48130 945870 456000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1539)) nil (21662 48130 945874 938000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1540)) nil (21662 48130 945879 824000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1541)) nil (21662 48130 945884 600000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -1542)) nil (21662 48130 945888 963000) 0 nil]) ((1537 . 1543)) nil (21662 48130 945893 691000) 0 nil]) ((1533 . 1537)) nil (21662 48130 945897 913000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-face)) . -1533)) nil (21662 48130 945901 970000) 0 nil]) ((1533 . 1534)) nil (21662 48130 945906 9000) 0 nil]) ((1529 . 1533)) nil (21662 48130 945910 116000) 0 nil]) ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . -1530) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . 1) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (undo-tree-id516 . 1) (1529 . 1530)) nil (21662 48130 945985 139000) 0 nil]) ((1527 . 1529)) nil (21662 48130 945995 257000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -1527)) nil (21662 48130 946021 896000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -1528)) nil (21662 48130 946028 784000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -1529)) nil (21662 48130 946034 106000) 0 nil]) ((1524 . 1530)) nil (21662 48130 946039 47000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1524)) nil (21662 48130 946043 242000) 0 nil]) ((1522 . 1525)) nil (21662 48130 946048 231000) 0 nil]) ((1518 . 1519)) nil (21662 48130 946052 375000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1518)) nil (21662 48130 946056 382000) 0 nil]) ((1518 . 1519)) nil (21662 48130 946060 920000) 0 nil]) ((1518 . 1522)) nil (21662 48130 946065 137000) 0 nil]) ((1503 . 1518)) nil (21662 48130 946069 396000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1503)) nil (21662 48130 946073 543000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -1504)) nil (21662 48130 946078 59000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1505)) nil (21662 48130 946082 421000) 0 nil]) ((1501 . 1506)) nil (21662 48130 946088 265000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1501)) nil (21662 48130 946092 414000) 0 nil]) ((#("h" 0 1 (fontified t face font-lock-comment-face)) . -1502)) nil (21662 48130 946097 428000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -1503)) nil (21662 48130 946102 54000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -1504)) nil (21662 48130 946106 739000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1505)) nil (21662 48130 946111 467000) 0 nil]) ((1500 . 1506)) nil (21662 48130 946117 30000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1500)) nil (21662 48130 946121 465000) 0 nil]) ((1500 . 1501)) nil (21662 48130 946126 369000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1499) (undo-tree-id517 . 1)) nil (21662 48130 946137 632000) 0 nil]) ((1499 . 1500)) nil (21662 48130 946143 809000) 0 nil]) ((#("1" 0 1 (fontified t face font-lock-comment-face)) . -1500)) nil (21662 48130 946148 43000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-comment-face)) . -1501)) nil (21662 48130 946152 739000) 0 nil]) ((1499 . 1502)) nil (21662 48130 946157 420000) 0 nil]) ((1483 . 1485)) nil (21662 48130 946161 952000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-comment-face)) . -1482)) nil (21662 48130 946166 102000) 0 nil]) ((1482 . 1483)) nil (21662 48130 946171 194000) 0 nil]) ((1476 . 1477)) nil (21662 48130 946175 536000) 0 nil]) ((1483 . 1488)) nil (21662 48130 946180 603000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1482) (undo-tree-id518 . 1) (undo-tree-id519 . 1)) nil (21662 48130 946195 804000) 0 nil]) ((1482 . 1491)) nil (21662 48130 946202 269000) 0 nil]) ((1474 . 1482)) nil (21662 48130 946206 917000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1474)) nil (21662 48130 946211 149000) 0 nil]) ((1474 . 1475)) nil (21662 48130 946215 815000) 0 nil]) ((#("# F3 
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face)) . 1475) (undo-tree-id520 . -5) (undo-tree-id521 . 1) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . 1) (undo-tree-id529 . -5) (undo-tree-id530 . 2) (undo-tree-id531 . -5) (undo-tree-id532 . 2) (undo-tree-id533 . -5) (undo-tree-id534 . 2) (undo-tree-id535 . -5) 1479) nil (21662 48130 946310 8000) 0 nil]) ((1472 . 1474)) nil (21662 48130 946321 318000) 0 nil]) ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1472)) nil (21662 48130 946325 287000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1473)) nil (21662 48130 946329 502000) 0 nil]) ((1467 . 1468)) nil (21662 48130 946333 804000) 0 nil]) ((1466 . 1467)) nil (21662 48130 946338 162000) 0 nil]) ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1466)) nil (21662 48130 946342 647000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1467)) nil (21662 48130 946347 443000) 0 nil]) ((1460 . 1462)) nil (21662 48130 946352 349000) 0 nil]) ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1460)) nil (21662 48130 946356 731000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1461)) nil (21662 48130 946362 149000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1457)) nil (21662 48130 946366 890000) 0 nil]) ((nil rear-nonsticky nil 1475 . 1476) (nil fontified nil 1475 . 1476) (nil fontified nil 1474 . 1475) (nil fontified nil 1472 . 1474) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1481) (1475 . 1482) 1470) nil (21662 48130 946377 266000) 0 nil]) ((nil rear-nonsticky nil 1469 . 1470) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1466 . 1468) (nil fontified nil 1465 . 1466) (nil fontified nil 1464 . 1465) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1475) (1469 . 1476) 1464) nil (21662 48130 946391 143000) 0 nil]) ((nil rear-nonsticky nil 1463 . 1464) (nil fontified nil 1463 . 1464) (nil fontified nil 1462 . 1463) (nil fontified nil 1460 . 1462) (nil fontified nil 1459 . 1460) (nil fontified nil 1458 . 1459) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1469) (1463 . 1470) 1458) nil (21662 48130 946405 19000) 0 nil]) ((nil rear-nonsticky nil 1457 . 1458) (nil fontified nil 1457 . 1458) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1463) (1457 . 1464)) nil (21662 48130 946414 225000) 0 nil]) ((1454 . 1455) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1454)) nil (21662 48130 946420 993000) 0 nil]) ((1448 . 1449) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1448)) nil (21662 48130 946427 115000) 0 nil]) ((1442 . 1443) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1442)) nil (21662 48130 946433 354000) 0 nil]) ((1436 . 1437) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1436)) nil (21662 48130 946439 425000) 0 nil]) ((1430 . 1431) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1430)) nil (21662 48130 946445 426000) 0 nil]) ((1424 . 1425) (#("3" 0 1 (fontified t face font-lock-comment-face)) . 1424)) nil (21662 48130 946451 277000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1421) (undo-tree-id536 . -1)) nil (21662 48130 946462 866000) 0 nil]) ((nil rear-nonsticky nil 1421 . 1422) (nil fontified nil 1421 . 1422) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -1457) (1421 . 1458)) nil (21662 48130 946471 70000) 0 nil] [nil nil ((nil rear-nonsticky nil 1444 . 1445) (nil fontified nil 1441 . 1445) (1441 . 1445) (nil rear-nonsticky nil 1440 . 1441) (nil fontified nil 1437 . 1441) (1437 . 1441) (nil rear-nonsticky nil 1436 . 1437) (nil fontified nil 1433 . 1437) (1433 . 1437) (nil rear-nonsticky nil 1432 . 1433) (nil fontified nil 1429 . 1433) (1429 . 1433) (nil rear-nonsticky nil 1428 . 1429) (nil fontified nil 1425 . 1429) (1425 . 1429) (nil rear-nonsticky nil 1424 . 1425) (nil fontified nil 1421 . 1425) (1421 . 1425)) ((#("# F3" 0 2 (fontified nil face font-lock-comment-delimiter-face) 2 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1421) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (nil rear-nonsticky t 1424 . 1425) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1425) (undo-tree-id462 . 2) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . 1) (undo-tree-id466 . 2) (undo-tree-id467 . 3) (undo-tree-id468 . 3) (nil rear-nonsticky t 1428 . 1429) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1429) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . 1) (undo-tree-id472 . 2) (undo-tree-id473 . 3) (undo-tree-id474 . 4) (nil rear-nonsticky t 1432 . 1433) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1433) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . 1) (undo-tree-id478 . 2) (undo-tree-id479 . 3) (undo-tree-id480 . 4) (nil rear-nonsticky t 1436 . 1437) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1437) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . 1) (undo-tree-id484 . 2) (undo-tree-id485 . 3) (undo-tree-id486 . 4) (nil rear-nonsticky t 1440 . 1441) (#("# F3" 0 3 (fontified nil face font-lock-comment-face) 3 4 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 1441) (undo-tree-id487 . -3) (undo-tree-id488 . -4) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 2) (undo-tree-id492 . 3) (undo-tree-id493 . 4) (nil rear-nonsticky t 1444 . 1445)) (21662 47902 726609 654000) 0 nil]) ((1420 . 1421) 1415) nil (21662 47902 728239 756000) 0 nil]) ((#("n" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 1420) (undo-tree-id42 . -1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1)) nil (21662 47902 726664 270000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id56 . -1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1)) nil (21662 47902 726688 416000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1)) nil (21662 47902 726720 908000) 0 nil]) ((#("M" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1)) nil (21662 47902 726738 823000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 1)) nil (21662 47902 726754 258000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1) (undo-tree-id91 . 1)) nil (21662 47902 726771 293000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id92 . 1) (undo-tree-id93 . 1) (undo-tree-id94 . 1) (undo-tree-id95 . 1)) nil (21662 47902 726783 549000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id96 . 1) (undo-tree-id97 . 1) (undo-tree-id98 . 1)) nil (21662 47902 726800 142000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id99 . 1) (undo-tree-id100 . 1)) nil (21662 47902 726807 967000) 0 nil]) ((#("E" 0 1 (fontified t face font-lock-comment-face)) . 1420) (undo-tree-id101 . 1)) nil (21662 47902 726813 633000) 0 nil]) ((#("E" 0 1 (fontified t face font-lock-comment-face)) . -1414) (undo-tree-id102 . -1)) nil (21662 47902 726819 68000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-comment-face)) . -1415) (undo-tree-id103 . -1)) nil (21662 47902 726824 687000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -1416) (undo-tree-id104 . -1)) nil (21662 47902 726830 193000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1417) (undo-tree-id105 . -1)) nil (21662 47902 726835 634000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -1418) (undo-tree-id106 . -1)) nil (21662 47902 726841 52000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1419) (undo-tree-id107 . -1) (undo-tree-id108 . 1)) nil (21662 47902 726849 497000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-comment-face)) . -1420) (undo-tree-id109 . -1) (undo-tree-id110 . 1)) nil (21662 47902 726857 375000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1421) (undo-tree-id111 . -1) (undo-tree-id112 . 1)) nil (21662 47902 726866 845000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -1422) (undo-tree-id113 . -1) (undo-tree-id114 . 1)) nil (21662 47902 726874 594000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . -1423) (undo-tree-id115 . -1) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1)) nil (21662 47902 726885 546000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1424) (undo-tree-id119 . -1) (undo-tree-id120 . 1)) nil (21662 47902 726893 77000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -1425) (undo-tree-id121 . -1) (undo-tree-id122 . 1)) nil (21662 47902 726902 47000) 0 nil]) ((#("s" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . -1426) (undo-tree-id123 . 1)) nil (21662 47902 726907 732000) 0 nil]) ((1403 . 1408)) nil (21662 47902 726911 298000) 0 nil]) ((#("h" 0 1 (fontified t rear-nonsticky t face font-lock-comment-face)) . 1403) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . 1) (undo-tree-id134 . 1) (undo-tree-id135 . 1) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . 1) (undo-tree-id149 . 1) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . 1) (undo-tree-id154 . 1)) nil (21662 47902 726980 672000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id155 . 1) (undo-tree-id156 . 1) (undo-tree-id157 . 1) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . 1) (undo-tree-id163 . 1) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (undo-tree-id169 . 1) (undo-tree-id170 . 1) (undo-tree-id171 . 1) (undo-tree-id172 . 1) (undo-tree-id173 . 1) (undo-tree-id174 . 1) (undo-tree-id175 . 1) (undo-tree-id176 . 1) (undo-tree-id177 . 1) (undo-tree-id178 . 1) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (undo-tree-id182 . 1) (undo-tree-id183 . 1) (undo-tree-id184 . 1)) nil (21662 47902 727056 556000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1)) nil (21662 47902 727117 457000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . 1) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1)) nil (21662 47902 727177 107000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . 1) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1)) nil (21662 47902 727251 543000) 0 nil]) ((#("S" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (undo-tree-id294 . 1)) nil (21662 47902 727307 30000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1)) nil (21662 47902 727361 442000) 0 nil]) ((#("O" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . 1) (undo-tree-id339 . 1) (undo-tree-id340 . 1) (undo-tree-id341 . 1) (undo-tree-id342 . 1) (undo-tree-id343 . 1)) nil (21662 47902 727413 148000) 0 nil]) ((#("D" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id344 . 1) (undo-tree-id345 . 1) (undo-tree-id346 . 1) (undo-tree-id347 . 1) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . 1) (undo-tree-id352 . 1) (undo-tree-id353 . 1) (undo-tree-id354 . 1) (undo-tree-id355 . 1) (undo-tree-id356 . 1) (undo-tree-id357 . 1) (undo-tree-id358 . 1) (undo-tree-id359 . 1) (undo-tree-id360 . 1) (undo-tree-id361 . 1) (undo-tree-id362 . 1) (undo-tree-id363 . 1) (undo-tree-id364 . 1) (undo-tree-id365 . 1) (undo-tree-id366 . 1)) nil (21662 47902 727482 807000) 0 nil]) ((#("O" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id367 . 1) (undo-tree-id368 . 1) (undo-tree-id369 . 1) (undo-tree-id370 . 1) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . 1) (undo-tree-id374 . 1) (undo-tree-id375 . 1) (undo-tree-id376 . 1) (undo-tree-id377 . 1) (undo-tree-id378 . 1) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (undo-tree-id381 . 1) (undo-tree-id382 . 1) (undo-tree-id383 . 1) (undo-tree-id384 . 1)) nil (21662 47902 727523 233000) 0 nil]) ((#("T" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id385 . 1) (undo-tree-id386 . 1) (undo-tree-id387 . 1) (undo-tree-id388 . 1) (undo-tree-id389 . 1) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (undo-tree-id392 . 1) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . 1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1)) nil (21662 47902 727560 709000) 0 nil]) ((#("/" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id401 . 1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . 1) (undo-tree-id411 . 1) (undo-tree-id412 . 1) (undo-tree-id413 . 1) (undo-tree-id414 . 1)) nil (21662 47902 727593 121000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . 1) (undo-tree-id420 . 1) (undo-tree-id421 . 1) (undo-tree-id422 . 1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) (undo-tree-id425 . 1) (undo-tree-id426 . 1)) nil (21662 47902 727621 421000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1)) nil (21662 47902 727645 929000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1)) nil (21662 47902 727666 121000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (undo-tree-id450 . 1)) nil (21662 47902 727684 453000) 0 nil]) ((#("g" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1)) nil (21662 47902 727696 488000) 0 nil]) ((#("A" 0 1 (fontified t face font-lock-comment-face)) . 1403) (undo-tree-id455 . 1) (undo-tree-id456 . 1)) nil (21662 47902 727704 435000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1397) (undo-tree-id457 . 1)) nil (21662 47902 727710 90000) 0 nil]) ((1442 . 1443)) nil (21662 47902 727714 554000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1442)) nil (21662 47902 727717 344000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1443) (undo-tree-id458 . 1)) nil (21662 47902 727722 868000) 0 nil]) ((1423 . 1424)) nil (21662 47902 727726 565000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1423)) nil (21662 47902 727729 456000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . -1424) (undo-tree-id459 . 1)) nil (21662 47902 727734 591000) 0 nil]) ((1399 . 1400)) nil (21662 47902 727738 192000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 1399) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1)) ((1399 . 1400)) (21662 47866 313327 860000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . 1399) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1)) nil (21662 47866 313549 784000) 0 nil]) ((#("*" 0 1 (fontified t face font-lock-variable-name-face)) . 1399) (undo-tree-id41 . 1)) nil (21662 47866 313353 178000) 0 nil]) ((nil rear-nonsticky nil 1459 . 1460) (nil fontified nil 1444 . 1460) (1444 . 1460)) nil (21662 47866 313358 648000) 0 nil]) ((1443 . 1444) 1442) nil (21662 47866 313363 188000) 0 nil]) ((nil rear-nonsticky nil 1442 . 1443) (nil fontified nil 1424 . 1443) (1424 . 1443)) nil (21662 47866 313368 72000) 0 nil]) ((1423 . 1424) 1422) nil (21662 47866 313372 573000) 0 nil]) ((nil rear-nonsticky nil 1422 . 1423) (nil fontified nil 1399 . 1423) (1399 . 1423)) nil (21662 47866 313377 223000) 0 nil] [nil nil ((nil rear-nonsticky nil 15008 . 15009) (nil fontified nil 1397 . 15009) (1397 . 15009)) ((#("** 1-unbind keys
#+BEGIN_SRC emacs-lisp :results none
(global-unset-key (kbd \"<f1>\"))
(global-unset-key (kbd \"<f2>\"))
(global-unset-key (kbd \"<f3>\"))
(global-unset-key (kbd \"<f4> \"))
(global-unset-key (kbd \"<f5>\"))
(global-unset-key (kbd \"<f6>\"))
(global-unset-key (kbd \"<f7>\"))
(global-unset-key (kbd \"<f8>\"))
(global-unset-key (kbd \"<f9>\"))
(global-unset-key (kbd \"<f10>\"))
(global-unset-key (kbd \"<f11>\"))
(global-unset-key (kbd \"<f12>\"))
(global-unset-key (kbd \"C-v \"))
(global-unset-key (kbd \"M-p\"))
#+END_SRC
** F1 Agenda/TODO/Search
 
#+BEGIN_SRC emacs-lisp :results none
(define-key org-mode-map (kbd \"<f1> S\") (lambda () (interactive) (org-agenda nil \"s\" \"<\")))
;;below code for by type and todo (cook)
;+TODO=\"COOK\"+Type=\"breakfest\"
(define-key org-mode-map (kbd \"<f1> v\") (lambda () (interactive) (org-agenda nil \"a\" )))
(define-key org-mode-map (kbd \"<f1> r\") (lambda () (interactive) (org-agenda nil \"r\" )))
(global-set-key (kbd \"<f1> h\") 'org-goto)
(global-set-key (kbd \"<f1> d d\") 'org-timestamp-select)
(global-set-key (kbd \"<f1> d n\") 'org-timestamp-now)
(global-set-key (kbd \"<f1> d i\") 'z-insert-date)
(global-set-key (kbd \"<f1> d l\") 'org-deadline)
(global-set-key (kbd \"<f1> d s\") 'org-schedule)
(global-set-key (kbd \"<f1> t\") 'org-todo)
(global-set-key (kbd \"<f1> a\") 'org-agenda)
(global-set-key \"\\C-ca\" 'org-agenda)

;;org cookbook

;(global-set-key (kbd \"<f1> c\") 'my-cooking-sparse-tree-breakfeast)
(define-key org-mode-map (kbd \"<f1> c b\") 'cooking-sparse-tree-breakfeast)
(define-key org-mode-map (kbd \"<f1> c m\") 'cooking-sparse-tree-main)
(define-key org-mode-map (kbd \"<f1> c r\") 'recipe-template)
(define-key org-mode-map (kbd \"<f1> c t\") 'travel-template)
#+END_SRC

** F2 Emacs plugins

#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f2> e\") 'evil-mode)
;;yas
(global-set-key (kbd \"<f2> y y\") 'yas-insert-snippet)
(global-set-key (kbd \"<f2> y n\") 'yas-new-snippet)
(global-set-key (kbd \"<f2> y r \") 'yas-reload-all)
(global-set-key (kbd \"<f2> y v \") 'yas-visit-snippet-file)

#+END_SRC

** F3 Emacs Main

#+BEGIN_SRC emacs-lisp :results none
;dired
(define-key global-map (kbd \"<f3> d\") 'dired)
(global-set-key (kbd \"<f3> j\") 'dired-jump) 
(global-set-key (kbd \"<f3> r\") 'z-edit-file-as-root) 
(global-set-key (kbd \"<f3> E\") 'view-mode) 
(global-set-key (kbd \"<f3> e\") 'read-only-mode) 
(global-set-key (kbd \"<f3> s\") 'babcore-shell-execute)
(global-set-key (kbd \"<f3> b\") 'create-scratch-buffer)
(global-set-key (kbd \"<f3> r\") 'z-edit-file-as-root)
(global-set-key (kbd \"<f3> l\") 'linium-mode)
(global-set-key (kbd \"<f3> ;\") 'comment-region)
(global-set-key (kbd \"<f3> o\") 'back-button-global)

(global-set-key (kbd \"<f3> m s\") 'start-kbd-macro)
(global-set-key (kbd \"<f3> m q\") 'end-kbd-macro)
(global-set-key (kbd \"<f3> m n\") 'name-kbd-macro)
(global-set-key (kbd \"<f3> m i\") 'insert-kbd-macro)



;;; non F3
(global-set-key (kbd \"C-+\") 'text-scale-increase)
(global-set-key (kbd \"C--\") 'text-scale-decrease)
#+END_SRC


** F4 editing 
**** F4 key
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f4> c h\") 'org-set-line-headline); convert selected lines to headers
(global-set-key (kbd \"<f4> c b\") 'org-set-line-checkbox); convert selected lines to checkboxes
;convert region to code blocks
(global-set-key (kbd \"<f4> e\") 'z-wrap-cblock-example)
(global-set-key (kbd \"<f4> b\") 'z-wrap-cblock-sh)
(global-set-key (kbd \"<f4> <f4> b\") 'z-wrap-line-bash)
(global-set-key (kbd \"<f4> r\") 'z-wrap-cblock-r)
(global-set-key (kbd \"<f4> q\") 'z-wrap-cblock-quote)
(global-set-key (kbd \"<f4> l\") 'z-wrap-cblock-lisp)
(global-set-key (kbd \"<f4> s\") 'z-wrap-cblock-sas)
;; easy spell check
(global-set-key (kbd \"<f4> w\") 'ispell-word)
(global-set-key (kbd \"<f4> W\") 'ispell)
(global-set-key (kbd \"<f4> f\") 'flyspell-check-next-highlighted-word)

(global-set-key (kbd \"<f4> ;\") 'z-copy-comment-paste)
(global-set-key (kbd \"<f4> u\") 'z-fix-characters)
(global-set-key (kbd \"<f4> 6 u\") 'upcase-region)
(global-set-key (kbd \"<f4> 6 l\") 'downcase-region)


(global-set-key (kbd \"<f4> k\") 'browse-kill-ring)
(global-set-key (kbd \"<f4> B \") 'flush-blank-lines)
#+END_SRC
**** non F4
#+BEGIN_SRC emacs-lisp :results none
;; move lines up dowb with C-S-pgup/pgdown
(global-set-key [(control shift prior )]  'move-line-up)
(global-set-key [(control shift next)]  'move-line-down)

; kill (delete) from word to back of the line
(global-set-key (kbd \"C-<backspace>\") (lambda ()
                                        (interactive)
                                        (kill-line 0)))

(global-set-key (kbd \"M-2\") 'er/expand-region)					
#+END_SRC

** F5 Gnus
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f5> g\") 'gnus)
#+END_SRC
** F6 org headers

#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f6> <f6>\") 'helm-org-headlines)
#+END_SRC

** F7 Helm
   
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f7> y\") 'helm-show-kill-ring)
(global-set-key (kbd \"<f7> k\") 'helm-show-kill-ring)
(global-set-key (kbd \"<f7> r\") 'helm-recentf)
(global-set-key (kbd \"<f7> l\") 'helm-locate)
(global-set-key (kbd \"<f7> x\") 'helm-M-x)
(global-set-key (kbd \"<f7> f\") 'helm-find-files)
;to replace native C-x C-f
(global-set-key (kbd \"C-x C-f\") 'helm-find-files)
(global-set-key (kbd \"<f7> o\") 'helm-occur)
(global-set-key (kbd \"<f7> h\") 'helm-apropos)
(global-set-key (kbd \"<f7> t\") 'helm-top)

(global-set-key (kbd \"<f7> b\") 'helm-buffers-list)
(global-set-key (kbd \"<f7> <f7>\") 'helm-mini)

(global-set-key (kbd \"C-c h\") 'helm-command-prefix)
#+END_SRC

** F8 Bookmarks/Recents
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f8> <f8> \") 'bookmark-jump)
(global-set-key (kbd \"<f8> h\") 'helm-bookmarks)
(global-set-key (kbd \"<f8> m\") 'bookmark-bmenu-list)
(global-set-key (kbd \"<f8> r\") 'recentf-open-files)
(global-set-key (kbd \"<f8> b\") 'bmkp-bookmark-set-confirm-overwrite)
(global-set-key (kbd \"<f8> s\") 'bmkp-bmenu-filter-tags-incrementally)
#+END_SRC

** F9 org1
   :PROPERTIES:
   :ID:       17b9fc26-20cc-4b8f-94f4-54aaadeeba0f
   :END:
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f9> x\") 'org-archive-subtree)
(global-set-key (kbd \"<f9> u\") 'outline-up-heading)
(global-set-key (kbd \"<f9> e\") 'org-export-dispatch)
(global-set-key (kbd \"<f9> t\") 'org-toggle-inline-images)
(global-set-key (kbd \"<f9> c\") 'org-columns)
(global-set-key (kbd \"<f9> q\") 'org-columns-quit)
(global-set-key (kbd \"<f9> b\") 'org-bibtex-yank)
(global-set-key (kbd \"<f9> r\") 'org-refile)
(global-set-key (kbd \"<f9> B\") 'org-bibtex-create)
(global-set-key (kbd \"<f9> s\") 'org-sort)
(global-set-key (kbd \"<f9> n\") 'org-narrow-to-subtree)
(global-set-key (kbd \"<f9> w\") 'widen)
(global-set-key (kbd \"<f9> d\") 'org-download-screenshot)
(global-set-key (kbd \"<f9> D\") 'org-download-delete)
;Create an ID for the entry at point if it does not yet have one.
(global-set-key (kbd \"<f9> I\") 'org-id-get-create)
(global-set-key (kbd \"C-c c\") 'org-capture)
(global-set-key (kbd \"<f9> p\") 'org-capture)
(global-set-key \"\\C-cl\" 'org-store-link)
(global-set-key (kbd \"<f9> l s\") 'org-store-link)
(global-set-key (kbd \"<f9> l i\") 'org-insert-link)
(global-set-key (kbd \"<f9> l c\") 'org-id-copy)
(global-set-key (kbd \"<f9> l e\") 'org-id-copy)
#+END_SRC 
** F9+F9 org-id goto

$Note For (kbd \"<f9> l\") to work, you need to have f9 to be a prefix key$
!look into per file hooks for the below!

#+BEGIN_EXAMPLE
(lambda () ...) is an anonymous function.

(interactive) makes the function an interactive command, which is
needed for the form to be bound to the key.
#+END_EXAMPLE

#+BEGIN_SRC emacs-lisp :results none
  ;movies DL
  (global-set-key (kbd \"<f9> <f9> v\")
    (lambda ()
      (interactive)
        (org-id-goto \"62b49339-cd19-4a3c-a6fd-70dd45be4670\")))
;  emacs
  (global-set-key (kbd \"<f9> <f9> e \")
    (lambda ()
      (interactive)
        (org-id-goto \"38a15adf-f505-4a54-b1d9-f76b22ce1147\")
        (org-narrow-to-subtree)
))
  
  
  ;org
  (global-set-key (kbd \"<f9> <f9> o\")
    (lambda ()
      (interactive)
        (org-id-goto \"be4759e1-2951-4c91-a155-056bc2a16d9f\")
        (org-narrow-to-subtree)
))
  
  ;ssh
  (global-set-key (kbd \"<f9> <f9> s\")
    (lambda ()
      (interactive)
        (org-id-goto \"bf60adbf-fc3a-4eed-be14-a9244c3fef4e\")))
  
  ;beets
  (global-set-key (kbd \"<f9> <f9> b\")
    (lambda ()
      (interactive)
        (org-id-goto \"e0837792-f794-495e-908f-f75bdb4462b3\")))
  
  
  ;git
  (global-set-key (kbd \"<f9> <f9> g\")
    (lambda ()
      (interactive)
        (org-id-goto \"7816c1c8-be9a-4fd5-8121-15c190885cd7\")))
  
  ;mobileorg
  (global-set-key (kbd \"<f9> <f9> m\")
    (lambda ()
      (interactive)
        (org-id-goto \"0367963c-9ba2-44ee-9b30-bf5b7200b873\")))
  
  ;papers
  (global-set-key (kbd \"<f9> <f9> p\")
    (lambda ()
      (interactive)
        (org-id-goto \"47bad96f-740c-4b93-b739-a4b925d85514\")))
  
  ;capture settings
 ; (global-set-key (kbd \"<f9> <f9> e c\")
  ;  (lambda ()
   ;   (interactive)
    ;    (org-id-goto \"dfffbe27-21bc-4fb9-908e-f492f4afeb60\")))
  
  
  ;papers
  (global-set-key (kbd \"<f9> <f9> c c \")
    (lambda ()
      (interactive)
        (org-id-goto \"8193566d-2dd5-4368-8238-fac2fc9aa7e9\")))
  
#+END_SRC

** F10 org 2

#+BEGIN_SRC emacs-lisp :results none
(global-set-key \"\\C-cs\" 'org-babel-execute-subtree)
(global-set-key (kbd \"<f10> b s \") 'org-babel-execute-subtree)
(global-set-key (kbd \"<f10> s d \") 'org-cut-subtree)
(global-set-key (kbd \"<f10> s y \") 'org-copy-subtree)
(global-set-key (kbd \"<f10> s p \") 'org-paste-subtree)
(global-set-key (kbd \"<f10> 8 \") 'org-toggle-heading)
(global-set-key (kbd \"<f10> 7 \") 'org-toggle-heading)
(global-set-key (kbd \"<f10> h \") 'org-insert-heading)
 (global-set-key (kbd \"<f10> n \") 'org-indent-mode)


(global-set-key (kbd \"<f10> m p \") 'org-mobile-pull)
(global-set-key (kbd \"<f10> m s \") 'org-insert-push)

(global-set-key (kbd \"<f10> t y\") 'org-table-copy-region)
(global-set-key (kbd \"<f10> t d\") 'org-table-cut-region)
(global-set-key (kbd \"<f10> t p\") 'org-table-paste-rectangle)
(global-set-key (kbd \"<f10> t c\") 'org-table-create-or-convert-from-region)

#+END_SRC   


** F11 buffer/window operations (save,close etc)
#+BEGIN_SRC emacs-lisp :results none
;;saving and closing
(global-set-key (kbd \"<f11> s\") 'save-buffer); Aux save
(global-set-key (kbd \"<f11> x\") 'kill-this-buffer) ; Close file and buffer
(global-set-key (kbd \"<f11> C\") 'z-kill-other-buffers ) ; close all buffers but current-based on user script
(global-set-key (kbd \"<f11> W\") (lambda () (interactive) (save-buffer) (kill-buffer)  ))
(global-set-key (kbd \"<f11> X\") 'save-buffers-kill-terminl)
(global-set-key (kbd \"<f11> i\") 'kill-buffer) ; ido kill buffer
(global-set-key (kbd \"<f11> S\") 'z-save-file-close-window) ; 

;buffers movment
(global-set-key (kbd \"<f11> p\") 'previous-user-buffer) ; 
(global-set-key (kbd \"<f11> n\") 'next-user-buffer) ; 
(global-set-key (kbd \"<f11> P\") 'previous-emacs-buffer) ; 
(global-set-key (kbd \"<f11> N\") 'next-emacs-buffer) ; 
(global-set-key (kbd \"<f11> <f11> \") 'switch-to-previous-buffer)


#+END_SRC 

** F12 windows 
#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd \"<f12> <f12>\") 'other-window)  
(global-set-key (kbd \"<f12> x\") 'delete-window)  
(global-set-key (kbd \"<f12> z\") 'delete-other-windows)  
(global-set-key (kbd \"<f12> v\") 'split-window-vertically)  
(global-set-key (kbd \"<f12> l\") 'split-window-right)  
(global-set-key (kbd \"<f12> j\") 'split-window-below)  
#+END_SRC

* Settings
** XDG/open with 
*** set emacs browser
#+BEGIN_SRC emacs-lisp :results none
(setq browse-url-browser-function (quote browse-url-generic))
(setq browse-url-generic-program \"chromium\")
#+END_SRC
** Backup
#+BEGIN_SRC emacs-lisp :results none
(setq backup-directory-alist '((\".\" . \"/home/zeltak/.cache/emacs/bk\")))

;Make backups of files, even when they're in version control
(setq vc-make-backup-files nil)

(setq delete-old-versions -1)
(setq version-control t)
(setq vc-make-backup-files t)
(setq auto-save-file-name-transforms '((\".*\" \"~/.emacs.d/auto-save-list/\" t)))

#+END_SRC

** Save and sessions
#+BEGIN_SRC emacs-lisp :results none
;If I reopen a file, I want to start at the line at which I was when I closed it.
; save the place in files
(require 'saveplace)
(setq-default save-place t)

; save minibuffer history
(require 'savehist)
(savehist-mode t)

;;autosave
;(setq auto-save-visited-file-name t)
;(setq auto-save-interval 20) ; twenty keystrokes
(setq auto-save-timeout 60) ; ten idle seconds

#+END_SRC

** history

#+BEGIN_SRC emacs-lisp :results none
(setq savehist-file \"/home/zeltak/.cache/emacs/hist/hist.txt\")
(savehist-mode 1)
(setq history-length t)
(setq history-delete-duplicates t)
(setq savehist-save-minibuffer-history 1)
(setq savehist-additional-variables
      '(kill-ring
        search-ring
        regexp-search-ring))
#+END_SRC

** recentf

$note its built into emacs no intsall needed$

#+BEGIN_SRC emacs-lisp :results none
  ;; (require 'recentf)
  ;; (setq recentf-auto-cleanup 'never) ;; disable before we start recentf!
  ;; (recentf-mode 1)
  ;; (setq recentf-max-menu-items 25)
  ;; ;(global-set-key \"\\C-x\\ \\C-r\" 'recentf-open-files)

;(recentf-mode 1) ; keep a list of recently opened files
;(setq recentf-max-menu-items 500)
;(setq recentf-auto-cleanup 'never) ;; disable before we start recentf!


#+END_SRC

** Remote
*** ssh
#+BEGIN_SRC emacs-lisp :results none
(require 'tramp) ; Remote file editing via ssh
(setq tramp-default-method \"ssh\")
#+END_SRC
** TODO proced
*** auto Update
#+BEGIN_SRC emacs-lisp :results none
(defun proced-settings ()
  (proced-toggle-auto-update))

(add-hook 'proced-mode-hook 'proced-settings)
#+END_SRC" 0 2 (fontified nil face font-lock-variable-name-face) 2 17 (fontified nil) 17 18 (fontified nil face font-lock-comment-delimiter-face) 18 54 (fontified nil face font-lock-comment-face) 54 71 (fontified nil face font-lock-variable-name-face) 71 77 (fontified nil) 77 83 (fontified nil face font-lock-string-face) 83 86 (fontified nil) 86 103 (fontified nil face font-lock-variable-name-face) 103 109 (fontified nil) 109 115 (fontified nil face font-lock-string-face) 115 118 (fontified nil) 118 135 (fontified nil face font-lock-variable-name-face) 135 141 (fontified nil) 141 147 (fontified nil face font-lock-string-face) 147 150 (fontified nil) 150 167 (fontified nil face font-lock-variable-name-face) 167 173 (fontified nil) 173 180 (fontified nil face font-lock-string-face) 180 183 (fontified nil) 183 200 (fontified nil face font-lock-variable-name-face) 200 206 (fontified nil) 206 212 (fontified nil face font-lock-string-face) 212 215 (fontified nil) 215 232 (fontified nil face font-lock-variable-name-face) 232 238 (fontified nil) 238 244 (fontified nil face font-lock-string-face) 244 247 (fontified nil) 247 264 (fontified nil face font-lock-variable-name-face) 264 270 (fontified nil) 270 276 (fontified nil face font-lock-string-face) 276 279 (fontified nil) 279 296 (fontified nil face font-lock-variable-name-face) 296 302 (fontified nil) 302 308 (fontified nil face font-lock-string-face) 308 311 (fontified nil) 311 328 (fontified nil face font-lock-variable-name-face) 328 334 (fontified nil) 334 340 (fontified nil face font-lock-string-face) 340 343 (fontified nil) 343 360 (fontified nil face font-lock-variable-name-face) 360 366 (fontified nil) 366 373 (fontified nil face font-lock-string-face) 373 376 (fontified nil) 376 393 (fontified nil face font-lock-variable-name-face) 393 399 (fontified nil) 399 406 (fontified nil face font-lock-string-face) 406 409 (fontified nil) 409 426 (fontified nil face font-lock-variable-name-face) 426 432 (fontified nil) 432 439 (fontified nil face font-lock-string-face) 439 442 (fontified nil) 442 459 (fontified nil face font-lock-variable-name-face) 459 465 (fontified nil) 465 471 (fontified nil face font-lock-string-face) 471 474 (fontified nil) 474 491 (fontified nil face font-lock-variable-name-face) 491 497 (fontified nil) 497 502 (fontified nil face font-lock-string-face) 502 505 (fontified nil) 505 506 (fontified nil face font-lock-comment-delimiter-face) 506 515 (fontified nil face font-lock-comment-face) 515 517 (fontified nil face font-lock-variable-name-face) 517 542 (fontified nil) 542 543 (fontified nil face font-lock-comment-delimiter-face) 543 579 (fontified nil face font-lock-comment-face) 579 590 (fontified nil face font-lock-variable-name-face) 590 609 (fontified nil) 609 617 (fontified nil face font-lock-string-face) 617 660 (fontified nil) 660 663 (fontified nil face font-lock-string-face) 663 664 (fontified nil) 664 667 (fontified nil face font-lock-string-face) 667 671 (fontified nil) 671 678 (fontified nil face font-lock-variable-name-face) 678 719 (fontified nil) 719 725 (fontified nil face font-lock-string-face) 725 731 (fontified nil) 731 742 (fontified nil face font-lock-string-face) 742 743 (fontified nil) 743 754 (fontified nil face font-lock-variable-name-face) 754 773 (fontified nil) 773 781 (fontified nil face font-lock-string-face) 781 824 (fontified nil) 824 827 (fontified nil face font-lock-string-face) 827 832 (fontified nil) 832 843 (fontified nil face font-lock-variable-name-face) 843 862 (fontified nil) 862 870 (fontified nil face font-lock-string-face) 870 913 (fontified nil) 913 916 (fontified nil face font-lock-string-face) 916 921 (fontified nil) 921 936 (fontified nil face font-lock-variable-name-face) 936 942 (fontified nil) 942 950 (fontified nil face font-lock-string-face) 950 952 (fontified nil) 952 997 (fontified nil face font-lock-string-face) 997 1019 (fontified nil) 1019 9700 (fontified nil) 9700 9737 (fontified nil face font-lock-string-face) 9737 9754 (fontified nil) 9754 9769 (fontified nil face font-lock-variable-name-face) 9769 9775 (fontified nil) 9775 9787 (fontified nil face font-lock-string-face) 9787 9789 (fontified nil) 9789 9843 (fontified nil face font-lock-string-face) 9843 9866 (fontified nil) 9866 9881 (fontified nil face font-lock-variable-name-face) 9881 9887 (fontified nil) 9887 9898 (fontified nil face font-lock-string-face) 9898 9900 (fontified nil) 9900 9958 (fontified nil face font-lock-string-face) 9958 9985 (fontified nil) 9985 10000 (fontified nil face font-lock-variable-name-face) 10000 10006 (fontified nil) 10006 10017 (fontified nil face font-lock-string-face) 10017 10019 (fontified nil) 10019 10217 (fontified nil face font-lock-string-face) 10217 10240 (fontified nil) 10240 10255 (fontified nil face font-lock-variable-name-face) 10255 10261 (fontified nil) 10261 10270 (fontified nil face font-lock-string-face) 10270 10272 (fontified nil) 10272 10348 (fontified nil face font-lock-string-face) 10348 10424 (fontified nil) 10424 10439 (fontified nil face font-lock-variable-name-face) 10439 10445 (fontified nil) 10445 10454 (fontified nil face font-lock-string-face) 10454 10513 (fontified nil) 10513 10528 (fontified nil face font-lock-variable-name-face) 10528 10534 (fontified nil) 10534 10543 (fontified nil face font-lock-string-face) 10543 10545 (fontified nil) 10545 10606 (fontified nil face font-lock-string-face) 10606 10637 (fontified nil) 10637 10652 (fontified nil face font-lock-variable-name-face) 10652 10658 (fontified nil) 10658 10667 (fontified nil face font-lock-string-face) 10667 10669 (fontified nil) 10669 10750 (fontified nil face font-lock-string-face) 10750 10775 (fontified nil) 10775 10790 (fontified nil face font-lock-variable-name-face) 10790 10796 (fontified nil) 10796 10805 (fontified nil face font-lock-string-face) 10805 10807 (fontified nil) 10807 10862 (fontified nil face font-lock-string-face) 10862 10888 (fontified nil) 10888 10903 (fontified nil face font-lock-variable-name-face) 10903 10909 (fontified nil) 10909 10918 (fontified nil face font-lock-string-face) 10918 10920 (fontified nil) 10920 10981 (fontified nil face font-lock-string-face) 10981 11010 (fontified nil) 11010 11011 (fontified nil face font-lock-comment-delimiter-face) 11011 11021 (fontified nil face font-lock-comment-face) 11021 11022 (fontified nil) 11022 11024 (fontified nil face font-lock-variable-name-face) 11024 11038 (fontified nil) 11038 11039 (fontified nil face font-lock-comment-delimiter-face) 11039 11075 (fontified nil face font-lock-comment-face) 11075 11090 (fontified nil face font-lock-variable-name-face) 11090 11096 (fontified nil) 11096 11109 (fontified nil face font-lock-string-face) 11109 11111 (fontified nil) 11111 11128 (fontified nil face font-lock-string-face) 11128 11161 (fontified nil face font-lock-string-face) 11161 11178 (fontified nil) 11178 11193 (fontified nil face font-lock-variable-name-face) 11193 11199 (fontified nil) 11199 11208 (fontified nil face font-lock-string-face) 11208 11210 (fontified nil) 11210 11268 (fontified nil face font-lock-string-face) 11268 11295 (fontified nil) 11295 11310 (fontified nil face font-lock-variable-name-face) 11310 11316 (fontified nil) 11316 11325 (fontified nil face font-lock-string-face) 11325 11327 (fontified nil) 11327 11383 (fontified nil face font-lock-string-face) 11383 11405 (fontified nil) 11405 11406 (fontified nil face font-lock-comment-delimiter-face) 11406 11415 (fontified nil face font-lock-comment-face) 11415 11416 (fontified nil) 11416 11417 (fontified nil face font-lock-variable-name-face) 11417 11427 (fontified nil) 11427 11429 (fontified nil face font-lock-variable-name-face) 11429 11445 (fontified nil) 11445 11448 (fontified nil face font-lock-variable-name-face) 11448 11467 (fontified nil) 11467 11468 (fontified nil face font-lock-comment-delimiter-face) 11468 11504 (fontified nil face font-lock-comment-face) 11504 11509 (fontified nil face font-lock-variable-name-face) 11509 11566 (fontified nil) 11566 11571 (fontified nil face font-lock-variable-name-face) 11571 11599 (fontified nil) 11599 11609 (fontified nil face font-lock-string-face) 11609 11611 (fontified nil) 11611 11612 (fontified nil face font-lock-comment-delimiter-face) 11612 11621 (fontified nil face font-lock-comment-face) 11621 11623 (fontified nil face font-lock-variable-name-face) 11623 11631 (fontified nil) 11631 11632 (fontified nil face font-lock-comment-delimiter-face) 11632 11668 (fontified nil face font-lock-comment-face) 11668 11673 (fontified nil face font-lock-variable-name-face) 11673 11697 (fontified nil) 11697 11780 (fontified nil face font-lock-string-face) 11780 11802 (fontified nil) 11802 11807 (fontified nil face font-lock-variable-name-face) 11807 11835 (fontified nil) 11835 11840 (fontified nil face font-lock-variable-name-face) 11840 11865 (fontified nil) 11865 11870 (fontified nil face font-lock-variable-name-face) 11870 11890 (fontified nil) 11890 11895 (fontified nil face font-lock-variable-name-face) 11895 11920 (fontified nil) 11920 11925 (fontified nil face font-lock-variable-name-face) 11925 11957 (fontified nil) 11957 12151 (fontified nil face font-lock-string-face) 12151 12187 (fontified nil face font-lock-string-face) 12187 12198 (fontified nil) 12198 12211 (fontified nil face font-lock-variable-name-face) 12211 12227 (fontified nil) 12227 12228 (fontified nil face font-lock-variable-name-face) 12228 12253 (fontified nil) 12253 12261 (fontified nil face font-lock-variable-name-face) 12261 12262 (fontified nil) 12262 12273 (fontified nil face font-lock-string-face) 12273 12724 (fontified nil face font-lock-string-face) 12724 12743 (fontified nil) 12743 12754 (fontified nil face font-lock-variable-name-face) 12754 12755 (fontified nil) 12755 12763 (fontified nil) 12763 12783 (fontified nil face font-lock-variable-name-face) 12783 12784 (fontified nil) 12784 12785 (fontified nil face font-lock-comment-delimiter-face) 12785 12794 (fontified nil face font-lock-comment-face) 12794 12795 (fontified nil) 12795 12797 (fontified nil face font-lock-variable-name-face) 12797 12807 (fontified nil) 12807 12812 (fontified nil face font-lock-variable-name-face) 12812 12854 (fontified nil) 12854 12855 (fontified nil face font-lock-comment-delimiter-face) 12855 12891 (fontified nil face font-lock-comment-face) 12891 12893 (fontified nil) 12893 12895 (fontified nil face font-lock-variable-name-face) 12895 12905 (fontified nil) 12905 12948 (fontified nil face font-lock-string-face) 12948 12993 (fontified nil) 12993 12995 (fontified nil face font-lock-variable-name-face) 12995 13015 (fontified nil) 13015 13017 (fontified nil face font-lock-variable-name-face) 13017 13053 (fontified nil) 13053 13055 (fontified nil face font-lock-variable-name-face) 13055 13073 (fontified nil) 13073 13085 (fontified nil face font-lock-string-face) 13085 13086 (fontified nil) 13086 13165 (fontified nil face font-lock-string-face) 13165 13200 (fontified nil face font-lock-string-face) 13200 13229 (fontified nil face font-lock-string-face) 13229 13274 (fontified nil) 13274 13275 (fontified nil face font-lock-comment-delimiter-face) 13275 13284 (fontified nil face font-lock-comment-face) 13284 13285 (fontified nil) 13285 13287 (fontified nil face font-lock-variable-name-face) 13287 13295 (fontified nil) 13295 13298 (fontified nil face font-lock-variable-name-face) 13298 13303 (fontified nil) 13303 13304 (fontified nil face font-lock-comment-delimiter-face) 13304 13340 (fontified nil face font-lock-comment-face) 13340 13348 (fontified nil face font-lock-variable-name-face) 13348 13349 (fontified nil) 13349 13568 (fontified nil face font-lock-string-face) 13568 13585 (fontified nil) 13585 13603 (fontified nil face font-lock-string-face) 13603 13611 (fontified nil face font-lock-string-face) 13611 13612 (rear-nonsticky nil fontified nil face font-lock-string-face)) . 1397) (undo-tree-id0 . -9700) (undo-tree-id1 . -13611) (undo-tree-id2 . 1) (undo-tree-id3 . -13603) (undo-tree-id4 . -13611) (undo-tree-id5 . 1) (undo-tree-id6 . -13165) (undo-tree-id7 . 887) (undo-tree-id8 . -12253) (undo-tree-id9 . 887) (undo-tree-id10 . -12253) (undo-tree-id11 . 887) (undo-tree-id12 . -12253) (undo-tree-id13 . 1863) (undo-tree-id14 . -11128) (undo-tree-id15 . 3091) (undo-tree-id16 . -9700) (undo-tree-id17 . 3091) (undo-tree-id18 . -9700) (undo-tree-id19 . 3091) (undo-tree-id20 . -9700) (undo-tree-id21 . 3091) (undo-tree-id22 . -9700) (undo-tree-id23 . 3091) (undo-tree-id24 . -9700) (undo-tree-id25 . 3091) (undo-tree-id26 . -9700) (undo-tree-id27 . 3091) (undo-tree-id28 . -9700) (undo-tree-id29 . 3091) (undo-tree-id30 . -9700) (undo-tree-id31 . 3091) (undo-tree-id32 . -9700) (nil fontified t 14982 . 15000) (nil fontified t 14965 . 14982) (nil fontified t 14746 . 14965) (nil fontified t 14745 . 14746) (nil fontified t 14737 . 14745) (nil fontified t 14701 . 14737) (nil fontified t 14700 . 14701) (nil fontified t 14695 . 14700) (nil fontified t 14692 . 14695) (nil fontified t 14684 . 14692) (nil fontified t 14682 . 14684) (nil fontified t 14681 . 14682) (nil fontified t 14672 . 14681) (nil fontified t 14671 . 14672) (nil fontified t 14626 . 14671) (nil fontified t 14597 . 14626) (nil fontified t 14562 . 14597) (nil fontified t 14483 . 14562) (nil fontified t 14482 . 14483) (nil fontified t 14470 . 14482) (nil fontified t 14452 . 14470) (nil fontified t 14450 . 14452) (nil fontified t 14414 . 14450) (nil fontified t 14412 . 14414) (nil fontified t 14392 . 14412) (nil fontified t 14390 . 14392) (nil fontified t 14345 . 14390) (nil fontified t 14302 . 14345) (nil fontified t 14292 . 14302) (nil fontified t 14290 . 14292) (nil fontified t 14288 . 14290) (nil fontified t 14252 . 14288) (nil fontified t 14251 . 14252) (nil fontified t 14209 . 14251) (nil fontified t 14204 . 14209) (nil fontified t 14194 . 14204) (nil fontified t 14192 . 14194) (nil fontified t 14191 . 14192) (nil fontified t 14182 . 14191) (nil fontified t 14181 . 14182) (nil fontified t 14180 . 14181) (nil fontified t 14160 . 14180) (nil fontified t 14152 . 14160) (nil fontified t 14151 . 14152) (nil fontified t 14140 . 14151) (nil fontified t 14121 . 14140) (nil fontified t 13670 . 14121) (nil fontified t 13659 . 13670) (nil fontified t 13658 . 13659) (nil fontified t 13650 . 13658) (nil fontified t 13625 . 13650) (nil fontified t 13624 . 13625) (nil fontified t 13608 . 13624) (nil fontified t 13595 . 13608) (nil fontified t 13584 . 13595) (nil fontified t 13548 . 13584) (nil fontified t 13354 . 13548) (nil fontified t 13322 . 13354) (nil fontified t 13317 . 13322) (nil fontified t 13292 . 13317) (nil fontified t 13287 . 13292) (nil fontified t 13267 . 13287) (nil fontified t 13262 . 13267) (nil fontified t 13237 . 13262) (nil fontified t 13232 . 13237) (nil fontified t 13204 . 13232) (nil fontified t 13199 . 13204) (nil fontified t 13177 . 13199) (nil fontified t 13094 . 13177) (nil fontified t 13070 . 13094) (nil fontified t 13065 . 13070) (nil fontified t 13029 . 13065) (nil fontified t 13028 . 13029) (nil fontified t 13020 . 13028) (nil fontified t 13018 . 13020) (nil fontified t 13009 . 13018) (nil fontified t 13008 . 13009) (nil fontified t 13006 . 13008) (nil fontified t 12996 . 13006) (nil fontified t 12968 . 12996) (nil fontified t 12963 . 12968) (nil fontified t 12906 . 12963) (nil fontified t 12901 . 12906) (nil fontified t 12865 . 12901) (nil fontified t 12864 . 12865) (nil fontified t 12845 . 12864) (nil fontified t 12842 . 12845) (nil fontified t 12826 . 12842) (nil fontified t 12824 . 12826) (nil fontified t 12814 . 12824) (nil fontified t 12813 . 12814) (nil fontified t 12812 . 12813) (nil fontified t 12803 . 12812) (nil fontified t 12802 . 12803) (nil fontified t 12780 . 12802) (nil fontified t 12724 . 12780) (nil fontified t 12722 . 12724) (nil fontified t 12713 . 12722) (nil fontified t 12707 . 12713) (nil fontified t 12692 . 12707) (nil fontified t 12665 . 12692) (nil fontified t 12607 . 12665) (nil fontified t 12605 . 12607) (nil fontified t 12596 . 12605) (nil fontified t 12590 . 12596) (nil fontified t 12575 . 12590) (nil fontified t 12558 . 12575) (nil fontified t 12525 . 12558) (nil fontified t 12508 . 12525) (nil fontified t 12506 . 12508) (nil fontified t 12493 . 12506) (nil fontified t 12487 . 12493) (nil fontified t 12472 . 12487) (nil fontified t 12436 . 12472) (nil fontified t 12435 . 12436) (nil fontified t 12421 . 12435) (nil fontified t 12419 . 12421) (nil fontified t 12418 . 12419) (nil fontified t 12408 . 12418) (nil fontified t 12407 . 12408) (nil fontified t 12378 . 12407) (nil fontified t 12317 . 12378) (nil fontified t 12315 . 12317) (nil fontified t 12306 . 12315) (nil fontified t 12300 . 12306) (nil fontified t 12285 . 12300) (nil fontified t 12259 . 12285) (nil fontified t 12204 . 12259) (nil fontified t 12202 . 12204) (nil fontified t 12193 . 12202) (nil fontified t 12187 . 12193) (nil fontified t 12172 . 12187) (nil fontified t 12147 . 12172) (nil fontified t 12066 . 12147) (nil fontified t 12064 . 12066) (nil fontified t 12055 . 12064) (nil fontified t 12049 . 12055) (nil fontified t 12034 . 12049) (nil fontified t 12003 . 12034) (nil fontified t 11942 . 12003) (nil fontified t 11940 . 11942) (nil fontified t 11931 . 11940) (nil fontified t 11925 . 11931) (nil fontified t 11910 . 11925) (nil fontified t 11851 . 11910) (nil fontified t 11842 . 11851) (nil fontified t 11836 . 11842) (nil fontified t 11821 . 11836) (nil fontified t 11745 . 11821) (nil fontified t 11669 . 11745) (nil fontified t 11667 . 11669) (nil fontified t 11658 . 11667) (nil fontified t 11652 . 11658) (nil fontified t 11637 . 11652) (nil fontified t 11614 . 11637) (nil fontified t 11416 . 11614) (nil fontified t 11414 . 11416) (nil fontified t 11403 . 11414) (nil fontified t 11397 . 11403) (nil fontified t 11382 . 11397) (nil fontified t 11355 . 11382) (nil fontified t 11297 . 11355) (nil fontified t 11295 . 11297) (nil fontified t 11284 . 11295) (nil fontified t 11278 . 11284) (nil fontified t 11263 . 11278) (nil fontified t 11240 . 11263) (nil fontified t 11186 . 11240) (nil fontified t 11184 . 11186) (nil fontified t 11172 . 11184) (nil fontified t 11166 . 11172) (nil fontified t 11151 . 11166) (nil fontified t 11134 . 11151) (nil fontified t 11097 . 11134) (nil fontified nil 2416 . 11097) (nil fontified t 2394 . 2416) (nil fontified t 2349 . 2394) (nil fontified t 2347 . 2349) (nil fontified t 2339 . 2347) (nil fontified t 2333 . 2339) (nil fontified t 2318 . 2333) (nil fontified t 2313 . 2318) (nil fontified t 2310 . 2313) (nil fontified t 2267 . 2310) (nil fontified t 2259 . 2267) (nil fontified t 2240 . 2259) (nil fontified t 2229 . 2240) (nil fontified t 2224 . 2229) (nil fontified t 2221 . 2224) (nil fontified t 2178 . 2221) (nil fontified t 2170 . 2178) (nil fontified t 2151 . 2170) (nil fontified t 2140 . 2151) (nil fontified t 2139 . 2140) (nil fontified t 2128 . 2139) (nil fontified t 2122 . 2128) (nil fontified t 2116 . 2122) (nil fontified t 2075 . 2116) (nil fontified t 2068 . 2075) (nil fontified t 2064 . 2068) (nil fontified t 2061 . 2064) (nil fontified t 2060 . 2061) (nil fontified t 2057 . 2060) (nil fontified t 2014 . 2057) (nil fontified t 2006 . 2014) (nil fontified t 1987 . 2006) (nil fontified t 1976 . 1987) (nil fontified t 1940 . 1976) (nil fontified t 1939 . 1940) (nil fontified t 1914 . 1939) (nil fontified t 1912 . 1914) (nil fontified t 1903 . 1912) (nil fontified t 1902 . 1903) (nil fontified t 1899 . 1902) (nil fontified t 1894 . 1899) (nil fontified t 1888 . 1894) (nil fontified t 1871 . 1888) (nil fontified t 1868 . 1871) (nil fontified t 1862 . 1868) (nil fontified t 1856 . 1862) (nil fontified t 1839 . 1856) (nil fontified t 1836 . 1839) (nil fontified t 1829 . 1836) (nil fontified t 1823 . 1829) (nil fontified t 1806 . 1823) (nil fontified t 1803 . 1806) (nil fontified t 1796 . 1803) (nil fontified t 1790 . 1796) (nil fontified t 1773 . 1790) (nil fontified t 1770 . 1773) (nil fontified t 1763 . 1770) (nil fontified t 1757 . 1763) (nil fontified t 1740 . 1757) (nil fontified t 1737 . 1740) (nil fontified t 1731 . 1737) (nil fontified t 1725 . 1731) (nil fontified t 1708 . 1725) (nil fontified t 1705 . 1708) (nil fontified t 1699 . 1705) (nil fontified t 1693 . 1699) (nil fontified t 1676 . 1693) (nil fontified t 1673 . 1676) (nil fontified t 1667 . 1673) (nil fontified t 1661 . 1667) (nil fontified t 1644 . 1661) (nil fontified t 1641 . 1644) (nil fontified t 1635 . 1641) (nil fontified t 1629 . 1635) (nil fontified t 1612 . 1629) (nil fontified t 1609 . 1612) (nil fontified t 1603 . 1609) (nil fontified t 1597 . 1603) (nil fontified t 1580 . 1597) (nil fontified t 1577 . 1580) (nil fontified t 1570 . 1577) (nil fontified t 1564 . 1570) (nil fontified t 1547 . 1564) (nil fontified t 1544 . 1547) (nil fontified t 1538 . 1544) (nil fontified t 1532 . 1538) (nil fontified t 1515 . 1532) (nil fontified t 1512 . 1515) (nil fontified t 1506 . 1512) (nil fontified t 1500 . 1506) (nil fontified t 1483 . 1500) (nil fontified t 1480 . 1483) (nil fontified t 1474 . 1480) (nil fontified t 1468 . 1474) (nil fontified t 1451 . 1468) (nil fontified t 1415 . 1451) (nil fontified t 1414 . 1415) (nil fontified t 1399 . 1414) (nil fontified t 1397 . 1399) (nil rear-nonsticky t 15008 . 15009)) (21662 47818 676764 633000) 0 nil]) ((1397 . 1406)) nil (21662 47818 677572 4000) 0 nil]) ((#("I" 0 1 (fontified t)) . -1397)) nil (21662 47818 676793 902000) 0 nil]) ((1397 . 1398)) nil (21662 47818 676798 321000) 0 nil]) ((1366 . 1368)) nil (21662 47818 676801 788000) 0 nil]) ((1363 . 1366)) nil (21662 47818 676805 546000) 0 nil]) ((1899 . 1900) (t 21646 48184 581440 140000)) nil (21662 47818 676809 761000) 0 nil]) nil nil (21662 47818 676813 86000) 0 nil] #1# 22338 162 nil]