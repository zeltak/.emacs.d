"e60def9059d3542c5bf9b6da49097ebc320b3886"
[cl-struct-undo-tree [nil (#1=[nil nil ((1344 . 1352) (1326 . 1334) (1248 . 1336) (244 . 288) (219 . 227) (152 . 236) (1104 . 1112) (1084 . 1085) (283 . 1103) (263 . 264) (152 . 282) (#("
;;;### (autoloads nil \"ace-isearch\" \"ace-isearch.el\" (21678 53505
;;;;;;  302956 663000))
;;; Generated autoloads from ace-isearch.el

(autoload 'ace-isearch-mode \"ace-isearch\" \"\\
Minor-mode which combines isearch and ace-jump-mode seamlessly.

\\(fn &optional ARG)\" t nil)

(defvar global-ace-isearch-mode nil \"\\
Non-nil if Global-Ace-Isearch mode is enabled.
See the command `global-ace-isearch-mode' for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-ace-isearch-mode'.\")

(custom-autoload 'global-ace-isearch-mode \"ace-isearch\" nil)

(autoload 'global-ace-isearch-mode \"ace-isearch\" \"\\
Toggle Ace-Isearch mode in all buffers.
With prefix ARG, enable Global-Ace-Isearch mode if ARG is positive;
otherwise, disable it.  If called from Lisp, enable the mode if
ARG is omitted or nil.

Ace-Isearch mode is enabled in all buffers where
`ace-isearch--turn-on' would do it.
See `ace-isearch-mode' for more information on Ace-Isearch mode.

\\(fn &optional ARG)\" t nil)

;;;***
" 0 1104 (fontified nil)) . -152) (undo-tree-id0 . -1104) 1 (t 21678 53505 629624 255000)) nil (21678 53516 23500 713000) 0 nil]) nil nil (21678 53516 23510 495000) 0 nil] #1# 1224 1 nil]