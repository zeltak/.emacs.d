"b921640438ce1c75bfebd89f59c27dd5b73d4fd9"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#3=[nil nil ((2896 . 2902)) nil (21670 28230 923235 920000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 2896) (undo-tree-id3588 . 1) (undo-tree-id3589 . 1) (undo-tree-id3590 . 1) (undo-tree-id3591 . 1) (undo-tree-id3592 . 1) (undo-tree-id3593 . 1) (undo-tree-id3594 . 1) (undo-tree-id3595 . 1) (undo-tree-id3596 . 1) (undo-tree-id3597 . 1) (undo-tree-id3598 . 1) (undo-tree-id3599 . 1) (undo-tree-id3600 . 1) (undo-tree-id3601 . 1) (undo-tree-id3602 . 1) (undo-tree-id3603 . 1) (undo-tree-id3604 . 1) (undo-tree-id3605 . 1)) nil (21670 28230 923292 872000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2896) (undo-tree-id3606 . 1) (undo-tree-id3607 . 1) (undo-tree-id3608 . 1) (undo-tree-id3609 . 1) (undo-tree-id3610 . 1) (undo-tree-id3611 . 1) (undo-tree-id3612 . 1) (undo-tree-id3613 . 1) (undo-tree-id3614 . 1) (undo-tree-id3615 . 1) (undo-tree-id3616 . 1) (undo-tree-id3617 . 1) (undo-tree-id3618 . 1) (undo-tree-id3619 . 1) (undo-tree-id3620 . 1)) nil (21670 28230 923340 247000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2896) (undo-tree-id3621 . 1) (undo-tree-id3622 . 1) (undo-tree-id3623 . 1) (undo-tree-id3624 . 1) (undo-tree-id3625 . 1) (undo-tree-id3626 . 1) (undo-tree-id3627 . 1) (undo-tree-id3628 . 1) (undo-tree-id3629 . 1) (undo-tree-id3630 . 1) (undo-tree-id3631 . 1) (undo-tree-id3632 . 1)) nil (21670 28230 923387 435000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2896) (undo-tree-id3633 . 1) (undo-tree-id3634 . 1) (undo-tree-id3635 . 1) (undo-tree-id3636 . 1) (undo-tree-id3637 . 1) (undo-tree-id3638 . 1) (undo-tree-id3639 . 1) (undo-tree-id3640 . 1) (undo-tree-id3641 . 1)) nil (21670 28230 923410 820000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . 2896) (undo-tree-id3642 . 1) (undo-tree-id3643 . 1) (undo-tree-id3644 . 1) (undo-tree-id3645 . 1) (undo-tree-id3646 . 1) (undo-tree-id3647 . 1)) nil (21670 28230 923430 187000) 0 nil]) ((#("y" 0 1 (fontified t face font-lock-string-face)) . 2896) (undo-tree-id3648 . 1) (undo-tree-id3649 . 1) (undo-tree-id3650 . 1)) nil (21670 28230 923441 249000) 0 nil]) ((#(" alias pclean='yaourt -Rns'
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t)) . 2907) (undo-tree-id3651 . 27) 2908) nil (21670 28230 923448 84000) 0 nil]) ((#(" alias plistall='yaourt -Qe' #list installed apps
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t) 16 17 (fontified t face font-lock-string-face) 17 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t) 29 30 (fontified t face font-lock-comment-delimiter-face) 30 50 (fontified t face font-lock-comment-face)) . 2874) (undo-tree-id3652 . 50) (undo-tree-id3653 . 50) (undo-tree-id3654 . 50) (undo-tree-id3655 . -49) (undo-tree-id3656 . 49) 2875) nil (21670 28230 923470 23000) 0 nil]) ((#(" alias pls='yaourt -Qs' #search localy for packages packages
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t) 24 25 (fontified t face font-lock-comment-delimiter-face) 25 61 (fontified t face font-lock-comment-face)) . 2874) (undo-tree-id3657 . 61) (undo-tree-id3658 . 61) (undo-tree-id3659 . -60) (undo-tree-id3660 . 60) 2875) nil (21670 28230 923483 756000) 0 nil]) ((#(" alias plist='yaourt -Ql' #view list of files installed with packages
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t face font-lock-string-face) 14 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 27 (fontified t face font-lock-comment-delimiter-face) 27 70 (fontified t face font-lock-comment-face)) . 2874) (undo-tree-id3661 . 70) (undo-tree-id3662 . -69) (undo-tree-id3663 . 69) 2875) nil (21670 28230 923493 980000) 0 nil]) ((#(" alias pinfo='yaourt -Qi' #view info
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t) 13 14 (fontified t face font-lock-string-face) 14 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 27 (fontified t face font-lock-comment-delimiter-face) 27 37 (fontified t face font-lock-comment-face)) . 2874) (undo-tree-id3664 . 36) 2875) nil (21670 28230 923501 55000) 0 nil]) ((#(" alias pclean='yaourt -Scc ' #clean all pacman cahce
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t) 29 30 (fontified t face font-lock-comment-delimiter-face) 30 53 (fontified t face font-lock-comment-face)) . 2849) (undo-tree-id3665 . 53) (undo-tree-id3666 . -52) (undo-tree-id3667 . 52) 2850) nil (21670 28230 923511 301000) 0 nil]) ((#(" alias pss='yaourt -Ss ' #seach all
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 26 (fontified t face font-lock-comment-delimiter-face) 26 36 (fontified t face font-lock-comment-face)) . 2849) (undo-tree-id3668 . 35) 2850) nil (21670 28230 923533 17000) 0 nil]) ((#(" alias purepo='yaourt -Syu --noconfirm' #update only Repo
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t) 40 41 (fontified t face font-lock-comment-delimiter-face) 41 58 (fontified t face font-lock-comment-face)) . 2830) (undo-tree-id3669 . 36) (undo-tree-id3670 . 36) (undo-tree-id3671 . 37) (undo-tree-id3672 . 37) 2851) nil (21670 28230 923559 280000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2807)) nil (21670 28230 923562 636000) 0 nil]) ((#("\\" 0 1 (fontified t syntax-table #2=(1) face font-lock-string-face)) . -2808)) nil (21670 28230 923565 228000) 0 nil]) ((2808 . 2809)) nil (21670 28230 923567 628000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923571 252000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923573 626000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923575 878000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923591 471000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923594 42000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923597 32000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923599 269000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923601 697000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923603 970000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923607 105000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923609 280000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923611 617000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923613 910000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923616 300000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923618 622000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923620 836000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923623 61000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923625 768000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923630 139000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923633 17000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923635 584000) 0 nil]) ((#("v" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923638 320000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923640 748000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923643 327000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923645 953000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2808)) nil (21670 28230 923648 441000) 0 nil]) ((2796 . 2802)) nil (21670 28230 923652 848000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 2796)) nil (21670 28230 923654 736000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2796)) nil (21670 28230 923656 478000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2796)) nil (21670 28230 923658 413000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("y" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3332 . 1) (undo-tree-id3333 . 1) (undo-tree-id3334 . 1) (undo-tree-id3335 . 1) (undo-tree-id3336 . 1) (undo-tree-id3337 . 1) (undo-tree-id3338 . 1) (undo-tree-id3339 . 1) (undo-tree-id3340 . 1) (undo-tree-id3341 . 1)) ((2796 . 2797)) (21670 28111 505939 348000) 0 nil]) ((#("S" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3342 . 1) (undo-tree-id3343 . 1) (undo-tree-id3344 . 1) (undo-tree-id3345 . 1) (undo-tree-id3346 . 1) (undo-tree-id3347 . 1) (undo-tree-id3348 . 1) (undo-tree-id3349 . 1) (undo-tree-id3350 . 1)) ((2796 . 2797)) (21670 28111 506471 824000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3351 . 1) (undo-tree-id3352 . 1) (undo-tree-id3353 . 1) (undo-tree-id3354 . 1) (undo-tree-id3355 . 1) (undo-tree-id3356 . 1) (undo-tree-id3357 . 1) (undo-tree-id3358 . 1)) ((2796 . 2797)) (21670 28111 679725 126000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3359 . 1) (undo-tree-id3360 . 1) (undo-tree-id3361 . 1) (undo-tree-id3362 . 1) (undo-tree-id3363 . 1) (undo-tree-id3364 . 1) (undo-tree-id3365 . 1)) ((2796 . 2797)) (21670 28111 893116 84000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3366 . 1) (undo-tree-id3367 . 1) (undo-tree-id3368 . 1) (undo-tree-id3369 . 1) (undo-tree-id3370 . 1) (undo-tree-id3371 . 1)) ((2796 . 2797)) (21670 28112 377304 491000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3372 . 1) (undo-tree-id3373 . 1) (undo-tree-id3374 . 1) (undo-tree-id3375 . 1) (undo-tree-id3376 . 1)) ((2796 . 2797)) (21670 28112 582348 560000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3377 . 1) (undo-tree-id3378 . 1) (undo-tree-id3379 . 1) (undo-tree-id3380 . 1)) ((2796 . 2797)) (21670 28112 795881 22000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3381 . 1) (undo-tree-id3382 . 1) (undo-tree-id3383 . 1)) nil (21670 28112 985529 591000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3384 . 1) (undo-tree-id3385 . 1)) nil (21670 28111 506023 392000) 0 nil]) ((#("y" 0 1 (fontified t face font-lock-string-face)) . 2796) (undo-tree-id3386 . 1)) nil (21670 28111 506027 160000) 0 nil]) ((#(" alias pog='yaourt ' #safe install 
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 22 (fontified t face font-lock-comment-delimiter-face) 22 36 (fontified t face font-lock-comment-face)) . 2775) (undo-tree-id3387 . 36) (undo-tree-id3388 . 36) (undo-tree-id3389 . 36) (undo-tree-id3390 . 36) (undo-tree-id3391 . 36) (undo-tree-id3392 . -35) (undo-tree-id3393 . 35) 2776) nil (21670 28111 506039 67000) 0 nil]) ((#(" alias psin='yaourt' #safe install 
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 11 (fontified t face font-lock-variable-name-face) 11 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 22 (fontified t face font-lock-comment-delimiter-face) 22 36 (fontified t face font-lock-comment-face)) . 2775) (undo-tree-id3394 . 17) (undo-tree-id3395 . 36) (undo-tree-id3396 . 17) (undo-tree-id3397 . 18) 2793) nil (21670 28111 506047 151000) 0 nil]) ((2754 . 2757)) nil (21670 28111 506049 942000) 0 nil]) ((2748 . 2755)) nil (21670 28111 506051 824000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . -2748)) nil (21670 28111 506053 682000) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-string-face)) . -2749)) nil (21670 28111 506055 658000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . -2750)) nil (21670 28111 506057 861000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2751)) nil (21670 28111 506060 25000) 0 nil]) ((2748 . 2752)) nil (21670 28111 506062 6000) 0 nil]) ((#("'" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3398 . 1) (undo-tree-id3399 . 1) (undo-tree-id3400 . 1) (undo-tree-id3401 . 1) (undo-tree-id3402 . 1) (undo-tree-id3403 . 1) (undo-tree-id3404 . 1) (undo-tree-id3405 . 1) (undo-tree-id3406 . 1) (undo-tree-id3407 . 1) (undo-tree-id3408 . 1) (undo-tree-id3409 . 1) (undo-tree-id3410 . 1) (undo-tree-id3411 . 1) (undo-tree-id3412 . 1) (undo-tree-id3413 . 1) (undo-tree-id3414 . 1) (undo-tree-id3415 . 1) (undo-tree-id3416 . 1)) nil (21670 28111 506088 661000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3417 . 1) (undo-tree-id3418 . 1) (undo-tree-id3419 . 1) (undo-tree-id3420 . 1) (undo-tree-id3421 . 1) (undo-tree-id3422 . 1) (undo-tree-id3423 . 1) (undo-tree-id3424 . 1) (undo-tree-id3425 . 1) (undo-tree-id3426 . 1) (undo-tree-id3427 . 1) (undo-tree-id3428 . 1) (undo-tree-id3429 . 1) (undo-tree-id3430 . 1) (undo-tree-id3431 . 1) (undo-tree-id3432 . 1) (undo-tree-id3433 . 1) (undo-tree-id3434 . 1)) nil (21670 28111 506115 809000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3435 . 1) (undo-tree-id3436 . 1) (undo-tree-id3437 . 1) (undo-tree-id3438 . 1) (undo-tree-id3439 . 1) (undo-tree-id3440 . 1) (undo-tree-id3441 . 1) (undo-tree-id3442 . 1) (undo-tree-id3443 . 1) (undo-tree-id3444 . 1) (undo-tree-id3445 . 1) (undo-tree-id3446 . 1) (undo-tree-id3447 . 1) (undo-tree-id3448 . 1) (undo-tree-id3449 . 1) (undo-tree-id3450 . 1) (undo-tree-id3451 . 1)) nil (21670 28111 506140 671000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3452 . 1) (undo-tree-id3453 . 1) (undo-tree-id3454 . 1) (undo-tree-id3455 . 1) (undo-tree-id3456 . 1) (undo-tree-id3457 . 1) (undo-tree-id3458 . 1) (undo-tree-id3459 . 1) (undo-tree-id3460 . 1) (undo-tree-id3461 . 1) (undo-tree-id3462 . 1) (undo-tree-id3463 . 1) (undo-tree-id3464 . 1) (undo-tree-id3465 . 1) (undo-tree-id3466 . 1) (undo-tree-id3467 . 1)) nil (21670 28111 506163 995000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3468 . 1) (undo-tree-id3469 . 1) (undo-tree-id3470 . 1) (undo-tree-id3471 . 1) (undo-tree-id3472 . 1) (undo-tree-id3473 . 1) (undo-tree-id3474 . 1) (undo-tree-id3475 . 1) (undo-tree-id3476 . 1) (undo-tree-id3477 . 1) (undo-tree-id3478 . 1) (undo-tree-id3479 . 1) (undo-tree-id3480 . 1) (undo-tree-id3481 . 1) (undo-tree-id3482 . 1)) nil (21670 28111 506185 973000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3483 . 1) (undo-tree-id3484 . 1) (undo-tree-id3485 . 1) (undo-tree-id3486 . 1) (undo-tree-id3487 . 1) (undo-tree-id3488 . 1) (undo-tree-id3489 . 1) (undo-tree-id3490 . 1) (undo-tree-id3491 . 1) (undo-tree-id3492 . 1) (undo-tree-id3493 . 1) (undo-tree-id3494 . 1) (undo-tree-id3495 . 1) (undo-tree-id3496 . 1)) nil (21670 28111 506206 822000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3497 . 1) (undo-tree-id3498 . 1) (undo-tree-id3499 . 1) (undo-tree-id3500 . 1) (undo-tree-id3501 . 1) (undo-tree-id3502 . 1) (undo-tree-id3503 . 1) (undo-tree-id3504 . 1) (undo-tree-id3505 . 1) (undo-tree-id3506 . 1) (undo-tree-id3507 . 1) (undo-tree-id3508 . 1) (undo-tree-id3509 . 1)) nil (21670 28111 506226 181000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3510 . 1) (undo-tree-id3511 . 1) (undo-tree-id3512 . 1) (undo-tree-id3513 . 1) (undo-tree-id3514 . 1) (undo-tree-id3515 . 1) (undo-tree-id3516 . 1) (undo-tree-id3517 . 1) (undo-tree-id3518 . 1) (undo-tree-id3519 . 1) (undo-tree-id3520 . 1) (undo-tree-id3521 . 1)) nil (21670 28111 506246 264000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3522 . 1) (undo-tree-id3523 . 1) (undo-tree-id3524 . 1) (undo-tree-id3525 . 1) (undo-tree-id3526 . 1) (undo-tree-id3527 . 1) (undo-tree-id3528 . 1) (undo-tree-id3529 . 1) (undo-tree-id3530 . 1) (undo-tree-id3531 . 1) (undo-tree-id3532 . 1)) nil (21670 28111 506263 622000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3533 . 1) (undo-tree-id3534 . 1) (undo-tree-id3535 . 1) (undo-tree-id3536 . 1) (undo-tree-id3537 . 1) (undo-tree-id3538 . 1) (undo-tree-id3539 . 1) (undo-tree-id3540 . 1) (undo-tree-id3541 . 1) (undo-tree-id3542 . 1)) nil (21670 28111 506279 638000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3543 . 1) (undo-tree-id3544 . 1) (undo-tree-id3545 . 1) (undo-tree-id3546 . 1) (undo-tree-id3547 . 1) (undo-tree-id3548 . 1) (undo-tree-id3549 . 1) (undo-tree-id3550 . 1) (undo-tree-id3551 . 1)) nil (21670 28111 506293 617000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3552 . 1) (undo-tree-id3553 . 1) (undo-tree-id3554 . 1) (undo-tree-id3555 . 1) (undo-tree-id3556 . 1) (undo-tree-id3557 . 1) (undo-tree-id3558 . 1) (undo-tree-id3559 . 1)) nil (21670 28111 506306 716000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3560 . 1) (undo-tree-id3561 . 1) (undo-tree-id3562 . 1) (undo-tree-id3563 . 1) (undo-tree-id3564 . 1) (undo-tree-id3565 . 1) (undo-tree-id3566 . 1)) nil (21670 28111 506318 466000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3567 . 1) (undo-tree-id3568 . 1) (undo-tree-id3569 . 1) (undo-tree-id3570 . 1) (undo-tree-id3571 . 1) (undo-tree-id3572 . 1)) nil (21670 28111 506329 360000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3573 . 1) (undo-tree-id3574 . 1) (undo-tree-id3575 . 1) (undo-tree-id3576 . 1) (undo-tree-id3577 . 1)) nil (21670 28111 506338 290000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3578 . 1) (undo-tree-id3579 . 1) (undo-tree-id3580 . 1) (undo-tree-id3581 . 1)) nil (21670 28111 506346 254000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3582 . 1) (undo-tree-id3583 . 1) (undo-tree-id3584 . 1)) nil (21670 28111 506352 459000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3585 . 1) (undo-tree-id3586 . 1)) nil (21670 28111 506357 822000) 0 nil]) ((#("y" 0 1 (fontified t face font-lock-string-face)) . 2748) (undo-tree-id3587 . 1) (t 21670 27989 134510 744000)) nil (21670 28111 506361 833000) 0 nil]) ((#("
" 0 1 (fontified t)) . 6094) (undo-tree-id3326 . 1) (undo-tree-id3327 . 1) (undo-tree-id3328 . 1) (undo-tree-id3329 . 1) (undo-tree-id3330 . 1) (undo-tree-id3331 . 1) (t 21670 27972 354374 635000)) nil (21670 27988 877586 859000) 0 nil]) ((nil rear-nonsticky nil 762 . 763) (nil fontified nil 729 . 763) (729 . 763)) nil (21670 27972 250888 861000) 0 nil]) ((#("# glob support
setopt extendedglob
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 15 (fontified t face font-lock-comment-face) 15 21 (fontified t face font-lock-builtin-face) 21 35 (fontified t)) . 5912) (undo-tree-id3320 . 20) (undo-tree-id3321 . 35) (undo-tree-id3322 . 22) (undo-tree-id3323 . 22) (undo-tree-id3324 . 22) (undo-tree-id3325 . 22) 5925 (t 21670 27959 994274 974000)) nil (21670 27972 250930 107000) 0 nil]) ((5800 . 5808)) nil (21670 27959 788933 596000) 0 nil]) ((5799 . 5800) (#("8c" 0 2 (fontified nil)) . 5799) (5783 . 5799) 5785) nil (21670 27959 788940 813000) 0 nil]) ((5783 . 5785)) nil (21670 27959 788944 900000) 0 nil]) ((5782 . 5783)) nil (21670 27959 788947 932000) 0 nil]) ((#("#. $HOME/.private_stuff.zsh
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 28 (fontified t face font-lock-comment-face)) . 5782) (undo-tree-id3283 . 28) (undo-tree-id3284 . 28) (undo-tree-id3285 . 28) (undo-tree-id3286 . 28) (undo-tree-id3287 . 28) (undo-tree-id3288 . -27) (undo-tree-id3289 . 28)) nil (21670 27959 788971 291000) 0 nil]) ((#("#for the ssh keychain
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 22 (fontified t face font-lock-comment-face)) . 5782) (undo-tree-id3290 . 22) (undo-tree-id3291 . 22) (undo-tree-id3292 . 22) (undo-tree-id3293 . 22)) nil (21670 27959 788987 54000) 0 nil]) ((nil rear-nonsticky nil 6258 . 6259) (nil fontified nil 6258 . 6259) (#("
" 0 1 (fontified nil)) . -6379) (6258 . 6380)) nil (21670 27959 788991 589000) 0 nil]) ((6257 . 6258)) nil (21670 27959 788994 502000) 0 nil]) ((6243 . 6257)) nil (21670 27959 788996 780000) 0 nil]) ((#("# #task
# # show urgent (due) taskwarrior tasks
# if whence task > /dev/null ; then
#   task next due.before:2days
# fi

" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face) 3 8 (fontified t face font-lock-comment-face) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 12 (fontified t face font-lock-comment-face) 12 48 (fontified t face font-lock-comment-face) 48 50 (fontified t face font-lock-comment-delimiter-face) 50 53 (fontified t face font-lock-comment-face) 53 59 (fontified t face font-lock-comment-face) 59 79 (fontified t face font-lock-comment-face) 79 83 (fontified t face font-lock-comment-face) 83 84 (fontified t face font-lock-comment-face) 84 86 (fontified t face font-lock-comment-delimiter-face) 86 88 (fontified t face font-lock-comment-delimiter-face) 88 115 (fontified t face font-lock-comment-face) 115 117 (fontified t face font-lock-comment-delimiter-face) 117 119 (fontified t face font-lock-comment-face) 119 120 (fontified t face font-lock-comment-face) 120 121 (fontified t)) . 5782) (undo-tree-id3294 . 121) (undo-tree-id3295 . -120) (undo-tree-id3296 . -120) (undo-tree-id3297 . -120) (undo-tree-id3298 . 4) (undo-tree-id3299 . 1) (undo-tree-id3300 . -120) 5902) nil (21670 27959 789027 636000) 0 nil]) ((#("

# if [ -f ~/.zsh_nocorrect ]; then
#     while read -r COMMAND; do
#         alias $COMMAND=\"nocorrect $COMMAND\"
#     done < ~/.zsh_nocorrect
# fi
# 

" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 37 (fontified t face font-lock-comment-face) 37 43 (fontified t face font-lock-comment-delimiter-face) 43 69 (fontified t face font-lock-comment-face) 69 79 (fontified t face font-lock-comment-delimiter-face) 79 115 (fontified t face font-lock-comment-face) 115 121 (fontified t face font-lock-comment-delimiter-face) 121 145 (fontified t face font-lock-comment-face) 145 147 (fontified t face font-lock-comment-delimiter-face) 147 150 (fontified t face font-lock-comment-face) 150 152 (fontified t face font-lock-comment-delimiter-face) 152 153 (fontified t face font-lock-comment-face) 153 154 (fontified t)) . -5782) (undo-tree-id3301 . -154) (undo-tree-id3302 . 153) (undo-tree-id3303 . -153) (undo-tree-id3304 . -154) (undo-tree-id3305 . -154) (undo-tree-id3306 . -154) (undo-tree-id3307 . -154) (undo-tree-id3308 . -154) (undo-tree-id3309 . -154) (undo-tree-id3310 . -154) (undo-tree-id3311 . -153)) nil (21670 27959 789066 284000) 0 nil]) ((nil rear-nonsticky nil 693 . 694) (nil fontified nil 693 . 694) (#("
" 0 1 (fontified nil)) . -727) (693 . 728)) nil (21670 27959 789072 698000) 0 nil]) ((#("#autocorrect
unsetopt correct_all
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 13 (fontified t face font-lock-comment-face) 13 21 (fontified t face font-lock-builtin-face) 21 34 (fontified t)) . 5749) (undo-tree-id3312 . 34) (undo-tree-id3313 . -13) (undo-tree-id3314 . -13) (undo-tree-id3315 . -13) 5762) nil (21670 27959 789083 327000) 0 nil]) ((1824 . 1828)) nil (21670 27959 789086 48000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1849)) nil (21670 27959 789088 170000) 0 nil]) ((#("{" 0 1 (fontified t face font-lock-comment-face)) . -1850)) nil (21670 27959 789089 897000) 0 nil]) ((#("{" 0 1 (fontified t face font-lock-comment-face)) . -1851)) nil (21670 27959 789091 858000) 0 nil]) ((#("{" 0 1 (fontified t face font-lock-comment-face)) . -1852)) nil (21670 27959 789094 843000) 0 nil]) ((1840 . 1841) (#("8c" 0 2 (fontified nil)) . 1840) (1824 . 1840) 1826) nil (21670 27959 789098 770000) 0 nil]) ((1824 . 1826)) nil (21670 27959 789101 739000) 0 nil]) ((#("9" 0 1 (fontified t)) . -1824)) nil (21670 27959 789104 56000) 0 nil]) ((#("8" 0 1 (fontified t)) . -1825)) nil (21670 27959 789117 990000) 0 nil]) ((1824 . 1826)) nil (21670 27959 789120 280000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1824) (undo-tree-id3316 . 1)) nil (21670 27959 789125 75000) 0 nil]) ((#("# }}}
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 6 (fontified t face font-lock-comment-face)) . 1824) (undo-tree-id3317 . 6)) nil (21670 27959 789130 935000) 0 nil]) ((#("######################################################################################3
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 86 (fontified t syntax-table #1=(3) face font-lock-comment-delimiter-face) 86 88 (fontified t face font-lock-comment-face)) . 1824) (undo-tree-id3318 . 88)) nil (21670 27959 789135 982000) 0 nil]) ((#("######################################################################################3
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 86 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 86 88 (fontified t face font-lock-comment-face)) . 1824) (undo-tree-id3319 . 88) (t 21670 27890 300389 753000)) nil (21670 27959 789142 341000) 0 nil]) ((693 . 698)) nil (21670 27889 714927 174000) 0 nil]) ((nil rear-nonsticky nil 415 . 416) (nil fontified nil 415 . 416) (#("
" 0 1 (fontified nil)) . -691) (415 . 692)) nil (21670 27889 714936 771000) 0 nil]) ((414 . 416)) nil (21670 27889 714945 618000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1541) (undo-tree-id3138 . 1) (undo-tree-id3139 . 1) (undo-tree-id3140 . 1) (undo-tree-id3141 . 1) (undo-tree-id3142 . 1) (undo-tree-id3143 . 1) (undo-tree-id3144 . 1) (undo-tree-id3145 . 1) (undo-tree-id3146 . 1) (undo-tree-id3147 . 1) (undo-tree-id3148 . 1) (undo-tree-id3149 . 1) (undo-tree-id3150 . 1) (undo-tree-id3151 . 1) (undo-tree-id3152 . 1) (undo-tree-id3153 . 1) (undo-tree-id3154 . 1) (undo-tree-id3155 . 1) (undo-tree-id3156 . 1) (undo-tree-id3157 . 1) (undo-tree-id3158 . 1) (undo-tree-id3159 . 1) (undo-tree-id3160 . 1) (undo-tree-id3161 . 1) (undo-tree-id3162 . 1) (undo-tree-id3163 . 1) (undo-tree-id3164 . 1) (undo-tree-id3165 . 1) (undo-tree-id3166 . 1) (undo-tree-id3167 . 1) (undo-tree-id3168 . 1) (undo-tree-id3169 . 1) (undo-tree-id3170 . 1) (undo-tree-id3171 . 1) (undo-tree-id3172 . 1) (undo-tree-id3173 . 1) (undo-tree-id3174 . 1) (undo-tree-id3175 . 1) (undo-tree-id3176 . 1) (undo-tree-id3177 . 1) (undo-tree-id3178 . 1) (undo-tree-id3179 . 1) (undo-tree-id3180 . 1) (undo-tree-id3181 . 1)) nil (21670 27889 715071 716000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1541) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . 1) (undo-tree-id3187 . 1) (undo-tree-id3188 . 1) (undo-tree-id3189 . 1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . 1) (undo-tree-id3202 . -1) (undo-tree-id3203 . 1) (undo-tree-id3204 . -1) (undo-tree-id3205 . 1) (undo-tree-id3206 . -1)) nil (21670 27889 715153 491000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1541) (undo-tree-id3207 . 1) (undo-tree-id3208 . 1)) nil (21670 27889 715167 287000) 0 nil]) ((#("## fix some terminal keys
bindkey \"\\e[1~\" beginning-of-line
bindkey \"\\e[4~\" end-of-line
bindkey \"\\e[8~\" end-of-line
bindkey \"\\e[7~\" beginning-of-line
bindkey \"\\eOH\" beginning-of-line
bindkey \"\\eOF\" end-of-line

## fix term freezes and no input possible
setopt nohistfcntllock
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 26 (fontified t face font-lock-comment-face) 26 33 (fontified t face font-lock-builtin-face) 33 34 (fontified t) 34 41 (fontified t face font-lock-string-face) 41 60 (fontified t) 60 67 (fontified t face font-lock-builtin-face) 67 68 (fontified t) 68 75 (fontified t face font-lock-string-face) 75 88 (fontified t) 88 95 (fontified t face font-lock-builtin-face) 95 96 (fontified t) 96 103 (fontified t face font-lock-string-face) 103 116 (fontified t) 116 123 (fontified t face font-lock-builtin-face) 123 124 (fontified t) 124 131 (fontified t face font-lock-string-face) 131 150 (fontified t) 150 157 (fontified t face font-lock-builtin-face) 157 158 (fontified t) 158 164 (fontified t face font-lock-string-face) 164 183 (fontified t) 183 190 (fontified t face font-lock-builtin-face) 190 191 (fontified t) 191 197 (fontified t face font-lock-string-face) 197 211 (fontified t) 211 212 (fontified t face font-lock-comment-delimiter-face) 212 213 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 213 214 (fontified t face font-lock-comment-delimiter-face) 214 253 (fontified t face font-lock-comment-face) 253 259 (fontified t face font-lock-builtin-face) 259 276 (fontified t)) . 1543) (undo-tree-id3209 . 276) (undo-tree-id3210 . -253) (undo-tree-id3211 . -253) (undo-tree-id3212 . 276) (undo-tree-id3213 . 250) (undo-tree-id3214 . 216) (undo-tree-id3215 . 188) (undo-tree-id3216 . 160) (undo-tree-id3217 . 126) (undo-tree-id3218 . 93) (undo-tree-id3219 . 66) (undo-tree-id3220 . 65) (undo-tree-id3221 . 23) (undo-tree-id3222 . 23) (undo-tree-id3223 . 65) (undo-tree-id3224 . 66) (undo-tree-id3225 . 93) (undo-tree-id3226 . 126) (undo-tree-id3227 . 160) (undo-tree-id3228 . 188) (undo-tree-id3229 . 216) (undo-tree-id3230 . 250) (undo-tree-id3231 . 276) (undo-tree-id3232 . 276) (undo-tree-id3233 . -276) (undo-tree-id3234 . 276) (undo-tree-id3235 . -253) (undo-tree-id3236 . 250) (undo-tree-id3237 . 216) (undo-tree-id3238 . 188) (undo-tree-id3239 . 160) (undo-tree-id3240 . 126) (undo-tree-id3241 . 93) (undo-tree-id3242 . 66) (undo-tree-id3243 . 65) (undo-tree-id3244 . 23) 1796) nil (21670 27889 715264 723000) 0 nil]) ((1540 . 1542)) nil (21670 27889 715275 387000) 0 nil]) ((1502 . 1514)) nil (21670 27889 715278 447000) 0 nil]) ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -1502)) nil (21670 27889 715281 31000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -1503)) nil (21670 27889 715283 948000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -1504)) nil (21670 27889 715286 764000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -1505)) nil (21670 27889 715290 726000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -1506)) nil (21670 27889 715293 822000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -1507)) nil (21670 27889 715296 630000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1508)) nil (21670 27889 715299 496000) 0 nil]) ((1501 . 1509)) nil (21670 27889 715302 440000) 0 nil]) ((1499 . 1500)) nil (21670 27889 715304 902000) 0 nil]) ((1499 . 1500)) nil (21670 27889 715307 534000) 0 nil]) ((1499 . 1500)) nil (21670 27889 715309 959000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1499) (undo-tree-id3245 . 1)) nil (21670 27889 715316 919000) 0 nil]) ((#("# alias ohmyzsh=\"mate ~/.oh-my-zsh\"
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 36 (fontified t face font-lock-comment-face)) . 737) (undo-tree-id3246 . 36) (undo-tree-id3247 . 36) (undo-tree-id3248 . -35) (undo-tree-id3249 . 36)) nil (21670 27889 715332 533000) 0 nil]) ((#("# alias zshconfig=\"mate ~/.zshrc\"
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 34 (fontified t face font-lock-comment-face)) . 737) (undo-tree-id3250 . 34) (undo-tree-id3251 . -33) (undo-tree-id3252 . 34)) nil (21670 27889 715344 281000) 0 nil]) ((#("# Example aliases
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 18 (fontified t face font-lock-comment-face)) . 737) (undo-tree-id3253 . 18)) nil (21670 27889 715350 983000) 0 nil]) ((#("#ZSH_THEME=\"sunrise\"
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 21 (fontified t face font-lock-comment-face)) . 692) (undo-tree-id3254 . 2) 711) nil (21670 27889 715357 708000) 0 nil]) ((639 . 640)) nil (21670 27889 715361 301000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -639)) nil (21670 27889 715364 433000) 0 nil]) ((#("i" 0 1 (fontified t)) . -640)) nil (21670 27889 715367 333000) 0 nil]) ((#("#" 0 1 (fontified t syntax-table #1#)) . -641) (undo-tree-id3255 . 1) (undo-tree-id3256 . 1)) nil (21670 27889 715377 815000) 0 nil]) ((#(" " 0 1 (fontified t)) . -642) (undo-tree-id3257 . 1)) nil (21670 27889 715384 599000) 0 nil]) ((640 . 641)) nil (21670 27889 715387 948000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -536)) nil (21670 27889 715391 863000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -537)) nil (21670 27889 715395 521000) 0 nil]) ((#("i" 0 1 (fontified t)) . -537)) nil (21670 27889 715399 2000) 0 nil]) ((537 . 538)) nil (21670 27889 715402 135000) 0 nil]) ((#("
" 0 1 (fontified t)) . 504) (undo-tree-id3258 . 1)) nil (21670 27889 715408 549000) 0 nil]) ((#("
" 0 1 (fontified t)) . 504) (undo-tree-id3259 . 1)) nil (21670 27889 715416 933000) 0 nil]) ((152 . 155)) nil (21670 27889 715420 918000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 34) (undo-tree-id3260 . -1)) nil (21670 27889 715427 248000) 0 nil]) ((nil rear-nonsticky nil 34 . 35) (nil fontified nil 34 . 35) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -152) (34 . 153)) nil (21670 27889 715432 580000) 0 nil]) ((#("#--------------> $NOTE$!! ALL PATH variables are in .zshen
#--------------> $NOTE$!! ALL PATH variables are in .zshen
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 17 (fontified t face font-lock-comment-face) 17 58 (fontified t face font-lock-comment-face) 58 59 (fontified t face font-lock-comment-face) 59 60 (fontified t face font-lock-comment-delimiter-face) 60 116 (fontified t face font-lock-comment-face) 116 117 (rear-nonsticky t fontified t face font-lock-comment-face) 117 118 (fontified t face font-lock-comment-face)) . 384) (undo-tree-id3261 . -59) (undo-tree-id3262 . -59) (undo-tree-id3263 . -59) (undo-tree-id3264 . -59) (undo-tree-id3265 . -59) 443) nil (21670 27889 715450 792000) 0 nil]) ((#("
" 0 1 (fontified t)) . 383)) nil (21670 27889 715455 432000) 0 nil]) ((nil rear-nonsticky nil 292 . 293) (nil fontified nil 234 . 293) (234 . 293)) nil (21670 27889 715459 912000) 0 nil]) ((233 . 234)) nil (21670 27889 715464 409000) 0 nil]) ((#("[[ $TERM == \"dumb\" ]] && unsetopt zle && PS1='$ ' && return
" 0 4 (fontified t) 4 8 (fontified t face font-lock-variable-name-face) 8 12 (fontified t) 12 18 (fontified t face font-lock-string-face) 18 25 (fontified t) 25 33 (fontified t face font-lock-builtin-face) 33 41 (fontified t) 41 44 (fontified t face font-lock-variable-name-face) 44 45 (fontified t) 45 49 (fontified t face font-lock-string-face) 49 53 (fontified t) 53 59 (fontified t face font-lock-keyword-face) 59 60 (fontified t)) . 324) 349) nil (21670 27889 715468 10000) 0 nil]) ((257 . 261)) nil (21670 27889 715471 308000) 0 nil]) ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -257)) nil (21670 27889 715474 561000) 0 nil]) ((#("Z" 0 1 (fontified t face font-lock-comment-face)) . -258)) nil (21670 27889 715477 847000) 0 nil]) ((#("S" 0 1 (fontified t face font-lock-comment-face)) . -259)) nil (21670 27889 715480 993000) 0 nil]) ((#("G" 0 1 (fontified t face font-lock-comment-face)) . -260)) nil (21670 27889 715483 985000) 0 nil]) ((255 . 261)) nil (21670 27889 715487 184000) 0 nil]) ((253 . 255)) nil (21670 27889 715489 973000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -253)) nil (21670 27889 715494 25000) 0 nil]) ((252 . 254)) nil (21670 27889 715497 163000) 0 nil]) ((251 . 252) (#("8c" 0 2 (fontified nil)) . 251) (235 . 251) 237) nil (21670 27889 715501 554000) 0 nil]) ((235 . 237)) nil (21670 27889 715505 956000) 0 nil]) ((235 . 236)) nil (21670 27889 715508 723000) 0 nil]) ((#("i" 0 1 (fontified t)) . -235)) nil (21670 27889 715511 810000) 0 nil]) ((235 . 236)) nil (21670 27889 715514 930000) 0 nil]) ((#("
" 0 1 (fontified t)) . 235)) nil (21670 27889 715517 621000) 0 nil]) ((17 . 33)) nil (21670 27889 715521 619000) 0 nil]) ((nil rear-nonsticky nil 18 . 19) (nil fontified nil 18 . 19) (#("
" 0 1 (fontified nil)) . -216) (18 . 217)) nil (21670 27889 715526 16000) 0 nil]) ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . 17) (18 . 19)) nil (21670 27889 715530 358000) 0 nil]) ((17 . 18) (#("8c" 0 2 (fontified nil)) . 17) (1 . 17) 3) nil (21670 27889 715535 220000) 0 nil]) ((1 . 3)) nil (21670 27889 715538 737000) 0 nil]) ((1 . 5)) nil (21670 27889 715541 706000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5934) (undo-tree-id3266 . 1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1)) nil (21670 27889 715553 976000) 0 nil]) ((#("#save a history file
function precmd() {
if [ \"$(id -u)\" -ne 0 ]; then
FULL_CMD_LOG=/home/zeltak/logs/zsh_history.log;
echo \"`/bin/date +%Y%m%d.%H%M.%S` `pwd` `history -1`\" >> ${FULL_CMD_LOG};
fi
}
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 21 (fontified t face font-lock-comment-face) 21 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 36 (fontified t face font-lock-function-name-face) 36 41 (fontified t) 41 43 (fontified t face font-lock-keyword-face) 43 46 (fontified t) 46 56 (fontified t face font-lock-string-face) 56 66 (fontified t) 66 70 (fontified t face font-lock-keyword-face) 70 71 (fontified t) 71 83 (fontified t face font-lock-variable-name-face) 83 119 (fontified t) 119 123 (fontified t face font-lock-builtin-face) 123 124 (fontified t) 124 172 (fontified t face font-lock-string-face) 172 178 (fontified t) 178 190 (fontified t face font-lock-variable-name-face) 190 193 (fontified t) 193 195 (fontified t face font-lock-keyword-face) 195 198 (fontified t)) . 5934) (undo-tree-id3269 . -21) (undo-tree-id3270 . -196) (undo-tree-id3271 . -196) (undo-tree-id3272 . -21) (undo-tree-id3273 . -21) (undo-tree-id3274 . -119) (undo-tree-id3275 . -119) (undo-tree-id3276 . -119) (undo-tree-id3277 . -196) (undo-tree-id3278 . 2) (undo-tree-id3279 . -197) (undo-tree-id3280 . 159) (undo-tree-id3281 . -40) 6130) nil (21670 27889 715596 134000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5934)) nil (21670 27889 715602 231000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5934)) nil (21670 27889 715605 481000) 0 nil]) ((#("######################################################################################3
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 86 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 86 88 (fontified t face font-lock-comment-face)) . 5935)) nil (21670 27889 715608 743000) 0 nil]) ((#("######################################################################################3
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 86 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 86 88 (fontified t face font-lock-comment-face)) . 6023)) nil (21670 27889 715611 936000) 0 nil]) ((#("###############################
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 31 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 31 32 (fontified t face font-lock-comment-face)) . 5747)) nil (21670 27889 715615 41000) 0 nil]) ((#(" " 0 1 (fontified nil face font-lock-comment-face)) . -5746) (undo-tree-id3282 . 1) (5745 . 5746)) nil (21670 27889 715622 254000) 0 nil]) ((5741 . 5745)) nil (21670 27889 715627 192000) 0 nil]) ((#("N" 0 1 (fontified t face font-lock-comment-face)) . -5741)) nil (21670 27889 715630 248000) 0 nil]) ((#("T" 0 1 (fontified t face font-lock-comment-face)) . -5741)) nil (21670 27889 715633 44000) 0 nil]) ((#("I" 0 1 (fontified t face font-lock-comment-face)) . -5742)) nil (21670 27889 715636 71000) 0 nil]) ((#("N" 0 1 (fontified t face font-lock-comment-face)) . -5743)) nil (21670 27889 715639 32000) 0 nil]) ((#("O" 0 1 (fontified t face font-lock-comment-face)) . -5744)) nil (21670 27889 715642 521000) 0 nil]) ((5730 . 5734)) nil (21670 27889 715645 459000) 0 nil]) ((5730 . 5743)) nil (21670 27889 715648 138000) 0 nil]) ((5729 . 5730) (#("8c" 0 2 (fontified nil)) . 5729) (5713 . 5729) 5715) nil (21670 27889 715653 311000) 0 nil]) ((5713 . 5715) (t 21670 27714 939011 530000)) nil (21670 27889 715657 368000) 0 nil]) ((#("export PERL_LOCAL_LIB_ROOT=\"/home/zeltak/perl5\";
export PERL_MB_OPT=\"--install_base /home/zeltak/perl5\";
export PERL_MM_OPT=\"INSTALL_BASE=/home/zeltak/perl5\";
export PERL5LIB=\"/home/zeltak/perl5/lib/perl5/x86_64-linux-thread-multi:/home/zeltak/perl5/lib/perl5\";
export PATH=\"/home/zeltak/perl5/bin:$PATH\";
" 0 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 26 (fontified t face font-lock-variable-name-face) 26 27 (fontified t) 27 47 (fontified t face font-lock-string-face) 47 49 (fontified t) 49 55 (fontified t face font-lock-builtin-face) 55 56 (fontified t) 56 67 (fontified t face font-lock-variable-name-face) 67 68 (fontified t) 68 103 (fontified t face font-lock-string-face) 103 105 (fontified t) 105 111 (fontified t face font-lock-builtin-face) 111 112 (fontified t) 112 123 (fontified t face font-lock-variable-name-face) 123 124 (fontified t) 124 157 (fontified t face font-lock-string-face) 157 159 (fontified t) 159 165 (fontified t face font-lock-builtin-face) 165 166 (fontified t) 166 174 (fontified t face font-lock-variable-name-face) 174 175 (fontified t) 175 260 (fontified t face font-lock-string-face) 260 262 (fontified t) 262 268 (fontified t face font-lock-builtin-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-variable-name-face) 273 274 (fontified t) 274 304 (fontified t face font-lock-string-face) 304 306 (fontified t)) . 6768) (undo-tree-id3085 . -262) (undo-tree-id3086 . -262) (undo-tree-id3087 . -262) 7030) nil (21670 27714 750078 783000) 0 nil]) ((#("#if [ \"$(pgrep mpd)\" ]; then : else rm -f ~/.mpd/mpd && mpd; fi
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 64 (fontified t face font-lock-comment-face)) . 6767)) nil (21670 27714 750083 691000) 0 nil]) ((#("
" 0 1 (fontified t)) . 6310) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1)) nil (21670 27714 750092 516000) 0 nil]) ((#("
" 0 1 (fontified t)) . 6310)) nil (21670 27714 750095 148000) 0 nil]) ((6427 . 6429) (6396 . 6398) (6360 . 6362) (6320 . 6322) (6312 . 6314)) nil (21670 27714 750098 652000) 0 nil]) ((3974 . 3976)) nil (21670 27714 750100 765000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3953)) nil (21670 27714 750102 390000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3805)) nil (21670 27714 750104 103000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 3805) (undo-tree-id3093 . -1)) nil (21670 27714 750107 849000) 0 nil]) ((nil rear-nonsticky nil 3805 . 3806) (nil fontified nil 3805 . 3806) (#("
" 0 1 (fontified nil)) . -3976) (3805 . 3977)) nil (21670 27714 750110 746000) 0 nil]) ((#("
#beets
alias badd='sed \"s:/home/zeltak/music/::\" | sed \"s/ /\\ /g\" | mpc add'
alias baddr='sed \"s:/home/zeltak/music/::\" | sed \"s/ /\\ /g\" | mpc add'

alias bl='beet list'
" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 8 (fontified t face font-lock-comment-face) 8 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t) 14 18 (fontified t face font-lock-variable-name-face) 18 19 (fontified t) 19 77 (fontified t face font-lock-string-face) 77 78 (fontified t) 78 83 (fontified t face font-lock-builtin-face) 83 84 (fontified t) 84 89 (fontified t face font-lock-variable-name-face) 89 90 (fontified t) 90 148 (fontified t face font-lock-string-face) 148 150 (fontified t) 150 155 (fontified t face font-lock-builtin-face) 155 156 (fontified t) 156 158 (fontified t face font-lock-variable-name-face) 158 159 (fontified t) 159 170 (fontified t face font-lock-string-face) 170 171 (fontified t)) . 6140) (undo-tree-id3094 . -150) (undo-tree-id3095 . -150) (undo-tree-id3096 . -150) 6290) nil (21670 27714 750117 344000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3806)) nil (21670 27714 750119 833000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3806)) nil (21670 27714 750121 824000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3806)) nil (21670 27714 750123 918000) 0 nil]) ((3731 . 3736)) nil (21670 27714 750125 964000) 0 nil]) ((#("S" 0 1 (fontified t face font-lock-comment-face)) . -3731)) nil (21670 27714 750127 503000) 0 nil]) ((3722 . 3732)) nil (21670 27714 750129 185000) 0 nil]) ((3721 . 3722)) nil (21670 27714 750130 782000) 0 nil]) ((nil rear-nonsticky nil 3788 . 3789) (nil fontified nil 3764 . 3789) (3764 . 3789)) nil (21670 27714 750132 984000) 0 nil]) ((#("alias yn='surfraw yubnub'
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 8 (fontified t face font-lock-variable-name-face) 8 9 (fontified t) 9 24 (fontified t face font-lock-string-face) 24 25 (rear-nonsticky t fontified t face font-lock-string-face) 25 26 (fontified t)) . 3712) (undo-tree-id3097 . -26) (undo-tree-id3098 . -26) (undo-tree-id3099 . -26) 3719) nil (21670 27714 750138 968000) 0 nil]) ((nil rear-nonsticky nil 3788 . 3789) (nil fontified nil 3781 . 3789) (3781 . 3789)) nil (21670 27714 750141 915000) 0 nil]) ((#("#surfraw
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face)) . 3712)) nil (21670 27714 750143 691000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3711)) nil (21670 27714 750145 372000) 0 nil]) ((nil rear-nonsticky nil 3712 . 3713) (nil fontified nil 3712 . 3713) (#("
" 0 1 (fontified nil)) . -3790) (3712 . 3791)) nil (21670 27714 750148 825000) 0 nil]) ((3711 . 3718)) nil (21670 27714 750150 974000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5448) (undo-tree-id3100 . 1) (undo-tree-id3101 . 1)) nil (21670 27714 750155 429000) 0 nil]) ((#("#surfraw
alias yn='surfraw yubnub'
#programs
alias sxr='pkill -USR1 -x sxhkd'
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face) 9 14 (fontified t face font-lock-builtin-face) 14 15 (fontified t) 15 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t) 18 33 (fontified t face font-lock-string-face) 33 34 (rear-nonsticky t fontified t face font-lock-string-face) 34 35 (fontified t) 35 36 (fontified t face font-lock-comment-delimiter-face) 36 45 (fontified t face font-lock-comment-face) 45 50 (fontified t face font-lock-builtin-face) 50 51 (fontified t) 51 54 (fontified t face font-lock-variable-name-face) 54 55 (fontified t) 55 77 (fontified t face font-lock-string-face) 77 78 (fontified t)) . 5448) (undo-tree-id3102 . -45) (undo-tree-id3103 . -33) (undo-tree-id3104 . -45) (undo-tree-id3105 . 44) (undo-tree-id3106 . -45) 5493) nil (21670 27714 750164 328000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5390) (undo-tree-id3107 . 1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . 1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1)) nil (21670 27714 750176 888000) 0 nil]) ((nil rear-nonsticky nil 5482 . 5483) (nil fontified nil 5449 . 5483) (5449 . 5483)) nil (21670 27714 750180 150000) 0 nil]) ((#("#surfraw
alias yn='surfraw yubnub'
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face) 9 14 (fontified t face font-lock-builtin-face) 14 15 (fontified t) 15 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t) 18 34 (fontified t face font-lock-string-face) 34 35 (fontified t)) . 5390) (undo-tree-id3114 . 35) (undo-tree-id3115 . 35)) nil (21670 27714 750184 561000) 0 nil]) ((5459 . 5461) (5436 . 5438) (5426 . 5428)) nil (21670 27714 750187 440000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5390) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . 1)) nil (21670 27714 750197 345000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5391) (undo-tree-id3123 . 1) (undo-tree-id3124 . 1)) nil (21670 27714 750202 517000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5391) (undo-tree-id3125 . 1)) nil (21670 27714 750206 3000) 0 nil]) ((#("V#AURA
##make you not type sudo each time you use AURA
aura() {
   case $1 in
       -S | -S[^sih]* | -R* | -U*)
           /usr/bin/sudo /usr/bin/aura \"$@\" ;;
       *)
           /usr/bin/aura \"$@\" ;;
   esac
}


function search() {
  aura -Ss $1; aura -As $1;
}

" 0 1 (fontified t) 1 2 (fontified t syntax-table #1#) 2 7 (fontified t) 7 8 (fontified t face font-lock-comment-delimiter-face) 8 9 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 9 55 (fontified t face font-lock-comment-face) 55 59 (fontified t face font-lock-function-name-face) 59 67 (fontified t) 67 71 (fontified t face font-lock-keyword-face) 71 73 (fontified t) 73 74 (fontified t face font-lock-variable-name-face) 74 75 (fontified t face font-lock-keyword-face) 75 77 (syntax-multiline t fontified t face font-lock-keyword-face) 77 111 (syntax-multiline t fontified t) 111 112 (syntax-multiline t syntax-table #2# fontified t) 112 152 (fontified t) 152 154 (fontified t face font-lock-string-face) 154 155 (syntax-table #1# fontified t face font-lock-string-face) 155 156 (fontified t face font-lock-string-face) 156 157 (fontified t) 157 168 (syntax-multiline t fontified t) 168 169 (syntax-multiline t syntax-table #2# fontified t) 169 195 (fontified t) 195 197 (fontified t face font-lock-string-face) 197 198 (syntax-table #1# fontified t face font-lock-string-face) 198 199 (fontified t face font-lock-string-face) 199 206 (fontified t) 206 210 (fontified t face font-lock-keyword-face) 210 215 (fontified t) 215 223 (fontified t face font-lock-keyword-face) 223 224 (fontified t) 224 230 (fontified t face font-lock-function-name-face) 230 247 (fontified t) 247 248 (fontified t face font-lock-variable-name-face) 248 260 (fontified t) 260 261 (fontified t face font-lock-variable-name-face) 261 266 (fontified t)) . -5391) (undo-tree-id3126 . -215) (undo-tree-id3127 . -55) (undo-tree-id3128 . 266) (undo-tree-id3129 . -265) (undo-tree-id3130 . -265)) nil (21670 27714 750213 958000) 0 nil]) ((5391 . 5392)) nil (21670 27714 750216 349000) 0 nil]) ((2657 . 2659)) nil (21670 27714 750218 104000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 2649)) nil (21670 27714 750219 653000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2648) (undo-tree-id3131 . -1)) nil (21670 27714 750222 800000) 0 nil]) ((2650 . 2651)) nil (21670 27714 750225 104000) 0 nil]) ((2656 . 2657)) nil (21670 27714 750226 771000) 0 nil]) ((#("M" 0 1 (fontified t face font-lock-comment-face)) . -2656)) nil (21670 27714 750228 245000) 0 nil]) ((2650 . 2657)) nil (21670 27714 750229 988000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . 2650)) nil (21670 27714 750231 695000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . 2650)) nil (21670 27714 750233 817000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-comment-face)) . 2650)) nil (21670 27714 750235 729000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . 2650)) nil (21670 27714 750237 476000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . 2650)) nil (21670 27714 750239 241000) 0 nil]) ((#("y" 0 1 (fontified t face font-lock-comment-face)) . 2650)) nil (21670 27714 750241 50000) 0 nil]) ((nil rear-nonsticky nil 2648 . 2649) (nil fontified nil 2648 . 2649) (#("
" 0 1 (fontified nil)) . -3335) (2648 . 3336)) nil (21670 27714 750243 726000) 0 nil]) ((2648 . 2651)) nil (21670 27714 750245 892000) 0 nil]) ((4668 . 4670) (4642 . 4644) (4631 . 4633) (4579 . 4581) (4516 . 4518) (4444 . 4446) (4405 . 4407) (4378 . 4380) (4323 . 4325) (4285 . 4287) (4264 . 4266) (4204 . 4206) (4130 . 4132) (4118 . 4120) (4080 . 4082) (4042 . 4044) (3994 . 3996) (3983 . 3985) (3973 . 3975)) nil (21670 27714 750252 711000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3973) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . 1)) nil (21670 27714 750259 988000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3973) (undo-tree-id3135 . 1)) nil (21670 27714 750263 965000) 0 nil]) ((#("

#network
alias sip=\"nmap -e eth0 -sP 192.168.0.1/24\"



" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 11 (fontified t face font-lock-comment-face) 11 16 (fontified t face font-lock-builtin-face) 16 17 (fontified t) 17 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t) 21 53 (fontified t face font-lock-string-face) 53 54 (rear-nonsticky t fontified t face font-lock-string-face) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t)) . -3020) (undo-tree-id3136 . -57) (undo-tree-id3137 . -57) (t 21670 27466 293166 885000)) nil (21670 27714 750268 993000) 0 nil]) ((2456 . 2457)) nil (21670 27466 159016 473000) 0 nil]) ((nil rear-nonsticky nil 2417 . 2418) (nil fontified nil 2417 . 2418) (#("
" 0 1 (fontified nil)) . -2455) (2417 . 2456)) nil (21670 27466 159025 210000) 0 nil]) ((#("#zsh
alias cl=\"clear\"
alias xx=\"exit\"
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-face) 5 10 (fontified t face font-lock-builtin-face) 10 11 (fontified t) 11 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 21 (fontified t face font-lock-string-face) 21 22 (fontified t) 22 27 (fontified t face font-lock-builtin-face) 27 28 (fontified t) 28 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t) 31 37 (fontified t face font-lock-string-face) 37 38 (fontified t)) . 2982) (undo-tree-id2931 . -22) (undo-tree-id2932 . -22) (undo-tree-id2933 . 38) (undo-tree-id2934 . 38) (undo-tree-id2935 . -38) (undo-tree-id2936 . 38) (undo-tree-id2937 . -22) (undo-tree-id2938 . 33) (undo-tree-id2939 . 16) 3004) nil (21670 27466 159052 857000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2981) (undo-tree-id2940 . 1) (undo-tree-id2941 . 1) (undo-tree-id2942 . 1) (undo-tree-id2943 . 1) (undo-tree-id2944 . 1) (undo-tree-id2945 . 1) (undo-tree-id2946 . 1) (undo-tree-id2947 . 1) (undo-tree-id2948 . 1) (undo-tree-id2949 . 1) (undo-tree-id2950 . 1) (undo-tree-id2951 . 1) (undo-tree-id2952 . 1) (undo-tree-id2953 . 1)) nil (21670 27466 159102 85000) 0 nil]) ((#("alias mnt=\"sudo mount 192.168.0.2:/media/raid/   /media/raid/\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 62 (fontified t face font-lock-string-face) 62 63 (fontified t)) . 2981) (undo-tree-id2954 . 63) (undo-tree-id2955 . 63) (undo-tree-id2956 . 63) (undo-tree-id2957 . 63) (undo-tree-id2958 . 63) (undo-tree-id2959 . 63) (undo-tree-id2960 . 63) (undo-tree-id2961 . 63) (undo-tree-id2962 . 63) (undo-tree-id2963 . 63) (undo-tree-id2964 . 63) (undo-tree-id2965 . 63) (undo-tree-id2966 . 63)) nil (21670 27466 159139 898000) 0 nil]) ((#("#mounts
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 8 (fontified t face font-lock-comment-face)) . 2981) (undo-tree-id2967 . 8) (undo-tree-id2968 . 8) (undo-tree-id2969 . 8) (undo-tree-id2970 . 8) (undo-tree-id2971 . 8) (undo-tree-id2972 . 8) (undo-tree-id2973 . 8) (undo-tree-id2974 . 8) (undo-tree-id2975 . 8) (undo-tree-id2976 . 8) (undo-tree-id2977 . 8) (undo-tree-id2978 . -7) (undo-tree-id2979 . 8)) nil (21670 27466 159178 559000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2981) (undo-tree-id2980 . 1) (undo-tree-id2981 . 1) (undo-tree-id2982 . 1) (undo-tree-id2983 . 1) (undo-tree-id2984 . 1) (undo-tree-id2985 . 1) (undo-tree-id2986 . 1) (undo-tree-id2987 . 1) (undo-tree-id2988 . 1) (undo-tree-id2989 . 1) (undo-tree-id2990 . 1)) nil (21670 27466 159212 839000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2981) (undo-tree-id2991 . 1) (undo-tree-id2992 . 1) (undo-tree-id2993 . 1) (undo-tree-id2994 . 1) (undo-tree-id2995 . 1) (undo-tree-id2996 . 1) (undo-tree-id2997 . 1) (undo-tree-id2998 . 1) (undo-tree-id2999 . 1) (undo-tree-id3000 . 1)) nil (21670 27466 159244 286000) 0 nil]) ((#("alias cdz='cd /home/zeltak/'
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 28 (fontified t face font-lock-string-face) 28 29 (fontified t)) . 2981) (undo-tree-id3001 . 29) (undo-tree-id3002 . 29) (undo-tree-id3003 . 29) (undo-tree-id3004 . 29) (undo-tree-id3005 . 29) (undo-tree-id3006 . 29) (undo-tree-id3007 . 29) (undo-tree-id3008 . 29) (undo-tree-id3009 . -28) (undo-tree-id3010 . 29)) nil (21670 27466 159276 422000) 0 nil]) ((#("alias cda='cd /home/zeltak/AUR/'
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 32 (fontified t face font-lock-string-face) 32 33 (fontified t)) . 2981) (undo-tree-id3011 . 33) (undo-tree-id3012 . 33) (undo-tree-id3013 . 33) (undo-tree-id3014 . 33) (undo-tree-id3015 . 33) (undo-tree-id3016 . 33) (undo-tree-id3017 . 33) (undo-tree-id3018 . -32) (undo-tree-id3019 . 33)) nil (21670 27466 159303 585000) 0 nil]) ((#("V#dir changes
alias cdh='cd /home/zeltak/Downloads/'
alias cdp='cd /home/zeltak/programs/'
alias cds='cd /home/zeltak/scripts/'
" 0 1 (fontified t) 1 2 (fontified t syntax-table #1#) 2 14 (fontified t) 14 19 (fontified t face font-lock-builtin-face) 19 20 (fontified t) 20 23 (fontified t face font-lock-variable-name-face) 23 24 (fontified t) 24 52 (fontified t face font-lock-string-face) 52 53 (fontified t) 53 58 (fontified t face font-lock-builtin-face) 58 59 (fontified t) 59 62 (fontified t face font-lock-variable-name-face) 62 63 (fontified t) 63 90 (fontified t face font-lock-string-face) 90 91 (fontified t) 91 96 (fontified t face font-lock-builtin-face) 96 97 (fontified t) 97 100 (fontified t face font-lock-variable-name-face) 100 101 (fontified t) 101 127 (fontified t face font-lock-string-face) 127 128 (fontified t)) . 2981) (undo-tree-id3020 . 127) (undo-tree-id3021 . 127) (undo-tree-id3022 . 127) (undo-tree-id3023 . 113) (undo-tree-id3024 . 127) (undo-tree-id3025 . 128) (undo-tree-id3026 . 128)) nil (21670 27466 159338 72000) 0 nil]) ((2981 . 2982)) nil (21670 27466 159342 334000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2618) (undo-tree-id3027 . -1) (undo-tree-id3028 . 1)) nil (21670 27466 159350 21000) 0 nil]) ((2592 . 2608)) nil (21670 27466 159353 661000) 0 nil]) ((2591 . 2592) (#("8c" 0 2 (fontified nil)) . 2591) (2575 . 2591) 2577) nil (21670 27466 159357 953000) 0 nil]) ((2575 . 2577)) nil (21670 27466 159361 436000) 0 nil]) ((2574 . 2576)) nil (21670 27466 159363 926000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2574)) nil (21670 27466 159366 658000) 0 nil]) ((2574 . 2575)) nil (21670 27466 159369 501000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2524) (undo-tree-id3029 . -1) (undo-tree-id3030 . 1) (undo-tree-id3031 . 1) (undo-tree-id3032 . 1) (undo-tree-id3033 . -1) (undo-tree-id3034 . 1) (undo-tree-id3035 . 1) (undo-tree-id3036 . 1) (undo-tree-id3037 . 1) (undo-tree-id3038 . 1)) nil (21670 27466 159387 882000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2524) (undo-tree-id3039 . 1) (undo-tree-id3040 . 1) (undo-tree-id3041 . -1) (undo-tree-id3042 . 1) (undo-tree-id3043 . 1) (undo-tree-id3044 . 1)) nil (21670 27466 159399 372000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2524) (undo-tree-id3045 . 1) (undo-tree-id3046 . -1) (undo-tree-id3047 . 1) (undo-tree-id3048 . 1)) nil (21670 27466 159407 887000) 0 nil]) ((nil rear-nonsticky nil 3304 . 3305) (nil fontified nil 2528 . 3305) (2528 . 3305) 2527) nil (21670 27466 159411 403000) 0 nil]) ((2524 . 2531)) nil (21670 27466 159413 635000) 0 nil]) ((#("####PACMAN et al
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 4 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 4 17 (fontified t face font-lock-comment-face)) . 3478) (undo-tree-id3049 . 17) (undo-tree-id3050 . 17) (undo-tree-id3051 . 17)) nil (21670 27466 159419 472000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3478) (undo-tree-id3052 . 1) (undo-tree-id3053 . 1) (undo-tree-id3054 . 1)) nil (21670 27466 159426 168000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3083)) nil (21670 27466 159428 992000) 0 nil]) ((3455 . 3457) (3431 . 3433) (3407 . 3409) (3383 . 3385) (3359 . 3361) (3325 . 3327) (3315 . 3317) (3310 . 3312) (3300 . 3302) (3263 . 3265) (3251 . 3253) (3200 . 3202) (3163 . 3165) (3147 . 3149) (3134 . 3136)) nil (21670 27466 159435 423000) 0 nil]) ((3011 . 3012)) nil (21670 27466 159438 555000) 0 nil]) ((#("i" 0 1 (fontified t)) . -3011)) nil (21670 27466 159440 526000) 0 nil]) ((3011 . 3012)) nil (21670 27466 159442 692000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3011)) nil (21670 27466 159444 475000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2937)) nil (21670 27466 159446 921000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2938)) nil (21670 27466 159448 994000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2938)) nil (21670 27466 159451 87000) 0 nil]) ((2542 . 2558)) nil (21670 27466 159453 490000) 0 nil]) ((2541 . 2542) (#("8c" 0 2 (fontified nil)) . 2541) (2525 . 2541) 2527) nil (21670 27466 159456 505000) 0 nil]) ((2525 . 2527)) nil (21670 27466 159459 185000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2834) (undo-tree-id3055 . 1) (undo-tree-id3056 . 1) (undo-tree-id3057 . 1) (undo-tree-id3058 . 1)) nil (21670 27466 159466 936000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2834) (undo-tree-id3059 . 1) (undo-tree-id3060 . 1) (undo-tree-id3061 . 1) (undo-tree-id3062 . 1)) nil (21670 27466 159475 304000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2834) (undo-tree-id3063 . 1) (undo-tree-id3064 . 1) (undo-tree-id3065 . 1) (undo-tree-id3066 . 1)) nil (21670 27466 159483 293000) 0 nil]) ((2802 . 2804) (2772 . 2774) (2741 . 2743) (2710 . 2712) (2688 . 2690) (2655 . 2657) (2623 . 2625) (2591 . 2593) (2558 . 2560) (2541 . 2543) (2526 . 2528)) nil (21670 27466 159489 548000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2676)) nil (21670 27466 159492 687000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2554)) nil (21670 27466 159494 721000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2554)) nil (21670 27466 159496 734000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2539)) nil (21670 27466 159498 931000) 0 nil]) ((#("alias als=\"alsamixer\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 21 (fontified t face font-lock-string-face) 21 22 (fontified t)) . 2525)) nil (21670 27466 159500 955000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2525)) nil (21670 27466 159502 921000) 0 nil]) ((#("#System
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 8 (fontified t face font-lock-comment-face)) . 2525)) nil (21670 27466 159504 742000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2525)) nil (21670 27466 159506 855000) 0 nil]) ((#("alias sshh=\"ssh zeltak@zeltak.homelinux.com\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 44 (fontified t face font-lock-string-face) 44 45 (fontified t)) . 2525)) nil (21670 27466 159508 916000) 0 nil]) ((#("#ssh
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-face)) . 2525)) nil (21670 27466 159510 982000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2525)) nil (21670 27466 159512 872000) 0 nil]) ((#("alias sip=\"nmap -e eth0 -sP 192.168.0.1/24\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t)) . 2525) (undo-tree-id3067 . -11) (undo-tree-id3068 . -11)) nil (21670 27466 159517 561000) 0 nil]) ((#("#network
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face)) . 2525) 2532) nil (21670 27466 159520 406000) 0 nil]) ((2522 . 2523)) nil (21670 27466 159522 865000) 0 nil]) ((nil rear-nonsticky nil 2521 . 2522) (nil fontified nil 2501 . 2522) (2501 . 2522)) nil (21670 27466 159525 233000) 0 nil]) ((2500 . 2501)) nil (21670 27466 159527 244000) 0 nil]) ((2499 . 2500)) nil (21670 27466 159528 898000) 0 nil]) ((2498 . 2499)) nil (21670 27466 159531 87000) 0 nil]) ((#("l" 0 1 (fontified t)) . -2498)) nil (21670 27466 159533 89000) 0 nil]) ((2492 . 2499)) nil (21670 27466 159534 978000) 0 nil]) ((#("i" 0 1 (fontified t)) . -2492) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1)) nil (21670 27466 159539 483000) 0 nil]) ((#("a" 0 1 (fontified t)) . -2493) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1)) nil (21670 27466 159544 754000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-builtin-face)) . -2494) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1)) nil (21670 27466 159549 908000) 0 nil]) ((#(" " 0 1 (fontified t)) . -2495) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1)) nil (21670 27466 159554 907000) 0 nil]) ((#("t" 0 1 (fontified t)) . -2496) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1)) nil (21670 27466 159560 60000) 0 nil]) ((#("n" 0 1 (fontified t)) . -2497) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1)) nil (21670 27466 159565 481000) 0 nil]) ((#("e" 0 1 (fontified t)) . -2498) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1)) nil (21670 27466 159570 802000) 0 nil]) ((#("w" 0 1 (fontified t)) . -2499) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1)) nil (21670 27466 159576 249000) 0 nil]) ((#("='tmux new-session -s'



#chmod
alias cm='chmod +x' #change mode of exec

#Apt-get

alias apt='sudo apt-get install'
alias aptv='sudo apt-get update & sudo apt-get upgrade'
alias aptu='sudo apt-get update'
alias aptg='sudo apt-get upgrade'
alias aptr='sudo apt-get remove'
alias apts='sudo apt-cache search'
alias sor='sudo nano /etc/apt/sources.list' 
alias aptp='sudo add-apt-repository'
alias apto='sudo apt-get update & sudo apt-get install'

#dir changes
alias cdh='cd /home/zeltak/Downloads/'
alias cdp='cd /home/zeltak/programs/'
alias cds='cd /home/zeltak/scripts/'
alias cda='cd /home/zeltak/AUR/'
alias cdz='cd /home/zeltak/'


#mounts
alias mnt=\"sudo mount 192.168.0.2:/media/raid/   /media/raid/\"


#zsh
alias cl=\"clear\"
alias xx=\"exit\"" 0 1 (fontified t) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t rear-nonsticky t face font-lock-string-face) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t face font-lock-comment-delimiter-face) 27 33 (fontified t face font-lock-comment-face) 33 38 (fontified t face font-lock-builtin-face) 38 39 (fontified t) 39 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t) 42 52 (fontified t face font-lock-string-face) 52 53 (fontified t) 53 54 (fontified t face font-lock-comment-delimiter-face) 54 74 (fontified t face font-lock-comment-face) 74 75 (fontified t) 75 76 (fontified t face font-lock-comment-delimiter-face) 76 84 (fontified t face font-lock-comment-face) 84 85 (fontified t) 85 90 (fontified t face font-lock-builtin-face) 90 91 (fontified t) 91 94 (fontified t face font-lock-variable-name-face) 94 95 (fontified t) 95 117 (fontified t face font-lock-string-face) 117 118 (fontified t) 118 123 (fontified t face font-lock-builtin-face) 123 124 (fontified t) 124 128 (fontified t face font-lock-variable-name-face) 128 129 (fontified t) 129 173 (fontified t face font-lock-string-face) 173 174 (fontified t) 174 179 (fontified t face font-lock-builtin-face) 179 180 (fontified t) 180 184 (fontified t face font-lock-variable-name-face) 184 185 (fontified t) 185 206 (fontified t face font-lock-string-face) 206 207 (fontified t) 207 212 (fontified t face font-lock-builtin-face) 212 213 (fontified t) 213 217 (fontified t face font-lock-variable-name-face) 217 218 (fontified t) 218 240 (fontified t face font-lock-string-face) 240 241 (fontified t) 241 246 (fontified t face font-lock-builtin-face) 246 247 (fontified t) 247 251 (fontified t face font-lock-variable-name-face) 251 252 (fontified t) 252 273 (fontified t face font-lock-string-face) 273 274 (fontified t) 274 279 (fontified t face font-lock-builtin-face) 279 280 (fontified t) 280 284 (fontified t face font-lock-variable-name-face) 284 285 (fontified t) 285 308 (fontified t face font-lock-string-face) 308 309 (fontified t) 309 314 (fontified t face font-lock-builtin-face) 314 315 (fontified t) 315 318 (fontified t face font-lock-variable-name-face) 318 319 (fontified t) 319 352 (fontified t face font-lock-string-face) 352 354 (fontified t) 354 359 (fontified t face font-lock-builtin-face) 359 360 (fontified t) 360 364 (fontified t face font-lock-variable-name-face) 364 365 (fontified t) 365 390 (fontified t face font-lock-string-face) 390 391 (fontified t) 391 396 (fontified t face font-lock-builtin-face) 396 397 (fontified t) 397 401 (fontified t face font-lock-variable-name-face) 401 402 (fontified t) 402 446 (fontified t face font-lock-string-face) 446 447 (fontified t) 447 448 (fontified t) 448 449 (fontified t face font-lock-comment-delimiter-face) 449 461 (fontified t face font-lock-comment-face) 461 466 (fontified t face font-lock-builtin-face) 466 467 (fontified t) 467 470 (fontified t face font-lock-variable-name-face) 470 471 (fontified t) 471 499 (fontified t face font-lock-string-face) 499 500 (fontified t) 500 505 (fontified t face font-lock-builtin-face) 505 506 (fontified t) 506 509 (fontified t face font-lock-variable-name-face) 509 510 (fontified t) 510 537 (fontified t face font-lock-string-face) 537 538 (fontified t) 538 543 (face font-lock-builtin-face) 544 547 (face font-lock-variable-name-face) 548 574 (face font-lock-string-face) 575 580 (face font-lock-builtin-face) 581 584 (face font-lock-variable-name-face) 585 607 (face font-lock-string-face) 608 613 (face font-lock-builtin-face) 614 617 (face font-lock-variable-name-face) 618 636 (face font-lock-string-face) 639 640 (face font-lock-comment-delimiter-face) 640 647 (face font-lock-comment-face) 647 652 (face font-lock-builtin-face) 653 656 (face font-lock-variable-name-face) 657 709 (face font-lock-string-face) 712 713 (face font-lock-comment-delimiter-face) 713 717 (face font-lock-comment-face) 717 722 (face font-lock-builtin-face) 723 725 (face font-lock-variable-name-face) 726 733 (face font-lock-string-face) 734 739 (face font-lock-builtin-face) 740 742 (face font-lock-variable-name-face) 743 749 (face font-lock-string-face)) . 2500) (undo-tree-id2852 . -558) (undo-tree-id2853 . -2) (undo-tree-id2854 . 749) (undo-tree-id2855 . -558) (undo-tree-id2856 . 749) (undo-tree-id2857 . -558) (undo-tree-id2858 . 749) (undo-tree-id2859 . -558) (undo-tree-id2860 . 749) (undo-tree-id2861 . -558) (undo-tree-id2862 . 726) (undo-tree-id2863 . -558) (undo-tree-id2864 . 726) (undo-tree-id2865 . -558) (undo-tree-id2866 . 726) (undo-tree-id2867 . -558) (undo-tree-id2868 . 726) (undo-tree-id2869 . -558) (undo-tree-id2870 . -734) (undo-tree-id2871 . -558) (undo-tree-id2872 . -734) (undo-tree-id2873 . -558) (undo-tree-id2874 . -734) (undo-tree-id2875 . -558) (undo-tree-id2876 . -734) (undo-tree-id2877 . -558) (undo-tree-id2878 . -734) (undo-tree-id2879 . -558) (undo-tree-id2880 . -734) (undo-tree-id2881 . -558) (undo-tree-id2882 . -734) (undo-tree-id2883 . -558) (undo-tree-id2884 . -734) (undo-tree-id2885 . -558) (undo-tree-id2886 . -734) (undo-tree-id2887 . -558) (undo-tree-id2888 . -734) (undo-tree-id2889 . -558) (undo-tree-id2890 . -734) (undo-tree-id2891 . -558) (undo-tree-id2892 . -734) (undo-tree-id2893 . -558) (undo-tree-id2894 . -734) (undo-tree-id2895 . -558) (undo-tree-id2896 . -734) (undo-tree-id2897 . -558) (undo-tree-id2898 . -734) (undo-tree-id2899 . -558) (undo-tree-id2900 . -734) (undo-tree-id2901 . -558) (undo-tree-id2902 . -734) (undo-tree-id2903 . -558) (undo-tree-id2904 . -734) (undo-tree-id2905 . -558) (undo-tree-id2906 . 749) (undo-tree-id2907 . -558) (undo-tree-id2908 . 749) (undo-tree-id2909 . -558) (undo-tree-id2910 . 749) (undo-tree-id2911 . -558) (undo-tree-id2912 . 749) (undo-tree-id2913 . -558) (undo-tree-id2914 . 749) (undo-tree-id2915 . -558) (undo-tree-id2916 . 727) (undo-tree-id2917 . -558) (undo-tree-id2918 . 727) (undo-tree-id2919 . -558) (undo-tree-id2920 . 727) (undo-tree-id2921 . -558) (undo-tree-id2922 . -558) (undo-tree-id2923 . -558) (undo-tree-id2924 . -558) (undo-tree-id2925 . -558) (undo-tree-id2926 . -558) (undo-tree-id2927 . -558) (undo-tree-id2928 . -558) (undo-tree-id2929 . -558) (undo-tree-id2930 . -558)) ((2500 . 3249)) (21670 27229 207711 150000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id2507 . 1) (undo-tree-id2508 . 1) (undo-tree-id2509 . 1) (undo-tree-id2510 . 1) (undo-tree-id2511 . 1) (undo-tree-id2512 . 1) (undo-tree-id2513 . 1) (undo-tree-id2514 . 1) (undo-tree-id2515 . 1) (undo-tree-id2516 . 1) (undo-tree-id2517 . 1) (undo-tree-id2518 . 1) (undo-tree-id2519 . 1) (undo-tree-id2520 . 1) (undo-tree-id2521 . 1) (undo-tree-id2522 . 1) (undo-tree-id2523 . 1) (undo-tree-id2524 . 1) (undo-tree-id2525 . 1) (undo-tree-id2526 . 1) (undo-tree-id2527 . 1) (undo-tree-id2528 . 1) (undo-tree-id2529 . 1) (undo-tree-id2530 . 1) (undo-tree-id2531 . 1) (undo-tree-id2532 . 1) (undo-tree-id2533 . 1) (undo-tree-id2534 . 1) (undo-tree-id2535 . 1) (undo-tree-id2536 . 1) (undo-tree-id2537 . 1) (undo-tree-id2538 . 1) (undo-tree-id2539 . 1) (undo-tree-id2540 . 1) (undo-tree-id2541 . 1) (undo-tree-id2542 . 1) (undo-tree-id2543 . 1) (undo-tree-id2544 . 1) (undo-tree-id2545 . 1) (undo-tree-id2546 . 1) (undo-tree-id2547 . 1) (undo-tree-id2548 . 1) (undo-tree-id2549 . 1) (undo-tree-id2550 . 1) (undo-tree-id2551 . 1) (undo-tree-id2552 . 1)) ((2987 . 2988)) (21670 27203 866316 904000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id2553 . 1) (undo-tree-id2554 . 1) (undo-tree-id2555 . 1) (undo-tree-id2556 . 1) (undo-tree-id2557 . 1) (undo-tree-id2558 . 1) (undo-tree-id2559 . 1) (undo-tree-id2560 . 1) (undo-tree-id2561 . 1) (undo-tree-id2562 . 1) (undo-tree-id2563 . 1) (undo-tree-id2564 . 1) (undo-tree-id2565 . 1) (undo-tree-id2566 . 1) (undo-tree-id2567 . 1) (undo-tree-id2568 . 1) (undo-tree-id2569 . 1) (undo-tree-id2570 . 1) (undo-tree-id2571 . 1) (undo-tree-id2572 . 1) (undo-tree-id2573 . 1) (undo-tree-id2574 . 1) (undo-tree-id2575 . 1) (undo-tree-id2576 . 1) (undo-tree-id2577 . 1) (undo-tree-id2578 . 1) (undo-tree-id2579 . 1) (undo-tree-id2580 . 1) (undo-tree-id2581 . 1) (undo-tree-id2582 . 1) (undo-tree-id2583 . 1) (undo-tree-id2584 . 1) (undo-tree-id2585 . 1) (undo-tree-id2586 . 1) (undo-tree-id2587 . 1) (undo-tree-id2588 . 1) (undo-tree-id2589 . 1) (undo-tree-id2590 . 1) (undo-tree-id2591 . 1) (undo-tree-id2592 . 1) (undo-tree-id2593 . 1) (undo-tree-id2594 . 1) (undo-tree-id2595 . 1) (undo-tree-id2596 . 1)) ((2987 . 2988)) (21670 27203 866692 751000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . 1) (undo-tree-id2628 . 1) (undo-tree-id2629 . 1)) ((2987 . 2988)) (21670 27203 866785 389000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id2630 . 1)) ((2987 . 2988)) (21670 27203 866858 155000) 0 nil]) ((nil rear-nonsticky nil 3368 . 3369) (nil fontified nil 3062 . 3369) (3062 . 3369)) ((#("# #taskwarrior
# alias t=\"task\"
# alias tlx=\"task long  pro:nix\"
# alias tld=\"task long  pro:dl\"
# alias tlu=\"task long pro:uni\"
# alias tlh=\"task long pro:home\"
# alias ta=\"task add\"
# alias tax=\"task add pro:nix\"
# alias tau=\"task add pro:uni\"
# alias tad=\"task add pro:dl\"
# alias tah=\"task add pro:home\"" 0 2 (fontified nil face font-lock-comment-delimiter-face) 2 15 (fontified nil face font-lock-comment-face) 15 17 (fontified nil face font-lock-comment-delimiter-face) 17 32 (fontified nil face font-lock-comment-face) 32 34 (fontified nil face font-lock-comment-delimiter-face) 34 65 (fontified nil face font-lock-comment-face) 65 67 (fontified nil face font-lock-comment-delimiter-face) 67 97 (fontified nil face font-lock-comment-face) 97 99 (fontified nil face font-lock-comment-delimiter-face) 99 129 (fontified nil face font-lock-comment-face) 129 131 (fontified nil face font-lock-comment-delimiter-face) 131 162 (fontified nil face font-lock-comment-face) 162 164 (fontified nil face font-lock-comment-delimiter-face) 164 184 (fontified nil face font-lock-comment-face) 184 186 (fontified nil face font-lock-comment-delimiter-face) 186 215 (fontified nil face font-lock-comment-face) 215 217 (fontified nil face font-lock-comment-delimiter-face) 217 246 (fontified nil face font-lock-comment-face) 246 248 (fontified nil face font-lock-comment-delimiter-face) 248 276 (fontified nil face font-lock-comment-face) 276 278 (fontified nil face font-lock-comment-delimiter-face) 278 306 (fontified nil face font-lock-comment-face) 306 307 (rear-nonsticky nil fontified nil face font-lock-comment-face)) . 3062) (undo-tree-id2731 . -306) (nil fontified t 3310 . 3338) (nil fontified t 3308 . 3310) (nil fontified t 3279 . 3308) (nil fontified t 3277 . 3279) (nil fontified t 3248 . 3277) (nil fontified t 3246 . 3248) (nil fontified t 3226 . 3246) (nil fontified t 3224 . 3226) (nil fontified t 3193 . 3224) (nil fontified t 3191 . 3193) (nil fontified t 3161 . 3191) (nil fontified t 3159 . 3161) (nil fontified t 3129 . 3159) (nil fontified t 3127 . 3129) (nil fontified t 3096 . 3127) (nil fontified t 3094 . 3096) (nil fontified t 3079 . 3094) (nil fontified t 3077 . 3079) (nil fontified t 3064 . 3077) (nil fontified t 3062 . 3064) (nil rear-nonsticky t 3368 . 3369)) (21670 27203 866881 595000) 0 nil]) ((#("# #taskwarrior
# alias t=\"task\"
# alias tlx=\"task long  pro:nix\"
# alias tld=\"task long  pro:dl\"
# alias tlu=\"task long pro:uni\"
# alias tlh=\"task long pro:home\"
# alias ta=\"task add\"
# alias tax=\"task add pro:nix\"
# alias tau=\"task add pro:uni\"
# alias tad=\"task add pro:dl\"
# alias tah=\"task add pro:home\"
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face) 3 15 (fontified t face font-lock-comment-face) 15 17 (fontified t face font-lock-comment-delimiter-face) 17 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-delimiter-face) 34 39 (fontified t face font-lock-comment-face) 39 40 (fontified t face font-lock-comment-face) 40 43 (fontified t face font-lock-comment-face) 43 44 (fontified t face font-lock-comment-face) 44 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face) 65 67 (fontified t face font-lock-comment-delimiter-face) 67 72 (fontified t face font-lock-comment-face) 72 73 (fontified t face font-lock-comment-face) 73 76 (fontified t face font-lock-comment-face) 76 77 (fontified t face font-lock-comment-face) 77 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 99 (fontified t face font-lock-comment-delimiter-face) 99 104 (fontified t face font-lock-comment-face) 104 105 (fontified t face font-lock-comment-face) 105 108 (fontified t face font-lock-comment-face) 108 109 (fontified t face font-lock-comment-face) 109 128 (fontified t face font-lock-comment-face) 128 129 (fontified t face font-lock-comment-face) 129 131 (fontified t face font-lock-comment-delimiter-face) 131 136 (fontified t face font-lock-comment-face) 136 137 (fontified t face font-lock-comment-face) 137 140 (fontified t face font-lock-comment-face) 140 141 (fontified t face font-lock-comment-face) 141 161 (fontified t face font-lock-comment-face) 161 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-delimiter-face) 164 169 (fontified t face font-lock-comment-face) 169 170 (fontified t face font-lock-comment-face) 170 172 (fontified t face font-lock-comment-face) 172 173 (fontified t face font-lock-comment-face) 173 183 (fontified t face font-lock-comment-face) 183 184 (fontified t face font-lock-comment-face) 184 186 (fontified t face font-lock-comment-delimiter-face) 186 191 (fontified t face font-lock-comment-face) 191 192 (fontified t face font-lock-comment-face) 192 195 (fontified t face font-lock-comment-face) 195 196 (fontified t face font-lock-comment-face) 196 214 (fontified t face font-lock-comment-face) 214 215 (fontified t face font-lock-comment-face) 215 217 (fontified t face font-lock-comment-delimiter-face) 217 222 (fontified t face font-lock-comment-face) 222 223 (fontified t face font-lock-comment-face) 223 226 (fontified t face font-lock-comment-face) 226 227 (fontified t face font-lock-comment-face) 227 245 (fontified t face font-lock-comment-face) 245 246 (fontified t face font-lock-comment-face) 246 248 (fontified t face font-lock-comment-delimiter-face) 248 253 (fontified t face font-lock-comment-face) 253 254 (fontified t face font-lock-comment-face) 254 257 (fontified t face font-lock-comment-face) 257 258 (fontified t face font-lock-comment-face) 258 275 (fontified t face font-lock-comment-face) 275 276 (fontified t face font-lock-comment-face) 276 278 (fontified t face font-lock-comment-delimiter-face) 278 283 (fontified t face font-lock-comment-face) 283 284 (fontified t face font-lock-comment-face) 284 287 (fontified t face font-lock-comment-face) 287 288 (fontified t face font-lock-comment-face) 288 307 (fontified t face font-lock-comment-face) 307 308 (fontified t face font-lock-comment-face)) . 2989) (undo-tree-id2631 . 306) (undo-tree-id2632 . -276) (undo-tree-id2633 . -276) (undo-tree-id2634 . 291) (undo-tree-id2635 . 274) (undo-tree-id2636 . 274) (undo-tree-id2637 . 274) (undo-tree-id2638 . 274) (undo-tree-id2639 . 274) (undo-tree-id2640 . -32) (undo-tree-id2641 . -32) (undo-tree-id2642 . -32) (undo-tree-id2643 . -32) (undo-tree-id2644 . -32) (undo-tree-id2645 . 144) (undo-tree-id2646 . -32) (undo-tree-id2647 . -32) (undo-tree-id2648 . -32) (undo-tree-id2649 . -32) (undo-tree-id2650 . -32) (undo-tree-id2651 . -32) (undo-tree-id2652 . -32) (undo-tree-id2653 . -32) (undo-tree-id2654 . -32) (undo-tree-id2655 . -32) (undo-tree-id2656 . -32) (undo-tree-id2657 . -32) (undo-tree-id2658 . -32) (undo-tree-id2659 . -32) (undo-tree-id2660 . -32) (undo-tree-id2661 . -32) (undo-tree-id2662 . 291) (undo-tree-id2663 . 291) (undo-tree-id2664 . 274) (undo-tree-id2665 . 274) (undo-tree-id2666 . 144) (undo-tree-id2667 . 30) (undo-tree-id2668 . -276) (undo-tree-id2669 . -308) (undo-tree-id2670 . 32) (undo-tree-id2671 . 62) (undo-tree-id2672 . 93) (undo-tree-id2673 . 124) (undo-tree-id2674 . 146) (undo-tree-id2675 . 179) (undo-tree-id2676 . 211) (undo-tree-id2677 . 243) (undo-tree-id2678 . 276) (undo-tree-id2679 . 293) (undo-tree-id2680 . 308) (undo-tree-id2681 . -308) (undo-tree-id2682 . 308) (undo-tree-id2683 . -276) (undo-tree-id2684 . 293) (undo-tree-id2685 . 276) (undo-tree-id2686 . 243) (undo-tree-id2687 . 211) (undo-tree-id2688 . 179) (undo-tree-id2689 . 146) (undo-tree-id2690 . 124) (undo-tree-id2691 . 93) (undo-tree-id2692 . 62) (undo-tree-id2693 . 32) 3265) ((2989 . 3297)) (21670 27203 866963 42000) 0 nil]) ((3265 . 3267) (3235 . 3237) (3204 . 3206) (3173 . 3175) (3151 . 3153) (3118 . 3120) (3086 . 3088) (3054 . 3056) (3021 . 3023) (3004 . 3006) (2989 . 2991)) ((#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 2989) (undo-tree-id2732 . 2) (undo-tree-id2733 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3004) (undo-tree-id2734 . 2) (undo-tree-id2735 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3021) (undo-tree-id2736 . 2) (undo-tree-id2737 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3054) (undo-tree-id2738 . 2) (undo-tree-id2739 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3086) (undo-tree-id2740 . 2) (undo-tree-id2741 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3118) (undo-tree-id2742 . 2) (undo-tree-id2743 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3151) (undo-tree-id2744 . 2) (undo-tree-id2745 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3173) (undo-tree-id2746 . 2) (undo-tree-id2747 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3204) (undo-tree-id2748 . 2) (undo-tree-id2749 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3235) (undo-tree-id2750 . 2) (undo-tree-id2751 . 2) (#("# " 0 2 (fontified nil face font-lock-comment-delimiter-face)) . 3265) (undo-tree-id2752 . 2) (undo-tree-id2753 . 2)) (21670 27203 867120 787000) 0 nil]) ((2986 . 2989)) ((#("


" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 2986) (undo-tree-id2754 . -3) (undo-tree-id2755 . -3) (undo-tree-id2756 . -3) (undo-tree-id2757 . -3) (undo-tree-id2758 . -3) (undo-tree-id2759 . -3) (undo-tree-id2760 . 1) (undo-tree-id2761 . 2) (undo-tree-id2762 . 1) (undo-tree-id2763 . -1)) (21670 27203 867302 220000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3136) (undo-tree-id2694 . 1) (undo-tree-id2695 . 1)) ((3136 . 3137)) (21670 27203 867334 991000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3014) (undo-tree-id2696 . 1) (undo-tree-id2697 . 1) (undo-tree-id2698 . 1) (undo-tree-id2699 . 1) (undo-tree-id2700 . 1) (undo-tree-id2701 . 1) (undo-tree-id2702 . 1)) ((3014 . 3015)) (21670 27203 867363 595000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3014) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . 1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . 1)) ((3014 . 3015)) (21670 27203 867398 97000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2999) (undo-tree-id2728 . 1) (undo-tree-id2729 . 1) (undo-tree-id2730 . 1)) ((2999 . 3000)) (21670 27203 867457 923000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id634 . 1) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (undo-tree-id637 . 1) (undo-tree-id638 . 1) (undo-tree-id639 . 1) (undo-tree-id640 . 1) (undo-tree-id641 . 1) (undo-tree-id642 . 1) (undo-tree-id643 . 1) (undo-tree-id644 . 1) (undo-tree-id645 . 1) (undo-tree-id646 . 1) (undo-tree-id647 . 1) (undo-tree-id648 . 1) (undo-tree-id649 . 1) (undo-tree-id650 . 1)) ((2987 . 2988)) (21670 27170 991126 717000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id651 . 1) (undo-tree-id652 . 1) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . 1) (undo-tree-id656 . 1) (undo-tree-id657 . 1) (undo-tree-id658 . 1) (undo-tree-id659 . 1) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . 1) (undo-tree-id663 . 1) (undo-tree-id664 . 1) (undo-tree-id665 . 1) (undo-tree-id666 . 1)) ((2987 . 2988)) (21670 27170 994700 675000) 0 nil]) ((#("
alias tlx=\"task long  pro:nix\"
alias tld=\"task long  pro:dl\"
alias tlu=\"task long pro:uni\"
alias tlh=\"task long pro:home\"

alias ta=\"task add\"
alias tax=\"task add pro:nix\"
alias tau=\"task add pro:uni\"
alias tad=\"task add pro:dl\"
alias tah=\"task add pro:home\"
" 0 1 (fontified t) 1 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t) 7 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 31 (fontified t face font-lock-string-face) 31 32 (fontified t) 32 37 (fontified t face font-lock-builtin-face) 37 38 (fontified t) 38 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t) 42 61 (fontified t face font-lock-string-face) 61 62 (fontified t) 62 67 (fontified t face font-lock-builtin-face) 67 68 (fontified t) 68 71 (fontified t face font-lock-variable-name-face) 71 72 (fontified t) 72 91 (fontified t face font-lock-string-face) 91 92 (fontified t) 92 97 (fontified t face font-lock-builtin-face) 97 98 (fontified t) 98 101 (fontified t face font-lock-variable-name-face) 101 102 (fontified t) 102 122 (fontified t face font-lock-string-face) 122 123 (fontified t) 123 124 (fontified t) 124 129 (fontified t face font-lock-builtin-face) 129 130 (fontified t) 130 132 (fontified t face font-lock-variable-name-face) 132 133 (fontified t) 133 143 (fontified t face font-lock-string-face) 143 144 (fontified t) 144 149 (fontified t face font-lock-builtin-face) 149 150 (fontified t) 150 153 (fontified t face font-lock-variable-name-face) 153 154 (fontified t) 154 172 (fontified t face font-lock-string-face) 172 173 (fontified t) 173 178 (fontified t face font-lock-builtin-face) 178 179 (fontified t) 179 182 (fontified t face font-lock-variable-name-face) 182 183 (fontified t) 183 201 (fontified t face font-lock-string-face) 201 202 (fontified t) 202 207 (fontified t face font-lock-builtin-face) 207 208 (fontified t) 208 211 (fontified t face font-lock-variable-name-face) 211 212 (fontified t) 212 229 (fontified t face font-lock-string-face) 229 230 (fontified t) 230 235 (fontified t face font-lock-builtin-face) 235 236 (fontified t) 236 239 (fontified t face font-lock-variable-name-face) 239 240 (fontified t) 240 259 (fontified t face font-lock-string-face) 259 260 (fontified t)) . 2987) (undo-tree-id667 . -230) (undo-tree-id668 . -230) (undo-tree-id669 . 260) (undo-tree-id670 . 260) (undo-tree-id671 . 260) (undo-tree-id672 . -260) (undo-tree-id673 . 260) (undo-tree-id674 . -230) (undo-tree-id675 . 259) (undo-tree-id676 . 228) (undo-tree-id677 . 198) (undo-tree-id678 . 168) (undo-tree-id679 . 137) (undo-tree-id680 . 136) (undo-tree-id681 . 116) (undo-tree-id682 . 87) (undo-tree-id683 . 58) (undo-tree-id684 . 30) 3217) ((2987 . 3247)) (21670 27171 332169 591000) 0 nil]) ((#("alias t=\"task\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 7 (fontified t face font-lock-variable-name-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-string-face) 14 15 (fontified t)) . 2986) (undo-tree-id685 . 15) (undo-tree-id686 . 15) (undo-tree-id687 . 15) (undo-tree-id688 . 15) (undo-tree-id689 . 15) (undo-tree-id690 . 15) (undo-tree-id691 . 15) (undo-tree-id692 . 15) (undo-tree-id693 . 15) (undo-tree-id694 . 15) (undo-tree-id695 . 15) (undo-tree-id696 . 15) (undo-tree-id697 . 15) (undo-tree-id698 . 15) (undo-tree-id699 . 15) (undo-tree-id700 . 15) (undo-tree-id701 . 15) (undo-tree-id702 . 15) (undo-tree-id703 . 15) (undo-tree-id704 . 15) (undo-tree-id705 . 15) (undo-tree-id706 . 15) (undo-tree-id707 . 15) (undo-tree-id708 . 15) (undo-tree-id709 . 15) (undo-tree-id710 . 15) (undo-tree-id711 . 15) (undo-tree-id712 . 15) (undo-tree-id713 . 15) (undo-tree-id714 . 15) (undo-tree-id715 . 15) (undo-tree-id716 . 15) (undo-tree-id717 . 15) (undo-tree-id718 . 15) (undo-tree-id719 . 15) (undo-tree-id720 . 15) (undo-tree-id721 . 15) (undo-tree-id722 . 15) (undo-tree-id723 . 15) (undo-tree-id724 . 15) (undo-tree-id725 . 15) (undo-tree-id726 . 15) (undo-tree-id727 . 15) (undo-tree-id728 . 15) (undo-tree-id729 . 15) (undo-tree-id730 . 15) (undo-tree-id731 . 15) (undo-tree-id732 . 15) (undo-tree-id733 . 15) (undo-tree-id734 . 15) (undo-tree-id735 . 15) (undo-tree-id736 . 15) (undo-tree-id737 . 15) (undo-tree-id738 . 15) (undo-tree-id739 . 15) (undo-tree-id740 . 15) (undo-tree-id741 . 15) (undo-tree-id742 . 15) (undo-tree-id743 . 15) (undo-tree-id744 . 15) (undo-tree-id745 . 15) (undo-tree-id746 . 15) (undo-tree-id747 . 15) (undo-tree-id748 . 15) (undo-tree-id749 . 15) (undo-tree-id750 . 15) (undo-tree-id751 . 15) (undo-tree-id752 . 15) (undo-tree-id753 . 15) (undo-tree-id754 . 15) (undo-tree-id755 . 15) (undo-tree-id756 . 15) (undo-tree-id757 . 15) (undo-tree-id758 . 15) (undo-tree-id759 . 15) (undo-tree-id760 . 15) (undo-tree-id761 . 15) (undo-tree-id762 . 15) (undo-tree-id763 . 15) (undo-tree-id764 . 15) (undo-tree-id765 . 15) (undo-tree-id766 . 15) (undo-tree-id767 . 15) (undo-tree-id768 . 15) (undo-tree-id769 . 15) (undo-tree-id770 . 15) (undo-tree-id771 . 15) (undo-tree-id772 . 15) (undo-tree-id773 . 15) (undo-tree-id774 . 15) (undo-tree-id775 . 15) (undo-tree-id776 . 15) (undo-tree-id777 . 15) (undo-tree-id778 . 15) (undo-tree-id779 . 15) (undo-tree-id780 . 15) (undo-tree-id781 . 15) (undo-tree-id782 . 15) (undo-tree-id783 . 15) (undo-tree-id784 . 15) (undo-tree-id785 . 15) (undo-tree-id786 . 15) (undo-tree-id787 . 15) (undo-tree-id788 . 15) (undo-tree-id789 . 15) (undo-tree-id790 . 15) (undo-tree-id791 . 15) (undo-tree-id792 . 15) (undo-tree-id793 . 15) (undo-tree-id794 . 15) (undo-tree-id795 . 15) (undo-tree-id796 . 15) (undo-tree-id797 . 15) (undo-tree-id798 . 15) (undo-tree-id799 . 15) (undo-tree-id800 . 15) (undo-tree-id801 . 15) (undo-tree-id802 . 15) (undo-tree-id803 . 15) (undo-tree-id804 . 15) (undo-tree-id805 . 15) (undo-tree-id806 . 15) (undo-tree-id807 . 15) (undo-tree-id808 . 15) (undo-tree-id809 . 15) (undo-tree-id810 . 15) (undo-tree-id811 . 15) (undo-tree-id812 . 15) (undo-tree-id813 . 15) (undo-tree-id814 . 15) (undo-tree-id815 . 15) (undo-tree-id816 . 15) (undo-tree-id817 . 15) (undo-tree-id818 . 15) (undo-tree-id819 . 15) (undo-tree-id820 . 15) (undo-tree-id821 . 15) (undo-tree-id822 . 15) (undo-tree-id823 . 15) (undo-tree-id824 . 15) (undo-tree-id825 . 15) (undo-tree-id826 . 15) (undo-tree-id827 . 15) (undo-tree-id828 . 15) (undo-tree-id829 . 15) (undo-tree-id830 . 15) (undo-tree-id831 . 15) (undo-tree-id832 . 15) (undo-tree-id833 . 15) (undo-tree-id834 . 15) (undo-tree-id835 . 15) (undo-tree-id836 . 15) (undo-tree-id837 . 15) (undo-tree-id838 . 15) (undo-tree-id839 . 15) (undo-tree-id840 . 15) (undo-tree-id841 . 15) (undo-tree-id842 . 15) (undo-tree-id843 . 15) (undo-tree-id844 . 15) (undo-tree-id845 . 15) (undo-tree-id846 . 15) (undo-tree-id847 . 15) (undo-tree-id848 . 15) (undo-tree-id849 . 15) (undo-tree-id850 . -14) (undo-tree-id851 . 15)) ((2986 . 3001)) (21670 27171 633310 433000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2986) (undo-tree-id852 . 1) (undo-tree-id853 . 1) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 1) (undo-tree-id859 . 1) (undo-tree-id860 . 1) (undo-tree-id861 . 1) (undo-tree-id862 . 1) (undo-tree-id863 . 1) (undo-tree-id864 . 1) (undo-tree-id865 . 1) (undo-tree-id866 . 1) (undo-tree-id867 . 1) (undo-tree-id868 . 1) (undo-tree-id869 . 1) (undo-tree-id870 . 1) (undo-tree-id871 . 1) (undo-tree-id872 . 1) (undo-tree-id873 . 1) (undo-tree-id874 . 1) (undo-tree-id875 . 1) (undo-tree-id876 . 1) (undo-tree-id877 . 1) (undo-tree-id878 . 1) (undo-tree-id879 . 1) (undo-tree-id880 . 1) (undo-tree-id881 . 1) (undo-tree-id882 . 1) (undo-tree-id883 . 1) (undo-tree-id884 . 1) (undo-tree-id885 . 1) (undo-tree-id886 . 1) (undo-tree-id887 . 1) (undo-tree-id888 . 1) (undo-tree-id889 . 1) (undo-tree-id890 . 1) (undo-tree-id891 . 1) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . 1) (undo-tree-id899 . 1) (undo-tree-id900 . 1) (undo-tree-id901 . 1) (undo-tree-id902 . 1) (undo-tree-id903 . 1) (undo-tree-id904 . 1) (undo-tree-id905 . 1) (undo-tree-id906 . 1) (undo-tree-id907 . 1) (undo-tree-id908 . 1) (undo-tree-id909 . 1) (undo-tree-id910 . 1) (undo-tree-id911 . 1) (undo-tree-id912 . 1) (undo-tree-id913 . 1) (undo-tree-id914 . 1) (undo-tree-id915 . 1) (undo-tree-id916 . 1) (undo-tree-id917 . 1) (undo-tree-id918 . 1) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . 1) (undo-tree-id922 . 1) (undo-tree-id923 . 1) (undo-tree-id924 . 1) (undo-tree-id925 . 1) (undo-tree-id926 . 1) (undo-tree-id927 . 1) (undo-tree-id928 . 1) (undo-tree-id929 . 1) (undo-tree-id930 . 1) (undo-tree-id931 . 1) (undo-tree-id932 . 1) (undo-tree-id933 . 1) (undo-tree-id934 . 1) (undo-tree-id935 . 1) (undo-tree-id936 . 1) (undo-tree-id937 . 1) (undo-tree-id938 . 1) (undo-tree-id939 . 1) (undo-tree-id940 . 1) (undo-tree-id941 . 1) (undo-tree-id942 . 1) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1) (undo-tree-id950 . 1) (undo-tree-id951 . 1) (undo-tree-id952 . 1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1) (undo-tree-id956 . 1) (undo-tree-id957 . 1) (undo-tree-id958 . 1) (undo-tree-id959 . 1) (undo-tree-id960 . 1) (undo-tree-id961 . 1) (undo-tree-id962 . 1) (undo-tree-id963 . 1) (undo-tree-id964 . 1) (undo-tree-id965 . 1) (undo-tree-id966 . 1) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1) (undo-tree-id973 . 1) (undo-tree-id974 . 1) (undo-tree-id975 . 1) (undo-tree-id976 . 1) (undo-tree-id977 . 1) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (undo-tree-id982 . 1) (undo-tree-id983 . 1) (undo-tree-id984 . 1) (undo-tree-id985 . 1) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . 1) (undo-tree-id994 . 1) (undo-tree-id995 . 1) (undo-tree-id996 . 1) (undo-tree-id997 . 1) (undo-tree-id998 . 1) (undo-tree-id999 . 1) (undo-tree-id1000 . 1) (undo-tree-id1001 . 1) (undo-tree-id1002 . 1) (undo-tree-id1003 . 1) (undo-tree-id1004 . 1) (undo-tree-id1005 . 1) (undo-tree-id1006 . 1) (undo-tree-id1007 . 1) (undo-tree-id1008 . 1) (undo-tree-id1009 . 1) (undo-tree-id1010 . 1) (undo-tree-id1011 . 1) (undo-tree-id1012 . 1) (undo-tree-id1013 . 1) (undo-tree-id1014 . 1) (undo-tree-id1015 . 1) (undo-tree-id1016 . 1)) ((2986 . 2987)) (21670 27173 344430 41000) 0 nil]) ((#("#taskwarrior
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 13 (fontified t face font-lock-comment-face)) . 2986) (undo-tree-id1017 . 13) (undo-tree-id1018 . 13) (undo-tree-id1019 . 13) (undo-tree-id1020 . 13) (undo-tree-id1021 . 13) (undo-tree-id1022 . 13) (undo-tree-id1023 . 13) (undo-tree-id1024 . 13) (undo-tree-id1025 . 13) (undo-tree-id1026 . 13) (undo-tree-id1027 . 13) (undo-tree-id1028 . 13) (undo-tree-id1029 . 13) (undo-tree-id1030 . 13) (undo-tree-id1031 . 13) (undo-tree-id1032 . 13) (undo-tree-id1033 . 13) (undo-tree-id1034 . 13) (undo-tree-id1035 . 13) (undo-tree-id1036 . 13) (undo-tree-id1037 . 13) (undo-tree-id1038 . 13) (undo-tree-id1039 . 13) (undo-tree-id1040 . 13) (undo-tree-id1041 . 13) (undo-tree-id1042 . 13) (undo-tree-id1043 . 13) (undo-tree-id1044 . 13) (undo-tree-id1045 . 13) (undo-tree-id1046 . 13) (undo-tree-id1047 . 13) (undo-tree-id1048 . 13) (undo-tree-id1049 . 13) (undo-tree-id1050 . 13) (undo-tree-id1051 . 13) (undo-tree-id1052 . 13) (undo-tree-id1053 . 13) (undo-tree-id1054 . 13) (undo-tree-id1055 . 13) (undo-tree-id1056 . 13) (undo-tree-id1057 . 13) (undo-tree-id1058 . 13) (undo-tree-id1059 . 13) (undo-tree-id1060 . 13) (undo-tree-id1061 . 13) (undo-tree-id1062 . 13) (undo-tree-id1063 . 13) (undo-tree-id1064 . 13) (undo-tree-id1065 . 13) (undo-tree-id1066 . 13) (undo-tree-id1067 . 13) (undo-tree-id1068 . 13) (undo-tree-id1069 . 13) (undo-tree-id1070 . 13) (undo-tree-id1071 . 13) (undo-tree-id1072 . 13) (undo-tree-id1073 . 13) (undo-tree-id1074 . 13) (undo-tree-id1075 . 13) (undo-tree-id1076 . 13) (undo-tree-id1077 . 13) (undo-tree-id1078 . 13) (undo-tree-id1079 . 13) (undo-tree-id1080 . 13) (undo-tree-id1081 . 13) (undo-tree-id1082 . 13) (undo-tree-id1083 . 13) (undo-tree-id1084 . 13) (undo-tree-id1085 . 13) (undo-tree-id1086 . 13) (undo-tree-id1087 . 13) (undo-tree-id1088 . 13) (undo-tree-id1089 . 13) (undo-tree-id1090 . 13) (undo-tree-id1091 . 13) (undo-tree-id1092 . 13) (undo-tree-id1093 . 13) (undo-tree-id1094 . 13) (undo-tree-id1095 . 13) (undo-tree-id1096 . 13) (undo-tree-id1097 . 13) (undo-tree-id1098 . 13) (undo-tree-id1099 . 13) (undo-tree-id1100 . 13) (undo-tree-id1101 . 13) (undo-tree-id1102 . 13) (undo-tree-id1103 . 13) (undo-tree-id1104 . 13) (undo-tree-id1105 . 13) (undo-tree-id1106 . 13) (undo-tree-id1107 . 13) (undo-tree-id1108 . 13) (undo-tree-id1109 . 13) (undo-tree-id1110 . 13) (undo-tree-id1111 . 13) (undo-tree-id1112 . 13) (undo-tree-id1113 . 13) (undo-tree-id1114 . 13) (undo-tree-id1115 . 13) (undo-tree-id1116 . 13) (undo-tree-id1117 . 13) (undo-tree-id1118 . 13) (undo-tree-id1119 . 13) (undo-tree-id1120 . 13) (undo-tree-id1121 . 13) (undo-tree-id1122 . 13) (undo-tree-id1123 . 13) (undo-tree-id1124 . 13) (undo-tree-id1125 . 13) (undo-tree-id1126 . 13) (undo-tree-id1127 . 13) (undo-tree-id1128 . 13) (undo-tree-id1129 . 13) (undo-tree-id1130 . 13) (undo-tree-id1131 . 13) (undo-tree-id1132 . 13) (undo-tree-id1133 . 13) (undo-tree-id1134 . 13) (undo-tree-id1135 . 13) (undo-tree-id1136 . 13) (undo-tree-id1137 . 13) (undo-tree-id1138 . 13) (undo-tree-id1139 . 13) (undo-tree-id1140 . 13) (undo-tree-id1141 . 13) (undo-tree-id1142 . 13) (undo-tree-id1143 . 13) (undo-tree-id1144 . 13) (undo-tree-id1145 . 13) (undo-tree-id1146 . 13) (undo-tree-id1147 . 13) (undo-tree-id1148 . 13) (undo-tree-id1149 . 13) (undo-tree-id1150 . 13) (undo-tree-id1151 . 13) (undo-tree-id1152 . 13) (undo-tree-id1153 . 13) (undo-tree-id1154 . 13) (undo-tree-id1155 . 13) (undo-tree-id1156 . 13) (undo-tree-id1157 . 13) (undo-tree-id1158 . 13) (undo-tree-id1159 . 13) (undo-tree-id1160 . 13) (undo-tree-id1161 . 13) (undo-tree-id1162 . 13) (undo-tree-id1163 . 13) (undo-tree-id1164 . 13) (undo-tree-id1165 . 13) (undo-tree-id1166 . 13) (undo-tree-id1167 . 13) (undo-tree-id1168 . 13) (undo-tree-id1169 . 13) (undo-tree-id1170 . 13) (undo-tree-id1171 . 13) (undo-tree-id1172 . 13) (undo-tree-id1173 . 13) (undo-tree-id1174 . 13) (undo-tree-id1175 . 13) (undo-tree-id1176 . 13) (undo-tree-id1177 . 13) (undo-tree-id1178 . 13) (undo-tree-id1179 . 13) (undo-tree-id1180 . -12) (undo-tree-id1181 . 13)) ((2986 . 2999)) (21670 27174 83415 317000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2986) (undo-tree-id1182 . 1) (undo-tree-id1183 . 1) (undo-tree-id1185 . 1) (undo-tree-id1187 . 1) (undo-tree-id1189 . 1) (undo-tree-id1191 . 1) (undo-tree-id1193 . 1) (undo-tree-id1195 . 1) (undo-tree-id1197 . 1) (undo-tree-id1199 . 1) (undo-tree-id1201 . 1) (undo-tree-id1203 . 1) (undo-tree-id1205 . 1) (undo-tree-id1207 . 1) (undo-tree-id1209 . 1) (undo-tree-id1211 . 1) (undo-tree-id1213 . 1) (undo-tree-id1215 . 1) (undo-tree-id1217 . 1) (undo-tree-id1219 . 1) (undo-tree-id1221 . 1) (undo-tree-id1223 . 1) (undo-tree-id1225 . 1) (undo-tree-id1227 . 1) (undo-tree-id1229 . 1) (undo-tree-id1231 . 1) (undo-tree-id1233 . 1) (undo-tree-id1235 . 1) (undo-tree-id1237 . 1) (undo-tree-id1239 . 1) (undo-tree-id1241 . 1) (undo-tree-id1243 . 1) (undo-tree-id1245 . 1) (undo-tree-id1247 . 1) (undo-tree-id1249 . 1) (undo-tree-id1251 . 1) (undo-tree-id1253 . 1) (undo-tree-id1255 . 1) (undo-tree-id1257 . 1) (undo-tree-id1259 . 1) (undo-tree-id1261 . 1) (undo-tree-id1263 . 1) (undo-tree-id1265 . 1) (undo-tree-id1267 . 1) (undo-tree-id1269 . 1) (undo-tree-id1271 . 1) (undo-tree-id1273 . 1) (undo-tree-id1275 . 1) (undo-tree-id1277 . 1) (undo-tree-id1279 . 1) (undo-tree-id1281 . 1) (undo-tree-id1283 . 1) (undo-tree-id1285 . 1) (undo-tree-id1287 . 1) (undo-tree-id1289 . 1) (undo-tree-id1291 . 1) (undo-tree-id1293 . 1) (undo-tree-id1295 . 1) (undo-tree-id1297 . 1) (undo-tree-id1299 . 1) (undo-tree-id1301 . 1) (undo-tree-id1303 . 1) (undo-tree-id1305 . 1) (undo-tree-id1307 . 1) (undo-tree-id1309 . 1) (undo-tree-id1311 . 1) (undo-tree-id1313 . 1) (undo-tree-id1315 . 1) (undo-tree-id1317 . 1) (undo-tree-id1319 . 1) (undo-tree-id1321 . 1) (undo-tree-id1323 . 1) (undo-tree-id1325 . 1) (undo-tree-id1327 . 1) (undo-tree-id1329 . 1) (undo-tree-id1331 . 1) (undo-tree-id1333 . 1) (undo-tree-id1335 . 1) (undo-tree-id1337 . 1) (undo-tree-id1339 . 1) (undo-tree-id1341 . 1) (undo-tree-id1343 . 1)) ((2986 . 2987)) (21670 27203 867485 475000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2986) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1350 . -1) (undo-tree-id1352 . -1) (undo-tree-id1354 . -1) (undo-tree-id1356 . -1) (undo-tree-id1358 . -1) (undo-tree-id1360 . -1) (undo-tree-id1362 . -1) (undo-tree-id1364 . -1) (undo-tree-id1366 . -1) (undo-tree-id1368 . -1) (undo-tree-id1370 . -1) (undo-tree-id1372 . -1) (undo-tree-id1374 . -1) (undo-tree-id1376 . -1) (undo-tree-id1378 . -1) (undo-tree-id1380 . -1) (undo-tree-id1382 . -1) (undo-tree-id1384 . -1) (undo-tree-id1386 . -1) (undo-tree-id1388 . -1) (undo-tree-id1390 . -1) (undo-tree-id1392 . -1) (undo-tree-id1394 . -1) (undo-tree-id1396 . -1) (undo-tree-id1398 . -1) (undo-tree-id1400 . -1) (undo-tree-id1402 . -1) (undo-tree-id1404 . -1) (undo-tree-id1406 . -1) (undo-tree-id1408 . -1) (undo-tree-id1410 . -1) (undo-tree-id1412 . -1) (undo-tree-id1414 . -1) (undo-tree-id1416 . -1) (undo-tree-id1418 . -1) (undo-tree-id1420 . -1) (undo-tree-id1422 . -1) (undo-tree-id1424 . -1) (undo-tree-id1426 . -1) (undo-tree-id1428 . -1) (undo-tree-id1430 . -1)) ((2986 . 2987)) (21670 27203 867651 937000) 0 nil]) ((#("alias als=\"alsamixer\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 21 (fontified t face font-lock-string-face) 21 22 (fontified t)) . 2987) (undo-tree-id1431 . 22) (undo-tree-id1432 . 22) (undo-tree-id1434 . 22) (undo-tree-id1436 . 22) (undo-tree-id1438 . 22) (undo-tree-id1440 . 22) (undo-tree-id1442 . 22) (undo-tree-id1444 . 22) (undo-tree-id1446 . 22) (undo-tree-id1448 . 22) (undo-tree-id1450 . 22) (undo-tree-id1452 . 22) (undo-tree-id1454 . 22) (undo-tree-id1456 . 22) (undo-tree-id1458 . 22) (undo-tree-id1460 . 22) (undo-tree-id1462 . 22) (undo-tree-id1464 . 22) (undo-tree-id1466 . 22) (undo-tree-id1468 . 22) (undo-tree-id1470 . 22) (undo-tree-id1472 . 22) (undo-tree-id1474 . 22) (undo-tree-id1476 . 22) (undo-tree-id1478 . 22) (undo-tree-id1480 . 22) (undo-tree-id1482 . 22) (undo-tree-id1484 . 22) (undo-tree-id1486 . 22) (undo-tree-id1488 . 22) (undo-tree-id1490 . 22) (undo-tree-id1492 . 22) (undo-tree-id1494 . 22) (undo-tree-id1496 . 22) (undo-tree-id1498 . 22) (undo-tree-id1500 . 22) (undo-tree-id1502 . 22) (undo-tree-id1504 . 22) (undo-tree-id1506 . 22) (undo-tree-id1508 . 22) (undo-tree-id1510 . 22) (undo-tree-id1512 . 22) (undo-tree-id1514 . 22) (undo-tree-id1516 . 22) (undo-tree-id1518 . 22) (undo-tree-id1520 . 22) (undo-tree-id1522 . 22) (undo-tree-id1524 . 22) (undo-tree-id1526 . 22) (undo-tree-id1528 . 22) (undo-tree-id1530 . 22) (undo-tree-id1532 . 22) (undo-tree-id1534 . 22) (undo-tree-id1536 . 22) (undo-tree-id1538 . 22) (undo-tree-id1540 . 22) (undo-tree-id1542 . 22) (undo-tree-id1544 . 22) (undo-tree-id1546 . 22) (undo-tree-id1548 . 22) (undo-tree-id1550 . 22) (undo-tree-id1552 . 22) (undo-tree-id1554 . 22) (undo-tree-id1556 . 22) (undo-tree-id1558 . 22) (undo-tree-id1560 . 22) (undo-tree-id1562 . 22) (undo-tree-id1564 . 22) (undo-tree-id1566 . 22) (undo-tree-id1568 . 22) (undo-tree-id1570 . 22) (undo-tree-id1572 . 22) (undo-tree-id1574 . 22) (undo-tree-id1576 . 22) (undo-tree-id1578 . 22) (undo-tree-id1580 . 22) (undo-tree-id1582 . 22) (undo-tree-id1584 . 22) (undo-tree-id1586 . 22) (undo-tree-id1588 . -21) (undo-tree-id1590 . 22) (undo-tree-id1592 . 22)) ((2987 . 3009)) (21670 27203 867765 319000) 0 nil]) ((#("#System
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 8 (fontified t face font-lock-comment-face)) . 2987) (undo-tree-id1593 . 8) (undo-tree-id1594 . 8) (undo-tree-id1596 . 8) (undo-tree-id1598 . 8) (undo-tree-id1600 . 8) (undo-tree-id1602 . 8) (undo-tree-id1604 . 8) (undo-tree-id1606 . 8) (undo-tree-id1608 . 8) (undo-tree-id1610 . 8) (undo-tree-id1612 . 8) (undo-tree-id1614 . 8) (undo-tree-id1616 . 8) (undo-tree-id1618 . 8) (undo-tree-id1620 . 8) (undo-tree-id1622 . 8) (undo-tree-id1624 . 8) (undo-tree-id1626 . 8) (undo-tree-id1628 . 8) (undo-tree-id1630 . 8) (undo-tree-id1632 . 8) (undo-tree-id1634 . 8) (undo-tree-id1636 . 8) (undo-tree-id1638 . 8) (undo-tree-id1640 . 8) (undo-tree-id1642 . 8) (undo-tree-id1644 . 8) (undo-tree-id1646 . 8) (undo-tree-id1648 . 8) (undo-tree-id1650 . 8) (undo-tree-id1652 . 8) (undo-tree-id1654 . 8) (undo-tree-id1656 . 8) (undo-tree-id1658 . 8) (undo-tree-id1660 . 8) (undo-tree-id1662 . 8) (undo-tree-id1664 . 8) (undo-tree-id1666 . 8) (undo-tree-id1668 . 8) (undo-tree-id1670 . 8) (undo-tree-id1672 . 8) (undo-tree-id1674 . 8) (undo-tree-id1676 . 8) (undo-tree-id1678 . 8) (undo-tree-id1680 . 8) (undo-tree-id1682 . 8) (undo-tree-id1684 . 8) (undo-tree-id1686 . 8) (undo-tree-id1688 . 8) (undo-tree-id1690 . 8) (undo-tree-id1692 . 8) (undo-tree-id1694 . 8) (undo-tree-id1696 . 8) (undo-tree-id1698 . 8) (undo-tree-id1700 . 8) (undo-tree-id1702 . 8) (undo-tree-id1704 . 8) (undo-tree-id1706 . 8) (undo-tree-id1708 . 8) (undo-tree-id1710 . 8) (undo-tree-id1712 . 8) (undo-tree-id1714 . 8) (undo-tree-id1716 . 8) (undo-tree-id1718 . 8) (undo-tree-id1720 . 8) (undo-tree-id1722 . 8) (undo-tree-id1724 . 8) (undo-tree-id1726 . 8) (undo-tree-id1728 . 8) (undo-tree-id1730 . 8) (undo-tree-id1732 . 8) (undo-tree-id1734 . 8) (undo-tree-id1736 . 8) (undo-tree-id1738 . 8) (undo-tree-id1740 . 8) (undo-tree-id1742 . 8) (undo-tree-id1744 . 8) (undo-tree-id1746 . 8) (undo-tree-id1748 . 8) (undo-tree-id1750 . 8)) ((2987 . 2995)) (21670 27203 867925 694000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2995)) ((2995 . 2996)) (21670 27203 868089 629000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id1752 . 1) (undo-tree-id1753 . 1) (undo-tree-id1755 . 1) (undo-tree-id1757 . 1) (undo-tree-id1759 . 1) (undo-tree-id1761 . 1) (undo-tree-id1763 . 1) (undo-tree-id1765 . 1) (undo-tree-id1767 . 1) (undo-tree-id1769 . 1) (undo-tree-id1771 . 1) (undo-tree-id1773 . 1) (undo-tree-id1775 . 1) (undo-tree-id1777 . 1) (undo-tree-id1779 . 1) (undo-tree-id1781 . 1) (undo-tree-id1783 . 1) (undo-tree-id1785 . 1) (undo-tree-id1787 . 1) (undo-tree-id1789 . 1) (undo-tree-id1791 . 1) (undo-tree-id1793 . 1) (undo-tree-id1795 . 1) (undo-tree-id1797 . 1) (undo-tree-id1799 . 1) (undo-tree-id1801 . 1) (undo-tree-id1803 . 1) (undo-tree-id1805 . 1) (undo-tree-id1807 . 1) (undo-tree-id1809 . 1) (undo-tree-id1811 . 1) (undo-tree-id1813 . 1) (undo-tree-id1815 . 1) (undo-tree-id1817 . 1) (undo-tree-id1819 . 1) (undo-tree-id1821 . 1) (undo-tree-id1823 . 1) (undo-tree-id1825 . 1) (undo-tree-id1827 . 1) (undo-tree-id1829 . 1) (undo-tree-id1831 . 1) (undo-tree-id1833 . 1) (undo-tree-id1835 . 1) (undo-tree-id1837 . 1) (undo-tree-id1839 . 1) (undo-tree-id1841 . 1) (undo-tree-id1843 . 1) (undo-tree-id1845 . 1) (undo-tree-id1847 . 1) (undo-tree-id1849 . 1) (undo-tree-id1851 . 1) (undo-tree-id1853 . 1) (undo-tree-id1855 . 1) (undo-tree-id1857 . 1) (undo-tree-id1859 . 1) (undo-tree-id1861 . 1) (undo-tree-id1863 . 1) (undo-tree-id1865 . 1) (undo-tree-id1867 . 1) (undo-tree-id1869 . 1) (undo-tree-id1871 . 1) (undo-tree-id1873 . 1) (undo-tree-id1875 . 1) (undo-tree-id1877 . 1) (undo-tree-id1879 . 1) (undo-tree-id1881 . 1) (undo-tree-id1883 . 1) (undo-tree-id1885 . 1) (undo-tree-id1887 . 1) (undo-tree-id1889 . 1) (undo-tree-id1891 . 1) (undo-tree-id1893 . 1) (undo-tree-id1895 . 1) (undo-tree-id1897 . 1) (undo-tree-id1899 . 1) (undo-tree-id1901 . 1) (undo-tree-id1903 . 1) (undo-tree-id1905 . 1) (undo-tree-id1907 . 1)) ((2987 . 2988)) (21670 27203 868114 687000) 0 nil]) ((#("#ssh
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-face)) . 2987) (undo-tree-id1908 . 5) (undo-tree-id1909 . 5) (undo-tree-id1911 . 5) (undo-tree-id1913 . 5) (undo-tree-id1915 . 5) (undo-tree-id1917 . 5) (undo-tree-id1919 . 5) (undo-tree-id1921 . 5) (undo-tree-id1923 . 5) (undo-tree-id1925 . 5) (undo-tree-id1927 . 5) (undo-tree-id1929 . 5) (undo-tree-id1931 . 5) (undo-tree-id1933 . 5) (undo-tree-id1935 . 5) (undo-tree-id1937 . 5) (undo-tree-id1939 . 5) (undo-tree-id1941 . 5) (undo-tree-id1943 . 5) (undo-tree-id1945 . 5) (undo-tree-id1947 . 5) (undo-tree-id1949 . 5) (undo-tree-id1951 . 5) (undo-tree-id1953 . 5) (undo-tree-id1955 . 5) (undo-tree-id1957 . 5) (undo-tree-id1959 . 5) (undo-tree-id1961 . 5) (undo-tree-id1963 . 5) (undo-tree-id1965 . 5) (undo-tree-id1967 . 5) (undo-tree-id1969 . 5) (undo-tree-id1971 . 5) (undo-tree-id1973 . 5) (undo-tree-id1975 . 5) (undo-tree-id1977 . 5) (undo-tree-id1979 . 5) (undo-tree-id1981 . 5) (undo-tree-id1983 . 5) (undo-tree-id1985 . 5) (undo-tree-id1987 . 5) (undo-tree-id1989 . 5) (undo-tree-id1991 . 5) (undo-tree-id1993 . 5) (undo-tree-id1995 . 5) (undo-tree-id1997 . 5) (undo-tree-id1999 . 5) (undo-tree-id2001 . 5) (undo-tree-id2003 . 5) (undo-tree-id2005 . 5) (undo-tree-id2007 . 5) (undo-tree-id2009 . 5) (undo-tree-id2011 . 5) (undo-tree-id2013 . 5) (undo-tree-id2015 . 5) (undo-tree-id2017 . 5) (undo-tree-id2019 . 5) (undo-tree-id2021 . 5) (undo-tree-id2023 . 5) (undo-tree-id2025 . 5) (undo-tree-id2027 . 5) (undo-tree-id2029 . 5) (undo-tree-id2031 . 5) (undo-tree-id2033 . 5) (undo-tree-id2035 . 5) (undo-tree-id2037 . 5) (undo-tree-id2039 . 5) (undo-tree-id2041 . 5) (undo-tree-id2043 . 5) (undo-tree-id2045 . 5) (undo-tree-id2047 . 5) (undo-tree-id2049 . 5) (undo-tree-id2051 . 5) (undo-tree-id2053 . 5) (undo-tree-id2055 . 5) (undo-tree-id2057 . -4) (undo-tree-id2059 . 5)) ((2987 . 2992)) (21670 27203 868333 345000) 0 nil]) ((#("alias sshh=\"ssh zeltak@zeltak.homelinux.com\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-variable-name-face) 10 11 (fontified t) 11 44 (fontified t face font-lock-string-face) 44 45 (fontified t)) . 2992) (undo-tree-id2061 . 45)) ((2992 . 3037)) (21670 27203 868711 314000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2987) (undo-tree-id2062 . 1) (undo-tree-id2063 . 1) (undo-tree-id2065 . 1) (undo-tree-id2067 . 1) (undo-tree-id2069 . 1) (undo-tree-id2071 . 1) (undo-tree-id2073 . 1) (undo-tree-id2075 . 1) (undo-tree-id2077 . 1) (undo-tree-id2079 . 1) (undo-tree-id2081 . 1) (undo-tree-id2083 . 1) (undo-tree-id2085 . 1) (undo-tree-id2087 . 1) (undo-tree-id2089 . 1) (undo-tree-id2091 . 1) (undo-tree-id2093 . 1) (undo-tree-id2095 . 1) (undo-tree-id2097 . 1) (undo-tree-id2099 . 1) (undo-tree-id2101 . 1) (undo-tree-id2103 . 1) (undo-tree-id2105 . 1) (undo-tree-id2107 . 1) (undo-tree-id2109 . 1) (undo-tree-id2111 . 1) (undo-tree-id2113 . 1) (undo-tree-id2115 . 1) (undo-tree-id2117 . 1) (undo-tree-id2119 . 1) (undo-tree-id2121 . 1) (undo-tree-id2123 . 1) (undo-tree-id2125 . 1) (undo-tree-id2127 . 1) (undo-tree-id2129 . 1) (undo-tree-id2131 . 1) (undo-tree-id2133 . 1) (undo-tree-id2135 . 1) (undo-tree-id2137 . 1) (undo-tree-id2139 . 1) (undo-tree-id2141 . 1) (undo-tree-id2143 . 1) (undo-tree-id2145 . 1) (undo-tree-id2147 . 1) (undo-tree-id2149 . 1) (undo-tree-id2151 . 1) (undo-tree-id2153 . 1) (undo-tree-id2155 . 1) (undo-tree-id2157 . 1) (undo-tree-id2159 . 1) (undo-tree-id2161 . 1) (undo-tree-id2163 . 1) (undo-tree-id2165 . 1) (undo-tree-id2167 . 1) (undo-tree-id2169 . 1) (undo-tree-id2171 . 1) (undo-tree-id2173 . 1) (undo-tree-id2175 . 1) (undo-tree-id2177 . 1) (undo-tree-id2179 . 1) (undo-tree-id2181 . 1) (undo-tree-id2183 . 1) (undo-tree-id2185 . 1) (undo-tree-id2187 . 1) (undo-tree-id2189 . 1) (undo-tree-id2191 . 1) (undo-tree-id2193 . 1) (undo-tree-id2195 . 1) (undo-tree-id2197 . 1) (undo-tree-id2199 . 1) (undo-tree-id2201 . 1) (undo-tree-id2203 . 1) (undo-tree-id2205 . 1) (undo-tree-id2207 . 1) (undo-tree-id2209 . 1)) ((2987 . 2988)) (21670 27203 868784 233000) 0 nil]) ((#("#network
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face)) . 2987) (undo-tree-id2211 . -9) (undo-tree-id2212 . -9) (undo-tree-id2213 . -9) (undo-tree-id2214 . -9) (undo-tree-id2216 . 9) (undo-tree-id2218 . 9) (undo-tree-id2220 . -9) (undo-tree-id2222 . -9) (undo-tree-id2224 . -9) (undo-tree-id2226 . -9) (undo-tree-id2228 . -9) (undo-tree-id2230 . -9) (undo-tree-id2232 . -9) (undo-tree-id2234 . -9) (undo-tree-id2236 . -9) (undo-tree-id2238 . -9) (undo-tree-id2240 . -9) (undo-tree-id2242 . -9) (undo-tree-id2244 . -9) (undo-tree-id2246 . -9) (undo-tree-id2248 . -9) (undo-tree-id2250 . -9) (undo-tree-id2252 . -9) (undo-tree-id2254 . -9) (undo-tree-id2256 . -9) (undo-tree-id2258 . -9) (undo-tree-id2260 . -9) (undo-tree-id2262 . -9) (undo-tree-id2264 . -9) (undo-tree-id2266 . -9) (undo-tree-id2268 . -9) (undo-tree-id2270 . -9) (undo-tree-id2272 . -9) (undo-tree-id2274 . -9) (undo-tree-id2276 . -9) (undo-tree-id2278 . -9) (undo-tree-id2280 . -9) (undo-tree-id2282 . -9) (undo-tree-id2284 . -9) (undo-tree-id2286 . 9)) ((2987 . 2996)) (21670 27203 868980 9000) 0 nil]) ((#("alias sip=\"nmap -e eth0 -sP 10.0.0.1/255\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 41 (fontified t face font-lock-string-face) 41 42 (fontified t)) . 2996) (undo-tree-id2288 . 2) (undo-tree-id2289 . -38) (undo-tree-id2290 . -11) (undo-tree-id2291 . 2) (undo-tree-id2292 . -11) (undo-tree-id2293 . -38) (undo-tree-id2295 . 42) (undo-tree-id2297 . 42) (undo-tree-id2299 . 41) (undo-tree-id2301 . 39) (undo-tree-id2303 . 37) (undo-tree-id2305 . 35) (undo-tree-id2307 . 33) (undo-tree-id2309 . 31) (undo-tree-id2311 . 29) (undo-tree-id2313 . 27) (undo-tree-id2315 . 25) (undo-tree-id2317 . 23) (undo-tree-id2319 . 21) (undo-tree-id2321 . 19) (undo-tree-id2323 . 17) (undo-tree-id2325 . 15) (undo-tree-id2327 . 12) (undo-tree-id2329 . 12) (undo-tree-id2331 . 2) (undo-tree-id2333 . 2) (undo-tree-id2335 . 6) (undo-tree-id2337 . 8) (undo-tree-id2339 . 10) (undo-tree-id2341 . 10) (undo-tree-id2343 . 10) (undo-tree-id2345 . 12) (undo-tree-id2347 . 13) (undo-tree-id2349 . 13) (undo-tree-id2351 . 14) (undo-tree-id2353 . 16) (undo-tree-id2355 . 18) (undo-tree-id2357 . 20) (undo-tree-id2359 . 22) (undo-tree-id2361 . 24) (undo-tree-id2363 . 26) (undo-tree-id2365 . 28) (undo-tree-id2367 . 30) (undo-tree-id2369 . 31) (undo-tree-id2371 . 30) (undo-tree-id2373 . 29) (undo-tree-id2375 . 28) (undo-tree-id2377 . 27) (undo-tree-id2379 . 26) (undo-tree-id2381 . 25) (undo-tree-id2383 . 24) (undo-tree-id2385 . 23) (undo-tree-id2387 . 22) (undo-tree-id2389 . 21) (undo-tree-id2391 . 20) (undo-tree-id2393 . 19) (undo-tree-id2395 . 18) (undo-tree-id2397 . 17) (undo-tree-id2399 . 16) (undo-tree-id2401 . 15) (undo-tree-id2403 . 14) (undo-tree-id2405 . 13) (undo-tree-id2407 . 12) (undo-tree-id2409 . 11) (undo-tree-id2411 . 10) (undo-tree-id2413 . 9) (undo-tree-id2415 . 8) (undo-tree-id2417 . 7) (undo-tree-id2419 . 6) (undo-tree-id2421 . 5) (undo-tree-id2423 . 2) (undo-tree-id2425 . 31) (undo-tree-id2427 . 30) (undo-tree-id2429 . 29) (undo-tree-id2431 . 28) (undo-tree-id2433 . 27) (undo-tree-id2435 . 26) (undo-tree-id2437 . 25) (undo-tree-id2439 . 24) (undo-tree-id2441 . 23) (undo-tree-id2443 . 22) (undo-tree-id2445 . 21) (undo-tree-id2447 . 20) (undo-tree-id2449 . 19) (undo-tree-id2451 . 18) (undo-tree-id2453 . 17) (undo-tree-id2455 . 16) (undo-tree-id2457 . 15) (undo-tree-id2459 . 14) (undo-tree-id2461 . 13) (undo-tree-id2463 . 12) (undo-tree-id2465 . 11) (undo-tree-id2467 . 10) (undo-tree-id2469 . 9) (undo-tree-id2471 . 8) (undo-tree-id2473 . 7) (undo-tree-id2475 . 6) (undo-tree-id2477 . 5) (undo-tree-id2479 . 2) (undo-tree-id2481 . 2) (undo-tree-id2483 . 2) (undo-tree-id2485 . 2) (undo-tree-id2487 . 2) (undo-tree-id2489 . 2) (undo-tree-id2491 . 3) (undo-tree-id2493 . 3) (undo-tree-id2495 . 3) (undo-tree-id2497 . 3) (undo-tree-id2499 . 3) 3035) ((2996 . 3038)) (21670 27203 869068 506000) 0 nil]) ((3034 . 3036)) ((#("55" 0 2 (fontified nil face font-lock-string-face)) . 3034)) (21670 27203 869271 32000) 0 nil]) ((#("4" 0 1 (fontified t face font-lock-string-face)) . -3034) (undo-tree-id2502 . 1)) ((3034 . 3035)) (21670 27203 869291 637000) 0 nil]) ((3025 . 3026)) ((#("0" 0 1 (fontified nil face font-lock-string-face)) . 3025)) (21670 27203 869317 985000) 0 nil]) ((3026 . 3027)) ((#("0" 0 1 (fontified nil face font-lock-string-face)) . 3026)) (21670 27203 869337 309000) 0 nil]) ((#("1" 0 1 (fontified t face font-lock-string-face)) . -3026)) ((3026 . 3027)) (21670 27203 869355 705000) 0 nil]) ((#("6" 0 1 (fontified t face font-lock-string-face)) . -3027)) ((3027 . 3028)) (21670 27203 869377 129000) 0 nil]) ((#("8" 0 1 (fontified t face font-lock-string-face)) . -3028)) ((3028 . 3029)) (21670 27203 869399 450000) 0 nil]) ((#("2" 0 1 (fontified t face font-lock-string-face)) . 3025) (undo-tree-id2505 . 1)) ((3025 . 3026)) (21670 27203 869420 865000) 0 nil]) ((#("9" 0 1 (fontified t face font-lock-string-face)) . 3025)) ((3025 . 3026)) (21670 27203 869446 611000) 0 nil] [nil nil ((#("#network
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-face)) . 2987) (undo-tree-id449 . 9) (undo-tree-id450 . 9)) ((2987 . 2996)) (21670 27091 29758 285000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2947) (undo-tree-id452 . 1) (undo-tree-id454 . 1) (undo-tree-id456 . 1) (undo-tree-id458 . 1) (undo-tree-id460 . 1) (undo-tree-id462 . 1) (undo-tree-id464 . 1) (undo-tree-id466 . 1) (undo-tree-id468 . 1) (undo-tree-id470 . 1) (undo-tree-id472 . 1) (undo-tree-id474 . 1) (undo-tree-id476 . 1) (undo-tree-id478 . 1) (undo-tree-id480 . 1) (undo-tree-id482 . 1) (undo-tree-id484 . 1) (undo-tree-id486 . 1) (undo-tree-id488 . 1) (undo-tree-id490 . 1)) ((2947 . 2948)) (21670 27203 869469 749000) 0 nil]) ((#("#mounts
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 8 (fontified t face font-lock-comment-face)) . 2947) (undo-tree-id492 . 8) (undo-tree-id494 . 8) (undo-tree-id496 . 8) (undo-tree-id498 . 8) (undo-tree-id500 . 8) (undo-tree-id502 . 8) (undo-tree-id504 . 8) (undo-tree-id506 . 8) (undo-tree-id508 . 8) (undo-tree-id510 . 8) (undo-tree-id512 . 8) (undo-tree-id514 . 8) (undo-tree-id516 . 8) (undo-tree-id518 . 8) (undo-tree-id520 . 8) (undo-tree-id522 . 8) (undo-tree-id524 . 8) (undo-tree-id526 . 8)) ((2947 . 2955)) (21670 27203 869527 232000) 0 nil]) ((#("alias mnt=\"sudo mount 192.168.0.2:/media/raid/   /media/raid/\"
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t) 10 62 (fontified t face font-lock-string-face) 62 63 (fontified t)) . 2955) 2958) ((2955 . 3018)) (21670 27203 869581 675000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2947) (undo-tree-id530 . 1) (undo-tree-id532 . 1) (undo-tree-id534 . 1) (undo-tree-id536 . 1) (undo-tree-id538 . 1) (undo-tree-id540 . 1) (undo-tree-id542 . 1) (undo-tree-id544 . 1) (undo-tree-id546 . 1) (undo-tree-id548 . 1) (undo-tree-id550 . 1) (undo-tree-id552 . 1) (undo-tree-id554 . 1) (undo-tree-id556 . 1) (undo-tree-id558 . 1) (undo-tree-id560 . 1) (undo-tree-id562 . 1) (undo-tree-id564 . 1)) ((2947 . 2948)) (21670 27203 869608 710000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2947) (undo-tree-id566 . 1) (undo-tree-id568 . 1) (undo-tree-id570 . 1) (undo-tree-id572 . 1) (undo-tree-id574 . 1) (undo-tree-id576 . 1) (undo-tree-id578 . 1) (undo-tree-id580 . 1) (undo-tree-id582 . 1) (undo-tree-id584 . 1) (undo-tree-id586 . 1) (undo-tree-id588 . 1) (undo-tree-id590 . 1) (undo-tree-id592 . 1) (undo-tree-id594 . 1) (undo-tree-id596 . 1)) ((2947 . 2948)) (21670 27203 869663 334000) 0 nil]) ((#("#dir changes
alias cdh='cd /home/zeltak/Downloads/'
alias cdp='cd /home/zeltak/programs/'
alias cds='cd /home/zeltak/scripts/'
alias cda='cd /home/zeltak/AUR/'
alias cdz='cd /home/zeltak/'
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 13 (fontified t face font-lock-comment-face) 13 18 (fontified t face font-lock-builtin-face) 18 19 (fontified t) 19 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t) 23 51 (fontified t face font-lock-string-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-builtin-face) 57 58 (fontified t) 58 61 (fontified t face font-lock-variable-name-face) 61 62 (fontified t) 62 89 (fontified t face font-lock-string-face) 89 90 (fontified t) 90 95 (fontified t face font-lock-builtin-face) 95 96 (fontified t) 96 99 (fontified t face font-lock-variable-name-face) 99 100 (fontified t) 100 126 (fontified t face font-lock-string-face) 126 127 (fontified t) 127 132 (fontified t face font-lock-builtin-face) 132 133 (fontified t) 133 136 (fontified t face font-lock-variable-name-face) 136 137 (fontified t) 137 159 (fontified t face font-lock-string-face) 159 160 (fontified t) 160 165 (fontified t face font-lock-builtin-face) 165 166 (fontified t) 166 169 (fontified t face font-lock-variable-name-face) 169 170 (fontified t) 170 188 (fontified t face font-lock-string-face) 188 189 (fontified t)) . -2947) (undo-tree-id599 . 176) (undo-tree-id601 . 99) (undo-tree-id603 . 29) (undo-tree-id605 . 62) (undo-tree-id607 . 137) (undo-tree-id609 . 189) (undo-tree-id611 . 176) (undo-tree-id613 . 99) (undo-tree-id615 . 99) (undo-tree-id617 . 176) (undo-tree-id619 . 189) (undo-tree-id621 . 189) (undo-tree-id622 . -160) (undo-tree-id624 . 189) (undo-tree-id625 . -160) (undo-tree-id627 . 137) (undo-tree-id629 . 62)) ((2947 . 3136)) (21670 27203 869713 755000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2584) (undo-tree-id632 . 1)) ((2584 . 2585)) (21670 27203 869778 755000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2525)) ((2525 . 2526)) (21670 27203 869805 186000) 0 nil]) ((nil rear-nonsticky nil 2521 . 2522) (nil fontified nil 2501 . 2522) (2501 . 2522)) ((#("teamocil --here lmain" 0 20 (fontified nil face font-lock-string-face) 20 21 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 2501) (nil rear-nonsticky t 2521 . 2522)) (21670 27203 869827 205000) 0 nil] [nil nil ((nil rear-nonsticky nil 2532 . 2533) (nil fontified nil 2501 . 2533) (2501 . 2533)) ((#("alias tnew='tmux new-session -s'" 0 12 (fontified nil face font-lock-string-face) 12 31 (fontified nil) 31 32 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 2501) (undo-tree-id448 . 1) (nil rear-nonsticky t 2532 . 2533)) (21670 27015 704506 255000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id0 . -1) (undo-tree-id2 . 1) (undo-tree-id4 . 1) (undo-tree-id6 . 1) (undo-tree-id8 . 1) (undo-tree-id10 . 1) (undo-tree-id12 . 1) (undo-tree-id14 . 1) (undo-tree-id16 . 1) (undo-tree-id18 . 1) (undo-tree-id20 . 1) (undo-tree-id22 . 1) (undo-tree-id24 . 1) (undo-tree-id26 . 1) (undo-tree-id28 . 1) (undo-tree-id30 . 1) (undo-tree-id32 . 1) (undo-tree-id34 . 1) (undo-tree-id36 . 1) (undo-tree-id38 . 1) (undo-tree-id40 . 1)) ((2501 . 2502)) (21670 27203 869863 76000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id42 . 1) (undo-tree-id44 . 1) (undo-tree-id46 . 1) (undo-tree-id48 . 1) (undo-tree-id50 . 1) (undo-tree-id52 . 1) (undo-tree-id54 . 1) (undo-tree-id56 . 1) (undo-tree-id58 . 1) (undo-tree-id60 . 1) (undo-tree-id62 . 1) (undo-tree-id64 . 1) (undo-tree-id66 . 1) (undo-tree-id68 . 1) (undo-tree-id70 . 1) (undo-tree-id72 . 1) (undo-tree-id74 . 1) (undo-tree-id76 . 1) (undo-tree-id78 . 1)) ((2501 . 2502)) (21670 27203 869923 536000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id80 . 1) (undo-tree-id82 . 1) (undo-tree-id84 . 1) (undo-tree-id86 . 1) (undo-tree-id88 . 1) (undo-tree-id90 . 1) (undo-tree-id92 . 1) (undo-tree-id94 . 1) (undo-tree-id96 . 1) (undo-tree-id98 . 1) (undo-tree-id100 . 1) (undo-tree-id102 . 1) (undo-tree-id104 . 1) (undo-tree-id106 . 1) (undo-tree-id108 . 1) (undo-tree-id110 . 1) (undo-tree-id112 . 1) (undo-tree-id114 . 1)) ((2501 . 2502)) (21670 27203 869980 133000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id116 . 1) (undo-tree-id118 . 1) (undo-tree-id120 . 1) (undo-tree-id122 . 1) (undo-tree-id124 . 1) (undo-tree-id126 . 1) (undo-tree-id128 . 1) (undo-tree-id130 . 1) (undo-tree-id132 . 1) (undo-tree-id134 . 1) (undo-tree-id136 . 1) (undo-tree-id138 . 1) (undo-tree-id140 . 1) (undo-tree-id142 . 1) (undo-tree-id144 . 1) (undo-tree-id146 . 1) (undo-tree-id148 . 1)) ((2501 . 2502)) (21670 27203 870037 426000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id150 . 1) (undo-tree-id152 . 1) (undo-tree-id154 . 1) (undo-tree-id156 . 1) (undo-tree-id158 . 1) (undo-tree-id160 . 1) (undo-tree-id162 . 1) (undo-tree-id164 . 1) (undo-tree-id166 . 1) (undo-tree-id168 . 1) (undo-tree-id170 . 1) (undo-tree-id172 . 1) (undo-tree-id174 . 1) (undo-tree-id176 . 1) (undo-tree-id178 . 1) (undo-tree-id180 . 1)) ((2501 . 2502)) (21670 27203 870088 484000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id182 . 1) (undo-tree-id184 . 1) (undo-tree-id186 . 1) (undo-tree-id188 . 1) (undo-tree-id190 . 1) (undo-tree-id192 . 1) (undo-tree-id194 . 1) (undo-tree-id196 . 1) (undo-tree-id198 . 1) (undo-tree-id200 . 1) (undo-tree-id202 . 1) (undo-tree-id204 . 1) (undo-tree-id206 . 1) (undo-tree-id208 . 1) (undo-tree-id210 . 1)) ((2501 . 2502)) (21670 27203 870139 359000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id212 . 1) (undo-tree-id214 . 1) (undo-tree-id216 . 1) (undo-tree-id218 . 1) (undo-tree-id220 . 1) (undo-tree-id222 . 1) (undo-tree-id224 . 1) (undo-tree-id226 . 1) (undo-tree-id228 . 1) (undo-tree-id230 . 1) (undo-tree-id232 . 1) (undo-tree-id234 . 1) (undo-tree-id236 . 1) (undo-tree-id238 . 1)) ((2501 . 2502)) (21670 27203 870187 33000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id240 . 1) (undo-tree-id242 . 1) (undo-tree-id244 . 1) (undo-tree-id246 . 1) (undo-tree-id248 . 1) (undo-tree-id250 . 1) (undo-tree-id252 . 1) (undo-tree-id254 . 1) (undo-tree-id256 . 1) (undo-tree-id258 . 1) (undo-tree-id260 . 1) (undo-tree-id262 . 1) (undo-tree-id264 . 1)) ((2501 . 2502)) (21670 27203 870233 714000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id266 . 1) (undo-tree-id268 . 1) (undo-tree-id270 . 1) (undo-tree-id272 . 1) (undo-tree-id274 . 1) (undo-tree-id276 . 1) (undo-tree-id278 . 1) (undo-tree-id280 . 1) (undo-tree-id282 . 1) (undo-tree-id284 . 1) (undo-tree-id286 . 1) (undo-tree-id288 . 1)) ((2501 . 2502)) (21670 27203 870278 64000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id290 . 1) (undo-tree-id292 . 1) (undo-tree-id294 . 1) (undo-tree-id296 . 1) (undo-tree-id298 . 1) (undo-tree-id300 . 1) (undo-tree-id302 . 1) (undo-tree-id304 . 1) (undo-tree-id306 . 1) (undo-tree-id308 . 1) (undo-tree-id310 . 1)) ((2501 . 2502)) (21670 27203 870320 867000) 0 nil]) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id312 . 1) (undo-tree-id314 . 1) (undo-tree-id316 . 1) (undo-tree-id318 . 1) (undo-tree-id320 . 1) (undo-tree-id322 . 1) (undo-tree-id324 . 1) (undo-tree-id326 . 1) (undo-tree-id328 . 1) (undo-tree-id330 . 1)) ((2501 . 2502)) (21670 27203 870362 792000) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id332 . 1) (undo-tree-id334 . 1) (undo-tree-id336 . 1) (undo-tree-id338 . 1) (undo-tree-id340 . 1) (undo-tree-id342 . 1) (undo-tree-id344 . 1) (undo-tree-id346 . 1) (undo-tree-id348 . 1)) ((2501 . 2502)) (21670 27203 870403 674000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id350 . 1) (undo-tree-id352 . 1) (undo-tree-id354 . 1) (undo-tree-id356 . 1) (undo-tree-id358 . 1) (undo-tree-id360 . 1) (undo-tree-id362 . 1) (undo-tree-id364 . 1)) ((2501 . 2502)) (21670 27203 870441 699000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id366 . 1) (undo-tree-id368 . 1) (undo-tree-id370 . 1) (undo-tree-id372 . 1) (undo-tree-id374 . 1) (undo-tree-id376 . 1) (undo-tree-id378 . 1)) ((2501 . 2502)) (21670 27203 870477 186000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id380 . 1) (undo-tree-id382 . 1) (undo-tree-id384 . 1) (undo-tree-id386 . 1) (undo-tree-id388 . 1) (undo-tree-id390 . 1)) ((2501 . 2502)) (21670 27203 870512 929000) 0 nil]) ((#("x" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id392 . 1) (undo-tree-id394 . 1) (undo-tree-id396 . 1) (undo-tree-id398 . 1) (undo-tree-id400 . 1)) ((2501 . 2502)) (21670 27203 870546 287000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id402 . 1) (undo-tree-id404 . 1) (undo-tree-id406 . 1) (undo-tree-id408 . 1)) ((2501 . 2502)) (21670 27203 870577 973000) 0 nil]) ((#("m" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id410 . 1) (undo-tree-id412 . 1) (undo-tree-id414 . 1)) ((2501 . 2502)) (21670 27203 870607 260000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-string-face)) . 2501) (undo-tree-id416 . 1)) ((2501 . 2502)) (21670 27203 870636 363000) 0 nil]) ((2497 . 2499)) ((#("cm" 0 2 (fontified nil face font-lock-variable-name-face)) . 2497)) (21670 27203 870662 702000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -2497)) ((2497 . 2498)) (21670 27203 870682 994000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -2498) (undo-tree-id419 . 1)) ((2498 . 2499)) (21670 27203 870705 516000) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -2499) (undo-tree-id421 . 1)) ((2499 . 2500)) (21670 27203 870730 840000) 0 nil]) ((nil rear-nonsticky nil 2521 . 2522) (2490 . 2522)) ((#("alias tnew='tmux new-session -s'" 0 5 (fontified nil face font-lock-builtin-face) 5 6 (fontified nil) 6 7 (fontified nil face font-lock-variable-name-face) 7 8 (fontified nil face font-lock-variable-name-face) 8 9 (fontified nil face font-lock-variable-name-face) 9 10 (fontified nil face font-lock-variable-name-face) 10 11 (fontified nil) 11 12 (fontified nil face font-lock-string-face) 12 13 (fontified nil face font-lock-string-face) 13 14 (fontified nil face font-lock-string-face) 14 15 (fontified nil face font-lock-string-face) 15 16 (fontified nil face font-lock-string-face) 16 17 (fontified nil face font-lock-string-face) 17 18 (fontified nil face font-lock-string-face) 18 19 (fontified nil face font-lock-string-face) 19 20 (fontified nil face font-lock-string-face) 20 21 (fontified nil face font-lock-string-face) 21 22 (fontified nil face font-lock-string-face) 22 23 (fontified nil face font-lock-string-face) 23 24 (fontified nil face font-lock-string-face) 24 25 (fontified nil face font-lock-string-face) 25 26 (fontified nil face font-lock-string-face) 26 27 (fontified nil face font-lock-string-face) 27 28 (fontified nil face font-lock-string-face) 28 29 (fontified nil face font-lock-string-face) 29 30 (fontified nil face font-lock-string-face) 30 31 (fontified nil face font-lock-string-face) 31 32 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 2490) (undo-tree-id2821 . -12) (undo-tree-id2822 . -10) (undo-tree-id2823 . 23) (undo-tree-id2824 . -10) (undo-tree-id2825 . 23) (undo-tree-id2826 . -10) (undo-tree-id2827 . 22) (undo-tree-id2828 . 22) (undo-tree-id2829 . 22) (undo-tree-id2830 . 22) (undo-tree-id2831 . -10) (undo-tree-id2832 . 23) (undo-tree-id2833 . -10) (undo-tree-id2834 . -10) (undo-tree-id2835 . 23) (undo-tree-id2836 . -10) (undo-tree-id2837 . 23) (undo-tree-id2838 . -10) (undo-tree-id2839 . 23) (undo-tree-id2840 . -10) (undo-tree-id2841 . 23) (undo-tree-id2842 . -10) (undo-tree-id2843 . 22) (undo-tree-id2844 . 22) (undo-tree-id2845 . 22) (undo-tree-id2846 . 22) (undo-tree-id2847 . 22) (nil rear-nonsticky t 2521 . 2522)) (21670 27227 776360 299000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2181) (undo-tree-id2849 . 1) (undo-tree-id2850 . 1) (undo-tree-id2851 . 1)) ((2181 . 2182)) (21670 27227 266401 337000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2181) (undo-tree-id2848 . 1)) ((2181 . 2182)) (21670 27226 582590 517000) 0 nil]) ((2037 . 2038)) ((#("
" 0 1 (fontified t)) . 2037)) (21670 27226 18345 870000) 0 nil]) ((1905 . 1916)) ((#("# Sys Utils" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 11 (fontified t face font-lock-comment-face)) . 1905)) (21670 27224 90319 360000) 0 nil]) ((1904 . 1906)) nil (21670 27222 579193 436000) 0 nil]) ((#("i" 0 1 (fontified t)) . -1904)) nil (21670 27015 705823 413000) 0 nil]) ((1904 . 1905)) nil (21670 27015 705827 116000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1868) (undo-tree-id425 . 1) (undo-tree-id426 . 1) (undo-tree-id427 . 1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1)) nil (21670 27015 705845 28000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1868) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1)) nil (21670 27015 705857 848000) 0 nil]) ((#("
" 0 1 (fontified t)) . 243) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1)) nil (21670 27015 705870 294000) 0 nil]) ((#("
" 0 1 (fontified t)) . 123) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (undo-tree-id440 . 1) (undo-tree-id441 . 1)) nil (21670 27015 705886 651000) 0 nil]) ((#("
" 0 1 (fontified t)) . 123) (undo-tree-id442 . 1) (undo-tree-id443 . 1)) nil (21670 27015 705897 830000) 0 nil]) ((244 . 247)) nil (21670 27015 705902 721000) 0 nil]) ((#("i" 0 1 (fontified t)) . -244)) nil (21670 27015 705906 106000) 0 nil]) ((244 . 245)) nil (21670 27015 705909 855000) 0 nil]) ((nil rear-nonsticky nil 242 . 243) (nil fontified nil 185 . 243) (185 . 243)) nil (21670 27015 705914 308000) 0 nil]) ((#("
" 0 1 (fontified t)) . 185) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . 1)) nil (21670 27015 705925 459000) 0 nil]) ((182 . 184)) nil (21670 27015 705930 233000) 0 nil]) ((167 . 182)) nil (21670 27015 705934 2000) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-comment-face)) . -167)) nil (21670 27015 705937 678000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -168)) nil (21670 27015 705942 386000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -169)) nil (21670 27015 705946 207000) 0 nil]) ((151 . 170)) nil (21670 27015 705950 336000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -151) (undo-tree-id447 . 1)) nil (21670 27015 705956 487000) 0 nil]) ((#("A" 0 1 (fontified t)) . -152)) nil (21670 27015 705960 966000) 0 nil]) ((#("l" 0 1 (fontified t)) . -153)) nil (21670 27015 705964 642000) 0 nil]) ((#("l" 0 1 (fontified t)) . -154)) nil (21670 27015 705968 497000) 0 nil]) ((#(" " 0 1 (fontified t)) . -155)) nil (21670 27015 705972 266000) 0 nil]) ((152 . 156)) nil (21670 27015 705975 977000) 0 nil]) ((151 . 152)) nil (21670 27015 705979 290000) 0 nil]) ((150 . 151)) nil (21670 27015 705982 532000) 0 nil]) ((143 . 150) (#("$Note$" 0 6 (fontified nil)) . -143) (#("NOTE" 0 4 (fontified nil face font-lock-comment-face)) . 149) (143 . 149) 147) nil (21670 27015 705988 62000) 0 nil]) ((143 . 147)) nil (21670 27015 705993 840000) 0 nil]) ((142 . 143) (#("8c" 0 2 (fontified nil)) . 142) (126 . 142) 128) nil (21670 27015 705999 147000) 0 nil]) ((126 . 128)) nil (21670 27015 706003 754000) 0 nil]) ((123 . 128) (t 21668 18326 362147 398000)) nil (21670 27015 706007 852000) 0 nil]) nil nil (21670 27015 706010 782000) 0 nil] #3# 33003 435 nil]