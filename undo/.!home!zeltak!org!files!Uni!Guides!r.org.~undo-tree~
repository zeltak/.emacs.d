"5a61f751b4863ed6a35effc39df3235b8369be4b"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#6=[nil nil ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 11198) (undo-tree-id90 . 1) (undo-tree-id91 . 1) (undo-tree-id92 . 1) (undo-tree-id93 . 1) (undo-tree-id94 . 1)) nil (21580 31080 973047 484000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 11198) (undo-tree-id95 . 1) (undo-tree-id96 . 1) (undo-tree-id97 . 1) (undo-tree-id98 . 1)) nil (21580 31080 973081 831000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 11198) (undo-tree-id99 . 1) (undo-tree-id100 . 1) (undo-tree-id101 . 1)) nil (21580 31080 973104 717000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 11198) (undo-tree-id102 . 1) (undo-tree-id103 . 1)) nil (21580 31080 973125 143000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 11198) (undo-tree-id104 . 1)) nil (21580 31080 973133 874000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 9865) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (undo-tree-id107 . 1) (undo-tree-id108 . 1) (undo-tree-id109 . 1) (undo-tree-id110 . 1)) nil (21580 31080 973168 373000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 9865) (undo-tree-id111 . 1) (undo-tree-id112 . 1) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (undo-tree-id115 . 1)) nil (21580 31080 973200 967000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 9865) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . 1)) nil (21580 31080 973222 427000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 9865) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1)) nil (21580 31080 973236 235000) 0 nil]) ((#(" " 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 9865) (undo-tree-id123 . 1) (undo-tree-id124 . 1)) nil (21580 31080 973254 938000) 0 nil]) ((#("
" 0 1 (fontified t)) . 9865) (undo-tree-id125 . 1)) nil (21580 31080 973285 43000) 0 nil]) ((9860 . 9864)) nil (21580 31080 973312 316000) 0 nil]) ((9846 . 9860)) nil (21580 31080 973317 665000) 0 nil]) ((9834 . 9846)) nil (21580 31080 973321 363000) 0 nil]) ((9826 . 9834)) nil (21580 31080 973324 862000) 0 nil]) ((9824 . 9826)) nil (21580 31080 973328 687000) 0 nil]) ((nil rear-nonsticky nil 14730 . 14731) (nil fontified nil 11184 . 14731) (11184 . 14731)) nil (21580 31080 973333 997000) 0 nil]) ((11183 . 11184)) nil (21580 31080 973338 239000) 0 nil]) ((nil rear-nonsticky nil 11162 . 11163) (nil fontified nil 9852 . 11163) (9852 . 11163) 9847) nil (21580 31080 973345 377000) 0 nil]) ((#("f" 0 1 (org-category #1="r" fontified t font-lock-fontified t font-lock-multiline t face org-block)) . -9847)) nil (21580 31080 973350 958000) 0 nil]) ((#("i" 0 1 (org-category #1# fontified t font-lock-fontified t font-lock-multiline t face org-block)) . -9848)) nil (21580 31080 973356 946000) 0 nil]) ((#("l" 0 1 (org-category #1# fontified t font-lock-fontified t font-lock-multiline t face org-block)) . -9849)) nil (21580 31080 973362 903000) 0 nil]) ((#("e" 0 1 (org-category #1# fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face org-block)) . -9850)) nil (21580 31080 973368 527000) 0 nil]) ((nil rear-nonsticky nil 9850 . 9851) (nil fontified nil 9847 . 9851) (9847 . 9851)) nil (21580 31080 973376 93000) 0 nil]) ((apply yas--snippet-revive 9825 9872 #3=[cl-struct-yas--snippet (#2=[cl-struct-yas--field 2 (9852 . #<marker in no buffer>) (9852 . #<marker in no buffer>) nil nil nil nil nil]) nil 0 #<overlay in no buffer> #2# nil nil])) nil (21580 31080 973382 198000) 0 nil]) ((apply yas--take-care-of-redo 9825 9872 #3#) (9825 . 9872) (#("cbe" 0 3 (org-category #1# fontified t)) . 9825) 9828) nil (21580 31080 973390 26000) 0 nil]) ((9825 . 9828)) nil (21580 31080 973417 988000) 0 nil]) ((9824 . 9825)) nil (21580 31080 973424 600000) 0 nil]) ((9820 . 9824)) nil (21580 31080 973429 714000) 0 nil]) ((#("e" 0 1 (org-category #1# fontified t face org-level-4)) . -9820)) nil (21580 31080 973434 668000) 0 nil]) ((9820 . 9821)) nil (21580 31080 973440 421000) 0 nil]) ((#("file" 0 4 (org-category #1# fontified t face org-level-4)) . 9820) 9825) nil (21580 31080 973446 555000) 0 nil] [nil nil ((nil rear-nonsticky nil 11135 . 11136) (nil fontified nil 9825 . 11136) (9825 . 11136)) ((#("local({r <- getOption(\"repos\")
      r[\"CRAN\"] <- \"http://cran.revolutionanalytics.com\"
      options(repos=r)})
 
options(stringsAsFactors=FALSE)
 
options(max.print=100)
 
options(scipen=10)
 
options(editor=\"vim\")
 
# options(show.signif.stars=FALSE)
 
options(menu.graphics=FALSE)
 
options(prompt=\"> \")
options(continue=\"... \")
 
options(width = 80)
 
q <- function (save=\"no\", ...) {
  quit(save=save, ...)
}
 
utils::rc.settings(ipck=TRUE)
 
.First <- function(){
  if(interactive()){
    library(utils)
    timestamp(,prefix=paste(\"##------ [\",getwd(),\"] \",sep=\"\"))
 
  }
}
 
.Last <- function(){
  if(interactive()){
    hist_file <- Sys.getenv(\"R_HISTFILE\")
    if(hist_file==\"\") hist_file <- \"~/.RHistory\"
    savehistory(hist_file)
  }
}
 
if(Sys.getenv(\"TERM\") == \"xterm-256color\")
  library(\"colorout\")
 
sshhh <- function(a.package){
  suppressWarnings(suppressPackageStartupMessages(
    library(a.package, character.only=TRUE)))
}
 
auto.loads <-c(\"dplyr\", \"ggplot2\")
 
if(interactive()){
  invisible(sapply(auto.loads, sshhh))
}
 
.env <- new.env()
 
 
.env$unrowname <- function(x) {
  rownames(x) <- NULL
  x
}
 
.env$unfactor <- function(df){
  id <- sapply(df, is.factor)
  df[id] <- lapply(df[id], as.character)
  df
}
 
attach(.env)
 
message(\"\\n*** Successfully loaded .Rprofile ***\\n\")" 0 51 (fontified nil) 51 85 (fontified nil mouse-face highlight face org-link htmlize-link #5=(:uri "http://cran.revolutionanalytics.com") keymap #4=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse))) 85 86 (fontified nil mouse-face highlight face org-link htmlize-link #5# keymap #4# rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 86 219 (fontified nil) 219 253 (fontified nil font-lock-fontified t face font-lock-comment-face) 253 511 (fontified nil) 511 1067 (fontified nil) 1067 1069 (fontified nil) 1069 1071 (fontified nil) 1071 1259 (fontified nil) 1259 1310 (fontified nil) 1310 1311 (fontified nil rear-nonsticky nil)) . 9825) (undo-tree-id81 . -1067) (undo-tree-id82 . -1259) (undo-tree-id83 . -1311) (undo-tree-id84 . 1) (undo-tree-id85 . -1311) (undo-tree-id86 . 45) (undo-tree-id87 . -1267) (undo-tree-id88 . 1) (undo-tree-id89 . -1067) (nil fontified t 10896 . 11084) (nil fontified t 10894 . 10896) (nil fontified t 10892 . 10894) (nil fontified t 10078 . 10336) (nil fontified t 10044 . 10078) (nil fontified t 9911 . 10044) (nil fontified t 9910 . 9911) (nil fontified t 9876 . 9910) (nil fontified t 9825 . 9876) (nil rear-nonsticky t 11135 . 11136)) (21580 31001 369644 70000) 0 nil]) ((9824 . 9825)) nil (21580 31001 371266 684000) 0 nil]) ((9804 . 9824)) nil (21580 31001 369658 597000) 0 nil]) ((#("o" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . 1)) nil (21580 31001 369711 948000) 0 nil]) ((#("r" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1)) nil (21580 31001 369765 858000) 0 nil]) ((#("t" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1)) nil (21580 31001 369807 699000) 0 nil]) ((#("n" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1)) nil (21580 31001 369860 809000) 0 nil]) ((#("i" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id42 . 1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1)) nil (21580 31001 369902 771000) 0 nil]) ((#(" " 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1)) nil (21580 31001 369941 133000) 0 nil]) ((#("e" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1) (undo-tree-id61 . 1) (undo-tree-id62 . 1)) nil (21580 31001 369982 558000) 0 nil]) ((#("s" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id63 . 1) (undo-tree-id64 . 1) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1)) nil (21580 31001 370014 261000) 0 nil]) ((#("a" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1)) nil (21580 31001 370037 910000) 0 nil]) ((#("b" 0 1 (org-category #1# fontified t face org-level-4)) . 9804) (undo-tree-id72 . 1) (undo-tree-id73 . 1)) nil (21580 31001 370054 101000) 0 nil]) ((9814 . 9815)) nil (21580 31001 370061 269000) 0 nil]) ((9799 . 9814)) nil (21580 31001 370066 369000) 0 nil]) ((9799 . 9800)) nil (21580 31001 370071 260000) 0 nil]) ((#("
" 0 1 (org-category #1# fontified t)) . 9799) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1)) nil (21580 31001 370096 306000) 0 nil]) ((#(" " 0 1 (org-category #1# fontified t)) . 9799) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1) (t 21573 7897 32909 921000)) nil (21580 31001 370114 106000) 0 nil]) nil nil (21580 31001 370133 935000) 0 nil] #6# 2954 50 nil]