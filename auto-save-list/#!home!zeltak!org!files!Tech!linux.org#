#+Title: Linux
#+TAGS: Fav(f) Most_used(m) cbugs(c)
#+STARTUP: overview


* distros/WM
** arch
*** Fresh Sys Install
**** 1.start
***** backup current system (pre install)
backup these dirs:
#+BEGIN_EXAMPLE
/home/USER/
from /etc:
fstab
smb.conf
exports
mpd.conf
ssh directory
smb.conf
#+END_EXAMPLE

***** Download latest Iso
-download latest iso:

[[https://www.archlinux.org/download/][https://www.archlinux.org/download/]]
 -create a startupdisk:
 Warning: This will irrevocably destroy all data on /dev/sdx.
 Note: This method does not work with UEFI boot.
 Note: Check with lsblk that the USB device is not mounted, and use
/dev/sdx instead of /dev/sdx1. These are very common mistakes!
 issue:

#+BEGIN_SRC sh
dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx
#+END_SRC

-boot from install cd (make sure to choose x86 for an x86 install)

**** 2.prepare drives and system
***** create drives

%Tip it may be easier if you have issues/erorrs to use fdisk/gparted to create the partitions. you can also use a livecd tool to do it with gparted%

use cfdisk (or gparted from a resuce cd like systemrescuecd) to partition the drives create a / partition a swap partition and a /home partiton see
[[https://wiki.archlinux.org/index.php/Partitioning][https://wiki.archlinux.org/index.php/Partitioning]]
for info on partitioning

Format partitions (only if needed)
in console to create a file system you just have to use mkfs:

#+BEGIN_SRC sh
mkfs -t ext4 /dev/<partition>
#+END_SRC

see
[[https://wiki.archlinux.org/index.php/Format_a_device#Step_2:_create_the_new_file_system][https://wiki.archlinux.org/index.php/Format\_a\_device#Step\_2:\_create\_the\_new\_file\_system]]

To display the current partition layout:

lsblk /dev/sda

***** mount the root partition in /mnt

#+BEGIN_SRC sh
mount /dev/sda1 /mnt

#then create /mnt/home
mkdir /mnt/home

#then mount your home there

mount /dev/sda2/ /mnt/home

#+END_SRC

-Assuming a wired connection, running dhclient or dhcpcd is sufficient to get a lease. For more info visit configuring network.

#+BEGIN_SRC sh
dhcpcd eth0
#+END_SRC

**** 3.install System

install system -Before installing, you may want to edit /etc/pacman.d/mirrorlist such that your preferred mirror is first. This copy of the mirrorlist will be installed on your new system by pacstrap as well, so it's worth getting it right.

#+BEGIN_SRC sh
nano /etc/pacman.d/mirrorlist
#+END_SRC

-Using the pacstrap script we install the base system. The base-devel package group should also be installed if you plan on compiling software from the AUR or using ABS.

#+BEGIN_SRC sh
pacstrap /mnt base base-devel
#+END_SRC

!$Note$!: If pacman fails to verify your packages, check the system time with cal. If the system date is invalid (e.g. it shows year 2010), signing keys will be considered expired (or invalid), signature checks on packages will fail and installation will be interrupted. Make sure to correct the system time, either by doing so manually or with the ntp client, and retry running the pacstrap command. Refer to Time page for more information on correcting system time. 

**** 4.configure system
***** Generate an fstab
Generate an fstab file with the following command. UUIDs will be used because they have certain advantages (see fstab#Identifying filesystems). If you would prefer to use labels instead, replace the -U option with -L. Note: If you encounter errors running genfstab or later in the install process, do not run genfstab again; just edit the fstab file.

#+BEGIN_SRC sh
genfstab -U -p /mnt >> /mnt/etc/fstab
nano /mnt/etc/fstab
#+END_SRC

***** Chroot and configure the base system
Next, we chroot into our newly installed system:

#+BEGIN_SRC sh
arch-chroot /mnt
#Note: Use: 
arch-chroot /mnt /bin/bash
#to chroot into a bash shell.
#+END_SRC

***** locale
At this stage of the installation, you will configure the primary configuration files of your Arch Linux base system. These can either be created if they do not exist, or edited if you wish to change the defaults. 
Closely following and understanding these steps is of key importance to ensure a properly configured system.

Locale Locales are used by glibc and other locale-aware programs or libraries for rendering text, correctly displaying regional monetary values, time and date formats, alphabetic idiosyncrasies, and other locale-specific standards. 
There are two files that need editing: locale.gen and locale.conf.

he locale.gen file is empty by default (everything is commented out) and you need to remove the # in front of the line(s) you want. You may uncomment more lines than just English (US), as long as you choose their UTF-8 encoding:

#+BEGIN_SRC sh
nano /etc/locale.gen
#comment out this line
en\_US.UTF-8 UTF-8

#then issue:
locale-gen
#+END_SRC

This will run on every glibc upgrade, generating all the locales specified in /etc/locale.gen.

The locale.conf file doesn't exist by default. Setting only LANG should
be enough. It will act as the default value for all other variables.

#+BEGIN_SRC sh
echo LANG=en_US.UTF-8 > /etc/locale.conf
export LANG=en_US.UTF-8
#+END_SRC

Note: If you set some other language than English at the beginning of
the install, the above commands would be something like:
 # echo LANG=de\_DE.UTF-8 > /etc/locale.conf
 # export LANG=de\_DE.UTF-8

***** Time zone
Available time zones and subzones can be found in the
usr/share/zoneinfo/<Zone>/<SubZone> directories.To view the available <Zone>, check the directory /usr/share/zoneinfo/

#+BEGIN_SRC sh
ls /usr/share/zoneinfo/
#+END_SRC

 Similarly, you can check the contents of directories belonging to a
<SubZone>:

 # ls /usr/share/zoneinfo/Europe

 Create a symbolic link /etc/localtime to your zone file
/usr/share/zoneinfo/<Zone>/<SubZone> using this command:

#+BEGIN_SRC sh
ln -s /usr/share/zoneinfo/<Zone>/<SubZone> /etc/localtime
#Example:
ln -s /usr/share/zoneinfo/America/New\_York /etc/localtime
#+END_SRC

***** Hardware clock
Set the hardware clock mode uniformly between your operating systems.
Otherwise, they may overwrite the hardware clock and cause time shifts.
You can generate /etc/adjtime automatically by using one of the
following commands:

#+BEGIN_SRC sh
hwclock --systohc --utc
#+END_SRC

To synchronize your "UTC" time over the internet, see NTPd.
If you have (or planning on having) a dual boot setup with Windows: Recommended: Set both Arch Linux and Windows to use UTC. A quick registry fix is needed. Also, be sure to prevent Windows from synchronizing the time on-line, because the hardware clock will default back to localtime.

***** Hostname
Set the hostname to your liking (e.g. arch):

#+BEGIN_SRC sh
echo MYHOSTNAME > /etc/hostname
#IE:
echo voices > /etc/hostname
#+END_SRC

Note: You no longer need to edit /etc/hosts. The nss-myhostname package
will provide host name resolution, and is installed on all systems by
default.

**** 5.Configure pacman

Configure pacman
Pacman is the Arch Linux package manager. It is highly recommended to study and learn how to use it. Read man pacman, have a look at the pacman article, or check out the Pacman Rosetta article for a comparison to other popular package managers. For repository selections and pacman options, edit pacman.conf:

#+BEGIN_SRC sh
nano /etc/pacman.conf
#+END_SRC

Most people will want to use [core], [extra] and [community]. If you installed Arch Linux x86\_64, it's recommended that you enable
the [multilib] repository, as well (to be able to run both 32 bit and 64 bit applications):
 Note: When choosing repos, be sure to uncomment both the [repo\_name]
header lines, as well as the lines below. Failure to do so will result
in the selected repository being omitted! This is a very common error. A
correct example for the multilib repository is found below.

#+BEGIN_EXAMPLE
[multilib]
SigLevel = PackageRequired
Include = /etc/pacman.d/mirrorlist
#+END_EXAMPLE

You will then need to update the package list by running

pacman -Sy


Failing to do so will generate "warning: database file for 'multilib' does not exist" error when next using pacman. See Official Repositories for more information, including details about the purpose of each repository. For software unavailable directly through pacman, see Arch User Repository.

**** 6.finalize arch install
***** Create an initial ramdisk environment

#+BEGIN_SRC sh
mkinitcpio -p linux
#+END_SRC

***** Set the root password and add a regular user

Set the root password with:

#+BEGIN_SRC sh
passwd
#+END_SRC

Warning: Linux is a multi-user operating system. You should not perform everyday tasks using the root account. It is considered a very poor practice and could be extremely dangerous. The root account should only be used for administrative tasks. Then add a normal user account. For a more interactive way, you can use adduser. However, below is the non-interactive way.

#+BEGIN_SRC sh
useradd -m -g users -G wheel -s /bin/bash USERNAME
passwd USERNAME
#+END_SRC

If you wish to start over, use userdel. The -r option will remove the
user's home directory and its content, along with the user's settings
(the so-called "dot" files):

#+BEGIN_SRC sh
userdel -r archie
#+END_SRC

***** Install and configure a bootloader
(For BIOS motherboards)
For BIOS systems, there are three bootloaders - Syslinux, GRUB, and LILO. Choose the bootloader as per your convenience.
Install the syslinux package and then use the syslinux-install\_update script to automatically install the files (-i), mark the partition
active by setting the boot flag (-a), and install the MBR boot code (-m):

#+BEGIN_SRC sh
pacman -S syslinux
syslinux-install_update -i -a -m
#+END_SRC

@Warning-if you get an error: FAILED to set attribute Legacy BIOS Bootable on /dev/XXX@
install  gdisk and re-issue command

#+BEGIN_SRC sh
pacman -S gdisk
syslinux-install_update  -i -a -m
#+END_SRC

***** Configure syslinux.cfg

!This step is vital!
to point to the right root partition. If it points to the wrong partition, Arch Linux will not boot. Change /dev/sda3 to reflect your root partition (if you partitioned your drive as in the example, your root partition is sda1). Do the same for the fallback entry.

#+BEGIN_SRC sh
nano /boot/syslinux/syslinux.cfg

#then

 ...
 LABEL arch
 ...
 APPEND root=/dev/sda3 ro
 ...



#+END_SRC

For more information on configuring and using Syslinux, see Syslinux.
Unmount the partitions and reboot

***** finalize
Exit from the chroot environment:

#+BEGIN_SRC sh
exit
#+END_SRC

Since the partitions are mounted under /mnt, we use the following
command to unmount them:

#+BEGIN_SRC sh
umount /mnt/home
umount /mnt/
#+END_SRC

Reboot the computer:

#+BEGIN_SRC sh
reboot
#+END_SRC

%TIP: Be sure to remove the installation media, otherwise you will boot back into it%

**** 8.post install
***** add a user
The useradd command will prompt for information interactively:

#+BEGIN_SRC sh
useradd -m -g users -s /bin/bash archie
#+END_SRC

***** network
enable systemd network dhcp by issuing this

#+BEGIN_SRC sh
systemctl enable dhcpcd
#+END_SRC

***** install sudo
sudo pacman -S sudo

then edit the sudoers file:

The default editor for visudo is vi. It will be used if you do not specify another editor, by setting one of the SUDO EDITOR, VISUAL or EDITOR environment variables (used in that order) to the desired editor, e.g. vim. The command is run as root:

#+BEGIN_SRC sh
SUDO_EDITOR="/usr/bin/vim -p -X" visudo
#+END_SRC

for more info on sudo look HERE:

[[adding%20user%20to%20sudo%20list][adding user to sudo list]]

***** ssh

install openssh

#+BEGIN_SRC sh
pacman -S openssh
#enable the ssh server with systemd:
systemctl enable sshd.socket
systemctl start sshd.socket
#+END_SRC

***** Sound
install pulse-audio and alsa-utils

#+begin_src sh
sudo pacman -S pulseaudio alsa-utils
#+end_src

ALSA usually works out-of-the-box. It just needs to be unmuted. use alsa-utils (which contains alsamixer) and unmute the sound

***** install graphic driver
If you don't know which video chipset is available on your machine, run:

#+BEGIN_SRC sh
lspci | grep VGA
#+END_SRC

then install correct drivers

#+BEGIN_SRC sh
#for nvidia cards
sudo pacman -S nvidia
#Intel integrated graphics:
pacman -S xf86-video-intel
#+END_SRC

***** better font support
add the following repo  to /etc/pacman.conf:
#+BEGIN_EXAMPLE
[heftig]
SigLevel = Optional
Server = http://pkgbuild.com/~heftig/repo/$arch
#+END_EXAMPLE

add this under
file:~/.config/fontconfig/fonts.conf

#+BEGIN_SRC xml 
<?xml version="1.0" encoding="UTF-8"?>
<!-- ~/.config/fontconfig/fonts.conf -->
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
    <match target="font">
        <edit name="rgba" mode="assign"> <const>rgb</const> </edit>
        <edit name="hinting" mode="assign"> <bool>true</bool> </edit>
        <edit name="autohint" mode="assign"> <bool>false</bool> </edit>
        <edit name="antialias" mode="assign"> <bool>true</bool> </edit>
        <edit name="hintstyle" mode="assign"> <const>hintslight</const> </edit>
        <edit name="lcdfilter" mode="assign"> <const>lcddefault</const> </edit>
        <edit name="embeddedbitmap" mode="assign"> <bool>false</bool> </edit>

        <!-- Hack for the not_contains file test to work even when the property is missing -->
        <edit name="file" mode="append">
            <string/>
        </edit>
    </match>

    <!-- Use hintslight for Type 1 fonts, a vast improvement -->
    <match target="font">
        <test name="fontformat" compare="eq"> <string>Type 1</string> </test>
        <edit name="hintstyle" mode="assign"> <const>hintslight</const> </edit>
    </match>

    <!-- Prefer Arial instead of TeX Gyre Heros for Helvetica -->
    <alias binding="same">
        <family>Helvetica</family>
        <prefer> <family>Arial</family> </prefer>
    </alias>

    <!-- Firefox download fonts -->
    <match target="font">
        <test name="family" compare="contains"><string>@font-face:</string> </test>
        <test name="file" qual="all" compare="not_contains"> <string>/</string> </test>
        <test name="fontformat" compare="eq"> <string>TrueType</string> </test>
        <edit name="autohint" mode="assign"> <bool>true</bool> </edit>
        <edit name="hintstyle" mode="assign"> <const>hintslight</const> </edit>
    </match>
</fontconfig>
#+END_SRC

**** Installs client

%Pacman%

#+BEGIN_SRC sh
pacman -S tree ncdu nfs-utils rpcbind terminator r mc artwiz-fonts
ttf-ms-fonts flac lame smplayer smplayer-themes abiword keepassx dzen2
zip unzip unrar mtpaint krename gmrun aspell aspell-en findutils digikam
kipi-plugins inkscape python-lxml gcolor2 easytag gmrun kdiff3 vimpager
htop p7zip vlc smb4k screen speedcrunch sudo mlocate krusader vim gvim
mpc alsa-utils conky atool lynx profont fb-client feh keychain picard
powerpill strace gdb mpd mp3gain monaco-linux-font pacgraph sqliteman
grep awk leafpad less lxappearance lxdm zotero sxiv geeqie pavucontrol
net-tools sshfs xterm zsh samba xclip alsa-utils lxtask pydf autojump
xorg-xkill nmap acpi lib32alsa-plugins lib32-libpulse audacity nmon
dstat glances pacgraph gnome-schedule cgrep powertop ttf-inconsolata
#+END_SRC

!Special repo for laptops:!
laptop-mode-tools

%AUR%

$NOTE: Before starting with aur installs make sure the /etc/makepkg.conf is configured correctly >>> $  [[prerequisites][prerequisites]]

#+BEGIN_SRC sh
yaourt (or other aur wrapper)
caudec
termite-git
gmailchecker
ncmpcpp-git
mpdcron-git
ttf-droid
monaco\_linux
autokey-qt
lxtask
dropbox
gmpc-git
gmpc-plugins-git
terminus-font-ttf
puddletag
culmus
Yeganesh
abcde
metamorphose2
ffcast
cdargs
boxfs ( needs also libapp-git)
soundkonverter-git
xsvg
albumbler
flacon
tuxboot-unet bootin like app
ttf-oxygen-git
synapse
ttf-droid
worker
xbindkeys
xbindkeys config
xdotool
xdotool-gui
xchainkeys
jmtpfs
dzen2-gadgets-svn
teamviwer
mpd control
gmailchecker
albumbler
loliclip
xoris #command line color picker
dtrx
xshowkeys #show keycodes
freetype2-infinality
ttf-vista-fonts
pacmixer
#+END_SRC

systemd

#+BEGIN_EXAMPLE
systemctl enable avahi-daemon.service
systemctl start sshd.service
systemctl enable rpc-mountd.service
systemctl enable webmin.service
systemctl enable smbd.service
systemctl enable cronie
#+END_EXAMPLE

**** Installs Server

#+BEGIN_SRC sh
pacman -S tree ncdu nfs-utils rpcbind mc flac lame zip unzip unrar
aspell aspell-en findutils htop screen mlocate vim mpc alsa-utils atool
lynx keychain tmux strace gdb mpd mp3gain grep awk less net-tools sshfs
zsh samba pydf autojump nmap pulseaudio weechat ruby tcl perl git wget
webmin
#+END_SRC

**** !install errors!
***** grub-mkconfig dosent work on fresh install
Description:
grub-mkconfig dosent work on fresh install

[root@localhost user]# grub-mkconfig -o /boot/grub/grub.cfg
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-linux
Found initrd image: /boot/initramfs-linux.img
No volume groups found
Found Windows 7 (loader) on /dev/sda3
error: out of memory.
error: syntax error.
error: Incorrect command.
error: syntax error.
Syntax error at line 175
Syntax errors are detected in generated GRUB config file.
Ensure that there are no errors in /etc/default/grub
and /etc/grub.d/ files or please file a bug report with
/boot/grub/grub.cfg.new file attached.done

%have fixed that with adding%
GRUB_DISABLE_SUBMENU=y

on /etc/default/grub. I dont know exacly why this fix it.

*** Arch system
**** oss
***** install oss

pacman -S oss
 ignore the errors and reboot
 add oss to deamons
 if using kde issue and install:
 pacman -S kdemod-testing/qtmod-phonon-xine

***** gtk mixer

install ossxmix and issue ossxmix from GUI run command (not command
line) to run in tray

**** enable REISUB magic key

edit /etc/sysctl.conf
 nano /etc/sysctl.conf
 and change 0 to 1 in the kernel.sysrq = line

**** run gui as root

method 1:
 from krunner use the command:
 kdesu PROG
 IE

 kdesu dolphin

 method 2:
 in terminal issue:

 xhost +

 this will allow runing root from term
 if you want it permenantly add it as a startup script

**** enable locate command

the simplest way is to install the mlocate package (a backend to the
locate command) thorugh pacman
 issue:

------------------------------------------------------------------------------------------------------------------------------------------
 sudo updatedb

------------------------------------------------------------------------------------------------------------------------------------------
 to update the DB.
 then you can use the "locate" command as usual

**** xinitrc

intro
 [[nixx_files/2011-06-11-21-41-21-scrot.png]]

 The xinit program is used to start the X Window System server and a
first client program on systems that cannot start X directly from
/etc/init or in environments that use multiple window systems. The
.xinitrc file is therefore a simple way to start X usually in
conjunction with running the startx script directly from inittab.
 How it works
 
The .xinitrc file is really just one more shell script to run. It can
be used to start various applications you want to associate with
starting X, e.g. the X screensaver, and to set global environment
variables, like MOZ PLUGIN PATH. Its foremost use however, is as
areplacement for a display manager when on a single-user machine.

 When a display manager is not used, it is important to keep in mind
that the life of your X session starts and ends with the .xinitrc
script. What this means is that once the script finishes, X quits
regardless of whether you still have running programs (including your
window manager). It is therefore important that the window manager
quitting and X quitting should coincide. This is easily achieved by
running the window manager as the last program in the .xinitrc script
 example File:~/.xinitrc
 #!/bin/sh
 /usr/bin/autocutsel -fork &
 /usr/bin/autocutsel -selection PRIMARY -fork &
 /usr/local/bin/urxvtd -q -f -o &
 /usr/bin/xscreensaver -no-splash &
 /usr/lib/notification-daemon/notification-daemon &
 export
MOZ PLUGIN PATH="/usr/lib/mozilla/plugins:/opt/mozilla/lib/plugins"
 exec openbox-session
 Notice that applications such as autocutsel, xscreensaver, urxvtd, and
notification-daemon are run in the background (& appendage). Otherwise,
the script would halt and wait for the programs and daemons to quit
before continuing to export the variable line and executing
openbox-session.
 The openbox-session line starting an Openbox session however, is not
backgrounded. This ensures that the script will not quit until Openbox
does. If you run the startx script manually, ending the script will
terminate X and leave you with whatever virtual consoles your inittab
has started.
 If running it from inittab and have set the line to 'respawn' (rather
than 'once'), .xinitrc will be run again. In this way X can be restarted
without having to restart the computer.

**** run level 3

when using run level 3 you login on the CLI and then issue :
 startx (will start whatever DE/WM thats in the .xinitrc)
 or issue the direct command to start the DE:
 xinit /usr/bin/startkde

**** pluse audio

Skype PulseAudio Sound (2.1+)

Sound should work out of the box, if not you can select another input
using pavucontrol (you may have to install it first).If you are on
x86 64 and use the
multilib[[https://www.archlinux.org/packages/?name=skype][skype]]package,
you also
need[[https://www.archlinux.org/packages/?name=lib32-libpulse][lib32-libpulse]]

**** Look

------> Last modified: Monday, 22 October 2012, 08:35:19 PM ------
Created: 2012.09.23 15:44:40 15:44:40
 Look and feel
 for web browser:
 [[nixx_files/Image_2u20nnUQt9XBxr0Y4dMxBg_0001.png]]
 to change gui fonts use these apps:
 lxappearance-for gtk apps
 qtconfig- for qt apps

**** kde

------> Last modified: Monday, 22 October 2012, 08:35:31 PM ------
Created: 1969.12.31 19:00:0000 19:00:00
 Installing KDE 4.5 Software Compilation
 Installing full KDE SC

To install the entire KDE set, firstfully upgrade your system:

pacman -Syu

 and then:

pacman -S kde phonon-xine

                                                                          
 post install
 open rc.conf in a editor and put hal dbus in daemons list at the
bottom.
 example: DAEMONS=(sy slog-ng network crond dbus hal @netfs)
 edit /etc/inittab
 change default runlevel to 5 (uncomment the id:3 line)
 id:5:initdefault:
 and umcomment the kdm line
 x:5:respawn:/usr/bin/kdm -nodaemon
 and comment out the xdm line!!!
 after reboot kdm should start
 if X for some reason fails, you can just simply add a "3" to the end of
the kernel line in grub - this will make it run in tty only
 dont mix kde packages. if a package exists in kdemod and in extra,
install the kdemod one

**** X200 Specific

pacman:
 xf86-video-intel pm-utils
 
 aur:

 hdapsd
 hdapsd

 hdapsd
 hdapsd



Thanks to aur it is very easy to make hdaps work with arch, because
nearly can be downloaded and installed from aur.
 The interesting packages may be:

-  

   hdapsdtp smapi

 After installing these two packages a little bit of configuration is
needed:
 Add the following lines to '/etc/modprobe.d/modprobe.conf'

------------------------------------------------------------------------------------------------------------------------------------------
 options thinkpad ec force io=1
 options hdaps invert=1(

------------------------------------------------------------------------------------------------------------------------------------------
 The sensor can be configured with the file '/etc/conf.d/hdapsd'. I
think it's a good value to set the sensitivity value a little higher
than 15, for example 40 or 50.
 #DEVICE='hda'
 SENSITIVITY='50'
 #ADAPTIVE='yes'
 SYSLOG='yes'
 #FORCE='yes'
 
*** installing
**** pacman
***** configuration

Configuration

 pacman configuration is located in:
 /etc/pacman.conf
 This is the place where the user configures the program to work in the
desired manner. In depth information about the configuration file can be
found in[[http://www.archlinux.org/pacman/pacman.conf.5.html][man
pacman.conf]]
 
 Skip package from being upgraded
To skip upgrading a specific package, specify it as such:
 IgnorePkg=kernel26
 For multiple packages use a space.
 Skip package group from being upgraded: As with packages, skipping a
whole package group is also possible:
 IgnoreGroup=gnome

***** repositories

Repositories

 This section defines which repositories to use, as referred to
inpacman.conf. They can be stated here directly, or included from
another file.
 All official repositories use the same/etc/pacman.d/mirrorlistfile
which contains a variable, '$repo', making it a requisite to maintain
only one list.
 The following is an example for
the[[/index.php/Official_repositories][official repositories]]that
defers[[/index.php/Mirrors][mirrors]]to the mirrorlist.
 [core]
 # Add your preferred servers here, they will be used first
 Include=/etc/pacman.d/mirrorlist
 [extra]
 # Add your preferred servers here, they will be used first
 Include=/etc/pacman.d/mirrorlist
 [community]
 # Add your preferred servers here, they will be used first
 Include=/etc/pacman.d/mirrorlist
 Note:Care should be taken when using the[testing]repository. It is
in active development and updating may cause some packages to stop
working. People who use the[testing]repository are encouraged to
subscribe to
the[[http://mailman.archlinux.org/mailman/listinfo/arch-dev-public][arch-dev-public
mailing list]]for current information.

***** pacman logs

to check the logs of pacman and see what software are installed check
/var/log/pacman.log:
 issue:
 # more /var/log/pacman.log

***** refelctor 2

Reflector is a script which can be used to retrieve and filter the
latest mirrorlist from the MirrorStatus page.
 It can be obtained from the community repository:
 # pacman -S reflector
 Sample usage
 First backup your mirrorlist:
 # mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
 The following command will filter the first 5 mirrors, sort them by
speed and overwrite the file /etc/pacman.d/mirrorlist
 # reflector -f 5 -r -o /etc/pacman.d/mirrorlist
 For all available commands run
 # reflector --help

***** installing packages
To install a single package or list of packages (including dependencies), issue the following command:

#+BEGIN_SRC sh
pacman -S package name1 package name2
#+END_SRC

Sometimes there are multiple versions of a package in different repositories (e.g. extra and testing). Specify which one to install:

#+BEGIN_SRC sh
pacman -S extra/package name
#+END_SRC

$Note$: Do not refresh the package list when installing packages
(i.e.pacman -Sy package name);
this can lead to dependency issues
%Tip% Packages are cached in /var/cache/pacman/pkg

***** removing packages
****** Remove a single packages
To remove a single package, leaving all of its dependencies
installed:

#+BEGIN_SRC sh
pacman -R package name
#+END_SRC

****** to remove a single package and it's dependencies
remove a single package which are not required by any other installed package:

#+BEGIN_SRC sh
Pacman -Rs package name
#+END_SRC

Pacman saves important configuration files when removing certain applications and names them with the extension .pacsave. 

To delete these backup files use the -n option:

#+BEGIN_SRC sh
pacman -Rn package name
#or
pacman -Rns package name
#+END_SRC

****** to remove it package and ignore the Dependecies:

#+BEGIN_SRC sh
pacman -Rdd package name
#+END_SRC

***** upgrading packages
@Before upgrading@:
a visit to the[[http://archlinux.org/][Arch Linux home page]]is always warranted. Often when updates require user intervention, an appropriate post on[[http://archlinux.org][http://archlinux.org]]will be made. Normally there will be forum posts describing the very same issue shortly after the update becomes available across the mirrors, detailing the solutions to any problems. pacman can update all packages on the system with just one command. This could take quite a while depending on how up-to-date the system is. This command can synchronize the repository databases/and/update the system's packages:

pacman -Syu
$NOTE$ When performing a system update (pacman -Syu), for example,it is essential that users read all information output by pacman and use common sense. When the actual update is performed, be sure to read the messages printed out by pacman. Packagers often describe the changes and the expected problems, and direct the users to the appropriate wiki page or resource. Finally,always read all information output by pacman!
%Tip% Remember that the pacman's output is logged in/var/log/pacman.log.

***** querying package databases
****** Basic

Querying package databases
 pacman queries the local package database with the -Q flag

pacman -Q

 and queries the sync databases with the -S flag

pacman -S

 pacman can search for packages in the database, searching both in
packages' names and descriptions:

pacman -Ss package

 To search for already installed packages:
 $ pacman -Qs package
 To show all already installed packages:
 $ pacman -Qs
 To display extensive information about a given package:
 $ pacman -Si package
 for locally installed packages:
 $ pacman -Qi package

****** 'search for packages based on keyword'
issue a comand like this:

#+BEGIN_SRC sh
pacman -Qqs "ttf-"
#+END_SRC
****** listed those not from repositories

issue:

pacman -Qm

****** retrieve a list of the files installed by a package

To retrieve a list of the files installed by a package:

pacman -Ql package

****** query the database to know which package a file in the file system belongs to

One can also query the database to know which package a file in the file
system belongs to.

#+BEGIN_SRC sh
pacman -Qo /path/to/a/file
#+END_SRC

***** orphand files
Orphand files:

issue this command to search which packages are orphand:

#+BEGIN_SRC sh
pacman -Qtdq
#+END_SRC

then remove wanted files with

#+BEGIN_SRC sh
sudo pacman -R PACKAGENAME
#+END_SRC

if you want to do this automaticlly (be @very carefull@) issue this:

#+BEGIN_SRC sh
pacman -Rs $(pacman -Qqtd)
#+END_SRC

***** 'cleaning system: create a diff file for packages installed by you Vs core'
use the diff command for that:
1)output the pacman -Qs command to a text file (use pipe >)

#+BEGIN_SRC sh
sudo pacman -Qs > /tmp/test.txt
#+END_SRC

2)output the pacman -Sql core command to a text file (use pipe >)

#+BEGIN_SRC sh
sudo pacman -Sql > /tmp/test2.txt
#+END_SRC

3)use diff to create a file where you can see the user installed files and the core files

***** query files over X characters long
IE:

#+BEGIN_SRC sh
pacman -Qqs | awk 'length($0) >=3 { print }'
#+END_SRC

***** additional commands

Additional commands

 Download a package without installing it:
 # pacman -Sw package
 Install a 'local' package that is not from a repository:
 # pacman -U /path/to/package/package name-version.pkg.tar.gz
 Install a 'remote' package (not from a repository):
 # pacman -U
[[http://www.examplepackage/repo/examplepkg.tar.gz][http://www.examplepackage/repo/examplepkg.tar.gz]]
 Clean the package cache of packages that are not currently installed
(/var/cache/pacman/pkg):
 # pacman -Sc
 Clean the entire package cache:
 Warning:Only do this when certain
that[[/index.php/Downgrading_Packages][Downgrading Packages]]will not
be a necessity, as pacman -Scc removes/all/packages from the cache.#
pacman -Scc

***** errors
****** file exists in filesystem
I get an error when updating:

#+BEGIN_EXAMPLE
file exists in filesystem
error: could not prepare transaction
error: failed to commit transaction (conflicting files)
package: /path/to/file exists in filesystem
Errors occurred, no packages were upgraded.
#+END_EXAMPLE
Why this is happening: pacman has detected a file conflict, and by design, will not overwrite files for you. This is a design feature, not
a flaw.
The issue is usually trivial to solve. A safe way is to first check if another package owns the file
#+BEGIN_SRC sh
pacman -Qo /path/to/file
#+END_SRC
If the file is owned by another package, file a bug report. If the file s not owned by another package, rename the file which exists in filesystem and re-issue the update command. If all goes well, the file may then be removed.
`SOLUTION`

#+BEGIN_SRC sh
sudo pacman -Sf PACKAGENAME
#+END_SRC

****** bypass a erronous package in an upgrade

issue --ignore PACKAGE NAME
 and install as usuall for example when you get an error like this:
 error: failed to prepare transaction (could not satisfy dependencies)
 :: python-qscintilla: requires qscintilla=2.4.3
 issuing:

-----------------------------------------------------------------------------------------------------------------------
 sudo pacman -Syu --ignore qscintilla

-----------------------------------------------------------------------------------------------------------------------
 will allow you to update
****** ERROR: One or more files did not pass the validity check
issue :

#+BEGIN_SRC sh
makepkg -g >> PKGBUILD
#+END_SRC
before building to fix it 
***** directory with all localy installed packages

/var/lib/pacman/local/
 you can use the cat/more command to make a list of all the local
packages:
 cat /var/lib/pacman/local/

***** clean pacman cache

use the following command when your disk space is low and the pacman
cache is large:

#+BEGIN_SRC sh
sudo pacman -Scc
#+END_SRC

***** pacman lock

remove:
 rm /var/lib/pacman/db.lck
 IE:

 sudo rm /var/lib/pacman/db.lck

**** aur
***** prerequisites

make sure you have sudo and base-devel installed before using AUR

#+BEGIN_SRC sh
pacman -S base-devel
#+END_SRC

and make sure makeflag is configured:
open and edit /etc/makepkg.conf
in general the MAKEFLAGS="-j+1" that is number of cores plus one as the
number so for my x200 dual core laptop it would be:
MAKEFLAGS="-j3"

***** installing packages from the aur

Installing Packages from the AUR
 Installing packages from the AUR is a relatively simple process:
 NOTE: Make sure the folder paths have no empty spaces
 1. Download the tarball which includes the PKGBUILDand any other
required files (e.g. patches) and extract it.
 2.with the CLI enter the extracted folder and issue:

 # makepkg -s PKGBUILD

 (-s DL all dependecnies)
 3. this will create a tar file which you need to install as root with
Pacman
 # pacman -U inkscape-nognome-0.47-1-x86 64.pkg.tar.gz
 TIP: you can also use
 # makepkg -isc
 which will install the package after creating it
 /home/zeltak/AUR/mutt-sidebar/sidebar-5302767aa6aa.gz

***** script to automate aur (rasi) 2

1. Create a script with this inside
 #bash
 cd ~/pkgs && wget http://aur.archlinux.org/packages/$1/$1.tar.gz && tar
-xvf $1.tar.gz && cd $1 && makepkg -cfis
 change the location of the pkgs to where you want
 zeltak example: /home/zeltak/AUR/
 2. make it executable
 # chmod +X SCRIPT
 and move it to /usr/bin/
 then you can run
 # aur PACKAGE NAME
 and it will cd to your pkgbuilds directory, download the pkgbuild,
extract it, install all needed deps from the repos (not ones from aur
thogh), build it and install it
 This works well with the package
 [[#P222XjJVziR.8bLaYUB1hg][slurpy]]

***** fix outdated packages (validty error)
find outdated versions?
if you get an error on the validity of the package:
download the pkgbuild and in the editor change the pkgver
then run makepkg -g >> PKGBUILD to update the md5sums and PKGBUILD

then install as usuall the new updated PKGBUILD

***** errors

error: failed to prepare transaction (conflicting files)
 when you get this error uninstall the orig (old) package first with
 pacman -R
 or
 pacman -R-d BUTuse -Rd with care!!! the d part will ignore all
dependencies, use -R normally

Then
 install the created package (that makepkg created) with
 
pacman -Uf path/to/build/package

***** aur helpers
****** yaourt
yaourt --aur -Syu
**** makepkg
***** change # proccesors

if you HAVE multi cpu's change this in makepkg.conf:
 edit /etc/makepkg.conf
 in general the MAKEFLAGS="-j+1" is number of cores plus one as the
number so for my x200 dual core laptop it would be MAKEFLAGS="-j3"
 Note: you cannot share your build packages with others, that dont
have quad core in the above example

**** uninstaling
***** uninstal kde or gnome quicly
issue this:
pacman -Rscn kdelibs gnome
**** errors
***** error: failed to commit transaction (invalid or corrupted package (PGP signature))
You need to do this:
- Clean those packages from pacman cache.
- Refresh signatures with "pacman-key --refresh-keys"
- Install again 
*** kde specific
**** run gui apps as root (kdesu)

run GUI apps as root (kdesu)
 issue kdesu and then the command from the GUI run command
 [[nixx_files/Image_mx7MAMKptkw4KJzZuAs6jQ_0001.png]]

**** kde metapackages (if not installing whole kde)
kde metapackages (if not installing whole kde)
install these kde metapackages :
kde-meta-kdebase
kde-meta-kdeutils
kde-meta-kdeplasma-addons
kde-meta-kdepim
kde-meta-kdenetwork
kde-meta-kdegraphics
kde-meta-kdemultimedia
**** start kdm 
use:

#+BEGIN_SRC sh
systemctl enable kdm.service 
#+END_SRC

*** networking
**** wicd-networkmanager

when using wicd make sure your rc.conf part looks like this
 #Static IP example
 #eth0="dhcp"
 #eth0="eth0 192.168.0.2 netmask 255.255.255.0 broadcast 192.168.0.255"
 INTERFACES=(!eth0 !wlan0)
 #gateway="default gw 192.168.0.44"
 # Routes to start at boot-up (in this order)
 # Declare each route then list in ROUTES
 # - prefix an entry in ROUTES with a ! to disable it
 #
 #gateway="default gw 192.168.0.44"
 #ROUTES=(gateway)

**** hosts files

in order to get access to the pc runing arch both hosts.allow and
hosts.deny files need to be configured.
 the best way to adress that is put only this line in hosts.deny:
 ALL: ALL: DENY
 this will block all stuff untill the hosts.allow file is defined
 then you need to configure hosts allow to your needs for example:
 rpcbind: 192.168.0.0/255.255.255.0
 mpd: ALL
 nfsd: 192.168.0.0/255.255.255.0
 mountd: 192.168.0.0/255.255.255.0
 sshd: 192.168.0.0/255.255.255.0
 samba: 192.168.0.0/255.255.255.0
 Note that netmask is important here (some setups require a netmask of
255.255.255.255 etc.. the normal 192.168.0.XXX require 255.255.255.0)
 Also make sure that any prog/daemon that requires acess to the pc needs
to be put here!

**** nfs

Required packages
 Required packages for both the server and the client are minimal. You
will only need to install:
 # pacman -S nfs-utils rpcbind #instead of rpcbind, you can also install
portmap which was replaced
 Setting up the server
 You can now edit your configuration and then start the daemons.
 Files
 /etc/exports
 This file defines the various shares on the nfs server and their
permissions. A few examples:
 /files (ro,sync) # Read-only access to anyone
 /files 192.168.0.100(rw,sync) # Read-write access to a client on
192.168.0.100
 /files 192.168.1.1/24(rw,sync) # Read-write access to all clients from
192.168.1.1 to 192.168.1.255
 If you make changes to /etc/exports after starting the daemons, you can
make them effective by issuing the following command:
 # exportfs -r
 If you decide to make your NFS share public and writable, you can use
the all squash option in combination with anonuid and the anongid
option. For example, to set the privileges for the user nobody in the
group nobody, you can do the following:
 ; Read-write access to a client on 192.168.0.100, with rw access for
the user 99 with gid 99
 /files 192.168.0.100(rw,sync,all squash,anonuid=99,anongid=99))
 This also means, that if you want write access to this directory,
nobody.nobody must be the owner of the share directory:
 # chown -R nobody.nobody /files
 Full details on the exports file are provided by the exports man page.
 /etc/conf.d/nfs-common.conf
 Note: This used to be in /etc/conf.d/nfs which is replaced by
"/etc/conf.d/nfs-common.conf" and "/etc/conf.d/nfs-server.conf".
 Edit this file to pass appropriate run-time options to nfsd, mountd,
statd, and sm-notify. The default Arch NFS init scripts require the
--no-notify option for statd, as follows:
 STATD OPTS="--no-notify"
 Others may be left at the provided defaults, or changed according to
your requirements. Please refer to the relevant man pages for full
details.
 /etc/hosts.allow
 To allow network access to the nfs server you should edit
/etc/hosts.allow. The following example opens these services to anyone:
 nfsd: ALL
 rpcbind: ALL
 mountd:ALL
 This is a very insecure way of allowing host access. To get better
control over who is allowed to access the daemons, hosts.deny should be
everyone, and hosts.allow should specifically allow certain people. In
this example, 192.168.0.101 should be the IP address of the person(s)
allowed to access it. The numbers after the '/' is the netmask:
 nfsd: 192.168.0.101/255.255.255.255
 rpcbind: 192.168.0.101/255.255.255.255
 mountd: 192.168.0.101/255.255.255.255
 This examples enables access for anyone on that network:
 nfsd: 192.168.0.0/255.255.255.0
 rpcbind: 192.168.0.0/255.255.255.0
 mountd: 192.168.0.0/255.255.255.0
 For finer control, read the hosts access(5) man page.
 Daemons
 You can now start the server with the following commands:
 # /etc/rc.d/rpcbind start (or: /etc/rc.d/portmap start)
 # /etc/rc.d/nfs-common start (or: /etc/rc.d/nfslock start)
 # /etc/rc.d/nfs-server start (or: /etc/rc.d/nfsd start)
 Please note that they must be started in that order. To start the
server at boot time, add these daemons to the DAEMONS array in
/etc/rc.conf.
 Setting up the client
 Files
 /etc/conf.d/nfs
 Edit this file to pass appropriate run-time options to statd - the
remaining options are for server use only. Do not use the --no-notify
option on the client side, unless you are fully aware of the
consequences of doing so.
 Please refer to the statd man page for full details.
 /etc/hosts.allow
 You will need to allow rpcbind for the server's ip:
 rpcbind: 192.168.0.100/255.255.255.255
 Daemons
 Start the portmap and nfslock daemons:
 /etc/rc.d/rpcbind start (or: /etc/rc.d/portmap start)
 /etc/rc.d/nfs-common start (or: /etc/rc.d/nfslock start)
 Please note that they must be started in that order or start only
nfs-common, as rpcbind will be started as a dependency.
 To start the daemons at boot time, add them to the DAEMONS array in
/etc/rc.conf.
 Then just mount as normal:
 mount server:/files /files
 Unlike CIFS shares or rsync, NFS exports must be called by the full
path on the server; example, if /home/fred/music is defined in
/etc/exports on server ELROND, you must call:
 mount ELROND:/home/fred/music /mnt/point
 instead of just using:
 mount ELROND:music /mnt/point
 or you will get mount.nfs: access denied by server while mounting
 Auto-mount on boot
 If you want to mount on boot, make sure network, rpcbind (portmap),
nfs-common (nfslock) and netfs are in the DAEMONS array in /etc/rc.conf.
Make sure the order is this one. It is better not to put any '@' in
front of them (although you could safely use @netfs); for instance:
 DAEMONS=(... network rpcbind nfs-common @netfs ...)
 or
 DAEMONS=(... network portmap nfslock @netfs ...)
 Add an appropriate line in /etc/fstab, for example:
 server:/files /files nfs defaults 0 0
 If you wish to specify a packet size for read and write packets,
specify them in your fstab entry. The values listed below are the
defaults if none are specified:
 server:/files /files nfs rsize=32768,wsize=32768 0 0
 Read the nfs man page for further information, including all available
mount options.
 Troubleshooting
 Unreliable performance, slow data transfer, and/or high load when using
NFS and gigabit
 This is a result of the default packetsize used by NFS, which causes
significant fragmentation on gigabit networks. You can modify this
behavior by the rsize and wsize mount parameters. Using
rsize=32768,wsize=32768 should suffice. Please note that this problem
does not occur on 100Mb networks, due to the lower packet transfer
speed.
 Default value for NFS4 is 32768. Maximum is 65536. Increase from
default in increments of 1024 until maximum transfer rate is achieved.
 Portmap daemon fails to start at boot
 Make sure you place portmap before netfs in the daemons array in
/etc/rc.conf.
 Nfsd fails to start with "nfssvc: No such device"
 Make sure the nfs and nfsd modules are loaded in the kernel.
 Nfsd seems to work, but I cannot connect from MacOS X clients
 When trying to connect from a MacOS X client, you will see that
everything is ok at logs, but MacOS X refuses to mount your NFS share.
You have to add insecure option to your share and re-run exportfs -r.
 mount.nfs: Operation not permitted
 After updating to nfs-utils 1.2.1-2, mounting NFS shares stopped
working. Henceforth, nfs-utils uses NFSv4 per default instead of NFSv3.
The problem can be solved by using either mount option 'vers=3' or
'nfsvers=3' on the command line:
 # mount.nfs <remote target> <directory> -o ...,vers=3,...
 # mount.nfs <remote target> <directory> -o ...,nfsvers=3,...
 or in /etc/fstab:
 <remote target> <directory> nfs ...,vers=3,... 0 0
 <remote target> <directory> nfs ...,nfsvers=3,... 0 0
 Links and references
 See also Avahi, a Zeroconf implementation which allows automatic
discovery of NFS shares.
 HOWTO: Diskless network boot NFS root
 Very helpful
 If you are setting up the Archlinux NFS server for use by Windows
clients through Microsoft's SFU, you will save a lot of time and
hair-scratching by looking at this forum post first !
 Microsoft Services for Unix NFS Client info
 Unix interoperability and Windows Vista Prerequisites to connect to NFS
with Vista
 Categories: Networking (English) | HOWTOs (English)

**** get ifconfig

install net-tools
 Pasted from
<[[https://bbs.archlinux.org/viewtopic.php?id=120548][https://bbs.archlinux.org/viewtopic.php?id=120548]]>

*** bugs and fixes
**** Arch wont boot from grub (grub is frakked)

if arch will not boot from grub and you may get an error
 boot from the arch installer
 chroot the system (see [[#x5kaj0yANINgtsF84fiPFA][HERE]])
 then on the system that now is chrooted issue:

pacman -S base

 then reinstall the bootloader:

pacman -S grub

 lastly make sure the kernel is the latest verison :

pacman -S linux

 note, it could be that upgrading the kernel caused the problem so you
may want to try to downgrade the kernel if the above dosent work in some
cases
**** Usb drives being mounted read only
Installing ntfs-3g package solves this
**** to fix the microphone not working

to fix the microphone not working:
 1. close all virtualbox/VMware instances if runing
 2. issue:
 $ sudo /etc/rc.d/alsa restart
**** Latex issues
first, install texlive-most

https://bbs.archlinux.org/viewtopic.php?id=166163

if latex (texlive on arch) breaks and gives warnings:

This is pdfTeX, Version 3.1415926-2.5-1.40.14 (TeX Live 2013/Arch Linux)
restricted \write18 enabled.
---! /var/lib/texmf/web2c/pdftex/pdflatex.fmt doesn't match pdftex.pool
(Fatal format file error; I'm stymied)

and

/usr/bin/fmtutil: line 395: /usr/share/texmf/texconfig/tcfmgr: No such file or directory
fmtutil: config file `fmtutil.cnf' not found.

run this bash script this:

#+BEGIN_SRC sh
cd /etc/texmf
for i in $(find `pwd` -name .pacnew | grep .pacnew)
do
        mv $i $(echo ${i/.pacnew/})
done

sudo fmtutil-sys --all 
#+END_SRC

**** digikam: error while loading shared libraries:

digikam: error while loading shared libraries: libmarblewidget.so.4:
cannot open shared object file: No such file or directory
 this is solved by downgrading kdeedu-marble:
 sudo pacman -S extra/kdeedu-marble

**** Restore ALSA Mixer settings at startup

Restore ALSA Mixer settings at startup
 Run (as root) alsactl store once to create /etc/asound.state.
 # alsactl store
 then, Edit /etc/rc.conf and add "alsa" to the list of daemons to start
on boot-up. This will store the mixer settings on every shutdown and
restore them when you boot. If the mixer settings are not loaded on
boot-up, add the following line to /etc/rc.local:
 # alsactl restore
 These methods still may not work, or you may prefer to have audio
settings for individual users. In this case, run alsactl store -f
~/.asoundrc as a normal user. This will save and restore volume settings
on a per user basis. To automate this process, add the respective
commands to ~/.bash login and ~/.bash logout, or the correct locations
for the shell of your choice.

**** alsa no resampling

issue :
 cat /proc/asound/card0/pcm0p/sub0/hw params | grep rate
 if you get:
 rate: 48000
 it means there is resampling which degrades quality
 so create asound.conf in /etc/:
 pcm.!default {
 type plug
 slave.pcm {
 type dmix
 ipc key 1024
 slave {
 pcm "hw:0,0"
 rate 44100
 }
 }
 }
 pcm.dmixout {
 # Just pass this on to the system dmix
 type plug
 slave {
 pcm "dmix"
 }
 }
 pcm.mixin {
 type dsnoop
 ipc key 5978293# must be unique for all dmix plugins!!!!
 ipc key add uid yes
 slave {
 pcm "hw:0,0"
 channels 2
 period size 1024
 buffer size 4096
 rate 44100
 periods 0
 period time 0
 }
 bindings {
 0 0
 0 1
 }
 the 1st section resamples all samples to 44.1 meaning 44.1 samples wont
be resampled
 the 2nd section creates a proper recording device for example skype
 in Skype simply choise the new mixing device in options and choose
"mixin"
 
**** suspend broken



if suspend stops working:
 first issue:
 $rmmod tpm
 $rmmodtpm bios
 $rmmod tpm tis
 Note: not all models may exist
 If you still have a modprobe.conf add this line:

options tpm itpm=1

 Otherwise create /etc/modprobe.d/tpm.conf and add it there.
 Note: notice the plural in options

**** KDE and Qt programs look bad when in a different window manager

KDE and Qt programs look bad when in a different window manager
 If you're using KDE or Qt programs but not in a full KDE session
(specifically, you didn't run "startkde"), then as of KDE 4.6.1 you will
need to tell Qt how to find KDE's styles (Oxygen, QtCurve etc.)
 You just need to set the environment variable QT PLUGIN PATH. E.g.
put
 export
QT PLUGIN PATH=$HOME/.kde4/lib/kde4/plugins/:/usr/lib/kde4/plugins/
 into your /etc/profile (or ~/.profile if you don't have root access).
qtconfig should then be able to find your kde styles and everything
should look nice again!

**** launch handbrake

use the command
 $ghb

**** /boot issues

NOTE: in general when installing arch its better to have the /boot in
a separate partition thats on sda1
 if its not on the first partition /sda1 then you will have trouble
installing the bootloader and grub since the it installs it into the MBR

**** python 3 fix

if you get errors with python apps that still need python2:
 open the bin app (usually /usr/bin/APPNAME)
 and add a '2' to the python line in 1st line
 so from
 #!/usr/bin/python
 to
 #!/usr/bin/python2
 alternitavly you can try to fix the package build with a:
 sed -i 's|#!python|#!/usr/bin/env python2|' distribute setup.py

**** fix svg not showing

reinstal :
 librsvg
 from repo
 this should fix it

**** /etc/profile.d/GNUstep.sh:set:70: bad option: -y

this usually has to do with pacmixer insalling and packages

**** gtk3 focus issues (focused windows act like unfocused-eg cursor in
termite etc)

if you have gtk3 focus issues (focused windows act like unfocused-eg
cursor in termite etc)
 install a patched version of gtk3 from AUR
 gtk3-focus-fix 3.6.4-1
*** R under arch
**** lme compalining errors
install gcc-fortran

*** Power
**** Suspending to RAM

if the command :
 sudo pm-suspend
 gives you toruble its better to use this methd:
 1) install uswsusp through AUR
 2) edit /etc/suspend.conf to specify the resume device, i.e. your swap
partition.
 resume device = /dev/sdXY
 3) update /etc/mkinitcpio.conf to include the resume hook
 HOOKS="base udev autodetect pata scsi sataresume filesystems"
 4)rebuild the ramdisk
 sudo mkinitcpio -p kernel26
 5)Testing
 After installing the uswsusp package, check to see whether s2ram
recognizes your machine:
 # s2ram -n
 If you see a line that says "Machine matched entry #", then your
machine is already whitelisted. You SHOULD be able to suspend and resume
properly by simply running s2ram:
 # s2ram
 if not use
 # s2ram -f
 it may be a good idea to add s2ram in visudo to the sudoers list and
use an alias to launch it

*** Admin
**** notify-osd

1)uninstall if present current old verison of gnome osd:
 pacman -Rd notification-daemon
 then install through aur 'notify-osd'
 resteart pc

**** nfs under arch info

You can now start the server with the following commands:
 # rc.d start rpcbind (or: rc.d start portmap)
 # rc.d start nfs-common (or: rc.d start nfslock)
 # rc.d start nfs-server (or: rc.d start nfsd)
 Please note that they must be started in that order
 If you make changes to /etc/exports after starting the daemons, you can
make them effective by issuing the following command:
 # exportfs -r

**** users in arch

Archs default group is "users" not $USERNAME as in ubuntu
 to add yourself to a group:
 gpasswd -a zeltak vboxusers
 zeltak is the user to be added
 vboxusers-is the group name

**** automount usb drive- ldm mounter

install and use ldm for auto mounting drives:
 [[https://github.com/LemonBoy/ldm][https://github.com/LemonBoy/ldm]]

[[https://aur.archlinux.org/packages.php?ID=52272][https://aur.archlinux.org/packages.php?ID=52272]]

**** udiskie (auto mount drives)

Introduction
 Udiskie is an automatic disk mounting service using udisks. It can be
used for mounting CDs, flash drives, and other media. It is simple to
use and requires no configuration.
 Installation
 You can install Udiskie by using the udiskie package that is found in
the AUR.
 Start the Udiskie service by adding
 udiskie &
 to your xinitrc file, before the window manager is loaded.
 Once Udiskie is running, all removable media will automatically be
mounted under /media under a new directory that matches the device name.
 Permissions
 udiskie requires permission for the
org.freedesktop.udisks.filesystem-mount action to be granted through
PolicyKit. If you use a desktop manager that supports ConsoleKit this
will be taken care of for you automatically. If you are not using a
desktop manager that supports ConsoleKit, you'll need to grant the
permission manually. This can be done by creating 10-udiskie.pkla in
/etc/polkit-1/localauthority/50-local.d with these contents:
 [udiskie]
 Identity=unix-group:storage
 Action=org.freedesktop.udisks.filesystem-mount
 ResultAny=yes
 This example configuration allows any member of the storage group to
mount and unmount disks with udiskie.
 Unmounting
 Use the udiskie-umount command to unmount media. For example, for a
device named "MY USB DRIVE":
 udiskie-umount /media/MY USB DRIVE
 Or, you can unmount all media with the command:
 udiskie-umount -a

**** mount ntfs drives

Install the ntfs-3g package from the official repositories.
 
Manual mounting

 Two options exist for manually mounting NTFS partitions. The
traditional:
 # mount -t ntfs-3g /dev/<your-NTFS-partition> /{mnt,...}/<folder>

 IE:

sudo mount -t ntfs-3g /dev/sdf1 /media/tmount/

** kde
*** Kde in arch
**** install
install Install kde or kde-meta available

#+begin_src sh
pacman -S kde
#+end_src
**** Starting KDE
***** using kdm
Enable/start kdm.service to start the display manager. 
#+begin_src sh
systemctl enable kdm.service
#+end_src
***** using xinit
Using xinitrc

See the xinitrc page for more information.

~/.xinitrc

#+BEGIN_SRC sh
exec startkde
#+END_SRC

Execute startx or xinit to start KDE. 

*** kde4
**** make shortcuts for app switching

open the advanced window menu settings:
 window icon > advance> special application setting
 then go to the preferences tab and define a global shortcut
 now you can quickly change from one app to the other with a shortcut
**** connect mtp devices
install mtp package kio-mtp
**** show mpd info in taskbar
install
kdeplasma-addons-applets-nowplaying
**** focus issues for specific windows

this takes in gnome-do as an example but should work for all other
programs:

 Some KDE users have reported a bug (particularly in KDE 4) where Do
stops appearing above their other windows like it is supposed to. Do
user Killerah has posted a fix on Launchpad, transcribed here:
 In KDE 4 go to System Settings>Window Behavior and create a new window
specific setting. Change "Window Class" to "Exact Match" and type in
"do".
 Now click on the "Window Extra" tab and set the window type to "Splash
Screen", then change "Window Title" to "Exact Match" and type in "Do".
 Now go to the "Workarounds" tab and set "Focus Stealing Prevention" to
"Force" and "None", then change "Window type" to "Force" and "Splash
Screen".
 Then just Hit OK and Apply and you should be good to go.

**** users and groups

add/edit/remove users in kde4

 to manage users and groups in kde 4:
 launch kuser

**** graphics

make GTK apps look like KDE apps
 KDE Folder Properties
 1.install the gtk-kde4 package
(http://www.kde-look.org/content/show.php/gtk-kde4?content=74689)
 sudo apt-get install kcm-gtk-kde4
 move desired theme to /usr/share/themes as root
 in systemsettigns in kde4 configure the settings
 Note: It may be good to uninstall the deafult gtk-qt theme engine that
comes with kubuntu
 KDE Folder Properties
 This is an example for folder icon and property in Konqueror:
 [Desktop Entry]
 Icon=/home/zeltak/My Linux Theme/1 Zeltak Current/0 Current
Theme/Ice PhoeNix 1.0/1 Xtra Iconset/Backups/Top per bk.png
 [URL properties]
 ViewMode=konq detailedlistview

**** plasma

How to install a Plasmoid


plasmapkg -i 118402-MPD-plasma-client.plasmoid


 From Source:

tar -xvf plasmoid.tar.gz
 cd plasmoid
 mkdir build
 cd build
 cmake -DCMAKE INSTALL PREFIX=`kde4-config --prefix` ..
 make
 sudo make install OR su -c "make install"

 How to restart plasma

kquitapp plasma-desktop&& plasma-desktop

**** remove kwin window borders in kde

edit:
 ~/.kde4/share/config/kwinrc
 add this:
 BorderlessMaximizedWindows=true
 under the section [Windows]
 It should look something like this:
 [Windows]
 ActiveMouseScreen=true
 AltTabStyle=KDE
 AutoRaise=false
 AutoRaiseInterval=750
 BorderSnapZone=10
 BorderlessMaximizedWindows=true
 CenterSnapZone=0
 Launch KRunner (Alt+F2) and run the command:
 kwin --replace
 to restart KWin

**** kde webshortcuts

Web Shortcuts
 Konqueror provides a number of useful web shortcuts in Settings ->
Configure Konqueror -> Web Browsing -> Web Shortcuts. These allow you to
(for example) enter
 wp:KDE
 in the address bar to automatically load the Wikipedia web page about
KDE.

**** Window Layer Bugs

In KDE 4 go to System Settings>Window Behavior and create a new window
specific setting.
 Change "Window Class" to "Exact Match" and type the bashrun info
 Now click on the "Window Extra" tab and set the window type to "Splash
Screen", then change "Window Title" to "Exact Match" and type in the
bashrun info
 Now go to the "Workarounds" tab and set "Focus Stealing Prevention" to
"Force" and "None", then change "Window type" to "Force" and "Splash
Screen".
 Then just Hit OK and Apply and you should be good to go.

**** konsole

***** launch a new tab with a specific profile

issue this

konsole --profile Shell --new-tab

**** Plasma/plasmoids

***** text monitor

install text monitor
 then edit the main.js file locate here

/home/zeltak/.kde4/share/apps/plasma/plasmoids/textmon/contents/code/main.js

 delete the entite content and put this:
 // -- coding: utf-8 --
 / Javscript modules /
 if (!plasmoid.include("helpers.js")) {
 throw("[CODE ERROR] couldn't load helpers.js module");
 }
 / Font properties /
 var styleSheet = { "font-family": "Liberation Mono",
 "font-style": "normal",
 "font-size": "10px",
 "color": "white" };
 / mpc /
 var mpc = (function () {
 var that = {};
 that.source = "mpc status";
 //that.sources = [that.source];
 var label = new Label();
 label.styleSheet = helpers.styleSheetToString(styleSheet);
 label.wordWrap = false;
 label.text = "mpd: stopped";
 that.label = label;
 that.dataUpdated = function (name, data) {
 if (name !== this.source) {
 throw ("[CODE ERROR] this routine is meant to handle '"
 + this.source + "', not'" + name + "'");
 }
 
 if (data["exit code"] !== 0) {
 // data["stderr"] contains "error: Connection refused"
 this.label.text = "no mpd process";
 return;
 }
 // string -> array of strings
 var mpc status = data["stdout"].split("\n");
 
 if (mpc status[0].substring(0, "volume:".length) === "volume:") {
 this.label.text = "mpd: stopped";
 }
 else {
 // mpc status[0] contains string of currently played track
 this.label.text = mpc status[0];
 }
 };
 return that;
 }());
 var engine = dataEngine("executable");
 if (!engine.connectSource(mpc.source, mpc, 1000)) {
 throw("connection attempt to '" + mpc.source +"' failed");
 }
 / layout /
 var layout = new LinearLayout(plasmoid);
 layout.addItem(mpc.label);

***** enable mpd support

***** refresh plasmoids

issue:

kbuildsycoca4

**** special windows settings

***** define a application setting

in the app you currently want to define a rule press F3 to bring up a
menu and choose special application setting (NOTE: dont use special
windows setting-still unclear on what that does)
 simply hit the autodetection and check checkboxes number 2 and 3 (roles
and window type)
 [[nixx_files/Image_pRZGmJyJNf9GGr6ORZuyDQ_0001.png]]
**** multimonitor
***** use new gen monitor manager (kscreen)
install 'kscreen' from repo
*** multi monitors
install kscreen
#+begin_src sh
pacman -S kscreen
#+end_src
 
to get better multi monitor configs
*** KWIN
**** remove kwin window borders in kde
***** for all windows
edit:

#+BEGIN_EXAMPLE
~/.kde4/share/config/kwinrc
#+END_EXAMPLE

and add this:
#+BEGIN_EXAMPLE
BorderlessMaximizedWindows=true
#+END_EXAMPLE

under the section [Windows]

It should look something like this:

#+BEGIN_EXAMPLE
[Windows]
 ActiveMouseScreen=true
 AltTabStyle=KDE
 AutoRaise=false
 AutoRaiseInterval=750
 BorderSnapZone=10
 BorderlessMaximizedWindows=true
 CenterSnapZone=0
#+END_EXAMPLE


Launch KRunner (Alt+F2) and run the command:
kwin --replace
to restart KWin

***** For specific windows
use the kwin rules:


#+DOWNLOADED: /tmp/screenshot.png @ 2013-11-14 16:47:42
#+attr_html: :width 300px
 [[~/org/attach/images_2013//screenshot_2013-11-14_16:47:42.png]]

another manual option is to bind a hotkey to show/hide borders and issue it manualy
**** force focus of window
set the focus stealing prevention to `force` and `none`

#+DOWNLOADED: /tmp/screenshot.png @ 2013-11-14 16:48:47
#+attr_html: :width 500px
 [[~/org/attach/images_2013//screenshot_2013-11-14_16:48:47.png]]

*** configs
**** multi monitors
***** make sure application start on focused screen
to make sure application that are launched start on the correct screen/monitor:

make sure to check
'Active screen follows mouse' 

Option in System Settings > Window Behaviour > Window Behaviour
***** disable kde asking about config each change
stop the
'Display Management change monitor'
service from
System Settings -> Startup and Shutdown -> Service Manager

*** system settings
**** enable gmail as default mail app

enable gmail as default mail app
 enter this in the sys settings mail option:
 chromium-browser https://mail.google.com/mail/#compose
 [[nixx_files/Image_RonGsyD5rQpplelrEaSC3w_0001.png]]

*** Oxygen
**** oxygen icons svg download

to get all the svg for the updated oxygen project issue this:
 svn co svn://anonsvn.kde.org/home/kde/trunk/kdesupport/oxygen-icons
 you can preview individual icons here:

[[http://websvn.kde.org/trunk/kdesupport/oxygen-icons/][http://websvn.kde.org/trunk/kdesupport/oxygen-icons/]]

*** gtk in kde
**** make gtk 3.0 themes work
Like ~/.gtkrc-2.0 with GTK2+, it is possible to set a GTK3 theme via
${XDG CONFIG HOME}/gtk-3.0/settings.ini.
Variable $XDG CONFIG HOME is usually set to ~/.config
Adwaita, the default GNOME 3 theme, is a part of gnome-themes-standard.
Additional GTK3 themes can be found at Deviantart web site. For example:
 ${XDG CONFIG HOME}/gtk-3.0/settings.ini

 example:

 [Settings]
 gtk-theme-name = Adwaita
 gtk-fallback-icon-theme = gnome
 # next option is applicable only if selected theme supports it
 gtk-application-prefer-dark-theme = true
 # set font name and dimension
 gtk-font-name = Sans 10
 for oxygen theme make sure you intsall oxygen-gtk3 and then use this:
 [Settings]
 gtk-theme-name = oxygen-gtk
 gtk-fallback-icon-theme = gnome
 # next option is applicable only if selected theme supports it
 gtk-application-prefer-dark-theme = true
 # set font name and dimension
 gtk-font-name = Sans 10
**** qtconfig
launch qtconfig and choose the gtk+ theme so your qt apps looks in place
 [[nixx_files/Image.png]]

*** !bugs/errors!
**** panel freezing
one casue could be a faulty plasmoid
one that is known to cause problems is:
`gmail-plasmoid`

** general
*** fonts

Most system and distors place the ~/.fonts
 the best way is to manually add .ttf fonts (simple copy) to the
~/.fonts folder and then issue

fc-cache -f -v ~/.fonts

 to refresh the fonts cahceTo check your current DPI, run this:

xdpyinfo | grep resolution

 To change the DPI, make sure xrandr is installed and run (just change
the number):

xrandr --dpi 96 &

*** Change mime type and launch manually

hot to change "open with" context menu?
 edit
 /usr/share/applications/mimeinfo.cache
 if you want total control over the list.

*** troubleshooting-fail

**** x crashes and you get a no permission when using startx

X crashes and you get a no permission when using Startx

 1) with df check the file system, Most likley linux mounted Root (/) as
Home!
 
 to solve:
 in the grub menu chnage the following lines:
 
 1) make sure that the root is correct - (hd0,1 >means sda/hda 2!!!! and
hd0,0 sda1!!
 
 title Ubuntu, kernel 2.6.17-11-386
 
 2) make sure the root is not set to UID and is correct (below it is set
to sda2 which is the root partition)
 kernel /boot/vmlinuz-2.6.17-11-386 root=/dev/sda2 ro quiet splash

**** alt+printscreen+r+s+e+i+u+b

Alt+PrintScreen+r+s+e+i+u+b

  r - takes the control of the keyboard back from X.
  s - writes the data from the disc cache to the hard disk.
  e - sends SIGTERM to all processes except init.
  i - sends SIGKILL to all processes except init
  u - remounts all the filesystems readonly (basically a measure to
help you reboot safely)
  b - reboots the system

*** X resources (.Xresources) 
**** .Xresources Vs .Xdefaults 
`.Xresources` is !newer! then `.Xdefaults` so its better to config everything in Xresources and link it to xdefaults for legacy suppport
**** intro

$Note$ Xresources is newer then xdefaults so its better to config everything in Xresources and link it to xdefaults for legacy suppport:

#+BEGIN_SRC sh
ln -s .Xressources .Xdefaults  
#+END_SRC

`Xresources` and `Xdefaults` are user-level configuration dotfiles,
typically located at

file:~/.Xresources

and

file:~/.Xdefaults

They can be used to set X resources, which are configuration parameters for X client applications. It can do many operations, including:
 defining terminal colours
 configuring terminal preferences
 setting DPI, antialiasing, hinting and other X font settings
 changing the Xcursor theme
 theming xscreensaver
 altering preferences on low-level X applications (xclock, xpdf,
etc.)
 When ~/.Xresources is present, it will be parsed by the xrdb (Xorg
resource database) program automatically when Xorg is started, and you
must re-run

xrdb ~/.Xresources

 every time you change the file. If you don't use a Desktop Environment,
you may need to add

xrdb -merge ~/.Xresources

Note: You can actually put the file anywhere you want (such as ~/.config/Xresources) if you use xrdb manually). to your xinitrc. Using ~/.Xresources stores the resources in the X server, so the file doesn't need to be reread over and over and it works for remote X clients too. 

The older (deprecated) ~/.Xdefaults is read every time you start an X
program such as xterm --- but only if xrdb hasn't ever been used in the
current X session

**** source/refresh .Xresources
#+BEGIN_SRC sh
xrdb ~/.Xresources
#+END_SRC
**** Adding to xinitrc
If you do not use a desktop environment, you probably need to add the following line to your ~/.xinitrc:

#+BEGIN_SRC sh
[[ -f ~/.Xresources ]] && xrdb -merge ~/.Xresources
#+END_SRC
**** check Default settings
Detailed information on program-specific resources is usually provided in the man page for the program. xterm's man page is a good example, as it contains a list of X resources and their default values.
To see the current loaded resources:
#+BEGIN_SRC sh
xrdb -query -all
#+END_SRC
**** Commenting
To add a comment to your Xresources file, simply prefix it with an exclamation mark (!), for example:

#+BEGIN_EXAMPLE
! This is a comment placed above some Xft settings
Xft.dpi:       96      ! this is an inline comment
#+END_EXAMPLE

*** grey windows error

[[http://www.amazon.com/Micro-USB-Male-Female-Adapter/dp/B0027YYMU6/ref=pd_sim_e_4the][http://www.amazon.com/Micro-USB-Male-Female-Adapter/dp/B0027YYMU6/ref=pd sim e 4the]]
file casuing the problem is:
 /home/zeltak/.local/share/recently-used.xbel
 manually delete it to get rid of the problem
 instead of deleting you can add
 "gtk-recent-files-max-age=0"
 to your ~/.gtkrc-2.0.
 
*** xdg-open
**** xdg open  
**** use memio to manage xdg-open

install these packages:
mimeo
xdg-utils-mimeo

[[https://aur.archlinux.org/packages/xdg-utils-mimeo/][https://aur.archlinux.org/packages/xdg-utils-mimeo/]]
then edit your ~/.config/mimeo.conf
example:
/usr/bin/dwb
\^[[http://]]
this would use dwb for all http type files
this should take precedance over
~/.local/share/applications/mimeapps.list

** Ubuntu

*** fresh install

**** start

Zeltak fresh Ubuntu install
1.install restricted drivers
 install Video drivers from distros gui (jockey in buntu) if needed
2.Install my programs through apt-get install

sudo apt-get install firefox keepassx digikam krename audacity wine
easytag k9copy vlc gcolor2 gthumb k3b gimp rar unrar zip unzip xournal
htop ktorrent comix inkscape gconf-editor gparted kalarm gnome-schedule
getmail4 build-essential automake nfs-common portmap nfs-kernel-server
skanlite speedcrunch mc ktorrent kget p7zip-full mtpaint gmrun
ntfs-config sqliteman ncdu terminator mc flac lame smplayer
smplayer-themes abiword dzen2 kdiff3 smb4k screen scrot imagemagick
atool
 then
 sudo apt-get install ubuntu-restricted-extras
 3.edit fstab
 sudo mkdir /media/media
 sudo mkdir /media/thd
 sudo nano /etc/fstab
 Example: Zeltak's fstab:
 # /etc/fstab: static file system information.
 #
 # <file system> <mount point> <type> <options> <dump> <pass>
 proc /proc proc defaults 0 0
 # /dev/sda4
 UUID=475e5ebd-1a65-4e83-8986-17afc357b921 / ext3
relatime,errors=remount-ro 0 1
 # /dev/sda3
 UUID=8e18f99b-1c06-404d-94f4-e29b5c138513 /home ext3 relatime 0 2
 # /dev/sda5
 UUID=ee3919c4-ea61-46db-a185-90ea48517d11 none swap sw 0 0
 /dev/scd0 /media/cdrom0 udf,iso9660 user,noauto,exec,utf8 0 0
 eddie:/mnt/media /media/media nfs defaults 0 0
 eddie:/mnt/hd2 /media/thd nfs defaults 0 0
 #Make USB Work in Sun VirtualBox
 none /proc/bus/usb usbfs devgid=46,devmode=664 0 0
 4.Add PPA and other links to /etc/apt/sourcelist
 sudo nano /etc/apt/sources.list
 Edit source file and add additional sources
 sudo apt-get update
 install through apt-get install above added programs
 5.Install all .deb files in the zeltak deb repository:

 Example files:
 keepassx
 6: Codecs and prop software

 enable mediabuntu repo's:
[[https://help.ubuntu.com/community/Medibuntu][https://help.ubuntu.com/community/Medibuntu]]
 sudo apt-get install libdvdcss2 ubuntu-restricted-extras vlc mplayer
w32codecs skype ffmpeg ssh flashplugin-nonfree
 7: Fonts

 sudo apt-get install cabextract gsfonts-other msttcorefonts
t1-xfree86-nonfree ttf-f500 ttf-isabella ttf-larabie-deco
ttf-larabie-straight ttf-larabie-uncommon ttf-staypuft ttf-summersby
ttf-ubuntu-title ttf-xfree86-nonfree xfonts-intl-european ttf-droid

**** ppa

*** networking

**** CLI networkig

Configure static IP in CLI-Ubuntu
 1. First you need to edit /etc/network/interfaces using your favorite
text editor (I like nano):
 sudo nano /etc/network/interfaces
 2. Next you need to enter your static IP information:
 auto lo
 iface lo inet loopback
 iface eth0 inet static
 address 192.168.0.7
 netmask 255.255.255.0
 gateway 192.168.0.44
 auto eth0
 
 3. Save your changes.
 4. Now you need to point your server to your DNS server. To do this,
you need to edit /etc/resolv.conf:
 sudo nano /etc/resolv.conf
 name server xxx.xxx.xxx.xxx (Replace the x's with the IP address of
your DNS server)
 nameserver 192.115.106.10
 5. Save your changes, then restart your network:
 sudo /etc/init.d/networking restart
 6. Now test it by pinging www.asktheadmin.com

*** admin tasks (ubuntu specific)

Recover your Ubuntu password

 First of all, if you forget your admin Ubuntu password, you will need
physical access to the PC in order to recover your password.
 Usually Ubuntu install in the grub menu this option:
 titleUbuntu 8.10, kernel 2.6.27-7-generic (recovery mode)
 uuid393ac665-f5c2-488d-b601-b59ba1d5675b
 kernel/boot/vmlinuz-2.6.27-7-generic
root=UUID=393ac665-f5c2-488d-b601-b59ba1d5675b ro single
 initrd/boot/initrd.img-2.6.27-7-generic
 That text is part of my /boot/grub/menu.lst of my Ubuntu Linux, so
first go to the easiest way to recover the password in Ubuntu.
 1. Reboot your system
 2. When it is starting, press ESC to get the grub menu
 3. Select the option that says (recovery mode)
 4. In the next dialog select the root prompt, and get access to a
console shell
 5. type
 passwd admin-username
 Remember to change the bold text by your username in Ubuntu, the one
that has admin rights.
 6. reboot your system, and you are done!
 Now Going to the not so easy way, in case you do not have the recovery
mode option.
 Follow the same procedure as above until step 2.
 3. Press e to edit
 4. Select the line that starts with kernel...
 5. Press e again.
 6. Go to the end of the line and add single
 7. Press ENTER
 8. Press b to boot that kernel, with the single option.
 9. Change password, and reboot.

**** disable password prompts in ubuntu

disable password prompts in Ubuntu
Open the terminal window from Applications --> accessories -->
terminal, run the command:
 sudo visudo
 Find the line that says
 %admin ALL=(ALL) ALL
 and change it to
 %admin ALL=(ALL) NOPASSWD: ALL
 Save and exit the file

**** how to change sudo password remembering time in ubuntu

How to Change Sudo Password Remembering Time in Ubuntu
When You use 'sudo' command it will ask for password in First time and
will remember password for 15 minutes. It is a security hole for
sensitive systems.
 You can change sudo Password Remembering Time in Ubuntu .
 Open a terminal and type
 $ sudo visudo
 In Ubuntu, visudo uses nano text editor, and what it does is edit the
/etc/sudoers.tmp
 Check for the line as shown below
 Defaults env reset
 Change it to
 Defaults env reset , timestamp timeout = X
 Where X is the time that we remember the sudo password, if we put 0
(zero) that we always get the request.
 Finally to save the changes, press Ctrl + X and said yes.

*** release specific

**** jaunty jackalope 9.04

Re-Enable Ctl-alt-backspace
 sudo aptitude install dontzap && sudo dontzap --d
 How to Remove The Annoying Update manager Pop-up in Ubuntu Jaunty
 In your terminal, type the following command:
 gconftool -s --type bool /apps/update-notifier/auto launch false
 to recover:
 gconftool -s --type bool /apps/update-notifier/auto launch true
 

**** karmic

***** grub issues

Confirmed to work as a work around to be able to startup:

 Turn on the machine. As soon as it starts to boot press SHIFT or press
ESC to bring up the grub boot menu. (or press enter after grub error
message)
 Hightlight the first line and press [e] to edit.
 Cursor down to the line that says search --no floppy etc etc
 Use the delete key and delete the whole line and any part of it that
wrapped below it
 Now hold the [Ctrl] key and press [x] to boot.

***** how to enable-disable ctrl+alt+backspace in ubuntu 9.10 (karmic)

Ctrl+Alt+Backspace (i.e. the shortcut which was used to restart the X
server) has to be enabled in a different way with respect to previous
releases of Ubuntu.
 This is due to the fact that "DontZap" is no longer an option in the X
server and has become an option in XKB instead.
 Using GNOME

  Get to the System->Preferences->Keyboard menu.
  Select the "Layouts" tab and click on the "Layout Options" button.
  Then select "Key sequence to kill the X server" and enable "Control +
Alt + Backspace".
 [[nixx_files/image%25202.png]]
 
 Using KDE
  Launch "systemsettings"
  Select "Regional & Language".
  Select "Keyboard Layout".
  Click on "Enable keyboard layouts" (in the Layout tab).
  Select the "Advanced" tab. Then select "Key sequence to kill the X
server" and enable "Control + Alt + Backspace".
 
 Using the command line
 You can type the following command to enable Zapping immediately.
 setxkbmap -option terminate:ctrl alt bksp
 If you're happy with the new behaviour you can add that command to your
~/.xinitrc in order to make the change permanent.
 
 Using HAL
 You can add the following line in
/usr/share/hal/fdi/policy/10osvendor/10-x11-input.fdi (inside the <match
key=info.capabilities contains=input.keys> section):
 <merge key="input.xkb.options"
type="string">terminate:ctrl alt bksp</merge>

*** ppa stuff

**** add key from ppa

On the PPA's overview page you'll see the PPA's OpenPGP key id.
 It'll look something like this: 1024/12345678. Copy it, or make a note
of, the portion after the slash, e.g: 12345678
 Open your terminal and enter:
 sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 12345678
 Replace 12345678 with the key id you copied in step 1.
 Step 3: Finally, tell Ubuntu to re-load the details of each software
archive it knows about:
 sudo apt-get update

*** Tips

**** Remove only open office in ubuntu

Remove only open office in ubuntu

 sudo apt-get -y remove openoffice.org openoffice.org-base
openoffice.org-calc openoffice.org-common openoffice.org-core
openoffice.org-draw openoffice.org-evolution
openoffice.org-filter-mobiledev openoffice.org-gnome openoffice.org-gtk
openoffice.org-help-en-us openoffice.org-impress
openoffice.org-java-common openoffice.org-l10n-common
openoffice.org-l10n-en-gb openoffice.org-l10n-en-za openoffice.org-math
openoffice.org-style-human openoffice.org-writer

**** install 32 bit flash on ubuntu 64bit

uninstall all previous flash instances (check for a script to auto do it
online)
 then issue this:
 sudo apt-get install flashplugin-nonfree

** Debian
*** Fresh install
**** teamviwer
Notes to Multiarch:
On newer 64-bit DEB-systems with Multiarch-support (Debian 7) teamviewer_linux_x64.deb cannot be installed because the package ia32-libs is not available anymore on these systems. In this case you can use teamviewer_linux.deb instead.
In case you get the error “wrong architecture i386” you have to execute the following command lines:
dpkg --add-architecture i386
apt-get update
For further information: http://wiki.debian.org/Multiarch/HOWTO

**** skype
First, you will have to enable Multi-Arch:
# dpkg --add-architecture i386
# apt-get update
Then, download the i386 package as above and install:
# wget -O skype-install.deb http://www.skype.com/go/getskype-linux-deb
# dpkg -i skype-install.deb
If you then proceed with
# apt-get -f install
**** rstudio
download from site
**** virtualbox
VirtualBox 4.3.2 is packaged for Debian "Jessie".
The virtualbox- packages were moved to contrib at VirtualBox 4.2, as a non-free compiler (Open Watcom) is required to build the BIOS.
Add the "contrib" component to /etc/apt/sources.list, for example:
# Debian "Jessie" (testing)
deb http://http.debian.net/debian/ jessie main contrib
Update the list of available packages:
# apt-get update
Install the relevant linux-headers package and virtualbox package, for example:
# apt-get install linux-headers-$(uname -r|sed 's,[^-]-[^-]-,,') virtualbox
This will also install virtualbox-dkms and other recommended packages. DKMS will build the VirtualBox modules for your system.
**** flash
Installation
Install flashplugin-nonfree (from section contrib):
# apt-get install flashplugin-nonfree
**** fonts
ttf-mscorefonts-installer
**** matlab
installed in 
/usr/local/MATLAB/R2013b

**** sxhkd
install dependencies
#+BEGIN_SRC sh
sudo apt-get install xcb libxcb-keysyms1-dev libxcb-util0-dev
#+END_SRC

then  git clone the latest sxhkd repo and compile:

#+BEGIN_SRC sh
cd sxhkd
make
sudo make install
#+END_SRC

*** Start as deamon after boot on ubuntu/debian

Two main steps needed:
 1. Create /etc/init.d/dropbox
 sudo vim /etc/init.d/dropbox
 put this inside the file
 #!/bin/sh
 #dropbox service
 DROPBOX USERS="user1 user2"
 DAEMON=.dropbox-dist/dropbox
 start() {
 echo "Starting dropbox..."
 for dbuser in $DROPBOX USERS; do
 HOMEDIR=`getent passwd $dbuser | cut -d: -f6`
 if [ -x $HOMEDIR/$DAEMON ]; then
 HOME="$HOMEDIR" start-stop-daemon -b -o -c $dbuser -S -u
$dbuser -x $HOMEDIR/$DAEMON
 fi
 done
 }
 stop() {
 echo "Stopping dropbox..."
 for dbuser in $DROPBOX USERS; do
 HOMEDIR=`getent passwd $dbuser | cut -d: -f6`
 if [ -x $HOMEDIR/$DAEMON ]; then
 start-stop-daemon -o -c $dbuser -K -u $dbuser -x
$HOMEDIR/$DAEMON
 fi
 done
 }
 status() {
 for dbuser in $DROPBOX USERS; do
 dbpid=`pgrep -u $dbuser dropbox`
 if [ -z $dbpid ] ; then
 echo "dropboxd for USER $dbuser: not running."
 else
 echo "dropboxd for USER $dbuser: running (pid $dbpid)"
 fi
 done
 }
 case "$1" in
 start)
 start
 ;;
 stop)
 stop
 ;;
 restart|reload|force-reload)
 stop
 start
 ;;
 status)
 status
 ;;
 )
 echo "Usage: /etc/init.d/dropbox
{start|stop|reload|force-reload|restart|status}"
 exit 1
 esac
 exit 0
 Change DROPBOX USERS to include all users that want to run dropboxd
(separated by spaces), and save the file
 2. Make the script executable and add it to the system startup
 sudo chmod +x /etc/init.d/dropbox
 sudo update-rc.d dropbox defaults
 FOR DEBIAN:
 add this in the above script below #!/bin/sh
 ### BEGIN INIT INFO
 # Provides: dropbox
 # Required-Start: $local fs $remote fs $network $syslog $named
 # Required-Stop: $local fs $remote fs $network $syslog $named
 # Default-Start: 2 3 4 5
 # Default-Stop: 0 1 6
 # X-Interactive: false
 # Short-Description: dropbox service
 ### END INIT INFO






#+END_SRC
#+END_SRC
*** network
**** define network manually
Setting up an Ethernet Interface

The majority of network setup can be done via the interfaces configuration file at

file:/etc/network/interfaces

Here, you can give your network card an IP address (or use dhcp), set up routing information, configure IP masquerading, set default routes and much more. Remember to add interfaces that you want brought up at boot time to the 'auto' line.

!Using DHCP to automatically configure the interface!

If you're just using DHCP then all you need is something like:

#+BEGIN_SRC sh
auto eth0
allow-hotplug eth0
iface eth0 inet dhcp
Configuring the interface manually
#+END_SRC

If you're configuring it manually then something like this will set the default gateway (network, broadcast and gateway are optional):

#+BEGIN_SRC sh
auto eth0
iface eth0 inet static
address 192.168.0.7
netmask 255.255.255.0
gateway 192.168.0.254
#+END_SRC

*** mounting
**** mount: warning: XX seems to be mounted read-only 
to fix this error in mounting install

#+BEGIN_SRC bash :results none
sudo apt-get install ntfs-3g
#+END_SRC

then mount with 

#+begin_src sh
sudo mount -t auto /dev/sda1/ /media/wd/
#+end_src

*** change time zone

issue as root:
 dpkg-reconfigure tzdata
 also
 edit /etc/default/rcS
 and change
 UTC=no
*** add user to sudo 
To add the user foo to the sudo group:
#+BEGIN_SRC sh
adduser foo sudo
#+END_SRC
@After being added to a new group the user must log out and then log back in again for the new group to take effect@
*** Boot debian to CLI prompt (level 3) >> no GDM/KDM

uninstall gui DM if present ₆In example₆ 

#+BEGIN_SRC sh
sudo apt-get remove lightdm
#+END_SRC

add the '3' state to you grub.cfg kernel line:

#+BEGIN_EXAMPLE
linux/boot/vmlinuz-3.12-1-amd64 root=UUID=6b403e64-0515-4600-9728-c5f5be87144c ro  3
#+END_EXAMPLE

reboot

*** install virtualbox
VirtualBox 4.3.2 is packaged for Debian "Jessie".

The virtualbox- packages were moved to contrib at VirtualBox 4.2, as a non-free compiler (Open Watcom) is required to build the BIOS.

    Add the "contrib" component to /etc/apt/sources.list, for example:

#+BEGIN_SRC sh
    # Debian "Jessie" (testing)
    deb http://http.debian.net/debian/ jessie main contrib
#+END_SRC

    Update the list of available packages:

#+BEGIN_SRC sh
    # apt-get update
#+END_SRC

    Install the relevant linux-headers package and virtualbox package, for example:

#+BEGIN_SRC sh
    # apt-get install linux-headers-$(uname -r|sed 's,[^-]-[^-]-,,') virtualbox
#+END_SRC
*** install workpc
**** add sudo
see [[add%20user%20to%20sudo][add user to sudo]]
**** install 
chromium R-base
*** install rofi
on first fresh try install needed compiling dependencies:

#+BEGIN_SRC sh
sudo apt-get install  autoconf  libx11-dev libxft-dev libxinerama-dev libxdg-basedir-dev
#+END_SRC

then git clone from rofi github site

If compiling from GIT, enter the toplevel git folder (after you cloned rofi) and first run to generate the needed build files:

#+BEGIN_SRC sh
autoreconf --install
#+END_SRC

To build rofi, run the following steps:

#+BEGIN_SRC sh
mkdir build/
cd build/
## to install under the ~/bin location
../configure --prefix=/home/zeltak
make
make install
#+END_SRC
*** install ZSH
For Debian based distros:

#+BEGIN_SRC sh
$ sudo apt-get update -y
$ sudo apt-get install -y zsh
#+END_SRC
Get ohmyzsh
#+BEGIN_SRC sh
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh
#+END_SRC

Change your shell to zsh:

#+BEGIN_SRC sh
chsh -s `which zsh`
#+END_SRC

and then restart:

#+BEGIN_SRC sh
sudo shutdown -r 0
#+END_SRC
*** Team viewer on debian 64bit

On newer 64-bit DEB-systems with Multiarch-support (Debian 7) teamviewer_linux_x64.deb cannot be installed because the package ia32-libs is not available anymore on these systems. In this case you can use teamviewer_linux.deb instead.

In case you get the error “wrong architecture i386” you have to execute the following command lines:

    dpkg --add-architecture i386
    apt-get update

For further information: http://wiki.debian.org/Multiarch/HOWTO 
*** install source code pro debian
Download the archive from here. You can do it also using wget: Open a terminal (ctrl-alt-t or press the win key and type "terminal") and type

wget http://downloads.sourceforge.net/project/sourcecodepro.adobe/SourceCodePro_FontsOnly-1.017.zip
Unzip the archive (you can use Nautilus for that, or use the following command).

unzip SourceCodePro_FontsOnly-1.017.zip
Create a directory in your home directory called ".fonts" (either go to home in Nautilus and create a new folder, or type the following from the terminal)

mkdir -p ~/.fonts
If you already have that directory, don't worry.

Move the Open Type fonts (.otf) to the newly created .fonts directory. In command line, that would be

#+BEGIN_SRC sh
cp SourceCodePro_FontsOnly-1.017/OTF/.otf ~/.fonts/
#+END_SRC

If you haven't done it yet, open a terminal, and type

#+BEGIN_SRC sh
fc-cache -f -v
#+END_SRC

*** R on debian
**** curl errors
install libcurl4-gnutls-dev 

** gnome
*** Gnome 3
**** Enable the logout option 
to check state of logout:
#+BEGIN_SRC sh
dconf read /org/gnome/shell/always-show-log-out
#+END_SRC

to enable it:
#+BEGIN_SRC sh
dconf write /org/gnome/shell/always-show-log-out true
#+END_SRC

Then just restart the system and “Log out” is present after login.

you can also use the gui:

To make the logout option always appear:

First open up the dconf editor (fedora package “dconf-editor”), and navigate to the org > gnome > shell key.
Check the option “always-show-log-out” (pictured below in the screenshot), to always show the logout option. Note, however, that a restart of the shell or a reboot may be required for this option to start working.

#+DOWNLOADED: http://www.ryanlerch.org/blog/wp-content/uploads/2012/11/dconf.png @ 2013-10-21 21:02:53
 [[/home/zeltak/org/attach/images_2013/dconf_2013-10-21_21:02:53.png]]
**** Auto start a program on Gnome 3
press: alt + F2
Type: gnome-session-properties
Click on “+ Add”
Name: Application Name
Command: Application command e.g: skype
Click “+ Add” and you are done.
**** How to Get Rid of Huge Window Borders in Gnome 3
cd /usr/share/themes/Adwaita/metacity-1/
sudo vim metacity-theme-3.xml

replace all instances of 
title_scale="medium"
with
title_scale="small" 
**** top bar
***** Show date in top bar

By default GNOME displays only the weekday and time in the top bar. This can be changed with the following command. Changes take effect immediately.

#+BEGIN_SRC sh
gsettings set org.gnome.desktop.interface clock-show-date true
#+END_SRC

**** logging out
***** Eliminate delay when logging out

The following tweak removes the confirmation dialog and sixty second delay for logging out.

This dialog normally appears when you log out with the status menu. This tweak affects the Power Off dialog as well. This is not a system-wide change; it affects only the user who enters this command. The change takes effect immediately after entering the command:

#+BEGIN_SRC sh
gsettings set org.gnome.SessionManager logout-prompt 'false'
#+END_SRC

**** shell
***** Restarting the shell
After appearance tweaks you are often asked to restart the GNOME shell. You could log out and log back in, but it is simpler and faster to issue the following keyboard command. Restart the shell by pressing Alt + F2 then r then Enter 

***** restart shell from console (CLI)
 Sometimes shell extensions freeze the GNOME Shell. In this case a possible strategy is to switch to another terminal via Ctrl+Alt+F2 through Ctrl+Alt+F6, log in, and restart gnome-shell with:

# pkill -HUP gnome-shell

**** windows
***** Reduce title bar height
Reduce title bar height

global - edit:
file:/usr/share/themes/Adwaita/metacity-1/metacity-theme-3.xml
search for title_vertical_pad and reduce its value to a minimum of 0.
user-only- copy:
file:/usr/share/themes/Adwaita/metacity-1/metacity-theme-3.xml
to
file:/home/$USER/.local/share/themes/Adwaita/metacity-1/metacity-theme-3.xml
search for title_vertical_pad and reduce its value to a minimum of 0.
Then restart the GNOME shell.

To restore the original values, install the package gnome-themes-standard from the official repositories or remove /home/$USER/.local/share/themes/Adwaita/metacity-1/metacity-theme-3.xml.
 
***** Hide titlebar when maximized

To hide titlebar when windows are maximised, open file:
file:/usr/share/themes/Adwaita/metacity-1/metacity-theme-3.xml

search for the following tag and change its properties, children and the properties of its children tags as follows:

#+BEGIN_EXAMPLE
<frame_geometry name="max" has_title="false"
                           hide_buttons="true"
                           parent="normal"
                           rounded_top_left="false"
                           rounded_top_right="false">
    <distance name="left_width" value="0" />
    <distance name="right_width" value="0" />
    <distance name="left_titlebar_edge" value="0"/>
    <distance name="right_titlebar_edge" value="0"/>
    <distance name="title_vertical_pad" value="0"/>
    <border name="title_border" left="0" right="0" top="0" bottom="0"/>
    <border name="button_border" left="0" right="0" top="0" bottom="0"/>
    <distance name="bottom_height" value="0" />
</frame_geometry>
#+END_EXAMPLE

Once the file has been saved, restart GNOME shell by pressing Alt + F2 and then typing r. After this tweak, you may find it difficult to un-maximize a window when there is no titlebar to grab.

With suitable keybindings, you should be able to use Alt + F5, Alt + F10 or Alt + Space to remedy the situation.

To prevent metacity-theme-3.xml from being overwritten each time package gnome-themes-standard is upgraded, add its name to /etc/pacman.conf with NoUpgrade:

/etc/pacman.conf

... previous lines ...

# Pacman will not upgrade packages listed in IgnorePkg and members of IgnoreGroup
# IgnorePkg   =
# IgnoreGroup =

NoUpgrade = usr/share/themes/Adwaita/metacity-1/metacity-theme-3.xml    # Do not add a leading slash to the path

... more lines ...

To restore original Adwaita theme values, install the gnome-themes-standard package. 
**** dconf
***** search dconf
      #+NAME: 
      #+BEGIN_SRC sh
dconf dump / | grep SEARCH-TERM      
      #+END_SRC

**** keybinds
***** map change workspaces

#+BEGIN_EXAMPLE
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-1 "['<Super>1']"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-2 "['<Super>2']"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-3 "['<Super>3']"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-4 "['<Super>4']"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5 "['<Super>5']"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6 "['<Super>6']"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-7 "['<Super>7']"

gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-1 "['<Super><shift>1']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-2 "['<Super><shift>2']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-3 "['<Super><shift>3']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-4 "['<Super><shift>4']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-5 "['<Super><shift>5']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-6 "['<Super><shift>6']"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-7 "['<Super><shift>7']"

gsettings set org.gnome.desktop.wm.keybindings close "['<Super>k']"     
      #+END_EXAMPLE

***** map grave key
Certain hotkeys cannot be changed directly via the System Settings panel. In order to change these keys, use dconf-editor. An example of particular note is the hotkey Alt-Above_Tab. On US keyboards, this is Alt-`: is a hotkey often used in the Emacs editor. It can be changed by opening dconf-editor and modifying the switch-group key found in org.gnome.desktop.wm.keybindings. 
*** general
**** enable key shortcuts on menus

enable key shortcuts on menus
on Linux, in order to use customized key shortcuts, the GTK
configuration file ~/.gtkrc-2.0 should contain the following line:
 gtk-can-change-accels = 1

**** aspell

Aspell user added word location
 Q: hi. when you add your own words to aspell (IE "add environment to
dictionary option when right clicking) where is it stored? how do you
back that up on a comp upgrade?
 A: the build in spell checker for gnome is enchant. the files are
located at~/.config/enchant in case you want to back up your defined
user added words

**** gnome related sofwtare

Reset Evolution
 delete /home/.evolution
 delete /.gconf/apps/evolution
 issue this command:
 gconftool-2 --recursive-unset /apps/evolution
 
 PCMan as GNOME default file manager

 sudo mv /usr/bin/nautilus /usr/bin/nautilus.old
 
 to rename nautilus to nautilus old and
 
 sudo ln -s /usr/bin/pcmanfm /usr/bin/nautilus
 
 to create a symlink which will call pcmanfm instead of nautilus.
 
 NOTE: Replace /usr/bin/pcmanfm with the place where you have pcmanfm
installed. The default location is /usr/bin/local/pcmanfm
 Installing Aurora Gtk Engine
 1. Install build tools and all of the dependencies:
 sudo aptitude install build-essential libgtk2.0-dev
 2. Download Aurora Gtk Engine 1.3 from here and save it to ~/Desktop
folder.
 3. Extract the tarball files:
 cd ~/Desktop
 tar jxvf Aurora-1.3.tar.bz2
 tar zxvf aurora-1.3.tar.gz
 4. Configure, make and install:
 cd aurora-1.3/
 ./configure --prefix=/usr --enable-animation
 make
 sudo make install

**** system

How to enable Ctrl+Alt+Del to open System Monitor in GNOME
 gconftool-2 -t str --set
/apps/metacity/global keybindings/run command 9 <Control><Alt>Delete
 gconftool-2 -t str --set /apps/metacity/keybinding commands/command 9
gnome-system-monitor
 Special icons placements
 keepass /usr/share/keepass
 gpodder svg in /usr/share/icons/hicolor/scalabe/apps/gpooder.svg
 Smplayer /usr/share/smplayer/themes
 Pidgin /usr/share/pixmaps/pidgin
 
 Run a program as root Gnome!
 gksudo k3b
 OR
 Alt-F2 and then inside the launch menu:
 gksudo k3b
 
How to refresh GNOME panel
 killall gnome-panel
 How can I install an Hebrew dictionary in gnome

 Firstly, install the Hebrew dictionary package by executing the
following command in a terminal:
 sudo apt-get install aspell-he
 Next, in Evolution go to Edit - Preferences - Composer Preferences,
select the Spell Checker tab, and ensure that the Hebrew language is
ticked.
 Gnome Autostart menu
 ~/.gnome2/session-manual
 Gconf keyboard shortcuts
 # ext double click the "apps" folder
 # Next double click the "metacity" folder
 # Finally click the global keybindings folder
 
 Disable autoplay in gnome
 Code:
 gconf-editor
 Navigate to desktop>gnome and highlight volume manager. In the
right-hand pane scroll down to autoplay vcd and clear that checkbox.
You can then close the editor and test to see if VCD autoplay has
stopped. If this works (it should), you can then re-enable autoplay for
the rest of your media.
 Delay startup programs gnome
 create a text file thats executable with this
 sleep 15; xmms
 placed the code in a file then added it to System -> Prefs -> Sessions
as sh <filename>
 
 create keyboard shortcut gnome
 open gconf-editor
 then
 Configuration Editor > Apps > Metacity
 You'll see two menu entries there:
 Global keybindings
 Keybinding commands
 In Keybinding Commands, pick an empty command--let's say it's
Command 1.
 Double-click the empty space next to it and type
 Code:
 3ddesk
 Then, in global Keybindings, pick the same command, Command 1 and
double-click on the empty space there, and type your keyboard shortcut.
You can't just press Control-Shift-3, for example. You have to actually
type the words
 Code:
 <Control><Shift>3
 keyboard layout Alt+Shift in Ubuntu?
 You can choose the key combination in System>Preferences>Keyboard,
Layout Option tab>Group Shift/Lock Behavior. Find 'Alt+Shift changes
group' and tick it.
 I think it is Alt+Alt by default.
 

**** get rid of system proxy in gnome

delete this file
 /home/zeltak/.gconf/system/http proxy/%gconf.xml
 to erase all previous proxies
*** nautilus

**** disable auto start media gnome

Disable auto start media gnome
 Nautilus => Edit => Preferences => Media and you should be able to
disable the behavior

*** gnome panel

**** tray icons

***** icons locations to change

Here are the places to change program icons for the traykeepassx:
 move png's to:
 /usr/share/keepassx/icons
 Fusion-Icon:
 1. Copy the icon to /usr/share/icons/Humanity/apps/24/ (ALT+F2 : gksu
nautilus)
 2. In terminal, run "sudo gtk-update-icon-cache
/usr/share/icons/Humanity"
 3. Restart Fusion-Icon
 gmpc
 change in the /usr/share/gmpc/icons folderkeepnote
 replace all icons in:
 /usr/share/pyshared/keepnote/images
 NOTE:when using a smaller panel, for best result replace 32x32 with a
22x22 icon size.klipper
 replace icons named klipper.png in:
 /usr/share/icons/oxygen/22x22/apps/klipper.png
 and
 /usr/share/icons/oxygen/16x16/apps/klipper.png
 issue
 sudo update-icon-caches /usr/share/icons/oxygen/
 and then open klipper again
 Weather:

 1. Copy the icons from 16 to /usr/share/icons/Humanity/status/16/
(ALT+F2 : gksu nautilus)
 2. Copy the icons from 48 to /usr/share/icons/Humanity/status/48/
(ALT+F2 : gksu nautilus)
 3. In terminal, run "sudo gtk-update-icon-cache
/usr/share/icons/Humanity"
 4. In terminal, run "killall gnome-panel"Shutter
 change
 /usr/share/pixmaps/
 keyring icons
/usr/share/icons/Humanity/apps/24/
 Autokey
change
 /usr/share/pixmaps/
 (both svg and png)X-tile

 change
 /usr/share/pixmaps/
 (both svg and png)

**** chnage panel clock to custom view

The default clock set up is, quite frankly, lame. You can turn it into
something of beauty with a few basic tweaks.
 Run gconf-editor
 (ALT+F2 > gconf-editor)
 Open up
 apps> panel> applets> clock screen> prefs
  this may be called something else; open up any applet until you see
the correct 'values' in the right-hand screen.
 [[nixx_files/Image_sX.png]]
 1) Double click on theformat and change it to 'custom'
 2) Then paste one of the 'styles' below into the custom format field.
 <sup><span font desc="Droid Sans 10" color="#FFFFFF"
weight="bold">%I:%M %p</span></sup>%n<sub><span rise="3000"
font desc="Droid Sans 9.5" color="#FFFFFF" weight="bold">%a %d
%b</span></sub>
 or for grey (humanity):
 <sup><span font desc="Droid Sans 10" color="#606060"
weight="bold">%I:%M %p</span></sup>%n<sub><span rise="3000"
font desc="Droid Sans 9.5" color="#606060" weight="bold">%a %d
%b</span></sub>
 [[nixx_files/Image_sX_002.png]]
 or for smaller panels
 <sup><span rise="1000" font desc="Droid Sans 6.5" color="#878787"
weight="normal">%a %d %b</span></sup>%n<sub><span rise="6000"
font desc="Droid Sans 7.5" color="#878787" weight="bold">%I:%M
%p</span></sub>

**** how can i reset to default panel

how can I reset to default panel

 gconftool-2 --recursive-unset /apps/panel
 rm -rf ~/.gconf/apps/panel
 pkill gnome-panel

** openbox

*** irssi style window switch

IrssiStyleFocus

 Irssi-style window switching is the use of a modifier key + a number
key to switch to a specific window. For example, one could set up W-3 to
switch to the third open window. This is easily accomplished in Openbox
by setting up keybindings to execute this little external
focus-switching program like so:
 <keybind key="W-1">
 <action name="execute">
 <execute>irssi-focus 0</execute>
 </action>
 </keybind>
 <keybind key="W-2">
 <action name="execute">
 <execute>irssi-focus 1</execute>
 </action>
 </keybind>
 and so on.

*** example of per-app settings 2

Example of per-app settings

 the per app setting need to be inside the <applications> mark and
CLOSEDwith the </applications> mark !!!!
 inside each app setting starts with a <application name="screen"> and
ends with a </application> mark!
 Example of per-app settings:
 <!-- my xterm with screen in it must always be on desktop 2,
 maximized and below everything else -->
 <application name="screen">
 <desktop>2</desktop>
 <maximized>yes</maximized>
 <layer>below</layer>
 </application>
 <!-- i want firefox on desktop 3 and maximized -->
 <application name="Firefox">
 <desktop>3</desktop>
 <maximized>yes</maximized>
 </application>
 <!-- MPlayer will follow me around when i switch desktop.
 that way i can always watch my vids when coding.
 same goes for Realplayer -->
 <application class="MPlayer">
 <desktop>all</desktop>
 <layer>above</layer>
 </application>
 <application class="Realplay.bin">
 <desktop>all</desktop>
 <layer>above</layer>
 </application>

*** have a delay in launch for correct terminal apps maximazation

Delay in launch for correct terminal apps maximization
because you are working in an XML document, you will need to use markup
for the ampersands. I have tested the code block below and it seems to
work for me:
 <keybind key="W-m">
 <action name="Execute">
 <startupnotify>
 <enabled>true</enabled>
 <name>mocp</name>
 </startupnotify>
 <command>terminator --command="sleep 2s &amp;&amp; mocp"
-m</command>
 </action>
 </keybind>
 P.S. Do not forget to restart or reconfigure Openbox after saving your
changes to rc.xml

*** volume hot keys on eee pc

</keybind>
 <keybind key="C-A-W-x">
 <action name="Execute">
 <command>xkill</command>
 </action>Volume hot keys on Eee PC
 to add fn volume key functionality to your eee pc, add these lines to
your rc.xml
 <keybind key="XF86AudioLowerVolume">
 <action name="Execute">
 <execute>amixer -q set PCM 10- unmute</execute>
 </action>
 </keybind>
 <keybind key="XF86AudioRaiseVolume">
 <action name="Execute">
 <execute></execute>
 </action>
 </keybind>
 <keybind key="XF86AudioMute">
 <action name="Execute">
 <execute>amixer -q set PCM 0</execute>
 </action>
 </keybind>

*** help actions - openbox.pdf

[[nixx_files/attach/help_actions%20-%20openbox.pdf][Attachment #02
(help actions - openbox.pdf)]]

*** configure alt-tab to cycle through all workspaces

configure alt-tab to cycle through all workspaces
Change:
 
 <keybind key="A-Tab">
 <action name="NextWindow"/>
 </keybind>
 to:
 
 <keybind key="A-Tab">
 <action name="NextWindow"/>
 <allDesktops>yes</allDesktops>
 </keybind>
 in ~/.config/openbox/rc.xml

*** hebrew

Get hebrew indicator and hebrew switch

 add this to startup.sh:
 #launch keyboard switch
 setxkbmap -option grp:switch,grp:shifts toggle,grp led:scroll us,il &
 (sleep 10s && fbxkb) &
 add this to the rc openbox file (keys can be changed of course)
 <keybind key=W-F11>
 <action name=Execute>
 <startupnotify>
 <enabled>false</enabled>
 <name>Hebrew Keyboard</name>
 </startupnotify>
 <command>setxkbmap -model pc105 -layout il</command>
 </action>
 </keybind>
 <keybind key=W-F12>
 <action name=Execute>
 <startupnotify>
 <enabled>false</enabled>
 <name>English Keyboard</name>
 </startupnotify>
 <command>setxkbmap -model pc105 -layout us</command>
 </action>
 </keybind>

*** How do I remove the decorations from all my windows



You can use the per-app settings to remove decorations from all your
 windows, or any group of them. The per-app settings are in the
 <applications> section of your ~/.config/openbox/rc.xml (or the
system-wide /etc/xdg/openbox/rc.xml).Here is an example that would
remove decorations from all of your windows except Firefox:

<applications>
 <!-- match all windows, and remove their decorations -->
 <application class="">
 <decor>no</decor>
 </application>
 <!-- but give decorations back to Firefox -->
 <application name="Firefox">
 <decor>yes</decor>
 </application>
 </applications>
 Pasted from
<[[http://openbox.org/wiki/Help:FAQ][http://openbox.org/wiki/Help:FAQ]]>

*** file associations

File associations
 Because Openbox and the applications you use with it are not
well-integrated you might run into the issues with your browser. Your
browser may not know which program it is supposed to use for certain
types of files.
 A package in the AUR called gnome-defaults-list contains a list of
file-types and programs specific to the Gnome desktop. The list is
installed to /etc/gnome/defaults.list.
 Open this file with your text-editor. Now you can replace a given
application with the name of the program of your choosing. For example,
totem <=> vlc or eog <=> mirage. Save the file to
~/.local/share/applications/defaults.list.
 Another way of setting file associations is to install package
perl-file-mimeinfo from the repository and invoke mimeopen like this:
 mimeopen -d /path/to/file
 You are asked which application to use when opening /path/to/file:
 Please choose a default application for files of type text/plain
 1) notepad (wine-extension-txt)
 2) Leafpad (leafpad)
 3) OpenOffice.org Writer (writer)
 4) gVim (gvim)
 5) Other...
 Your answer becomes the default handler for that type of file. Mimeopen
is installed as /usr/bin/perlbin/vendor/mimetype.

*** Xprop values for applications

Xprop values for applications
 If you use per-application settings frequently, you might find this
bash alias handy:
 alias xp='xprop | grep "WM WINDOW ROLE\|WM CLASS" && echo
"WM CLASS(STRING) = \"NAME\", \"CLASS\""'
 To use, run xp and click on the running program that you'd like to
define with per-app settings. The result displays only the info that
Openbox requires, namely the WM WINDOW ROLE and WM CLASS (name and
class) values:
 [thayer@dublin:~] $ xp
 WM WINDOW ROLE(STRING) = "roster"
 WM CLASS(STRING) = "gajim.py", "Gajim.py"
 WM CLASS(STRING) = "NAME", "CLASS"
 Xprop for Firefox
 For whatever reason, Firefox and like-minded equivalents ignore
application rules (e.g. <desktop>) unless class="Firefox" is used. This
applies irrespective of whatever values xprop may report for the
program's WM CLASS.

*** assign to desktop examples

<application class="kupfer.py">
 <desktop>all</desktop>
 </application>
 <application class="URxvt" name="urxvt"
type="normal"><desktop>2</desktop><maximized>yes</maximized></application>
 <application class="firefox" name="Firefox"
type="normal"><desktop>3</desktop><maximized>yes</maximized></application>
 <application name="mpd z"
type="normal"><desktop>4</desktop><maximized>yes</maximized></application>
 <application class="Worker" name="Worker"
type="normal"><desktop>5</desktop><maximized>yes</maximized></application>
 <application name="ssh home"
type="normal"><desktop>6</desktop><maximized>yes</maximized></application>
 <application class="Notecase" name="notecase"
type="normal"><desktop>7</desktop><maximized>yes</maximized></application>
 <application class="Gvim" name="gvim"
type="normal"><desktop>8</desktop><maximized>yes</maximized></application>

*** find out window name/class name

issue:
 obxprop | grep "\^ OB APP"
 then pick a window
  OB APP TYPE(UTF8 STRING) = "normal"
  OB APP CLASS(UTF8 STRING) = "URxvt"
  OB APP NAME(UTF8 STRING) = "urxvt"

*** helper apps

**** obconf

**** obkey

used to setup shortcuts and write it to the rc.xml file

**** obmenu

**** obm-xdg

creates xdg mime
 Obm-xdg
 obm-xdg is a command-line tool that comes with Obmenu. It generates a
categorized sub-menu of installed GTK/GNOME applications.
 To use obm-xdg with other menus, add the following line to
~/.config/openbox/menu.xml:
 <menu execute="obm-xdg" id="xdg-menu" label="xdg"/>
 Then add the following line under your 'root-menu' entry where you want
to have the menu appear:
 <menu id="xdg-menu"/>
 To use obm-xdg by itself create ~/.config/openbox/menu.xml and add
these lines:
 <openbox menu>
 <menu execute="obm-xdg" id="root-menu" label="apps"/>
 </openbox menu>
 Then run openbox --reconfigure to refresh the Openbox menu. You should
now see a sub-menu labeled xdg in your menu.

**** OBApps

configure application settings

*** keychains

Key chains

You can create Emacs-style key chains simply by nesting key bindings
inside each other. Here's an example:

<keybind key="C-f">
 <keybind key="x">
 <action name="ToggleMaximizeFull"/>
 </keybind>
 <keybind key="s">
 <action name="ToggleShade"/>
 </keybind>
 </keybind>

In order to maximize a window using this key binding you would press
 the Control key and the "f" key together (which is written as C-f),
then
 you would release everything and press the "x" key.To shade a window,
you would press Control and the "f" key together, and then release
everything and press the "s" key.You can create key chains within key
chains, with as many levels as you want, if you wish to.
 
 The key chain dialog

[[nixx_files/KeychainDialog.png]][[http://openbox.org/wiki/Image:KeychainDialog.png][]]
 [[http://openbox.org/wiki/Image:KeychainDialog.png][T]]he key chain
dialogWhen you start a key chain, after a short delay, a small dialog
will
 appear in the top left corner of the screen to show you where you are
in
 the key chain.As long as you are in a key chain, other key bindings
will not work except the ones found inside the key chain.
 Cancelling key chains
 If you leave Openbox in a key chain state for too long without
 completing it, Openbox will cancel the key chain and restore your
normal
 key bindings.You can also use the "C-g" (Control key and "g" key
together), in
 the default configuration, to cancel any key chain which you are in.
 The choice of this key is controlled by the <chainQuitKey> in the
 <keyboard> section of the rc.xml configuration file.The default
<chainQuitKey> is defined as this:<keyboard>
 <chainQuitKey>C-g</chainQuitKey>
 ...
 </keyboard>
 Pasted from
<[[http://openbox.org/wiki/Help:Bindings][http://openbox.org/wiki/Help:Bindings]]>

*** Openbox menu generator

Residing in the AUR as obmenugen-bin, Openbox menu generator creates the
menu file from .desktop files. Obmenugen provides a text file which
filters (hides) menu items using basic regex.
 $ obmenugen # Create a menu file
 $ openbox --reconfigure # To see the menu you generated

*** look and feel

**** change gtk themes and icons



Use the gtkrc-2.0 and gtkrc.mine filesY
 ou can force all Gtk applications to use a particular theme, icon and
font by specifying those in the //home/USERNAME/.gtkrc-2.0/ and
//home/USERNAME/.gtkrc.mine/ files.To specify a Gtk theme, add the
following to your ~/.gtkrc-2.0 file (create it if it doesn't exist):

For themes you installed in your home directory, the path to your gtkrc
file is generally //home/USERNAME/.themes/THEMENAME/gtk-2.0/gtkrc/. For
themes installed system-wide (as with themes installed through Synaptic
or apt-get), this is //usr/share/themes/THEMENAME/gtk-2.0/gtkrc/In this
file, you can also specify what font or icon theme Gtk
 applications should use. If you use Gtk-chtheme or Gtk-theme-switch (as
 in the first method) it is best to specify your icon and font details
in
 the ~/.gtkrc.mine file (in //home/USERNAME//), though, as changing
 the theme with these applications overrides the settings in the
 ~/.gtkrc-2.0 file, but leaves the ~/.gtkrc.mine untouched. Make sure
you
 specify the path to your ~/.gtkrc.mine in your ~/.gtkrc-2.0 (as shown
 above) and add the following to that file (create it if it doesn't
exist
 yet):

style "Sans"
 {
 font name = "Sans 10"
 }
 widget class "" style "Sans"
 gtk-font-name = "Sans 10"
 gtk-icon-theme-name = "nameoficontheme"
 gtk-toolbar-style = GTK TOOLBAR ICONS

Change 'Sans' and '10 with the font name and size of your choice.
 Make sure the name of your icon theme matches the name of the folder
 where they are stored, either in //home/USERNAME/.icons/ or
//usr/share/icons//, or it will not display.The last line allows you to
change the toolbar style of Gtk
 applications. You can choose from the following options (you can remove
 the comments):
 gtk-toolbar-style = GTK TOOLBAR ICONS#Only icons
 gtk-toolbar-style = GTK TOOLBAR TEXT#Only text
 gtk-toolbar-style = GTK TOOLBAR BOTH#Both icons and text;
default, used if nothing is specified.
 gtk-toolbar-style = GTK TOOLBAR BOTH HORIZ#Icons and text next
to the iconsIf you want smaller icons in the toolbar,
 
 
 add the following line: gtk-toolbar-icon-size =
GTK ICON SIZE SMALL TOOLBARIf unspecified, the icons in the toolbar
will be large. For more Gtk options, see the
[[http://www.gtk.org/api/2.6/gtk/GtkSettings.html][Gtk+ Reference
Manual]]If you want to easily change or add keyboard shortcuts
(accelerators)
 to entries in the menus of Gtk applications by pressing the new
 keybinding while you select the menu entry, add the following to that
 file:gtk-can-change-accels = 1Note that the settings in the
~/.gtkrc-2.0 file will affect all Gtk
 applications run with your username, even when logged in another window
 manager or desktop environment.
 Pasted from
<[[http://urukrama.wordpress.com/openbox-guide/#Gtkthemes][http://urukrama.wordpress.com/openbox-guide/#Gtkthemes]]>

*** Settings for specific windows (Per-application settings)

Settings for specific windows (Per-application settings)
 Per-application settings are specified in the <applications> section of
rc.xml
 Syntax
 A per-app setting is specified as follows:
 <applications>
 ...
 <application name="NAME" class="CLASS" role="ROLE" title="TITLE"
type="TYPE">
 ...PROPERTIES...
 </application>
 ...
 </applications>
 A complete list of possible properties to set is in the default rc.xml
file, which you can find in /etc/xdg/openbox/rc.xml.
 Finding the class, name, role, title and type parameters
 Per-application settings let you match on what we call class, name,
role, title and type. These can all be determined with the obxprop
utility. Run obxprop | grep "\^ OB APP" to see the value of these five
properties. The output will look like
  OB APP TYPE(UTF8 STRING) = "normal"
  OB APP CLASS(UTF8 STRING) = "Google-chrome"
  OB APP NAME(UTF8 STRING) = "google-chrome"
  OB APP ROLE(UTF8 STRING) =
  OB APP TITLE(UTF8 STRING) = "Google Chrome"
 You have to specify at least one of class and name. Optionally, you may
specify more than one, in which case they must all match for the rule to
be applied. You may also optionally specify roll and type. Note that the
title matched is the one when the window was mapped. Many programs set
the title just after mapping the window which means the value Openbox
sees as it is determining which rules to apply is sometimes empty or
something like "Untitled". The  OB APP TITLE property will show the
value that Openbox used, not the current title.
 Matching windows with wildcards
 When specifying the name, class, or role for a rule, you can use simple
wildcard matching with the "" and "?" characters. A "" matches any
number of characters and a "?" matches any single character.
 Matching against multiple rules
 As well, multiple rules can be applied to the same window. This lets
you do more with less writing. For instance you could write one rule to
match against all windows and then later rules could further change
things for more specific windows. The rules are matched in the order
they appear in your configuration file, so later rules will override
previous rules if they both specify the same setting for a window.
 Example of per-app settings
 Here's an example from rc.xml that uses wildcards, and matches multiple
rules against windows:
 <applications>
 <!-- match all windows, and remove their decorations -->
 <application class="">
 <decor>no</decor>
 </application>
 <!-- orage does get decorations though.
 calender app, see http://www.xfce.org/projects/orage/ -->
 <application class="Orage">
 <decor>yes</decor>
 </application>
 <!-- my xterm with screen in it must always be on desktop 2,
 maximized and below everything else -->
 <application name="screen">
 <desktop>2</desktop>
 <maximized>yes</maximized>
 <layer>below</layer>
 </application>
 <!-- i want firefox on desktop 3 and maximized -->
 <application name="Firefox">
 <desktop>3</desktop>
 <maximized>yes</maximized>
 </application>
 <!-- MPlayer will follow me around when i switch desktop.
 that way i can always watch my vids when coding.
 same goes for Realplayer -->
 <application class="MPlayer">
 <desktop>all</desktop>
 <layer>above</layer>
 </application>
 <application class="Realplay.bin">
 <desktop>all</desktop>
 <layer>above</layer>
 </application>
 <!-- i want nwn always maximized, same for openttd -->
 <application name="Neverwinter Nights Client">
 <maximized>yes</maximized>
 </application>
 <application class="openttd">
 <maximized>yes</maximized>
 </application>
 <!-- A is for Amarok, A is the 1st letter in the alphabet, so
 move Amarok to the first desktop -->
 <application class="Amarokapp">
 <desktop>1</desktop>
 <maximized>yes</maximized>
 </application>
 <!-- Easytag is obviously something which belongs on desktop 6, duh
-->
 <application name="easytag">
 <desktop>6</desktop>
 <maximized>yes</maximized>
 </application>
 </applications>

*** erros/bugs

**** loose mpd related hotkeys

restart mpd
 issue:

killall mpd

 and

mpd&

**** java crashing openbox

 look at rc.xml and make sure there is no window rules for java apps

** subtle

*** install

**** install on ubuntu

Since a package for ubuntu does not yet exist , you need to compile
sublle to get it up and runing
 Note that these instructions are tested on Mavrick (10.10)
 1) Downloaded the latest stable package from

[[http://subforge.org/projects/subtle/files][http://subforge.org/projects/subtle/files]]
 or use mercurial for the latest version:

sudo apt-get install mercurial

 and then issue:

hg clone
[[http://hg.subforge.org/subtle][http://hg.subforge.org/subtle]]

 2) using apt-get (as root) instal: libx11-dev, ruby1.9.1 ,
ruby-dev1.9.1, libruby1.9.1 and rake
 sudo apt-get install libx11-dev rake ruby1.9.1 ruby-dev1.9.1
libruby1.9.1
 3) change dir into the subtle folder (stable or latest) and issue rake:
(rake1.9.1 for the latest version):
 rake1.9.1
 this should configure and get you ready for install
 4) issue the following command to install it:
 sudo rake install
 5)add a subtle session to your xsessions:
 sudo nano /usr/share/xsessions/subtle.desktop
 and add this:
 [Desktop Entry]
 Encoding=UTF-8
 Name=subtle
 Comment= subtle dynamic tiling window manager
 Exec=subtle
 Type=XSession
 6)reboot and your good to go..enjoy subtle :)

**** install in arch

1)install subtle-hg (the git version) through AUR
 2) add an entry to your /etc/X11/sessions named subtle.desktop:
 [Desktop Entry]
 Encoding=UTF-8
 Name=subtle
 Comment= subtle dynamic tiling window manager
 Exec=subtle
 Type=XSession
 3)edit kdmrc:
 nano usr/share/config/kdm/kdmrc
 and add this in the sessiondir section

SessionsDirs=/usr/share/config/kdm/sessions,/usr/share/apps/kdm/sessions,/etc/X11/sessions,/usr/share/xsessions
 logout and choose subtle in the KDM

*** check config files for errors

for the subtle.rb file issue:
 #subtle -k
 to check sublets issue:
 #ruby -c ./sublet.rb
 for example:
 ruby -c ./clock.rb

*** sublets

to install sublets use sur
 #sur install clock
 to check what can be user configured use:
 sur config clock

**** sur config

use sur config to config sublets IE:
 $sur config gmail
 Name Type Default value Description
 foreground string Sublet fg color Default foreground color (#rrggbb)
 background string Sublet bg color Default background color (#rrggbb)
 text fg string Sublet fg or foreground color Default text color
(#rrggbb)
 icon fg string Sublet fg or foreground color Default icon color
(#rrggbb)
 interval integer Check interval
 user string Mail address for you gmail account
 pass string Account password
 normal string Normal background
 urgent string New messages background

**** sur notes

see what info is related to a sublet

**** see what can be configured in a subket

issue
 sur config SUBLETNAME
 ie:
 sur config clock

**** install a specific version

use this:
 sur install -v 0.41 mpd

**** conky sublet

This sublet parses the output data from conky and displays it in the
subtle
 panel. In order for this to work, subtler needs to read the data from
the pipe
 and send it to subtle. This can be done with following shell command:
 conky | subtler -sD conky -
 Currently supported substitutions:
 foreground (\^fg)
 image (\^i)
 >>> Updated local cache with 11 entries

***** colors

You need to escape the #:
 \^fg(\#E0E0E0)${time %H:%M}\^fg()

**** mpd subltet

This sublet displays the current track playing in mpd along with control
 buttons like play and stop and random and shuffle mode.
 Dependent on the mpd version (>= 0.16), a running database update will
be
 indicated as well.
 The output of the sublet can be customized by a format string.
Following
 fields are allowed alongside all kind of text, icons and colors:
 %note% - Predefined icon
 %artist% - Name of the artist
 %album% - Name of the album
 %title% - Name of the track
 %track% - Track number of current album
 %id% - mpd playlist id
 Examples:
 %note%%artist% - %album
 %artist% :: %album% :: %title%
 Empty fields are just replaced by 'n/a'.

**** store password in secure way

Instead of storing the password in your subtle.rb, you could just create
a file containing the password, and
 read it in your subtle.rb
 use:
 echo -n "my password" > password And in subtle.rb, replace
"my password" with File.read("password")

*** get heberew input support

either issue the following command in term:
 setxkbmap il -model pc105
 and
 setxkbmap us -model pc105
 OR
 its better to create a dmenu entry for that and bound it to a script

*** split 4 terms in one view and auto launch in startup

in .Xinitrc put the exec commands:
 urxvt -name topleft &
 urxvt -name topright &
 urxvt -name botleft &
 urxvt -name botright &
 in subtle config (subtle.rb) put these:
 # Tags
 tag "topleft" do
 match :instance => "topleft"
 gravity :top left
 end
 tag "topright" do
 match :instance => "topright"
 gravity :top right
 end
 tag "botleft" do
 match :instance => "botleft"
 gravity :bottom left
 end
 tag "botright" do
 match :instance => "botright"
 gravity :bottom right
 end
 # Views
 view "layout", "topleft|topright|botleft|botright"

*** make clients appear on all views

to make a client (app) appear on all views add this to the subtle.rb
 tag "stick" do
 match "mplayer|feh"
 float true
 stick true
 urgent true
 end
 now in the above example mplayer and feh will appear on all windiows

*** matching

1)match :name will match xprops WMNAME, while match "BLABLA" will match
WMCLASS
 2) subtler: Run subtler -cl and look for the matching line:
 0x800007  1 100x100 5 0 --- xterm (XTerm)

*** subtler

Subtler
 Subtler is a commandline tool that allows to interact with a EWMH/NetWM
compatible window manager and especially with subtle. It uses many
features of subtle like adding new tags - but other stuff will also work
with every other compliant wm.
 Pattern
 Matching works either via plain, regex (see regex) or window id if
applicable. If a pattern matches more than once ONLY the first match
will be used.
 If the PATTERN is - subtler will read from stdin.
 
 Format
 Client listing: <window id> [-] <view id> <geometry> <gravity>
<screen> <flags> <name> (<class>)
 Gravity listing: <gravity id> <geometry>
 Screen listing: <screen id> <geometry>
 Tag listing: <name>
 View listing: <window id> [-] <view id> <name>
 Examples
 subtler -c -l List all clients
 subtler -t -a subtle Add new tag 'subtle'
 subtler -v subtle -T rocks Tag view 'subtle' with tag 'rocks'
 subtler -c xterm -G Show tags of client 'xterm'
 subtler -c -x -f Select client and show info
 subtler -c -C -y 5 Set gravity 5 to current active client
 subtler -t -f term Show every client/view tagged with 'term'
 For a complete list of commands please have a look at subtler --help.

*** keys

**** chaining

Chaining

 Chains are a combination of keys and modifiers to one or a list of keys
and can be used in various ways to trigger an action.
 
 Default: Add modifiers to a key and use it for a grab
 Example: grab "W-Return", "urxvt"
 Chain: Define a list of grabs that need to be pressed:
 Example: grab "C-y Return", "urxvt"

**** classic alt-tab behivour

use this code:
 grab "A-Tab" do Subtlext::Client.recent[1].focus; end

**** add a grab to move cleints to specific views

grab "S-W-1" do |c| c.tag("View1"); end
 
 The tag View1 must exist in order to do that, otherwise you need to
create it first:
 
 Subtlext::Tag.new("View1").save

*** gravity

Understanding gravities
 Example: 0, 55, 100, 45
 X for placement in X direction
 Y for placement in Y direction
 WIDTH for window width
 HEIGHT for window height
 So it starts drawing at 55% from top (Y) and makes it 45% high (HEIGHT)
 More Examples
 [[nixx_files/Image_RUzmD4CqitohXx2wQhyFfg_0001.png]]

*** errors/bugs

**** tags not working anymore

make sure that there are no more then 31 tags
 subtle currently cant have more then 31 tags

** Tiling WM's
*** General
**** xprop-check window name/class					:Fav:
issue the following in the term:

#+BEGIN_SRC sh
xprop

#and look for WM class
WM CLASS(STRING) = "spacefm", "Spacefm"
#first entry is instance
#2nd entry is class
#+END_SRC
**** get position and size of applications
use:
#+BEGIN_SRC sh :results none
wmctrl -lG
#+END_SRC 
**** using xev to find key id/name

issue this command in the command line:

 xev | grep -A2 --line-buffered '\^KeyRelease' | sed -n '/keycode
/s/\^.keycode \([0-9]\). (., \(.\)).$/\1 \2/p'

 for example
 156 XF86Launch1
 127 Pause
 123 XF86AudioRaiseVolume
 122 XF86AudioLowerVolume

**** conky

to start conky use something like this:
 exec conky -c /home/zeltak/.i3/conki3 | dzen2 -e '' -bg'#202020' -h 15
-w 700 -x 600 -y 0 -ta r

**** launch other WM from command line (kde, gnome etc..)
to launch other WM from command line (kde, gnome etc..) issue:
 xinit /usr/bin/startkde -- :2
 or if you only want to run it standalone:
 xinit /usr/bin/startkde -- :0

**** default applications
***** xterm/urxvt
change in .Xdefaults
URxvt.url-select.launcher: dwb
URxvt.urlLauncher: /usr/bin/dwb
 
*** java
**** if java windows dosent load correctly
JAVA AWT WM NONREPARENTING=1 APP

AVA AWT WM NONREPARENTING=1 filebot

another option is this:

AWT TOOLKIT=MToolkit APP
 This changes the default tookit of Java to MToolkit, which is known to
work with non-reparenting windows managers like subtle. Depending on
your OpenJDK version and your architecture this may either lead to a
segmentation fault or your OpenJDK just has no support for MToolkit

**** use anti alias fonts
For example, to use system anti-aliased fonts and make swing use the GTK look and feel:

#+BEGIN_SRC sh
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel' 
#+END_SRC

%Tip-this should go inside the .bashrc/.zshrc% 

** i3
*** chaining commands
Commands can be chained by using ; (a semicolon). So, to move a window to a specific workspace and immediately switch to that workspace, you can configure the following keybinding:
Example:
#+BEGIN_SRC sh
bindsym $mod+x move container to workspace 3; workspace 3
#+END_SRC
    
*** i3-msg
**** use msg to focus on app

#+BEGIN_SRC sh
i3-msg '[instance="xfce4-terminal"] focus'
#+END_SRC
**** use i3-msg to change layout

@Warning-dont forget to put '' between the command@ 
#+BEGIN_SRC sh
i3-msg 'layout tabbed'
#+END_SRC

*** scrathcpad

%Tip% take a look here for complex examples:

https://faq.i3wm.org/question/138/multiple-scratchpad/

There are two commands to use any existing window as scratchpad window. move scratchpad will move a window to the scratchpad workspace. This will make it invisible until you show it again. There is no way to open that workspace. Instead, when using scratchpad show, the window will be shown again, as a floating window, centered on your current workspace (using scratchpad show on a visible scratchpad window will make it hidden again, so you can have a keybinding to toggle). Note that this is just a normal floating window, so if you want to "remove it from scratchpad", you can simple make it tiling again (floating toggle).
As the name indicates, this is useful for having a window with your favorite editor always at hand. However, you can also use this for other permanently running applications which you don’t want to see all the time: Your music player, alsamixer, maybe even your mail client…?
Syntax:

'move scratchpad'
'scratchpad show'

#+BEGIN_SRC sh
#Examples:

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Show the sup-mail scratchpad window, if any.
bindsym mod4+s [title="^Sup ::"] scratchpad show

#auto move a window to a scratchpad
for_window [class="KeePass2"] move to scratchpad
#+END_SRC

*** bind keys

one can use either keycode (see [[#1j48GzRPTGBvo.qeYq0t1w][xev]] on how
to get key codes) and then in config use bindcode
 bindcode $mod+49 workspace 1:H1
 the same can be done using names instead of codes
 bindsym $mod+1 workspace 2:Terms

*** scripts
***** i3 scripts
i3-wm-scripts
i3 Window Manager Scripts
These are python scripts that read/write to i3 using i3-msg. By using
regular expressions it is possible to search for windows with particular
names. This makes it much easier to jump to a particular window. Just
what you always dreamed!
 Dependencies: i3, i3-msg (distributed with i3), dmenu
 nextmatch.py This script takes one regular expression input e.g.
'(fire|chrom)' and searches for that name in the list of available
windows. If there is a match then it jumps to the match. If you are
already at a match it goes to the next match (or stays if there is only
one)
 nextfind.py This script works similarly to the previous but creates a
dictionary of available windows, complete with repeated names and
presents that list using dmenu. If you select one a window that is
active and there are multiple with the same name then it jumps to the
next one, otherwise it stays at the current.
 Example usage in my .i3/config file:
 To search for a hardcoded program:
 bindsym $mod+q exec python ~/bin/nextmatch.py vim
 To search for a set of hardcoded programs: (I use this to jump to a
webbrowser)
 bindsym $mod+w exec python ~/bin/nextmatch.py '(chromium|firefox)'
 To search for a a program by name:
 bindsym $mod+e exec python ~/bin/nextfind.py
 to mark a window for jumping back to
 bindsym $mod+m exec ~/bin/mark
 to use dmenu to jump back to a particular program
 bindsym $mod+g exec ~/bin/goto

*** workspaces/app configs
***** mathcing window/clients by names					:Fav:
The criteria which are currently implemented are:

'class' %recommended way%  Compares the window class (the second part of WM_CLASS)

'instance'  Compares the window instance (the first part of WM_CLASS)

'window_role'- Compares the window role (WM_WINDOW_ROLE).

'id'  Compares the X11 window ID, which you can get via xwininfo for example.

'title' Compares the X11 window title (_NET_WM_NAME or WM_NAME as fallback).

'urgent' Compares the urgent state of the window. Can be "latest" or "oldest". Matches the latest or oldest urgent window, respectively. (The following aliases are also available: newest, last, recent, first)

'con_mark'  Compares the mark set for this container, see [vim_like_marks].

'con_id' Compares the i3-internal container ID, which you can get via the IPC interface. Handy for scripting.

The criteria class, instance, role, title and mark are actually regular expressions (PCRE)
***** Automatically putting clients on specific workspaces
To automatically make a specific window show up on a specific workspace, you can use an assignment.
You can match windows by using any criteria, see [command criteria]. 
It is recommended that you match on 'window classes' (and `instances`, when appropriate) instead of window titles whenever possible because some applications first create their window, and then worry about setting the correct title.

the syntax is as follows:

assign <criteria> [] workspace

#+BEGIN_EXAMPLE
# Assign URxvt terminals to workspace 2
ssign [class="URxvt"] 2
# Same thing, but more precise (exact match instead of substring)
assign [class="\^URxvt$"] 2
# Same thing, but with a beautiful arrow :)
assign [class="\^URxvt$"]  2
# Assignment to a named workspace
assign [class="\^URxvt$"]  work
# Start urxvt -name irssi
assign [class="\^URxvt$" instance="\^irssi$"]  3
#+END_EXAMPLE


***** define per workspace layout
one can add an additional command in the workspace definitions
In example:
bindsym $mod+4 workspace 5:IM ; layout tabbed
options are:
workspace layout <default|stacking|tabbed>

***** Arbitrary commands for specific windows (for window)

4.10. Arbitrary commands for specific windows (for window)
 With the for window command, you can let i3 execute any command when
it encounters a specific window. This can be used to set windows to
floating or to change their border style, for example.
 for window <criteria> command
 Examples:
 # enable floating mode for all XTerm windows
 for window [class="XTerm"] floating enable
 # Make all urxvts use a 1-pixel border:
 for window [class="urxvt"] border 1pixel
 # A less useful, but rather funny example:
 # makes the window floating as soon as I change
 # directory to ~/work
 for window [title="x200: ~/work"] floating enable

***** Automatically putting workspaces on specific screens
Automatically putting workspaces on specific screens
 If you assign clients to workspaces, it might be handy to put the
workspaces on specific screens. Also, the assignment of workspaces to
screens will determine which workspace i3 uses for a new screen when
adding screens or when starting (e.g., by default it will use 1 for the
first screen, 2 for the second screen and so on).
 workspace <workspace> output <output>
 The output is the name of the RandR output you attach your screen to.
On a laptop, you might have VGA1 and LVDS1 as output names. You can see
the available outputs by running

 xrandr --current.

 If you use named workspaces, they must be quoted:
 Examples:
 workspace 1 output LVDS1
 workspace 5 output VGA1
 workspace "2: vim" output VGA1

*** layouts
***** define a workspace layout by default
add this ';layout tabbed' command to the WS switch command in your i3 config

@Warning:make sure there is no SPACE betwee the TAGname and the ; ie > TAG;@  

#+BEGIN_SRC sh
# switch to workspace
bindcode $mod+49  workspace         1:H1
bindsym $mod+1 workspace            2:Terms 
bindsym $mod+2 workspace            3:WWW; layout tabbed
bindsym $mod+3 workspace            4:MM; layout tabbed
bindsym $mod+4 workspace            5:IM
bindsym $mod+q workspace            6:FM
bindsym $mod+w workspace            7:SSH

#+END_SRC

***** saving/restoring layouts
****** saving a layout
You can save the layout of either a single workspace or an entire output (e.g. LVDS1). Of course, you can repeat this step multiple times if you want to save/restore multiple workspaces/outputs.

'i3-save-tree' is a tool to save the layout. It will print a JSON representation of i3’s internal layout data structures to stdout. Typically, you may want to take a quick look at the output, then save it to a file and tweak it a little bit:

#+NAME: 
#+BEGIN_SRC sh
i3-save-tree --workspace=7:SSH  > ~/.i3/workspace-7.json
#+END_SRC

$Note-The output of i3-save-tree is @NOT@ useful until you manually modify it$:
you need to tell i3 how to match/distinguish windows (for example based on their WM_CLASS, title, etc.). By default, all the different window properties are included in the output, but commented out. This is partly to avoid relying on heuristics and partly to make you aware how i3 works so that you can easily solve layout restoring problems.

****** restore (append) layout
The append_layout command is used to load a layout file into i3. It accepts a path (relative to i3’s current working directory or absolute) to a JSON file.

#+BEGIN_EXAMPLE
Syntax:
append_layout <path>
#+END_EXAMPLE

Examples:

#+BEGIN_SRC sh
# From a terminal or script:
i3-msg "workspace 1; append_layout /home/michael/.i3/workspace-1.json"
# In your i3 configuration file, you can autostart i3-msg like this:
# (Note that those lines will quickly become long, so typically you would store
#  them in a script with proper indentation.)
exec --no-startup-id "i3-msg 'workspace 1; append_layout /home/michael/.i3/workspace-1.json'"
#+END_SRC

*** bugs/errors/debugging 
***** extra/double workspaces being created
this is probably due to whitespaces. issue a whitespace checker in your editor and make sure there are no whitespaces in your config  

***** debug with a coredump
prepare i3 for debugging
look here http://i3wm.org/docs/debugging-release-version.html
and follow steps 3,4,5

$Note-this is usually used when i3 cant start X$ 

`detailed notes on above steps`:

'step 3'

$Note$ if you cant login to X you will need to run the `ulimit -c unlimited` command manually from Console

you can define where to store the core dumps

sysctl -w kernel.core_pattern=/tmp/core.%e.%p      

'step 4'
if you use the arch community version from repos you can skip step 4

'step 5'

start i3 from console with start X, this will create the coredump file
then you can from X (gnome , kde etc) issue this from a terminal 

#+BEGIN_SRC sh
gdb $(which i3) core.i3.3849
#+END_SRC

Then, generate a backtrace using:

#+BEGIN_SRC sh
backtrace full
#+END_SRC

pastebin the results and send as bug report

*** Focus follows mouse
By default, window focus follows your mouse movements. However, if you have a setup where your mouse usually is in your way (like a touchpad on your laptop which you do not want to disable completely), you might want to disable focus follows mouse and control focus only by using your keyboard. The mouse will still be useful inside the currently active window (for example to click on links in your browser window). focus follows mouse <yes|no>
Example:

#+BEGIN_SRC sh
focus follows mouse no
#+END_SRC
*** use conky in i3bar
use this script and put as exe in bin (or PATH)

#+begin_src sh
#!/bin/sh

# Send the header so that i3bar knows we want to use JSON:
echo '{"version":1}'

# Begin the endless array.
echo '['

# We send an empty first array of blocks to make the loop simpler:
echo '[],'

# Now send blocks with information forever:
exec conky -c $HOME/.conkyrc
#+end_src
then use this as your .conkyrc

#+BEGIN_SRC sh
out_to_x no
own_window no
out_to_console yes
background no
max_text_width 0

# Update interval in seconds
update_interval 2.0

# This is the number of times Conky will update before quitting.
# Set to zero to run forever.
total_run_times 0

# Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
short_units yes

# How strict should if_up be when testing an interface for being up?
# The value is one of up, link or address, to check for the interface
# being solely up, being up and having link or being up, having link
# and an assigned IP address. 
if_up_strictness address

# Add spaces to keep things from moving about?  This only affects certain objects.
# use_spacer should have an argument of left, right, or none
use_spacer left

# Force UTF8? note that UTF8 support required XFT
override_utf8_locale no

# number of cpu samples to average
# set to 1 to disable averaging
cpu_avg_samples 2

# Stuff after 'TEXT' will be formatted on screen
TEXT

# JSON for i3bar

 [{ "full_text" : "${mpd_smart}" , "color" : "\#F92672" }, 
  { "full_text" : "Ram: ${memperc}%" , "color" : "\#4E82AA" },
  { "full_text" : "CPU: ${cpu}%" , "color" : "\#FD971F" },
  { "full_text" : "${time}" , "color" :  "\#BBE054" }],

#+END_SRC 

finally have this bar section in your i3 config
#+begin_src sh
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
colors {
        background #000000
        statusline #ffffff

        focused_workspace  #0C73C2 #0C73C2 #ffffff #000000
        active_workspace   #0C73C2 #0C73C2 #ffffff #000000
        inactive_workspace #333333 #222222 #888888
        urgent_workspace   #2f343a #900000 #ffffff
}
        status_command $HOME/bin/conky-i3bar
        position top
#        mode hide
}
#+end_src

restart i3 and you should get conky in your bar
*** mode menus
**** basic menu
the menu uses this structure

#+BEGIN_EXAMPLE
mode "FREE-FLOW TEXT HERE" {
#for simple execution of command
bindsym h exec COMMAND
#for internal i3 commands use
bindsym Right move workspace to output right
#to leave the mode after executing the command
bindsym h exec /home/zeltak/.screenlayout/home.sh; mode "default"

# back to normal: Enter or Escape
bindsym Return mode "default"
bindsym Escape mode "default"
}

bindsym $mod+mod1+Control+m mode "SAME TEXT AS THE MODE ABOVE"
#+END_EXAMPLE
example: 

#+BEGIN_SRC sh
#multi monitor setup
mode "xrandr- m(mobile)/h(home)" {
bindsym h exec /home/zeltak/.screenlayout/home.sh; Return mode "default"
bindsym m exec /home/zeltak/.screenlayout/mobile.sh; Return mode "default"
# back to normal: Enter or Escape
bindsym Return mode "default"
bindsym Escape mode "default"
}
bindsym $mod+mod1+Control+m mode "xrandr- m(mobile)/h(home)"


bindsym h exec /home/zeltak/.screenlayout/home.sh; mode "default"
#+END_SRC

*** icons in bar
make sure you have the icon fonts installed in system
https://aur.archlinux.org/packages/ttf-font-awesome/
or
https://aur.archlinux.org/packages/ttf-font-icons/

then in your i3 config define icons as a secondary font

#+BEGIN_EXAMPLE
font pango:PragmataPro 10 , Icons 8
#+END_EXAMPLE

to get the fonts look at this pdf:
file:/home/zeltak/Sync/attach/files_2014/icons.pdf

then copy paste to your config. it will look like this:

#+BEGIN_EXAMPLE
# workspace defines 
set $w1  (1)
set $w2 (2)
#+END_EXAMPLE

** xfce
*** how to get desktop icons on xubuntu

how to get desktop icons on xubuntu
 Place .desktop files in the desktop folder, most if not all .desktop
files should be located in /usr/share/applications

*** disable notifications

uninstall:
 xfce4-notifyd
 package
*** move xfce panel
do the following:
Right Click on the Panel
Go to Panel > Panel Preferences...
Un-Check "Lock panel"
Grab the panel by one of the ends. The handles on the ends look like two rows of vertical dots for me.
Grabbing anywhere but the ends will not move the panel.
Drag the panel where you want it!
 
** e17

*** Show system tray in enlightenment 17

Show system tray in enlightenment 17 (e17)
 (1)
 Open "Settings" -> "Modules" configuration window.
 (2)
 Click "Systray" and "Load".
 (3)
 In "Shelf Contents" window, click "Systray" and "Add Gadget"
 In this way, you don't have to use trayer.
 Pasted from
<[[http://hal9000dev.blogspot.com/2010/11/show-system-tray-in-enlightenment-17.html][http://hal9000dev.blogspot.com/2010/11/show-system-tray-in-enlightenment-17.html]]>

*** define properties of mouse that auto moves from window to new
window

[[nixx_files/Image_UvfJjYywIKyQF7f8Aup8gw_0001.png]]

*** build E on arch through arche17

ith the use of ArchE17 and some basic utilities you can create and
install DR17 packages for Arch Linux. It is really simple. Get the
latest version of the script linked below, extract the archive, make the
script executable and just run it.
 At least sudo, but also abs (if you do not specify the 'noupdate'
option) should be accessible via sudo.

[[http://dev.archlinux.org/%7Eronald/e17.html][http://dev.archlinux.org/~ronald/e17.html]]

*** get application menu working

if you get an a issue with the application menu:
 tr
 [[nixx_files/Image_pfzaEAn6RCVeUOn9RaByxQ_0001.png]]

** Archive
*** crunchbang (!#)

**** lxpanel

***** change the lxpanel menu applet icon

Change the lxpanel menu applet icon
The lxpanel menu applet icon doesn't match my chosen icon scheme at
all. If you'd like to change it to something more suitable, follow the
steps below:
 in a terminal
 gedit ~/.config/lxpanel/default/panels/panel
 In the config file that opens look for an entry like this
 Plugin {
 type = menu
 Config {
 image=/usr/share/lxpanel/images/my-computer.png
 
 Change the path of the icon to the one of your choice. In my case it
was one that I saved into this same directory, being
/usr/share/lxpanel/images/crunchbangmenu.png
 Save the config file and close.
 Restart the lxpanel, alt-f2, then run the command:
 pkill lxpanel && lxpanel

**** tips

add fn volume key functionality to Wind (or any other PC)

 to add fn volume key functionality to your eee pc, add these lines to
your rc.xml
 <keybind key="XF86AudioLowerVolume">
 <action name="Execute">
 <execute>amixer -q set PCM 10- unmute</execute>
 </action>
 </keybind>
 <keybind key="XF86AudioRaiseVolume">
 <action name="Execute">
 <execute>amixer -q set PCM 10+ unmute</execute>
 </action>
 </keybind>
 <keybind key="XF86AudioMute">
 <action name="Execute">
 <execute>amixer -q set PCM 0</execute>
 </action>
 </keybind>
 toggle for some reason doesn't work for me, so my mute button just sets
volume to 0.
 Disable lock screen when suspending/hibernate
 install gconf-editor
 go into apps > gnome-power-manager > Lock and uncheck the suspend or
hibernate checkboxInstall hebrew support
 sudo apt-get install language-support-fonts-heGet hebrew indicator and
hebrew switch

 add this to startup.sh
 #launch keyboard switch
 setxkbmap -option grp:switch,grp:shifts toggle,grp led:scroll us,il &
 (sleep 10s && fbxkb) &
 add this to the rc openbox file (keys can be changed of course)
 <keybind key="W-F11">
 <action name="Execute">
 <startupnotify>
 <enabled>false</enabled>
 <name>Hebrew Keyboard</name>
 </startupnotify>
 <command>setxkbmap -model pc105 -layout il</command>
 </action>
 </keybind>
 <keybind key="W-F12">
 <action name="Execute">
 <startupnotify>
 <enabled>false</enabled>
 <name>English Keyboard</name>
 </startupnotify>
 <command>setxkbmap -model pc105 -layout us</command>
 </action>
 </keybind>

**** tint2

***** manual

Configuration
 The first time you run tint2, it will create the config file in
$HOME/.config/tint2/tint2rc . If you upgraded from tint 0.6 , no
worries, tint2 is backward compatible with the old config file.
 You can customize tint2rc or specify another file on the command line
with -c option. eg. : tint2 -c $HOME/tint2.conf
 Background and border
 tint2rc config file starts with background option.
  rounded = number of pixels : How rounded the borders are
  background color = color opacity
 o opacity = 0 to get background transparency
  border width = width
  border color = color opacity
 o opacity = 0 to get border transparency
 you are free to put 1, 2, 3... background
 rounded = 1
 border width = 0
 background color = #282828 100
 border color = #000000 0
 rounded = 1
 border width = 0
 background color = #f6b655 90
 border color = #cccccc 40
 tint2 automatically identifies each background with a number (1, 2,
...). then you can applied background on objects (panel, taskbar, task,
clock, systray) with
 panel background id = 1
 taskbar background id = 0
 task background id = 0
 task active background id = 2
 systray background id = 0
 clock background id = 0
 identifier 0 applied full transparency, identifer 1 applied the
first background...
 Panel
  panel monitor = monitor Which monitor tint2 draws the panel on
 o the first monitor is 1
 o use panel monitor = all to get one panel per monitor
(unless it's included into another one)
  panel position = vertical position horizontal position
orientation
 o value for vertical position : bottom, top, center
 o value for horizontal position : left, right, center
 o value for orientation : horizontal, vertical
  panel size = width height
 o width = 0 to get full monitor width
 o Use % to adjust the panel size to monitor size.
 Example:
 #The panel's width is 94% the size of the monitor
 panel size = 94% 30
  panel margin = horizontal margin vertical margin
 o horizontal margin = 0 to get full monitor width
  panel padding = horizontal left right padding
vertical padding horizontal spacing
  font shadow = boolean (0 or 1)
  panel background id = integer : Which background to use
  wm menu = boolean (0 or 1) : Display window manager menu in
panel padding
 Taskbar (multi-desktop)
  taskbar mode = single desktop or multi desktop
 o taskbar mode = single desktop : Show one(1) taskbar
(current desktop)
 o taskbar mode = multi desktop : Show one(1) taskbar per
desktop
 + You can drag-and-drop task between desktops`
 + And also click on an empty taskbar to switch
desktops`
  taskbar padding = horizontal left right padding
vertical padding horizontal spacing
  taskbar background id = integer : Which background to use
 Task
  task icon = boolean (0 or 1) : Display task icon or not
  task text = boolean (0 or 1) : Display task text or not
  task centered = boolean (0 or 1) : Task name centered or not
  task maximum size = width height
 o width is used with horizontal panel. width = 0 to get full
taskbar width
 o height is used with vertical panel
  task padding = horizontal padding vertical padding
  task font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  task font color = color opacity
  task active font color = color opacity
  task background id = integer : Which background to use for non
selected tasks
  task active background id = integer : Which background to use
when task is selected
 System Tray
  systray padding = horizontal left right padding
vertical padding horizontal spacing
  systray background id = integer : Which background to use for
non selected tasks
 To disable the tint2 system tray, commenThe first time you run
tint2, it will create the config file in $HOME/.config/tint2/tint2rc .
If you upgraded from tint 0.6 , no worries, tint2 is backward compatible
with the old config file.
 You can customize tint2rc or specify another file on the command line
with -c option. eg. : tint2 -c $HOME/tint2.conf
 Background and border
 tint2rc config file starts with background option.
  rounded = number of pixels : How rounded the borders are
  background color = color opacity
 o opacity = 0 to get background transparency
  border width = width
  border color = color opacity
 o opacity = 0 to get border transparency
 you are free to put 1, 2, 3... background
 rounded = 1
 border width = 0
 background color = #282828 100
 border color = #000000 0
 rounded = 1
 border width = 0
 background color = #f6b655 90
 border color = #cccccc 40
 tint2 automatically identifies each background with a number (1, 2,
...). then you can applied background on objects (panel, taskbar, task,
clock, systray) with
 panel background id = 1
 taskbar background id = 0
 task background id = 0
 task active background id = 2
 systray background id = 0
 clock background id = 0
 identifier 0 applied full transparency, identifer 1 applied the
first background...
 Panel
  panel monitor = monitor Which monitor tint2 draws the panel on
 o the first monitor is 1
 o use panel monitor = all to get one panel per monitor
(unless it's included into another one)
  panel position = vertical position horizontal position
orientation
 o value for vertical position : bottom, top, center
 o value for horizontal position : left, right, center
 o value for orientation : horizontal, vertical
  panel size = width height
 o width = 0 to get full monitor width
 o Use % to adjust the panel size to monitor size.
 Example:
 #The panel's width is 94% the size of the monitor
 panel size = 94% 30
  panel margin = horizontal margin vertical margin
 o horizontal margin = 0 to get full monitor width
  panel padding = horizontal left right padding
vertical padding horizontal spacing
  font shadow = boolean (0 or 1)
  panel background id = integer : Which background to use
  wm menu = boolean (0 or 1) : Display window manager menu in
panel padding
 Taskbar (multi-desktop)
  taskbar mode = single desktop or multi desktop
 o taskbar mode = single desktop : Show one(1) taskbar
(current desktop)
 o taskbar mode = multi desktop : Show one(1) taskbar per
desktop
 + You can drag-and-drop task between desktops`
 + And also click on an empty taskbar to switch
desktops`
  taskbar padding = horizontal left right padding
vertical padding horizontal spacing
  taskbar background id = integer : Which background to use
 Task
  task icon = boolean (0 or 1) : Display task icon or not
  task text = boolean (0 or 1) : Display task text or not
  task centered = boolean (0 or 1) : Task name centered or not
  task maximum size = width height
 o width is used with horizontal panel. width = 0 to get full
taskbar width
 o height is used with vertical panel
  task padding = horizontal padding vertical padding
  task font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  task font color = color opacity
  task active font color = color opacity
  task background id = integer : Which background to use for non
selected tasks
  task active background id = integer : Which background to use
when task is selected
 System Tray
  systray padding = horizontal left right padding
vertical padding horizontal spacing
  systray background id = integer : Which background to use for
non selected tasks
 To disable the tint2 system tray, comment out systray padding
 Clock
  time1 format = %H:%M
 o time1 format and time2 format use 'strftime' syntax. more
info on parameters on
[[http://www.manpagez.com/man/3/strftime/][http://www.manpagez.com/man/3/strftime/]]
 o comment time1 format and time2 format to hide clock
  time1 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  time2 format = %A %d %B
  time2 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  clock font color = color opacity
  clock padding = horizontal padding vertical padding
  clock background id = integer : Which background to use
  clock lclick command = text : Which command to execute on left
click
  clock rclick command = text : Which command to execute on right
click
 Battery
  battery = boolean (0 or 1) : Display battery applet or not
  battery low status = integer: At what battery percent does the
icon show battery low
  battery low cmd = notify-send "battery low" :What to do when
battery is low
  bat1 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  bat2 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  battery font color = color opacity
  battery padding = horizontal padding vertical padding
  battery background id = integer : Which background to use
 Mouse action
 Customize mouse action with : none, close, toggle, iconify, shade,
toggle iconify
 Sample format:
 mouse middle = none
 mouse right = close
 mouse scroll up = toggle
 mouse scroll down = iconifyt out systray padding
 Clock
  time1 format = %H:%M
 o time1 format and time2 format use 'strftime' syntax. more
info on parameters on
[[http://www.manpagez.com/man/3/strftime/][http://www.manpagez.com/man/3/strftime/]]
 o comment time1 format and time2 format to hide clock
  time1 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  time2 format = %A %d %B
  time2 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  clock font color = color opacity
  clock padding = horizontal padding vertical padding
  clock background id = integer : Which background to use
  clock lclick command = text : Which command to execute on left
click
  clock rclick command = text : Which command to execute on right
click
 Battery
  battery = boolean (0 or 1) : Display battery applet or not
  battery low status = integer: At what battery percent does the
icon show battery low
  battery low cmd = notify-send "battery low" :What to do when
battery is low
  bat1 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  bat2 font = [FAMILY-LIST] [STYLE-OPTIONS] [SIZE]
  battery font color = color opacity
  battery padding = horizontal padding vertical padding
  battery background id = integer : Which background to use
 Mouse action
 Customize mouse action with : none, close, toggle, iconify, shade,
toggle iconify
 Sample format:
 mouse middle = none
 mouse right = close
 mouse scroll up = toggle
 mouse scroll down = iconify
 make the sections have a border
 to make the sections have a border use this in the backgound section
for first background entyry
 rounded = 0
 border width = 1
 background color = #FFFFFF 0
 border color = #FFFFFF 20
 and this in the appropriate section (clock,date etc..)
 taskbar background id = 1
 Sample file
 #---------------------------------------------
 # TINT2 CONFIG FILE
 #---------------------------------------------
 #---------------------------------------------
 # BACKGROUND AND BORDER
 #---------------------------------------------
 rounded = 7
 border width = 1
 background color = #000000 60
 border color = #ffffff 18
 rounded = 5
 border width = 0
 background color = #ffffff 40
 border color = #ffffff 50
 rounded = 5
 border width = 0
 background color = #ffffff 18
 border color = #ffffff 70
 #---------------------------------------------
 # PANEL
 #---------------------------------------------
 panel monitor = all
 panel position = bottom center horizontal
 panel size = 90% 28
 panel margin = 0 0
 panel padding = 7 0
 font shadow = 0
 panel background id = 1
 wm menu = 0
 #---------------------------------------------
 # TASKBAR
 #---------------------------------------------
 taskbar mode = single desktop
 taskbar padding = 2 3 2
 taskbar background id = 0
 #---------------------------------------------
 # TASKS
 #---------------------------------------------
 task icon = 1
 task text = 1
 task maximum size = 140 30
 task centered = 1
 task padding = 6 3
 task font = sans 7
 task font color = #ffffff 70
 task active font color = #ffffff 85
 task background id = 3
 task active background id = 2
 #---------------------------------------------
 # SYSTRAYBAR
 #---------------------------------------------
 systray padding = 0 3 3
 systray background id = 0
 #---------------------------------------------
 # CLOCK
 #---------------------------------------------
 time1 format = %H:%M
 time1 font = sans 8
 time2 format = %A %d %B
 time2 font = sans 6
 clock font color = #ffffff 76
 clock padding = 1 0
 clock background id = 0
 clock lclick command = xclock
 clock rclick command = orage
 #---------------------------------------------
 # BATTERY
 #---------------------------------------------
 battery = 0
 battery low status = 7
 battery low cmd = notify-send "battery low"
 bat1 font = sans 8
 bat2 font = sans 6
 battery font color = #ffffff 76
 battery padding = 1 0
 battery background id = 0
 #---------------------------------------------
 # MOUSE ACTION ON TASK
 #---------------------------------------------
 mouse middle = none
 mouse right = close
 mouse scroll up = toggle
 mouse scroll down = iconify

***** keep tint2 ontop

How to maximize window over tint2
 You can manage interaction between tint2 and window with :
 panel layer = bottom,normal,top
 strut policy = follow size/minimum/none
 autohide height = integer
 If you want maximized window to never cover tint2:
 panel layer = top
 strut policy = follow size
 If you want maximized window behind tint2:
 panel layer = top
 strut policy = none
 If you want maximized window behind tint2, but 2 pixels free so you
can use desktop action (right click, ...):
 panel layer = top
 strut policy = minimum
 autohide height = 2

***** GUI app to configure tint2

install
 tintwizard

**** select default web browser

How to select default web browser
issue:
 sudo update-alternatives --config x-www-browser
 and choose the correct browser

**** fonts

to make sure fonts are presented nicley on an LCD screen
 add the following line to your xorg.conf (If you use an Nvidia driver,)
to make 96 dpi permanent:
 Section "Device"
 Identifier "Device0"
 Driver "nvidia"
 VendorName "NVIDIA Corporation"
 BoardName "Quadro FX 770M"
 Option "DPI" "96 x 96"
 EndSection
 then edit your ~/.fonts.conf
 and replace with this:
 <?xml version="1.0"?>
 <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
 <fontconfig>
 <match target="font" >
 <edit mode="assign" name="hinting" >
 <bool>true</bool>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="hintstyle" >
 <const>hintfull</const>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="rgba" >
 <const>rgb</const>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="antialias" >
 <bool>true</bool>
 </edit>
 </match>
 </fontconfig>
 or if you want an apple like affect try this: (fonts a not really sharp
though)
 <?xml version="1.0"?>
 <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
 <fontconfig>
 <match target="font" >
 <edit mode="assign" name="autohint" >
 <bool>true</bool>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="rgba" >
 <const>none</const>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="hinting" >
 <bool>false</bool>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="hintstyle" >
 <const>hintnone</const>
 </edit>
 </match>
 <match target="font" >
 <edit mode="assign" name="antialias" >
 <bool>true</bool>
 </edit>
 </match>
 </fontconfig>
 then restart X and it should look much better
 For system wide you need to edit this file:
 /etc/fonts/local.conf
 with the above text but if there is only 1 user its not really needed

**** blank screen on login

This may be due to a corrupt .dmrc file
 delete the .dmrc file and reboot

** fluxbox

*** compositing

install
  compton-git
 

*** workspaces

**** find which workspace you are on

issue on the workspace you are in

 xprop -root | grep " NET CURRENT DESKTOP(CARDINAL)"

 or

 xprop -root  NET CURRENT DESKTOP | cut -d '=' -f 2

**** workspace namng

in all config files workspaces start at '1'
 IE:
 [[nixx_files/Image_vNOidZ4NWl6hBYQz6bTWvA_0001.png]]
 apart from the apps config which uses xprop style counting and thus
starts at '1'F

**** Set a different wallpaper on every workspace:

# Set a different wallpaper on every workspace:
 ChangeWorkspace :Exec fbsetbg ~/.fluxbox/bg$(xprop -root
 NET CURRENT DESKTOP | awk '{print $3}').png
 note: it only works with proper png files.
 the files should be put here:
 /home/zeltak/.fluxbox/bg0.png

**** pop up notification with desktop name when changing

either use it with a macro with the switch to workspace X command:
 Mod4 1 :MacroCmd {Workspace 1} {Exec notify-send $(xprop -root | grep
" NET CURRENT DESKTOP(CARDINAL)" | cut -d '=' -f 2)}
 or use it as a standalone command:
 ChangeWorkspace :Exec notify-send $(xprop -root | grep
" NET CURRENT DESKTOP(CARDINAL)" | cut -d '=' -f 2)

*** tagging

**** find clients name/string/etc with xporp

[[nixx_files/Image_nOqo8PGKfO984Xr7QAISCQ_0001.png]]

**** use multiple apps in once tag/config

you can use regex so in this case use the |
 [app] (name=Navigator|dwb)
 [Workspace]{2}
 [Dimensions]{98% 95%}
 [Position](CENTER){0 0}
 [end]

*** keyboard

**** toggle comands (chain/cycle)

example 1:
 Mod4 KP 1: ToggleCmd :Exec mpd :Exec killall mpd

*** errors/bugs/fixes

**** fix maxsimize when panel is present

[[nixx_files/attach/space_dapp][Attachment #03 (space dapp)]]
 in the init config make sure your slit looks like this:
 session.screen0.slit.autoHide:false
 session.screen0.slit.acceptKdeDockapps:true
 session.screen0.slit.maxOver:false
 session.screen0.slit.placement:TopCenter
 session.screen0.slit.alpha:255
 session.screen0.slit.onhead:0
 session.screen0.slit.layer:Dock
 
 download (or used attached) binary file space dapp and put it in your
PATH (IE: ~/bin/)
 then issue on startup (IE .xinitrc) the command followed by x,y
arguments:
 space dapp 1600 26
 where:
 1600 is the length and 26 is the reserved space from top
(slit.placement:TopCenter)

*** theme (look and feel)

**** define color and border size of clients

you do that in the theme cfg file:
 /home/zeltak/.fluxbox/styles/green tea/theme.cfg
 In example:
 ############################################################## WINDOW
#########
 window.bevelWidth:1
 window.shade:false
 window.borderWidth:4
 window.focus.borderColor:#33B5E5
 window.unfocus.borderColor:#000000

*** boolean config option

if you need a boolean config option its True or False
 In example:
 [FocusNewWindow] {True}

** Awesome
*** Config
**** check if config file is ok
#+BEGIN_SRC sh
awesome -k
#+END_SRC

*** look and feel
**** Themes
***** change a theme

edit this line in your lua.rc

#+BEGIN_SRC Lua
-- Themes define colours, icons, and wallpapers
beautiful.init("/usr/share/awesome/themes/sky/theme.lua")
#+END_SRC
** NAS
*** Qnap
**** Nfs shares
**** error mount.nfs: access denied by server while mounting
make sure under nfs sharing options that the actual share is allowed on all IP's in network

#+DOWNLOADED: /tmp/screenshot.png @ 2014-01-27 21:06:16
#+attr_html: :width 300px
 [[~/org/attach/images_2013//screenshot_2014-01-27_21:06:16.png]]
**** Applications
**** transmission
***** install
http://forum.qnap.com/viewtopic.php?f=221&t=82172#p365604
[Installation instructions]
1. Install the Optware/Ipkg QPKG. (MANDATORY)
2. Download and install the Transmission QPKG.
@Note - Because of these dependencies when installing the QPKG for the first time, the installation process will take longer so BE PATIENT@
3. Login into the transmission admin center (http://NAS_IP/transmission) with your NAS admin user credentials.

[Update from previous version]
1. Backup your settings or whole Transmission folder on the NAS.
2. Stop the transmission service.
3. Manually install the new QPKG from Spigot.
4. Everything should be working and your settings should be preserved.
***** plugin setup
[Periscope]
In order to setup the Periscope plugin, navigate to the Transmission admin center ->Add-ons section. Basically you can enable it, set the time and frequency of when periscope should search for subtitles and the language in which you want your subtitles to be downloaded. A complete list of languages supported by the opensubtitles site can be found here.
A few examples of configurations for the cronjobs:
- In order to run periscope every 15 mins, set:
STATUS = 1
MINS = /15
HOUR = 
- In order to run periscope every hour, set:
STATUS = 1
MINS = 0
HOUR = 
- In order to run periscope every 3 hours, set:
STATUS = 1
MINS = 0
HOUR = /3
- In order to run periscope at the same certain time, ex: 9.15 am, set:
STATUS = 1
MINS = 15
HOUR = 9

[TorrentWatchX]
In order to setup the TorrentWatchX script, navigate to the Transmission admin center->Add-ons section. Almost same options as the periscope plugin and the same examples as above apply to when you want to schedule torrentwatch-x update via cronjobs. After saving these settings and restarted transmission, click the TorrentWatch-X link to be taken to the TorrentWatch-x web interface, where you can do the rest of the configuration.

[Unpack]
The unpack function has a few options and all are explained in the Transmission admin center -> Add-ons section.

[Dropbox downloader]
If you are updating from previous version, you need to add manually next lines at the end of your addons.conf file. More info in Readme file (add-ons):
[dropbox_downloader]
# Download files from dropbox file list
# To work properly you need to set "rpc-authentication-required": false, in settings.json
# 1 - enabled and 0 - disabled
# WARNING: ONLY ENABLE THIS OPTION IF YOU CAN DOWNLOAD FILES FROM DROPBOX WEBSITE
#
#
STATUS =
#
# Minutes option is used for setting the cronjob. Type a number between 0 and 59
#
MINUTES =
#
# Hour option is used for setting the cronjob, type a number between 0 and 23.
# In order to run periscope every 3 hours, set: MINUTES = 0, HOUR = /3
HOUR =
#
# Path to Dropbox file
# LEAVE LAST LINE EMPTY IN YOUR FILE!
PATH =
***** Setup config
you need to make sure to whitelist the IP you will connect from and the user name and password, for example:
#+BEGIN_EXAMPLE
"rpc-bind-address": "0.0.0.0", 
   "rpc-enabled": true, 
    "rpc-password": "{ffb94ff891e234e8d5299331cc4bbc121ff6352cJGzI9j9P", 
    "rpc-port": 9091, 
    "rpc-url": "/transmission/", 
    "rpc-username": "zeltak", 
    "rpc-whitelist": "127.0.0.1,192.168..", 
    "rpc-whitelist-enabled": false, 
#+END_EXAMPLE
**** setup ssh keys
$Note-this assums that your already geneated id_rsa keys before hand$ 

Type the following at the command prompt:
#+NAME: 
#+BEGIN_SRC sh
scp id_rsa.pub admin@ClientIPAddress:/etc/config/ssh/
#+END_SRC

admin@ClientIPAddress is the address of your QNAP NAS (the Client) followed by the path on the Client where the public key needs to reside. You will be ask you for the password of the "admin" account to login to the Client.
#   password:
Enter the password to complete secure copy.

4. On the Client (QNAP NAS) navigate to the /etc/config/ssh folder and "ls" to reveal the contents of the directory. You should see your id_rsa.pub file.

5. Now let's append this file to the authorized_keys file which needs to reside in this directory. Do not worry if authorized_keys file is not present. We will create it.

Type the following at the command prompt:

#+NAME: 
#+BEGIN_SRC sh
cat id_rsa.pub >> authorized_keys
#+END_SRC

Note: You have to cut the key in the file to one line, and add ssh-rsa in at the very beginning.
Example:
ssh-rsa AAAAB3NzaC1kc3MAAACBAPY8ZOHY2yFSJA6XYC9HRwNHxaehvx5wOJ0rzZdzoSOXxbETW6ToHv8D1UJ/z+zHo9Fiko5XybZnDIaBDHtblQ+Yp7Stx...4loWgV=

That's it. You should now be able to login using key authentication. Logout of the Client and attempt to login. If you created a passphrase for your id_rsa private key then you will be prompted for the passphrase. If you left the passphrase field blank when generating the keys then you will be logged in automatically.
The first time you login you may encounter a promoted message like below.

The authenticity of host 'xxx.xxx.xxx.xxx' can't be established.
RSA key fingerprint is XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX.
Are you sure you want to continue connecting (yes/no) ?

Type "yes" to continue. After you accept the authenticity of the RSA key, the Client information is saved in the /Users/UserName/.ssh/known_hosts file. You will not be prompted again unless you remove this file.

Important
If the destination Client is a x86 series model, please execute the following command on the destination Client (TS-509) to make sure the folder permission has been set correctly. Because there might be a permission problem in earlier firmware versions in x86 model (e.g. TS-509)

#   chown admin.administrators /mnt/HDA_ROOT/.config

Note
The procedure is the same when setting up key authentication between two NAS boxes. Simply follow the steps above substituting a NAS device for the Host and Client as per the above example.
**** setup mysql
***** Installing MySQL and phpMyAdmin
****** Enabling MySQL

Enabling MySQL is straight forward; your QNAP NAS already comes with MySQL pre-installed.

Let’s get started … Open the Administration page of your QNAP and go to “Application Servers“. In that section select “MySQL Server“.


#+DOWNLOADED: /tmp/screenshot.png @ 2014-03-22 21:18:54
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-03-22_21:18:54.png]]

Now check “Enable MySQL Server” and check “Enable TCP/IP Networking” – make sure the “Port Number” is set to “3306” (you can change this later if you’d like, but for now we will use the default MySQL port).

Click the “Apply” button and wait for the MySQL server to activate. In essence: we’re done.

****** QNAP Default Username/Password for MySQL 

The default username for MySQL on your QNAP is “root” and the default password is “admin“.In case you changed the password of root and forgot what it was;
In the “Application Servers“ → ”MySQL Server” page a “Reset root password” will allow you to reset it to it’s defaults.

****** SSH / Command line access

You can access MySQL from the command line (using SSH) as well. It can be found at:

#+BEGIN_EXAMPLE
/mnt/ext/opt/mysql/bin/
#+END_EXAMPLE

****** Web Server (Apache)

To make access to your MySQL database easier we’d also like to install phpMyAdmin so we can actually play with MySQL in a more convenient way, however phpMyAdmin runs on a web-server and needs PHP … so we need to do something about that first.

Both Apache and PHP are already installed on your QNAP under the package “Web Server“ - again, we just need to enable it.

Go to “Network Services” and select “Web Server“.

Check “Enable Web Server“, make sure “Port Number” is set to “80“, remember or bookmark the link for access to the web-server (optional – during the phpMyAdmin installation, a link well be shown again) and click “Apply“.


#+DOWNLOADED: /tmp/screenshot.png @ 2014-03-22 21:20:55
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-03-22_21:20:55.png]]


So, now the web server on your QNAP is running as well – which automatically includes PHP.
You can test this by going to the link indicated when you enabled the web server (see image above).
Typically this link looks like this: http://<ip of your NAS>

You should see something like this:
QNAP - Your webserver is running and welcomes you ...

If you always used http://<ip of your NAS> to get to the admin pages of your QNAP, then you will notice that this no longer works.
Instead use: https://<ip of your NAS> or http://<ip of your NAS>:8080

****** install the phpMyAdmin QPKG

download through the QPKG page - you can do this “Application Server“ → “QPKG Plugins” section. See How to Install a QNAP QPKG for more details.

When the installation is completed, take note of (or bookmark) the link to access phpMyAdmin:
http://<ip of your NAS>/phpMyAdmin

%Tip-you can also access the page throgh the desktop shortcut%

OK, we’re almost there … let’s try that link and see if we can access phpMyAdmin.
First you should see a login page – remember the default username (root) and password (admin) and click “Go” to login:

After login:
If this all worked out just fine; then we’re good to go …
***** ! bug cant login!
reset password in the mysql admin page !AND! reset the php.ini file in the web server admin page 
**** xbmc via qnap
***** Preparing a Database
Go to phpMyAdmin and click the “SQL” tab. In the upcoming text-box type (or paste) the following SQL statements and click the “Go” button in the lower right corner to execute the SQL statements:
	
#+BEGIN_EXAMPLE
CREATE USER 'xbmc' IDENTIFIED BY 'xbmc';
GRANT ALL ON . TO 'xbmc';
#+END_EXAMPLE

What does this do?
CREATE USER 'xbmc' IDENTIFIED BY 'xbmc';
Translated: Create the user “xbmc” with the password “xbmc”

After execution, PHPMyAdmin will jump back to the PHPMyAdmin start page – unless you somehow made a typo. You can click the tab “Privileges” and under the “User Overview”  you should now see (at the bottom) the user “xbmc“.

$Note: I used the password “xbmc” in this example (without the quotes, right after “IDENTIFIED BY”), feel free to use a different password if you’re concerned with security. Make sure to use that new password consistently throughout the next steps.$

#+BEGIN_EXAMPLE
GRANT ALL ON . TO 'xbmc';
#+END_EXAMPLE

Again a loose translation: Grant the user “xbmc” full access
This will give the user “xbmc” sufficient access to create and modify databases.

OK, so from a MySQL perspective we’re set …
***** Configure XBMC
$Note Use the exact same paths to Movies, Music, and TV-Series!$

Before we proceed with the MySQL connection for our XBMC boxes we should make sure that the path to our Movies, Music, and TV-Series are consistent for all XBMC’s you’re using. So make sure that all “sources” for all your XBMC HTPC’s are setup equally!

This is a must, otherwise the different paths will be seen as different files!

I recommend starting with 1 single XBMC setup. Make clear notes on what shares (path) have been setup for the different sources and media types – we want to replicate those on the other XBMC’s.

Another reason to start with just 1 XBMC box is that we can use PHPMyAdmin to see what XBMC is really saving in the database, and that in turn will give us a better understanding of what might be a reason why certain things do or do not work.

***** Step 1: Export your current Library (optional)
This is optional, but it might save a lot of time if we simply re-import the hard work once the MySQL Connection is up and running. This way we don’t have to re-scan your entire library and instead use what we already have.

In XBMC go to the “System” menu, select “Settings” → ”Video” where you select “Export Library” option. XBMC will now ask if you want to save this as a single file (yes) and where to save it – pick your destination. After the export you’ll find a folder name (something like) “xbmc_videodb_2012-01-23“.

***** Step 2: Create a file “advancedsettings.xml”

Open a plain text editor and paste the following text, after adapting it to your scenario:

#+begin_src html
<advancedsettings>
    <videodatabase>
        <type>mysql</type>
        <host>192.168.1.100</host>
        <port>3306</port>
        <user>xbmc</user>
        <pass>xbmc</pass>
        <name>xbmc_video</name>
    </videodatabase>

    <musicdatabase>
        <type>mysql</type>
        <host>192.168.1.100</host>
        <port>3306</port>
        <user>xbmc</user>
        <pass>xbmc</pass>
        <name>xbmc_music</name>
    </musicdatabase>
</advancedsettings>
#+end_src

@notes:@
#+BEGIN_EXAMPLE
Replace 192.168.1.100 with the IP address of your MySQL Server.
If you changed the default port number of your MySQL server, then change 3306 to the port number you picked (3306 is the default port, so if you didn’t change it during the MySQL setup, don’t change it here either).
Enter the proper username between <user> and </user> (if you did not use the suggested “xbmc”)
Enter the correct password between <pass> and </pass> (if you decided to use something else than “xbmc”)
#+END_EXAMPLE

Now save this file as “advancedsettings.xml“:


'Linux'
The file needs to go into this folder: ~/.xbmc/userdata
Accessing this under a live version is a little harder, use either SSH access, or press CTRL+ALT+F2 to go to the shell (use CTRL-ALT-F7 to go back to XBMC) and do this all manually with either VI or nano.
Some great version can be found at XBMCFreak, or you can use the XBMC Live version.

'OpenElec'
A shared folder called “userdata” can be found in your network for the machine running OpenElec
₆In example₆ in samba file:/WORKGROUP/OPENELEC/Userdata/

drop the file in there and reboot the machine.

'Windows Vista, 7, 8 and newer'
Move this file to “%APPDATA%\XBMC\userdata” (you can paste this in the Windows Explorer).

***** Step 3: Restart XBMC and optionally import the exported library
Shutdown and restart your XBMC HTPC.

If you find that the startup of your XBMC takes forever then please verify a few things:

Did you use the right IP address, username, password, and database name in the advancedsettings.xml?
Does your server or XBMC box have a firewall that blocks port 3306?
Did you execute the SQL statements properly? (most common issue: lack of access rights)
Is MySQL actually running?
Does your XBMC version support MySQL syncing?
 
If you see in phpMyAdmin that several tables, and maybe even new databases, have been created, then you’re ready to import the previously (optional) export library – the import steps are similar to the previously executed import steps.

#+DOWNLOADED: /tmp/screenshot.png @ 2014-03-22 22:31:03
#+attr_html: :width 300px
[[/home/zeltak/org/attach/images_2014/screenshot_2014-03-22_22:31:03.png]]

Repeat step 2 and 3 (use the same advancedsettings.xml file) for your other XBMC boxes – even if they run on different operating systems!
***** !important bug in openelec!
if you have a fast ssd openelec will boot up to fast before the netowrk and wont be able to connect to MYSQL\
The OpenELEC Settings GUI has a 'Wait for network' option, make sure that is checked before using mysql
 
*** Synology
**** How to access files on Synology NAS within the local network (NFS)

2. Enabling NFS on Your DiskStation

Before accessing a shared folder with your NFS client, you will need to change the system settings of your DiskStation to allow sharing via NFS. Please follow the steps below.

Log into DSM with an account belonging to the administrators group.
Go to Main Menu. Nas
Open Control Panel. Nas
Go to Win/Mac/NFS. Nas
Go to the NFS Service tab.
Check the box Enable NFS.
Click Apply to save settings. Nas

3. NFS Privileges of Shared Folders

Before accessing any shared folders with your NFS client, you must first configure the NFS privileges of the shared folder you wish to access. The steps below will guide you through the process of changing NFS privileges of the shared folders on your DiskStation.

    Go to Control Panel > Shared Folder. Nas
    Select the shared folder that you wish to access with your NFS client.
    Click Privileges.
    Select NFS Privileges. 


#+DOWNLOADED: http://www.synology.com/img/support/tutorials/Patrick_Access_Shared_Folders_within_LAN_NFS/image7.png @ 2014-03-13 14:19:37
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/image7_2014-03-13_14:19:37.png]]

When the Create an NFS rule page appears, edit the following fields:

#+DOWNLOADED: http://www.synology.com/img/support/tutorials/Patrick_Access_Shared_Folders_within_LAN_NFS/image8.png @ 2014-03-13 14:20:01
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/image8_2014-03-13_14:20:01.png]]

Hostname or IP: Enter the IP address of the NFS client which will access the shared folder.
Privileges: Select read/write privileges for the NFS client.
Root Squash: This field allows you to control the root user access privileges of the NFS client. Please select one of the following:
No Mapping: Allows the NFS client to maintain root access privileges.
Map to admin: Assigns access privileges to the NFS client equivalent to the admin user access privileges on your system.
Map to guest: Assigns access privileges to the NFS client equivalent to the guest access privileges on your system.
Asynchronous: Checking this option allows your DiskStation to reply to requests from NFS clients before any changes to files are completed, yielding better performance.

#+DOWNLOADED: http://www.synology.com/img/support/tutorials/Patrick_Access_Shared_Folders_within_LAN_NFS/image9.png @ 2014-03-13 14:20:13
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/image9_2014-03-13_14:20:13.png]]

When the Create an NFS rule page appears, edit the following fields:

Hostname or IP: Enter the IP address of the NFS client which will access the shared folder.
Privileges: Select read/write privileges for the NFS client.
Root Squash: This field allows you to control the root user access privileges of the NFS client. Please select one of the following:
No Mapping: Allows the NFS client to maintain root access privileges.
Map to admin: Assigns access privileges to the NFS client equivalent to the admin user access privileges on your system.
Map to guest: Assigns access privileges to the NFS client equivalent to the guest access privileges on your system.
Asynchronous: Checking this option allows your DiskStation to reply to requests from NFS clients before any changes to files are completed, yielding better performance.


#+DOWNLOADED: http://www.synology.com/img/support/tutorials/Patrick_Access_Shared_Folders_within_LAN_NFS/image10.png @ 2014-03-13 14:20:48
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/image10_2014-03-13_14:20:48.png]]

Click OK to save your settings.

Return to top
4. Mounting Shared Folders via NFS

Once you have completed the steps above, you can mount the shared folder with your NFS client. In the section below, we will access the shared folder using Linux.

Open Linux command console.
Enter the mount command as follows:
mount [DiskStation IP address] : [mount path of shared folder] / [mount point on NFS client]
Finally, enter the disk free (df) command to confirm you have successfully mounted the shared folder. Nas

#+DOWNLOADED: http://www.synology.com/img/support/tutorials/Patrick_Access_Shared_Folders_within_LAN_NFS/image11.png @ 2014-03-13 14:21:10
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/image11_2014-03-13_14:21:10.png]]

Can't Mount the Shared Folder? The user account you enter here must have access privileges for the shared folder that you wish to map.
**** To fix the "remote host has disconnected" in sshfs
I had to use admin instead of root login

*** ipkg
Getting a list of programs
you haven't yet, run ipkg update to get a current list of applications.

#+BEGIN_EXAMPLE
ipkg list | more 
#+END_EXAMPLE

provides a list of applications: ENTER moves one line; SPACE moves a page; Q quits.

#+BEGIN_EXAMPLE
ipkg list_installed
#+END_EXAMPLE

provides a list of already IPKG-installed applications.
$Note$ You may use the command grep to help get the information you need.ex:

#+BEGIN_EXAMPLE
ipkg list | grep -i "git" 
#+END_EXAMPLE

Some installs to try

ipkg install nano loads the GNU nano editor, which is much more user-friendly than the bundled vi.
ipkg install less loads the less file viewer, which is murch more user-friendly than the more command.
After installation try ipkg list | less to test the less command. 

Updating installed applications

ipkg update && ipkg upgrade will update any IPKG-installed applications to the latest ported versions.  

* Software
** CLI
*** archive
**** pod catchers

Available Commands

Name Description

 add Add a new podcast
 catchup Tell hpodder to ignore old undownloaded episodes
 disable Stop updating and downloading given podcasts
 download Downloads all pending podcast episodes (run update first)
 enable Enable a podcast that was previously disabled
 fetch Scan feeds, then download new episodes
 import-ipodder Import feeds and history from ipodder or castpodder
 lscasts List all configured podcasts on the system
 lscommands Display a list of all available commands
 lsepisodes List episodes in hspodder database
 lseps Alias for lsepisodes
 rm Remove podcast(s) from hpodder
 setstatus Alter status of individual episodes
 settitle Alter title of a podcast
 update Re-scan all feeds and update list of needed downloadsset title
of podcast show after added
 hpodder settitle -c CASTID -t 'TITLE'
 example:
 hpodder settitle -c 13 -t tuxradar

***** hpodder.pdf

[[nixx_files/attach/hpodder.pdf][Attachment #04 (hpodder.pdf)]]

***** other pod-catchers

mashpodder dependecies
 curl{a} and maybe id3v2{a}?

**** remind 2

***** remind

Warning Yourself in Advance
 %b puts either "tomorrow," "today," or "in x days' time" into the text
of the reminder.
 +## starts showing the message ## days before the actual date. In
combination, they're great for giving you countdowns to birthdays,
anniversaries, movie premieres, whatever. So, putting this in your file:
 REM May 7 2005 +7 MSG My dog's birthday %b.%
 Would show "My dog's birthday in 7 days' time" on May 1, etc. It's even
smart enough to do "1 day's time" instead of "1 days' time". Recurring
Events
 There are two very easy ways to handle recurring events.
 First, leaving out information will cause the task to apply more
generally, i.e., leaving out the year will cause it to repeat every
year, and leaving out the month will cause it to repeat every month. For
example:
 REM February 23 MSG This message will show every February 23rd.%
 REM 23 MSG This message will show the 23rd of every month.%
 REM Thursday MSG This message will show every Thursday.%
 Or, if you need something to repeat every ## days, you can specify
that, as well:
 REM February 23 2005 30 MSG Refill prescription from pharmacy.%
 That would remind you every 30 days to refill your prescription from
the pharmacy, beginning February 23, 2005. include other text files
 You can also do 'includes' with other text files so that you can keep
events segregated, e.g., all your birthdays in one text file, all your
anniversaries in another, all your financial deadlines in a third, all
your favorite T.V. shows in a fourth. All you do is put:
 include [path to subfile]
 in the appropriate spot. I find it useful to have a "master" reminder
file formatted the way I like it, with my birthdays, anniversaries,
financial deadlines, and holidays separated into separate files, and an
"active" file that I usually work out of for the more changing events.
Omit special days (weekends etc..)
 How do you do things like a payday where it's the 15th and the last day
of the month, but not weekends?
 REM 1 -1 OMIT Sat Sun MSG Payday.%
 REM 16 -1 OMIT Sat Sun MSG Payday.%How can I get emailed 15 minutes
before some events?
 1. Add a 15 minute 'tdelta' to any reminders that you want advance
warning for, e.g.
 REM Nov 27 2006 AT 14:00 +15 MSG %"Do something%" %1
 2. Launch a background Remind process in "daemon mode" and tell it to
send triggered reminder messages to 'mail':
 remind -z -k'echo "%s" | -s "reminder" username' ~/.reminders & How can
I generate popup windows to warn me of timed reminders?
 You can use a separate application that takes text as input and simply
displays it in a window; on GNU/Linux systems, gxmessage is one such
program.
 Then you can launch Remind in "daemon mode" and direct it to generate a
popup window for every timed reminder that is triggered:
 remind -z -k'gxmessage -title "reminder" %s &' ~/.reminders &
 You probably want this command to run exactly once, when your desktop
is started. For an X Window desktop, this command could be placed in the
startup script ~/.xinitrc . How can I automatically create a popup
window with my daily reminders?
 The rem command can create a list of your reminders in the terminal. If
you want to get a bit fancier, you can have your day's reminders
automatically pop up in a window at whatever time you like. Just use
cron to dump remind's output to a window periodically, with a cron table
entry like this:
 # Pop up daily reminders at 8:00am
 00 08    export DISPLAY=:0.0 && \
 remind -q -g ~/.reminders | gxmessage -title "today's
reminders" -file -To set end date of reminder using UNTIL
 after setting the date use the UNTIL command to set an end date in
example:
 REM thursday AT 08:30 UNTIL June 29 2009 DURATION 3:30 MSG Statistic
course
 or to trigger from a specific date, for example to trigger a reminder
on the second Thursday of every month, but only from
 Mar 2009 through September 2009
 REM thursday AT 13:00 UNTIL Oct 1 2009 SATISFY [trigdate() >=
'2009-03-01'] MSG second ThursdayUse script to convert ical to REM
 download this script and install (http://jalcorn.net/ical2rem.pl.txt )
 #!/usr/bin/perl -w
 #
 # ical2rem.pl -
 # Reads iCal files and outputs remind-compatible files. Tested ONLY
with
 # calendar files created by Mozilla Calendar/Sunbird. Use at your own
risk.
 # Copyright (c) 2005, 2007, Justin B. Alcorn
 # This program is free software; you can redistribute it and/or
 # modify it under the terms of the GNU General Public License
 # as published by the Free Software Foundation; either version 2
 # of the License, or (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301, USA.
 #
 #
 # version 0.5.2 2007-03-23
 # - BUG: leadtime for recurring events had a max of 4 instead of
DEFAULT LEAD TIME
 #- remove project-lead-time, since Category was a non-standard
attribute
 #- NOTE: There is a bug in iCal::Parser v1.14 that causes multiple
calendars to
 #fail if a calendar with recurring events is followed by a
calendar with no
 #recurring events. This has been reported to the iCal::Parser
author.
 # version 0.5.1 2007-03-21
 #- BUG: Handle multiple calendars on STDIN
 #- add --heading option for priority on section headers
 # version 0.5 2007-03-21
 #- Add more help options
 #- --project-lead-time option
 #- Supress printing of heading if there are no todos to print
 # version 0.4
 #- Version 0.4 changes all written or inspired by, and thanks to
Mark Stosberg
 #- Change to GetOptions
 #- Change to pipe
 #- Add --label, --help options
 #- Add Help Text
 #- Change to subroutines
 #- Efficiency and Cleanup
 # version 0.1 - ALPHA CODE.
 =head1 SYNOPSIS
 cat /path/to/file.ics | ical2rem.pl > ~/.ical2rem
 All options have reasonable defaults:
 --label Calendar name (Default: Calendar)
 --lead-time Advance days to start reminders (Default: 3)
 --todos, --no-todos Process Todos? (Default: Yes)
 --heading Define a priority for static entries
 --help Usage
 --man Complete man page
 Expects an ICAL stream on STDIN. Converts it to the format
 used by the C<remind> script and prints it to STDOUT.
 =head2 --label
 ical2rem.pl --label "Bob's Calendar"
 The syntax generated includes a label for the calendar parsed.
 By default this is "Calendar". You can customize this with
 the "--label" option.
 =head2 --lead-time
 ical2rem.pl --lead-time 3
 
 How may days in advance to start getting reminders about the events.
Defaults to 3.
 =head2 --no-todos
 ical2rem.pl --no-todos
 If you don't care about the ToDos the calendar, this will surpress
 printing of the ToDo heading, as well as skipping ToDo processing.
 =head2 --heading
 ical2rem.pl --heading "PRIORITY 9999"
 Set an option on static messages output. Using priorities can made the
static messages look different from
 the calendar entries. See the file defs.rem from the remind
distribution for more information.
 =cut
 use strict;
 use iCal::Parser;
 use DateTime;
 use Getopt::Long 2.24 qw':config auto help';
 use Pod::Usage;
 use Data::Dumper;
 use vars '$VERSION';
 $VERSION = "0.5.2";
 # Declare how many days in advance to remind
 my $DEFAULT LEAD TIME = 3;
 my $PROCESS TODOS = 1;
 my $HEADING = "";
 my $help;
 my $man;
 my $label = 'Calendar';
 GetOptions (
 "label=s" => \$label,
 "lead-time=i" => \$DEFAULT LEAD TIME,
 "todos!" => \$PROCESS TODOS,
 "heading=s" => \$HEADING,
 "help|?"  => \$help,
 "man"   => \$man
 );
 pod2usage(1) if $help;
 pod2usage(-verbose => 2) if $man;
 my $month =
['None','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
 my @calendars;
 my $in;
 while (<>) {
 $in .= $ ;
 if (/END:VCALENDAR/) {
 push(@calendars,$in);
 $in = "";
 }
 }
 my $parser = iCal::Parser->new();
 my $hash = $parser->parse strings(@calendars);
 ##############################################################
 #
 # Subroutines
 #
 #############################################################
 #
 #  process todos()
 # expects 'todos' hashref from iCal::Parser is input
 # returns String to output
 sub  process todos {
 my $todos = shift;
 
 my ($todo, @newtodos, $leadtime);
 my $output = "";
 $output .= 'REM'.$HEADING.'MSG'.$label.'ToDos:%"%"%'."\n";
 # For sorting, make sure everything's got something
 # To sort on.
 my $now = DateTime->now;
 for $todo (@{$todos}) {
 # remove completed items
 if ($todo->{'STATUS'} && $todo->{'STATUS'} eq 'COMPLETED') {
 next;
 } elsif ($todo->{'DUE'}) {
 # All we need is a due date, everything else is sugar
 $todo->{'SORT'} = $todo->{'DUE'}->clone;
 } elsif ($todo->{'DTSTART'}) {
 # for sorting, sort on start date if there's no due date
 $todo->{'SORT'} = $todo->{'DTSTART'}->clone;
 } else {
 # if there's no due or start date, just make it now.
 $todo->{'SORT'} = $now;
 }
 push(@newtodos,$todo);
 }
 if (! (scalar @newtodos)) {
 return "";
 }
 # Now sort on the new Due dates and print them out.
 for $todo (sort { DateTime->compare($a->{'SORT'}, $b->{'SORT'}) }
@newtodos) {
 my $due = $todo->{'SORT'}->clone();
 my $priority = "";
 if (defined($todo->{'PRIORITY'})) {
 if ($todo->{'PRIORITY'} == 1) {
 $priority = "PRIORITY 1000";
 } elsif ($todo->{'PRIORITY'} == 3) {
 $priority = "PRIORITY 7500";
 }
 }
 if (defined($todo->{'DTSTART'}) && defined($todo->{'DUE'})) {
 # Lead time is duration of task + lead time
 my $diff =
($todo->{'DUE'}->delta days($todo->{'DTSTART'})->days())+$DEFAULT LEAD TIME;
 $leadtime = "+".$diff;
 } else {
 $leadtime = "+".$DEFAULT LEAD TIME;
 }
 $output .= "REM".$due->month abbr." ".$due->day." ".$due->year."
$leadtime $priority MSG \%a $todo->{'SUMMARY'}\%\"\%\"\%\n";
 }
 $output .= 'REM'.$HEADING.'MSG %"%"%'."\n";
 return $output;
 }
 #######################################################################
 #
 # Main Program
 #
 ######################################################################
 print  process todos($hash->{'todos'}) if $PROCESS TODOS;
 my ($leadtime, $yearkey, $monkey, $daykey,$uid,%eventsbyuid);
 print 'REM'.$HEADING.'MSG'.$label.'Events:%"%"%'."\n";
 my $events = $hash->{'events'};
 foreach $yearkey (sort keys %{$events} ) {
 my $yearevents = $events->{$yearkey};
 foreach $monkey (sort {$a <=> $b} keys %{$yearevents}){
 my $monevents = $yearevents->{$monkey};
 foreach $daykey (sort {$a <=> $b} keys %{$monevents} ) {
 my $dayevents = $monevents->{$daykey};
 foreach $uid (sort {

DateTime->compare($dayevents->{$a}->{'DTSTART'},
$dayevents->{$b}->{'DTSTART'})
 } keys %{$dayevents}) {
 my $event = $dayevents->{$uid};
 if ($eventsbyuid{$uid}) {
 my $curreventday = $event->{'DTSTART'}->clone;
 $curreventday->truncate( to => 'day' );
 $eventsbyuid{$uid}{$curreventday->epoch()} =1;
 for (my $i = 0;$i < $DEFAULT LEAD TIME &&
!defined($event->{'LEADTIME'});$i++) {
 if ($eventsbyuid{$uid}{$curreventday->subtract(
days => $i+1 )->epoch() }) {
 $event->{'LEADTIME'} = $i;
 }
 }
 } else {
 $eventsbyuid{$uid} = $event;
 my $curreventday = $event->{'DTSTART'}->clone;
 $curreventday->truncate( to => 'day' );
 $eventsbyuid{$uid}{$curreventday->epoch()} =1;
 }
 }
 }
 }
 }
 foreach $yearkey (sort keys %{$events} ) {
 my $yearevents = $events->{$yearkey};
 foreach $monkey (sort {$a <=> $b} keys %{$yearevents}){
 my $monevents = $yearevents->{$monkey};
 foreach $daykey (sort {$a <=> $b} keys %{$monevents} ) {
 my $dayevents = $monevents->{$daykey};
 foreach $uid (sort {

DateTime->compare($dayevents->{$a}->{'DTSTART'},
$dayevents->{$b}->{'DTSTART'})
 } keys %{$dayevents}) {
 my $event = $dayevents->{$uid};
 if (exists($event->{'LEADTIME'})) {
 $leadtime = "+".$event->{'LEADTIME'};
 } else {
 $leadtime = "+".$DEFAULT LEAD TIME;
 }
 my $start = $event->{'DTSTART'};
 print "REM".$start->month abbr." ".$start->day."
".$start->year." $leadtime ";
 if ($start->hour > 0) {
 print " AT ";
 print $start->strftime("%H:%M");
 print " SCHED  sfun MSG %a %2 ";
 } else {
 print " MSG %a ";
 }
 print "%\"$event->{'SUMMARY'}";
 print " at $event->{'LOCATION'}" if
$event->{'LOCATION'};
 print "\%\"%\n";
 }
 }
 }
 }
 exit 0;
 #:vim set ft=perl ts=4 sts=4 expandtab :
 move script to /usr/local/bin and make executable
 issue this command as root to meet all dependencies
 sudo cpan -i iCal::Parser DateTime
 use this command to convert
 cat /home/zeltak/KN Birthdays.ics | ical2rem.pl >~/.ical2rem
 red is the ical input file and green the output text file
 to use it directly from gcal:
 Or process a remote file, such as one from Google calendar:
 wget -q -O- http://path.com/to/my/google.ics | ical2rem.pl --label
"Gcal" >~/.ical2rem
 You may wish to make a cron entry to automate this:
 0-59/15     cat /path/to/my/other file.ics | ical2rem.pl
>~/.ical2rem
 In the ~/.reminders file, include the new file:
 INCLUDE ./.ical2rem

**** wyrd

***** tips

to set up and editor after this warning:
 Error when launching editor; configure a different editor in ~/.wyrdrc
.
 insert this line in .bashrc and restart or reload bash
 export EDITOR=vi
 You can use any editor you likeHow can I generate popup windows to warn
me of timed reminders (runing at all time)?
 How can I generate popup windows to warn me of timed reminders (runing
at all time)?
 You can use a separate application that takes text as input and simply
displays it in a window; on GNU/Linux systems, gxmessage is one such
program. Then you can launch Remind in daemon mode and direct it to
generate a popup window for every timed reminder that is triggered:
 remind -z -k'gxmessage -title reminder %s &' ~/.reminders &
 You probably want this command to run exactly once, when your desktop
is started. For an X Window desktop, this command could be placed in the
startup script ~/.xinitrc .
 How can I automatically create a popup window with my daily reminders?
 The rem command can create a list of your reminders in the terminal. If
you want to get a bit fancier, you can have your day's reminders
automatically pop up in a window at whatever time you like. Just use
cron to dump remind's output to a window periodically, with a cron table
entry like this:
 # Pop up daily reminders at 8:00am
 00 08    export DISPLAY=:0.0 && \
 remind -q -g ~/.reminders | gxmessage -title today's reminders -file -
 The DISPLAY environment variable is set so that the gxmessage window
gets sent to the primary X Window display.
 To pop up windows for triggered reminders, I added the following
command to ~/.xinitrc :
 remind -z -k'gxmessage -title reminder %s &' ~/.reminders &
 You can use a separate application that takes text as input and simply
displays it in a window; on GNU/Linux systems, gxmessage is one such
program. Then you can launch Remind in "daemon mode" and direct it to
generate a popup window for every timed reminder that is triggered:
 remind -z -k'gxmessage -title "reminder" %s &' ~/.reminders &
 You probably want this command to run exactly once, when your desktop
is started. For an X Window desktop, this command could be placed in the
startup script ~/.xinitrc .
 How can I automatically create a popup window with my daily reminders?
 The rem command can create a list of your reminders in the terminal. If
you want to get a bit fancier, you can have your day's reminders
automatically pop up in a window at whatever time you like. Just use
cron to dump remind's output to a window periodically, with a cron table
entry like this:
 # Pop up daily reminders at 8:00am
 00 08    export DISPLAY=:0.0 && \
 remind -q -g ~/.reminders | gxmessage -title "today's
reminders" -file -
 The DISPLAY environment variable is set so that the gxmessage window
gets sent to the primary X Window display.
 To pop up windows for triggered reminders, I added the following
command to ~/.xinitrc :
 remind -z -k'gxmessage -title "reminder" %s &' ~/.reminders &

***** keys
      
***** operator

%b is a special substitution sequence, and it works like this:
  On 13 December, %b is replaced with "in 7 days time"
  On 19 December, %b is replaced with "tomorrow"
s  On 20 December, %b is replaced with "today"REM Mon Tue Wed Thu
Fri AT 17:00 +15 3 MSG Go home!
 The AT keyword introduces an "AT clause". The 17:00 means that the
trigger time is 5:00 PM. The +15 means Remind starts carping at you
fifteen minutes ahead of time, and the 3 means it annoys you every
three minutes. I got a suitable app called "remind" from:

[[http://www.roaringpenguin.com/penguin/open_source_remind.php][http://www.roaringpenguin.com/penguin/open source remind.php]]
 I can set up appointment dates with a three day advance warning using
 its GUI wrapper "tkremind". I got the reminders on login by putting a
 script in $HOME/.kde/Autostart/ that checks for active reminders, and
if
 found, it displays them with xmessage.
 #!/bin/bash
 if [ ! -z "`remind -h ${HOME}/.reminders`" ]; then
 remind ${HOME}/.reminders | xmessage -center -file - &
 play /usr/share/sounds/KDE Beep Bottles.wav
 fi

*** graphics
**** scrot
***** take screen and upload

examples:

scrot '$%Y-%m-%d.png' -e 'ompload $f'

 or

scrot '%sscrot.png' -e 'mv $f ~/ & terminator --command="ruby
~/scripts/upload ~/$f"'

 test:

scrot '%d-%m.png' -e 'mv $f /media/raid/thd/Ztemp/ && "ompload $f"'

**** xfontsel

***** How to use xfontsel

a program to change X fonts:
 xfontsel
 [[nixx_files/Pasted.jpg]]
 It let you select any of the 14 fields from a list of possible values.
Not every value of a field can be combined with another value of a
second field but the problem will grey out unavailable values.
 You don't need to fill out every single field, using the asterisk let
the system use a reasonable value itself (whatever that means in
detail).
 When searching for a favorite font you might start at the font family
field which is the second one (fmly). After selecting an available
option the number of matched fonts will be updated. Some other important
fields are:
 pxlsz: Pixel size
 wght: Bold or regular font
 slant: Italic or regular font
 If you are happy with the configured font you can click on select in
the xfontsel window which copies the current font description into the
clipboard. You can than paste into the font name field in Worker by
clicking on the middle mouse button.

**** Xosd (osd cat)

***** configure

basic operations:
 issue osd cat and then the comand for exmaple:
 cat /home/zeltak/tmp.txt | osd cat
-f"-adobe-helvetica-bold----60-------" --color=white
 or
 cat /home/zeltak/tmp.txt | osd cat
-f"--lucida-bold-----420-100-100---iso8859-."
 or
 cat /home/zeltak/tmp.txt | osd cat
-f"-dec-terminal-----64-------"
 Options
 -p, --pos=POS
 The vertical position of the text. POS can be top, middle, or bottom.
The default is top.
 -o, --offset=OFFSET
 The number of pixels the text is offset from the top or bottom of the
display. The default is 0.
 -A, --align=ALIGN
 The horizontal alignment of the text. ALIGN can be left, centre or
right. The default is centre.
 -i, --indent=INDENT
 The number of pixels the text is indented from the left or right of the
display. The default is 0.
 -f, --font=FONT
 The font used to display the text. The default is fixed, which may be
too small to see clearly.
 -c, --colour=COLOUR
 The text colour. The default is red.
 -d, --delay=TIME
 The number of seconds the text is displayed before being removed from
the display. The default is 5.
 -l, --lines=LINES
 The maximum number of lines that can be displayed. The default is 5.
 -s, --shadow=SHADOW
 The number of pixels the shadow is offset behind the text. The default
is 0, so no shadow is displayed.
 -S, --shadowcolour=COLOUR
 The colour of the shadow. The default is black.
 -O, --outline=OUTLINE
 The width of the outline, in pixels. The default is 0, so no outline is
displayed.
 -u, --outlinecolour=COLOUR
 The colour of the outline. The default is black.
 -a, --age=SCROLL AGE
 This option affects screen redrawing. If SCROLL AGE seconds pass
before a new line is ready (for example, you're reading from a pipe),
the display is cleared instead of being scrolled. The default is 0,
which means all lines are added to the scroll.
 -w, --wait=SCROLL AGE
 This option also affects screen redrawing. When there is data ready to
be put on screen, this option will cause osd cat to wait until the
display is clear. An alternative to scrolling.

*** internet
**** bitlbee
***** start up

Bitlbee is a daemon so after installing it you should enable it through
systemd

 sudo systemctl enable bitlbee.service

 after the deamon starts, connect to the loopback (127.0.0.1) on port
6667, from weechat:

 /connect 127.0.0.1

 and a bitlbee channel should come up.

***** Step One: Registering

You need register so that all your IM settings (passwords, contacts,
etc) can be saved on the BitlBee server. It's important that you pick a
good password so no one else can access your account. Register with this
password using the register command:

 register PASSWORD

 Be sure to remember your password. The next time you connect to the
BitlBee server you will need to issue:

 identify PASSWORD

 so that you will be recognised and logged in to all the IM services
automatically.

***** add accounts

dd account (gtalk example)


#+BEGIN_SRC sh
acc add jabber you@gmail.com
# Account successfully added with tag gtalk
# You can now use the /OPER command to enter the password
# Alternatively, enable OAuth if the account supports it:
acount gtalk set oauth on
#oauth = `on'
acc gtalk set oauth true
#oauth = `true'
acc gtalk on
#a link will open and you will need to authenicate online 
#+END_SRC

A private message will pop up:

 15:29 <jabber oauth> Open this URL in your browser to authenticate:
[[https://]]...
 15:29 <jabber oauth> Respond to this message with the returned
authorization token.

 The URL will open a wepage in your browser page saying "BitlBee is
requesting permission to:".
 Click "Allow access" and paste the OAuth code back into the private
window.
 [[nixx_files/Image_6cLihNfBgqjl0RIysbd8Rw_0001.png]]
 Your account will then come online, and your contacts will appear.



***** activate account

and activate account with:

 account on

 Follow the rest of the quickstart help

***** jabber specific

to make sure the most active jabber account (cell,gmail etc..) will pop
up first issue these commands in the bitlbee console:

 account 0 set resource select activity

 then

 account 0 set activity timeout 600

***** twitter/Identica

to add a twitter/identica account:
 NOTE: the authinaction step is uneeded in identica

------------------------------------------------------------------------------------------------------------------
 account add twitter USER PASSWORD

------------------------------------------------------------------------------------------------------------------
 then issue :

------------------------------------------------------------------------------------------------------------------
 account on

------------------------------------------------------------------------------------------------------------------
 only in twitter:
 This will start up OAuth authentication. Soon, you will receive a
message from twitter yourusername:
 11:45:07twitter bitlbeeTo finish OAuth authentication, please
visit
[[http://api.twitter.com/oauth/authorize?oauth_token=xxxxxxxxx][http://api.twitter.com/oauth/authorize?oauth token=xxxxxxxxx]]
and respond with the resulting PIN code.
 Open this link in your web browser and you will get something like
this:
 [[nixx_files/Image_t1lXbl-ocd0oIacgDPiXtg_0001.jpg]]
 Once you click onAllowhere, Twitter will show you a seven-digit
password. In your IRC window that you had the link
(twitter YOURUSERNAME) just paste and enter the password to finish the
login process (this may take a fee minutes..)
 To get a "cleaner" look log out :

------------------------------------------------------------------------------------------------------------------
 account off

------------------------------------------------------------------------------------------------------------------
 then issue:

------------------------------------------------------------------------------------------------------------------
 account set 1/mode chat

------------------------------------------------------------------------------------------------------------------
 then issue:
 #save
 then login:

------------------------------------------------------------------------------------------------------------------
 account on

------------------------------------------------------------------------------------------------------------------

***** auto sign in with weechat

in iset, search for localhost
 [[nixx_files/Image_CsTAOYXFmh8XnzVyvEUfeg_0001.png]]
 and then issue this:

 /set irc.server.localhost.command "/msg &bitlbee identify PASSWORD"

***** when restarting weechat

issue:

 identify PASSWORD

 to start all accounts

***** rename contacts

use the rename command:

 rename CURRENT NAME NEW NAME

***** identify and rename nicks

when you have weird nick names such as
  3tx98ypeghw3a0vdx0ljn3
 use the /whois command to figure out who the nick is (look in the
default buffer):
 [ 3tx98ypeghw3a0vdx0ljn3]
(16k6v4b4ipwo93qq8p6brbrcq3@public.talk.google.com): Yair Bergman
 then use the rename command


 rename  3tx98ypeghw3a0vdx0ljn3 yair

***** remove (drop) account

use:
 drop <password>
 Drop your BitlBee registration. Your account files will be removed and
your password will be forgotten. For obvious security reasons, you have
to specify your NickServ password to make this command work.

**** irc
***** register and identify nick
some channels require you to register to use them (₆In Example₆ #Archlinux) 
you can use this

#+BEGIN_SRC
/msg NickServ REGISTER <password> <youremail@example.com﻿>
#+END_SRC

after each login you need to identify yoursef:


first make sure the correct server is selected (in wee chat ctrl-x by default to switch servers) then issue:
#+BEGIN_SRC 
/msg NickServ identify <password>
#+END_SRC

***** What is the difference between an IRC server and an IRC network?

The IRC serveris the software that runs on a server machine,
accepting connections from end users' IRC clients such as yours, and
then handles traffic so that the clients can chat together.
 An IRC network is formed when two or more servers are connected
together. When you chat on a server that is part of an IRC network, you
will be able to talk not only to other users on the same server, but
also to any user on any other server on the same network. However,
users on different networks,e.g.A on IRCnet and B on EFnet, will
not be able to chat with each other using normal IRC functionality.
(Two servers will not form a network by merely being on the Internet
together; they must be explicitly interconnected by their respective
operators.)

***** Create an IRC server

You can add an IRC server with /server command, for example:

------------------------------------------------------------------------------------------------------------------------------------------
 /server add oftc irc.oftc.org/6667

------------------------------------------------------------------------------------------------------------------------------------------
 
***** register irc nick

If your favorite IRC network runs a NickServ service, you should protect
your nickname by registering it.
 To register your nick:
 important: after each login you need to identify yoursef! (see section
5)
 (for channels that require nick registrations etc..)
 1. first make sure the correct server is selected (in wee chat ctrl-x
by default to switch servers)
 in the below case we will be registering to freenode:
 [[nixx_files/Image_Bj1dhhxViX.png]]
 2. Also make sure your nick is set right (your main nick is currently
in use)
 3.go to the weechat info buffer or any other non-buffer channel in non
weechat progs and issue the following command:
 /msg nickserv register PASSWORD EMAIL
 in this example:
 /msg nickserv register salar zeltak@gmail.com
 4. you should receive an email soon and then paste the conformation
email in the irc cleint:
 /msg NickServ VERIFY REGISTER zeltak hpjxmoczxmga
 5. after each login you need to identify yoursef!

 first make sure the correct server is selected (in wee chat ctrl-x by
default to switch servers) then issue:
 /msg NickServ identify <password>

To find out what else NickServ supports, simply type the following:
 /msg NickServ help

***** identify yourslef on server

after each login you need to identify yoursef!

 1)first make sure the correct server is selected(in wee chat ctrl-x
by default to switch servers)
 then issue:
 /msg NickServ identify <password>
 for zeltaj
 /msg NickServ identify salar

***** Register a Channel with ChanServ

If you want to create your own channel for discussing a particular
topic, you will want to register this channel with ChanServ. This lets
you keep control over who can access the channel and what rights other
people can have on it. Simply create your channel by joining it:
 /join #MyChannel
 First, make sure you are identified with NickServ; you then can proceed
with registering your channel:
 /msg ChanServ register #MyChannel [password]
 You are now the owner of this channel and can control every aspect of
it. For a full list of the commands supported by ChanServ, type:
 /msg ChanServ help

***** how can I copy/paste text without pasting nicklist

how can I copy/paste text without pasting nicklist
use ctrl-shift

***** general

***** irssi

white zombie> ArZa: ok im in irssi with screen
 17:22 < ArZa> then /set awl automode screen
 17:23 < white zombie> sweet :)
 17:23 < white zombie> ok i get a blue box on the right..but i cant see
the nicks?
 17:25 < coekie> channels you mean? if you want nicks you loaded the
wrong script :)
 17:25 < ArZa> :P
 17:25 < white zombie> oh gothca thats for channels cool
 17:25 < ArZa> :)
 17:26 < white zombie> i do get some wierd behivour while its on. the
channel list is blue and it kinda spills to the main window :0
 17:26 < white zombie> i get part of the main window with blue
rectangles
 17:26 < ArZa> awl is for channels, nicklist for nicks, maybe make
another window to read fifo where nick-data is sended, that should work
but it's
 pretty impractical to have nick in another window/set
awl maxlines <num>
  num : number of lines to use for the window list (0 to disable,
negative lock)

***** add servers and channels

To set it up with Freenode and #crunchbang, type the following:
 /network add -nick <nick> Freenode
 /server add -auto -network Freenode irc.freenode.net
 /channel add -auto #crunchbang Freenode
 Now, if you registered your nick earlier, you can set it to autologin
as well.
 /network add -autosendcmd "/msg nickserv identify <password>;wait 2000"
Freenode
 And now you're all set up to join #crunchbang every time you start
Irssi!
 To save your current configurations, type:
 /save
 You can also see a list of your saved networks by typing:
 /network
 By default, Irssi includes a few commons servers. I always get rid of
these, and you can too by typing:
 /network remove <server>

***** scripts

***** general

How to load a script?
 Put them into ~/.irssi/scripts/ and in irssi do
 /script load script.pl
 or better There is a default alias for /script load
 /run How do I run scripts automatically at startup?
 Put them into
 ~/.irssi/scripts/autorun/ directory.
 Or better would be if you placed them in ~/.irssi/scripts/ and create
symlinks to autorun directory (eg. cd ~/.irssi/scripts/autorun/ ; ln -s
../script.pl .)ow do I unload scripts?

 A: Just do /script unload script.pl Is there an easy way of managing
script?
 Try scriptassist.pl, it can update and manage your scripts as well as
install new ones and search the database.

***** adv windowlist.pl

to change the look of the text etc in the bar use the /set
awl display key
 example:
 /set awl display key $Q%K|%n$H$C$S
 my example:
 /set awl display key $Q.%n$H$C$S
 Note: you can play with variables:
 # $C : Name
 # $N : Number of the Window
 # $Q : meta-Keymap
 # $H : Start highlighting
 # $S : Stop highlighting
 don't forget to use $S if you used $H before!

***** help from script

#/script load awl
 #
 #
 # Hint: to get rid of the old [Act:] display
 # /statusbar window remove act
 #
 # to get it back:
 # /statusbar window add -after lag -priority 10 act
 # }}}
 ##########
 # {{{ OPTIONS
 ########
 #
 # {{{ /set awl display nokey <string>
 # /set awl display key <string>
 # /set awl display nokey active <string>
 # /set awl display key active <string>
 #  string : Format String for one window. The following $'s are
expanded:
 # $C : Name
 # $N : Number of the Window
 # $Q : meta-Keymap
 # $H : Start highlighting
 # $S : Stop highlighting
 # /+++++++++++++++++++++++++++++++++,
 # |  I M P O R T A N T :  |
 # | |
 # | don't forget to use $S if you |
 # | used $H before! |
 # | |
 # '+++++++++++++++++++++++++++++++++/
 # XXX NOTE ON  active: there is a BUG somewhere in the length
 # XXX calculation. currently it's best to NOT remove $H/$S from those
 # XXX settings if you use it in the non-active settings.
 # }}}
 # {{{ /set awl separator <string>
 #  string : Charater to use between the channel entries
 # you'll need to escape " " space and "$" like this:
 # "/set awl separator \"
 # "/set awl separator \$"
 # and {}% like this:
 # "/set awl separator %{"
 # "/set awl separator %}"
 # "/set awl separator %%"
 # (reason being, that the separator is used inside a {format })
 # }}}
 # {{{ /set awl prefer name <ON|OFF>
 #  this setting decides whether awl will use the active name (OFF) or
the
 # window name as the name/caption in awl display .
 # That way you can rename windows using /window name myownname.
 # }}}
 # {{{ /set awl hide data <num>
 #  num : hide the window if its data level is below num
 # set it to 0 to basically disable this feature,
 # 1 if you don't want windows without activity to be shown
 # 2 to show only those windows with channel text or hilight
 # 3 to show only windows with hilight
 # }}}
 # {{{ /set awl maxlines <num>
 #  num : number of lines to use for the window list (0 to disable,
negative
 # lock)
 # }}}
 # {{{ /set awl columns <num>
 #  num : number of columns to use in screen mode (0 for unlimited)
 # }}}
 # {{{ /set awl block <num>
 #  num : width of a column in screen mode (negative values = block
display)
 # /+++++++++++++++++++++++++++++++++,
 # |  W A R N I N G !  |
 # | |
 # | If your block display looks |
 # | DISTORTED, you need to add the |
 # | following line to your .theme |
 # | file under |
 # | abstracts = { : |
 # | |
 # | sb act none = "%n$"; |
 # | |
 # '+++++++++++++++++++++++++++++++++/
 #.02:08:26. < shi> Irssi::current theme()->get format <.. can this be
used?
 # }}}
 # {{{ /set awl sbar maxlength <ON|OFF>
 #  if you enable the maxlength setting, the block width will be used
as a
 # maximum length for the non-block statusbar mode too.
 # }}}
 # {{{ /set awl height adjust <num>
 #  num : how many lines to leave empty in screen mode
 # }}}
 # {{{ /set awl sort <-data level|-last line|refnum>
 #  you can change the window sort order with this variable
 # -data level : sort windows with hilight first
 # -last line : sort windows in order of activity
 # refnum : sort windows by window number
 # }}}
 # {{{ /set awl placement <top|bottom>
 # /set awl position <num>
 #  these settings correspond to /statusbar because awl will create
 # statusbars for you
 # (see /help statusbar to learn more)
 # }}}
 # {{{ /set awl all disable <ON|OFF>
 #  if you set awl all disable to ON, awl will also remove the
 # last statusbar it created if it is empty.
 # As you might guess, this only makes sense with awl hide data > 0 ;)
 # }}}
 # {{{ /set awl automode <sbar|screen|emulate lightbar>
 #  this setting defines whether the window list is shown in statusbars
or
 # whether the screen hack is used (from nicklist.pl)
 # }}}
 # }}}
 ##########
 # {{{ COMMANDS
 ########
 # {{{ /awl paste <ON|OFF|TOGGLE>
 #  enables or disables the screen hack windowlist. This is useful when
you
 # want to mark & copy text that you want to paste somewhere (hence the
 # name). (ON means AWL disabled!)
 # This is nicely bound to a function key for example.
 # }}}
 # {{{ /awl redraw
 #  redraws the screen hack windowlist. There are many occasions where
the
 # screen hack windowlist can get destroyed so you can use this command
to
 # fix it

***** twirssi

Installing Net::Twitter
 Open up a terminal and run
 Code:
 sudo perl -MCPAN -e shell
 If it's your first time using cpan it'll ask you a few questions about
configuring it. I just typed yes on the first question to let it
configure itself, you can do whatever you'd like.
 Once it's done loading you should see a cpan[1]>
 Type the following: (each one being a seperate command)
 Code:
 reload index
 install Net::Twitter
 (I recommend typing yes to all the questions of installing
other/required modules)
 Installing WWW::Shorten::TinyURL
 While still in CPan type:
 Code:
 install WWW::Shorten::TinyURL
 This will shorten any url you give it before it tweets, so there's no
command you need to use.
 Installing Twirssi

 Download the script: http://twirssi.com/twirssi.pl
 Put it in either ~/.irssi/scripts or ~/.irssi/scripts/autorun. It
should be easy to see what the difference is, but if not, scripts in
/autorun load when irssi starts.
 & setting it up
 Open a terminal and type the following:
 Code:
 irssi
 /window new hidden
 /window name twitter
 /script load ~/.irssi/scripts/autorun/twissir.pl (or wherever you put
it)
 Twirssi should come up in the newly created twitter window. To have
that window come up each time (allowing twirssi to autostart), type
/layout save (note that this saves the layout of every window, so be
sure to close private messages and unwanted channels first).
 To login - /twitter login username password
 To tweet - /tweet yourstatus
 To reply - /twitter reply username:num
 To set an account to automatically login type:
 /twitter usernames username
 /twitter passwords password

***** fcountry

 First install IP::Country::Fast through cpan
 sudo perl -MCPAN -e shell
 then
 install P::Country::Fast

***** tricks

state your mood?
 /me hello
 prints
  zeltak hello

***** windows

close a window (buffer)
 /window close
 or better yet
 /wcClear a window
 /c

***** with the curses gui, how can i copy-paste text without pasting
nicklist

With the Curses GUI, how can I copy/paste text without pasting
nicklist?

 You can use a terminal with rectangular selection (like rxvt-unicode,
konsole, gnome-terminal, ...). Key is usually ctrl + alt + mouse
selection.

***** ignore command

To ignore joins, parts, quits in irssi:
 To ignore joins, parts, quits in irssi for a channel:
 /ignore #ubuntu +JOINS +PARTS +QUITS
 for all channels:
 /ignore  JOINS PARTS QUITS NICKS
 find a list of ignores
 /ignore
 for help on ignore issue
 /help ignore
 to get help on what to ignore issue
 /help levels
 to delete an ignore (unignore) issue
 /unignore #NUMBER (find the number by issuing /ignore )
 IE
 /unignore 3

***** irc jargon.pdf

[[nixx_files/attach/output.pdf][Attachment #05 (output.pdf)]]

**** minbif

***** setup

1) add the minbif server:
 /server add minbif 127.0.0.1/6667
 2)in iset give the minbif server a password
 [[nixx_files/screen.jpg]]
 3) in iset stillm change auto connect and auto reconnect to on
 4)restart weechat or connect manually to the minbif server

**** weechat
***** setup
****** Inital Setup

1) Add the server you want and connect to it at the same time with the
/connect command:
 /connect freenode
 2)download and copy weeget.py to ~/.weechat/python/autoload/
 load script: /python autoload
 scripts list: /weeget list (for help: /help weeget)
 3)install iset thorough weeget and go to iset with the /iset command
 4)change the irc option for the relevant server you want to autoconnect
to "on"
 [[nixx_files/Image_Wsj4PGK5g2YJJ867SJNCAA_0001.jpg]]
 5)define which channels you want to autojoin, each channel starts with
a # and seperated by a coma (,)
 [[nixx_files/Image_Wsj4PGK5g2YJJ867SJNCAA_0002.jpg]]
 adjust other properties for the freenode channel as you need
(autoreconnect etc..)
 6)

****** add a new server



to quicly ad a new IRC server use the /server command:
 /server add oftc irc.oftc.net/6667

 where
 oftc is the user given name
 irc.oftc.net is the actual server adress
 then just connect to the server:
 /connect oftc

****** /Server

list, add or remove IRC servers
 

list: list servers (without argument, this list is displayed)
 listfull: list servers with detailed info for each server
 add: create a new server
 servername: server name, for internal and display use
 servername: server name, for internal and display use
 hostname: name or IP address of server, with optional port (default:
6667), many
 addresses can be separated by a comma
 temp: create temporary server (not saved)
 option: set option for server (for boolean option, value can be
omitted)
 nooption: set boolean option to 'off' (for example: -nossl)
 copy: duplicate a server
 rename: rename a server
 keep: keep server in config file (for temporary servers only)
 del: delete a server
 deloutq: delete messages out queue for all servers (all messages
WeeChat is currently
 sending)
 jump: jump to server buffer
 raw: open buffer with raw IRC data

 
 Examples:

 /server listfull
 /server add oftc irc.oftc.net/6697 -ssl -autoconnect
 /server add oftc6 irc6.oftc.net/6697 -ipv6 -ssl
 /server add freenode2
chat.eu.freenode.net/6667,chat.us.freenode.net/6667
 /server add freenode3 irc.freenode.net -password=mypass
 /server copy oftc oftcbis
 /server rename oftc newoftc
 /server del freenode
 /server deloutq

****** Help

to get help on any subject in weechat issue:

------------------------------------------------------------------------------------------------------------------------------------------
 /help SUBJECT

------------------------------------------------------------------------------------------------------------------------------------------
 for example

------------------------------------------------------------------------------------------------------------------------------------------
 /help connect

------------------------------------------------------------------------------------------------------------------------------------------
 
 will output this:
 
 connect to IRC server(s)
 
 -all: connect to all servers defined in configuration
 -open: connect to all opened servers that are not currently
connected
 servername: internal server name to connect (server must have been
created by /server add)
 -nojoin: do not join any channel (even if autojoin is enabled on
server)
 hostname: hostname (or IP) of a server
 port: port for server (6667 by default)
 option: set option for server (for boolean option, value can be
omitted)
 nooption: set boolean option to 'off' (for example: -nossl)
 
 Examples:
 /connect freenode
 /connect irc.oftc.net/6667
 /connect irc6.oftc.net/6667 -ipv6
 /connect irc6.oftc.net/6697 -ipv6 -ssl
 /connect my.server.org/6697 -ssl -password=test

****** options-configure

****** save config while weechat is running

to save the config while weechat is running issue the save commad:

/save

****** cmd help

when activated it shows the options for each command on the right:
 its useful to bind it to a key to make it appaear disappear when
needed:
 /key bind ctrl-H /cmd help

***** mouse

Enable mouse
 To enable mouse at startup:

 /set weechat.look.mouse on

 To enable mouse now, press Alt+m or do following command:

 /mouse enable

 It is possible to temporarily disable mouse, and bind that on a key.
For example key Alt+x to disable mouse for 10 seconds:

 /key bind meta-x /mouse toggle 10

 When mouse is enabled in WeeChat, you can use Shift modifier to select
or click in terminal, as if the mouse was disabled (on some terminals
like iTerm, you have to use Alt instead of Shift).
 [[nixx_files/Image_s1VS05YAOzloGzBmswTWiA_0001.png]]

***** compile weechat from source

Compile from Git:
 Get and build sources
 $ mkdir ~/weechat-git
 $ cd ~/weechat-git
 If you have git installed, you can just clone the git repository
(recommended way):
 $ git clone git://git.sv.gnu.org/weechat.git
 $ cd weechat
 Note: Later, you can run "git pull" in this directory, to get deltas
with the latest updates.
 NOTE: On first attempt in Ubuntu make sure packages libncurses5-dev
and libncursesw5-dev , Python-dev and perl-dev and others (see command
below)
 sudo apt-get install libncursesw5-dev libncurses5-dev python-dev.
perl-dev libaspell-dev libtolua-dev tcl-dev libneon27-gnutls-dev
python-gnutls
 To build sources, cmake is recommended:
 $ mkdir build
 $ cd build
 $ cmake .. -DPREFIX=$HOME/weechat-git -DCMAKE BUILD TYPE=Debug
 $ make
 $ make install
 Run WeeChat
 It's recommended to run WeeChat with another directory (different from
stable version), with option --dir.
 Command is:
 ~/weechat-git/bin/weechat-curses --dir ~/.weechat-dev
 If you're still awake you should see the familiar interface and brag
about having the newest possible version of WeeChat. ;)
 Now if you experience strange behavior (it may have issues or crash or
boil your beer) don't hesitate to join #weechat at irc.freenode.net and
tell us.
 If it doesn't crash - tell us too, we need your feedback!

***** colors

Note:only fg (foreground) "bold" colors work in weechat
 the way to define 'bold' is lightCOLOR ('lightgreen')
 Buffer
 attention = green
 traffic =yellow
 weechat.color.chat time color cyan
 the delimiters (:) between time
 weechat.color.chat prefix buffer color cyan
 [[nixx_files/Image_JJv2Q1RQBo8VDMnsM-MBdw_0001.png]]
 weechat.color.separator color cyan

***** Info

You can run

weechat-curses --colors

or use command:
 /color
 in WeeChat to display limits for your environment.
 Extended colors
 WeeChat dynamically allocates color pairs when colors are used on
screen (to display buffers and bars).
 In addition to basic colors, you can use a color number between 1 and
the limit of your terminal.
 Use command /color to see current colors and limits.
 to see all possible term colors:
 Alt+c (or ESC-c)
 you can temporarily switch to terminal colors to choose a color.
 For example if you want to display time in orange in buffer, do:

 /set weechat.color.chat time 214

 Or if you want a very dark green background for status bar:

 /set weechat.bar.status.color bg 22

***** bars

[[nixx_files/2011-02-06-10-04-31-scrot.jpg]]
 is for
 [[nixx_files/2011-02-06-10-04-38-scrot.jpg]]

***** colorize a specific nick

use this command:
 /set irc.look.nick color force "NICK:COLOR ; NICK2:COLOR2"
 IE:
 /set irc.look.nick color force "Rasi:red ; Qball:blue"

***** chnage own nick color

use this command
 weechat.color.chat nick self
 IE:
 Pasted from
<[[http://www.weechat.org/files/doc/stable/weechat_user.en.html][http://www.weechat.org/files/doc/stable/weechat user.en.html]]>

***** buffers

buffers.color hotlist low is when there are no messages ('low
acivity')
 buffers.color hotlist message is when there are messages

***** define what colors are assined to nicks

this command specifies which colors would be used for nics:
 weechat.color.chat nick colors: text color for nicks (comma separated
list of colors)
 for example to create a monochrome list of colors for nics use:

***** my colors (zeltak)

Holo theme:
 blue background: '027'

***** look&feel

****** auto set layout every weechat restart

use:
 /set irc.server.<servername>.command "/layout apply"
 /set irc.server.<servername>.command delay "30"

****** higlights for subtle

dl the sript by unexsit (alos attached here) into
.weechat/python/autoload,
 do /python load alarm.py.
 And start weechat in an urxvt
 that was launched with 'urxvt -urgentOnBell'.
 weechat just prints a \a, urgentOnBell sets the urxvt on urgent when
it receives a \a.

****** layout

layout save/apply/reset layout for buffers and windows
 /layout save [buffers|windows]
 apply [buffers|windows]
 reset [buffers|windows]

 save: save current layout
 apply: apply saved layout
 reset: remove saved layout

 buffers: save/apply only buffers (order of buffers)

 windows: save/apply only windows (buffer displayed by each window)

 Without argument, this command displays saved layout.
 example:

 /layout save buffers

****** move buffer

to move buffer/query's position use the /buffer move X command for
example:
 /buffer move 3
 will move the current buffer to #3
 a good thing is to alias it to a command in this way:
 /alias bmove buffer $1; buffer move $2
 where thenafter issuing
 /bmove #gmpc 4
 will move buffer #gmpc to position 4

****** easiest way to add permanent buffer

1) open iset:
 /iset
 2) go to the iset buffer and enter "join" and press enter
 you will see the irc.server.freenode.autojoin
 [[nixx_files/Image_UUrXCsHng2TXZlZgV2E8fA_0001.jpg]]
 press ctrl+enter and manually add channels you want to connect to.

****** status bar

use iset to configure
 look for
 weechat.bar.status.items string " "
 
 and add variables (from wee chat user guide) inside ""
 example
 weechat.bar.status.items string "[+tab],[time]"
 current bar before changes:
 weechat.bar.status.items
"[time],[buffer count],[buffer plugin],buffer number+:+buffer name+{buffer nicklist count}+buffer filter,[lag],[hotlist],completion,scroll,[alternatetz]"

****** filter join/part/quit messages
to enable
#+BEGIN_EXAMPLE
/set irc.look.smart_filter on
/filter add irc_smart  irc_smart_filter 
#+END_EXAMPLE

also ?Alt+=? will enable disable it


****** aspell

****** enable spelling suggestions

Suggestions
 Suggestions are displayed in a bar item called "aspell suggest". The
number of suggestions is set in option aspell.check.suggestions.
 To enable suggestions you must set option aspell.check.suggestions to
an integer  0 (Ie 3) and add the bar item "aspell suggest" to a bar,
like status.
 Example of suggestions with english dictionary (en):
 [12:55] [6] [irc/freenode] 3:#test(+n){4} [print,prone,prune]
 config examples:
 [[nixx_files/Image_uiGaKwxLwdFMfhXLUpTUYQ_0001.png]]

***** scripts-plugins

****** $General

****** Load a script

the best way to do so is to add the scrips (through weeget) or manually
to the autostart folder in each script language folder (perl,python
etc..) and issue the follwoing command per relevant script language:

 /perl reload

 would reload all perl scripts

****** alternatetz

this script displays another time zone in the weechat bar
 Note: Before using weeget to install it make sure python-tz
(python-pytz on arch) is installed- both the python2 and python3
versions ( see arch image:)
 [[nixx_files/Image_sFGxhadW6udNkyn1X3pIsw_0001.png]]

 then Just put
 [alternatetz]
 on your bar items to add it.
 [[nixx_files/2011-01-12-08-42-34-scrot.jpg]]
 then define the time zone ( time zones can be found here
/usr/share/zoneinfo)
 [[nixx_files/2011-01-12-08-41-58-scrot.jpg]]

****** aspell

the plug in is installed with the Ubuntu package and if you compile you
need to compile it (see compiling section)
 after its loaded you need to do the following:
 1)with iset set the aspell.check.default dict variable from " " to
"YOURDIC" as the example below
 [[nixx_files/Image_-1MZjrpVuGXwSDnfLMzlYA_0001.png]]
 2)make sure you have the proper aspell dictionaries installed by
issuing:
 /aspell dictlist
 you should now get red markings on the channels when a misspelled word
is typed.

 NOTE: it does not correct/suggest just shows the incorrect word
 Aspell plugin lets you check spelling in command line. It is
possible to use many languages by buffer.
 
 4.3.1. Options (aspell.conf)
 aspell.check.commands
 description: comma separated list of commands
for which spell checking is enabled (spell
 checking is disabled for all other commands)
 type: string
 values: any string (default value:

"ame,amsg,away,command,cycle,kick,kickban,me,msg,notice,part,query,quit,topic")
 aspell.check.default dict
 description: default dictionary (or comma
separated list of dictionaries) to use when buffer has
 no dictionary defined (leave blank to disable
aspell on buffers for which you didn't explicitly
 enabled it)
 type: string
 values: any string (default value: "")
 aspell.check.during search
 description: check words during text search in
buffer
 type: boolean
 values: on, off (default value: off)
 aspell.check.real time
 description: real-time spell checking of words
(slower, disabled by default: words are checked
 only if there's delimiter after)
 type: boolean
 values: on, off (default value: off)
 aspell.check.word min length
 description: minimum length for a word to be
spell checked (use 0 to check all words)
 type: integer
 values: 0 .. 2147483647 (default value: 2)
 aspell.look.color
 description: color used for misspelled words
 type: color
 values: a color name (default value: lightred)

****** awaylog

Log highlights msg to core buffer

****** bandwidth

to make bandwidth visible you have to add ",[bandwidth]" (without "") in
your weechat.bar.status.items

****** buffer script (buffer.pl)

with the new versions of buffer.plone can assign colors to also
favorite channels called 'whitelist'
 here is all the color options using iset:
 [[nixx_files/2011-02-13-09-44-29-scrot.jpg]]
 to define your 'whitelist" enter them in the
color whitelist buffers and enter them as comma separated list of
channels (with servername!)
 for example (also see above image):
 freenode-.#weechat,freenode-.#kubuntu-de
 then define the actual color you want them to appear in :
 color whitelist message


****** bufsave

save the current buffer to a file
 to use:
 /bufsave /PATH/TO/FILE

****** chanact

''' Hotlist replacement.
 Usage: first, put [chanact] in your status bar items.
 " weechat.bar.status.items".
 Then you can bind keys to buffers with
 /key bind meta-w /buffer #weechat
 And then it will show as [Act: w] on your status bar.
 # script options
 settings = {
 "lowest priority" : '0',
 'message' : 'Act:',
 'item length' : '8',
 'color default' : 'default',
 'color 1' : 'white',
 'color 2' : 'cyan',
 'color 3' : 'lightcyan',
 'color 4' : 'yellow',
 'color 8' : 'cyan',
 'use keybindings' : 'on',
 'delimiter' : ',',
 'skip number binds' : 'on',

****** chanmon

Usage:
 
 /monitor
 is used to toggle a channel monitoring on and off, this needs
 to be used in the channel buffer for the channel you wish to toggle
 to split window
 issue
 /window splith 70
 open the chanmon buffer and issue
 # /set weechat.bar.status.conditions "active"
 # /set weechat.bar.input.conditions "active"

****** completion

similar to vim abbriviations, that is complete text with tabs
 add: adds a new completion, <word> => <text>.
 del: deletes a completion.
 Without arguments it displays current completions.
 
 <word> will be replaced by <text> when pressing tab in input line,
 where <word> is any word currently behind the cursor.
 
 Setup:

 For this script to work, you must add the template
%(completion script) to the default completion template, use iset for
this (search for completion)
 weechat.completion.default template
"%(nicks)|%(irc channels)|%(completion script)"
 examples:

 /completion add wee WeeChat

 (typing wee<tab> will replace 'wee' by 'WeeChat')
 or

 /completion add weeurl
[[http://www.weechat.org/][http://www.weechat.org/]]

****** country

1)update ip database with
 /country update
 Commands:
 /country
 Prints country for a given ip, uri or nick. See /help country
 # Settings:
 #  plugins.var.python.country.show in whois:
 # If 'off' /whois or /whowas replies won't contain country information.
 # Valid values: on, off
 #  plugins.var.python.country.show localtime:
 # If 'off' timezone and local time infomation won't be looked for.
 # Valid values: on, off

****** go

go script change with iset to short names for easier read

****** histsearch

used to search command history (like ctrl-r) in bash
 You can bind command to a key, for example:

 /key bind meta-e /histsearch

****** iset

press alt+enter to change values or help on a script issue
 alt+'V' : toggle help bar
 Interactive set
 f file : show options for a file (for example: 'f weechat' or 'f irc')
 s section : show options for a section (for example: 's look')
 text : show options with 'text' in name (for example: 'nicklist')
 Keys for iset buffer:

 up,down : move one option up/down
 pgup,pdwn : move one page up/down
 ctrl+'L' : refresh options and screen
 alt+space : toggle boolean on/off
 alt+'+' : increase value (for integer or color)
 alt+'-' : decrease value (for integer or color)
 alt+'I',alt+'R': reset value of option
 alt+'I',alt+'U': unset option
 alt+enter : set new value for option (edit it with command line)
 text,enter : set a new filter using command line (use '' to see all
options)

****** launcher

/help launcher will output some examples
 to catch a message, try something like:
 /launcher SERVER,irc in privmsg COMMAND
 example for bitlebee:
 /launcher 127.0.0.1,irc in privmsg ssh -o
PreferredAuthentications=publickey 192.168.0.1 aplay -q
/home/zeltak/MLT/sounds/gl.wav

****** logger

/logger [list | set level | disable]
 logger plugin configuration
 list: show logging status for opened buffers
 set: set logging level on current buffer
 level: level for messages to be logged (0 = logging disabled, 1 = a
few messages (most important) .. 9 = all messages)
 disable: disable logging on current buffer (set level to 0)
 Options "logger.level." and "logger.mask." can be used to set level
or mask for a buffer, or buffers beginning with name.
 Examples:
 set level to 5 for current buffer:
 /logger set 5
 disable logging for current buffer:
 /logger disable
 set level to 3 for all IRC buffers:
 /set logger.level.irc 3
 disable logging for main WeeChat buffer:
 /set logger.level.core.weechat 0
 use a directory per IRC server and a file per channel inside:
 /set logger.mask.irc "$server/$channel.weechatlog"
 Log levels used by IRC plugin:
 1: user message, notice, private
 2: nick change
 3: server message
 4: join/part/quit
 9: all other messagesLog levels
 Main Example:
 /set logger.level.irc.freenode.#amarok 3
Logging is made with a level for each buffer. Default level is 9 (log
all messages displayed on buffer). You can change level for one buffer,
or a group of buffers.
 Possible levels are 0 to 9. Zero means "do not log anything" and 9
means "log all messages".
 Plugins are using different levels for messages displayed. IRC plugin
uses following levels:
 level 1: message from user (on channel or private)
 level 2: nick change (you or someone else)
 level 3: any server message (except join/part/quit)
 level 4: server message join/part/quit
 So if you set level 3 for an IRC channel, WeeChat will log all
messages, but not join/part/quit.
 Some examples:
 set level 3 for IRC channel #weechat:
 /set logger.level.irc.freenode.#weechat 3
 set level 3 for freenode server buffer:
 /set logger.level.irc.server.freenode 3
 set level 3 for all channels on server freenode:
 /set logger.level.irc.freenode 3
 set level 2 for all IRC buffers:
 /set logger.level.irc 2

****** newsbar

# Listens for highlights and sends them to a bar.
 #
 #
 # Usage:
 # see /help newsbar
 this will create a box ontop of weechat with X lines (user defined)
showing highlights

****** nickregain

nickregain
 Automatically checks every x mins to see if your prefered nicks are
available
 and issues either /nick or a custom nickserv command
 Usage:
 /nickregain on|off|now|all
 Set regain on or off for a server
 'now' runs a one time test on current server
 'all' runs a one time test on all servers
 /set plugins.var.perl.nickregain.<servername> enabled
 This sets whether the nickregain is will run on a server
 /set plugins.var.perl.nickregain.<servername> command
 Setting this will make nickregain issue this command instead of just
"/nick <nick>" and override all other methods
 You WILL need to add the '/nick' command to this
 Use $nick to mark the nick, Commands can be separated using ;
 e.g /msg nickserv ghost $nick;/nick $nick;/msg nickserv identify
password
 See '/msg nickserv help' for exact syntax\n
 /set plugins.var.perl.nickregain.<servername> delay
 This sets the delay between each /ison check
 Used incase you can't see the old nick quit or nick change
 Default: 60

****** url grabber

Usage:
 The /url command provides access to all UrlGrab functions. Run:
 '/url help' for complete command usage.
 In general, use '/url list' to list the entire url list for the
current
 channel, and '/url <n>' to launch the nth url in the list.
 For example, to launch the first (and most-recently added) url in the
list,
 you would run '/url 1'
 From the server window, you must specify a specific channel for the
 list and launch commands, for example:
 /url list weechat
 /url 3 weechat
 Configuration:
 The '/url set' command lets you get and set the following options:
 historysize
 The maximum number of URLs saved per channel. Default is 10
 method
 Must be one of 'local' or 'remote' - Defines how URLs are launched
by
 the script. If 'local', the script will run 'localcmd' on the
host.
 If 'remote', the script will run 'remotessh remotehost remotecmd'
on
 the local host which should normally use ssh to connect to another
 host and run the browser command there.
 localcmd
 The command to run on the local host to launch URLs in 'local'
mode.
 The string '%s' will be replaced with the URL. The default is
 'firefox %s'.
 remotessh
 The command (and arguments) used to connect to the remote host for
 'remote' mode. The default is 'ssh -x' which will connect as the
 current username via ssh and disable X11 forwarding.
 remotehost
 The remote host to which we will connect in 'remote' mode. For
ssh,
 this can just be a hostname or 'user@host' to specify a username
 other than your current login name. The default is 'localhost'.
 remotecmd
 The command to execute on the remote host for 'remote' mode. The
 default is 'bash -c "DISPLAY=:0.0 firefox %s"' Which runs bash,
sets
 up the environment to display on the remote host's main X display,
 and runs firefox. As with 'localcmd', the string '%s' will be
 replaced with the URL.
 cmdoutput
 The file where the command output (if any) is saved. Overwritten
 each time you launch a new URL. Default is
~/.weechat/urllaunch.log
 default
 The command that will be run if no arguemnts to /url are given.
 Default is help

****** urlbar

settings = {
 "visible amount" : '5', # Amount of URLS visible in urlbar at any
given time
 "visible seconds" : '5', # Amount of seconds URLbar is visible
 "use popup" : 'on', # Pop up automatically
 "remember amount" : '25', # Max amout of URLs to keep in RAM
 "ignore" : 'grep', # List of buffers to ignore. (comma separated)
 "show timestamp" : 'on', # Show timestamp in list
 "show nick" : 'on', # Show nick in list
 "show buffername" : 'on', # Show buffer name in list
 "show index" : 'on', # Show url index in list
 "time format" : '%H:%M', # Time formatif you disable the pop up
(with iset and changing "on" to "off") you can show the bar by binding a
button to toggle it for exmaple:
 /key bind meta-| /urlbar toggle
 or run that command:
 /urlbar toggle

****** weeget

Weeget- WeeChat scripts manager
 To get menu issue
 /weeget
 list: list scripts (search text if given)
 show: show detailed information about a script (in repository)
 install: install/upgrade script(s)
 check: check if local scripts needs upgrade
 update: update local scripts cache
 upgrade: upgrade all local scripts if they are obsolete
 remove: remove script(s)
 Indicators in lists (first column):
 i script is installed
 ? unknown script
 r script is running (loaded)
 N script is obsolete (new version available)
 Examples:
 /weeget list => list all scripts
 /weeget list game => list all scripts with text/tag "game"
 /weeget install weetris => install script weetris.pl
 /weeget remove weetris => remove script weetris.pl

****** weechat-remote-notify.py

there are 2 versions of this script script:

the original:
[[http://weechat.org/scripts/source/stable/pyrnotify.py.html/][http://weechat.org/scripts/source/stable/pyrnotify.py.html/]]
and the modified:
[[https://github.com/ObiWahn/weechat-remote-notify/blob/master/weechat-remote-notify.py][https://github.com/ObiWahn/weechat-remote-notify/blob/master/weechat-remote-notify.py]]

the change is that the modified has extra options like sounds and
notification type. setup is similar to both just change the name to
either weechat-remote-notify.py or pyrnotify.py

setup

On the "client" (where the notifications will end up), host is the
remote host where weechat is running:
issue this command (or use it in a script launched on startup)

python2 location/of/weechat-remote-notify.py 4321

also make sure your ssh connection script has this in it:

urxvt -name ssh_home +sb -e ssh -R 4321:localhost:4321 zeltak@zeltak.homelinux.com


Important to remember is that you should probably setup the connection

with public key encryption and use something like autossh to do this in the background.

on the server where weechat is running:

issue:

/python load weechat-remote-notify.py

and set the port

/set plugins.var.python.remote-notify.port 4321

Note: some config can be done from iset (see example below) the rest like sound ect have to be edited in script.

[[~/Dropbox/Org/Tech/linux_files/Image_gaSUQvGEXQWDPT16k2irBA_0001.png]]

****** personal zeltak configs

****** my aliases

clear buffer /cc or /C
 close buffer /xx or /cb
 go up nicklist /U
 go down nicklist /D
 register zeltak nick /nic

****** my binds

` is bound to the /go command
 ctrl+down: input history global next
 ctrl+up: input history global prev
 key alt-x to toggle nicklist bar: /key bind meta-x /bar toggle
nicklist

****** Get notifications

follow this chat (files are located in /bin ON BOTH ¡server¡ and -client- )

#+begin_src sh
rasi    on your laptop:
 rasi    carnager@caprica ~ % fb bin/sup bin/notify-client.sh
 rasi    https://paste.xinu.at/xn8og/
 rasi    https://paste.xinu.at/ucBc/
 rasi    save both somewhere in path
 rasi    and in notify-client.sh change the ssh host
 rasi    in my case its just called "karif"
 rasi    now on karif you need this:
 rasi    https://paste.xinu.at/g4j9/ <- save this in path
 rasi    and last the weechat script:
 rasi    https://paste.xinu.at/NmrPSa/
rasi    let me know when you saved the files and edited the notify-client.sh
rasi    the nice thing is: this is a general purpose solution, it does not only work with weechat
rasi    http://53280.de/vid/20130530010728.webm
        [http://is.gd/SCqj0r]
zeltak  ok all done
rasi    ok
rasi    the weechat script is also loaded?
zeltak  mm one sec
zeltak  btw can we ask bluewind to install mc/ranger?
rasi    sure
zeltak  hmmm python load dosent see the script
zeltak  i chmod +x it
rasi    use absolute path
zeltak  kk
zeltak  kk
zeltak  done
rasi    you might need to restart weechat anyway
rasi    ok
rasi    now
rasi    plugins.var.python.remote_notify.notify_socket
rasi    edit this setting
zeltak  kk
rasi    it needs to point to your notify.sock file
zeltak  kk
rasi    so /home/zeltak/notify.sock
zeltak  kk
zeltak  done
zeltak  its /bin/notify.socket
zeltak  but done
zeltak  (for me)
rasi    no
rasi    it has to be ~/notify.sock
rasi    (for now)
rasi    this will change
zeltak  oh wait
rasi    but the client has the path hardcoded
zeltak  the notify.sock is a file it creates r do i need to create ir
zeltak  it
rasi    it will be created by notify-srv.pl
zeltak  kk
zeltak  done
rasi    k
rasi    start the server like this:
rasi    notify-srv.pl /home/zeltak/notify.sock
zeltak  hmm on karif right?
rasi    yes
zeltak  kk
zeltak  ok working
rasi    on your laptop start the client: notify-client.sh
zeltak  hmmm permission denied
rasi    dont you have something like keychain?
zeltak  yes
zeltak  nvm
zeltak  i hade to chmod +x it
zeltak  works now
 rasi    kk
 rasi    to test it:
 rasi    echo "test" | socat stdin unix-connect:/home/carnager/notify.sock
 rasi    on server
 rasi    oops
 rasi    wrong path
 zeltak  :)
 rasi    echo "test" | socat stdin unix-connect:/home/zeltak/notify.sock
 zeltak  sweet :)
 rasi    now when you restart weechat it should work there too
 rasi    (as long as the script is autoloaded, of course)
 zeltak  its is, so how does one make the notify-srv start after a karif reboot?
 rasi    put it in ~/.bootrun
 zeltak  you mean symlink it?
 rasi    no
 rasi    create the file
 rasi    and chmod +x it
 rasi    https://paste.xinu.at/Lk0mqx/
 rasi    this is mine
 rasi    this way tmux also starts automatically
 zeltak  kk
 rasi    if you want highlights for the active window too:
 rasi    plugins.var.python.remote_notify.smart_notification              string   "off"
 zeltak  got it. btw is .bootrun a dir or a file?
 rasi    [02:16]   Rasi | create the file
 rasi    [02:16]   Rasi | and chmod +x it


#+end_src

***** Alias's

***** def keybinds

f11-f12 > go up down nicklist
 f5-f6 > go up down buffers

***** Creating an Alias

To create an Alias to better/quicker operation us the alias command
 for example

-----------------------------------------------------------------------------------------------------------------------
 /alias nic /msg NickServ identify

-----------------------------------------------------------------------------------------------------------------------
 nic - the new alias that you will use
 /msg NickServ identify- the actual command to use
 To remove an alias, use command /unalias.

                                                                                               
 From weechat Manual:
 /alias [[-completion completion] alias name [command [arguments]]]
 create an alias for a command
 completion: completion for alias (optional, by default completion is
done with target command)
 alias name: name of alias (can start or end with "" for alias
listing)
 command: command name (many commands can be separated by
semicolons)
 arguments: arguments for command
 Without argument, this command lists all defined alias.
 Note: in command, special variables are replaced:
 $n: argument 'n' (between 1 and 9)
 $-m: arguments from 1 to 'm'
 $n-: arguments from 'n' to last
 $n-m: arguments from 'n' to 'm'
 $: all arguments
 $~: last argument
 $nick: current nick
 $channel: current channel
 $server: current server
 To remove an alias, use command /unalias.
 Examples:
 alias /split to split window horizontally:
 /alias split /window splith
 alias /hello to say "hello" on all channels but not on #weechat:
 /alias hello /allchan -exclude=#weechat msg  hello
 alias /forcejoin to send IRC command "forcejoin" with completion of
/sajoin:
 /alias -completion %%sajoin forcejoin /quote forcejoin

***** keyboard bindings

key bind/unbind keys
 /key list|listdefault|listdiff [<context>]
 bind <key> [<command> [<args>]]
 bindctxt <context> <key> [<command> [<args>]]
 unbind <key>
 unbindctxt <context> <key>
 reset <key>
 resetctxt <context> <key>
 resetall -yes [<context>]
 missing [<context>]
 list: list all current keys (without argument, this list is
displayed)
 listdefault: list default keys
 listdiff: list differences between current and default keys (keys
added, redefined or deleted)
 context: name of context ("default" or "search")
 bind: bind a command to a key or display command bound to key
(for context "default")
 bindctxt: bind a command to a key or display command bound to key,
for given context
 command: command (many commands can be separated by semicolons)
 unbind: remove a key binding (for context "default")
 unbindctxt: remove a key binding for given context
 reset: reset a key to default binding (for context "default")
 resetctxt: reset a key to default binding, for given context
 resetall: restore bindings to the default values and delete ALL
personal bindings (use carefully!)
 missing: add missing keys (using default bindings), useful after
installing new WeeChat version
 When binding a command to a key, it is recommended to use key alt+k (or
Esc then k), and then press the key to bind: this will insert key code
in command line.
 For context "mouse" (possible in context "cursor" too), key has format:
"@area:key" or "@area1>area2:key" where area can be:
 : any area on screen
 chat: chat area (any buffer)
 chat(xxx): char area for buffer with name "xxx" (full name including
plugin)
 bar(): any bar
 bar(xxx): bar "xxx"
 item(): any bar item
 item(xxx): bar item "xxx"
 The key can start or end with '' to match many mouse events.
 A special value for command with format "hsignal:name" can be used for
context mouse, this will send the hsignal "name" with the focus
hashtable as argument.
 Another special value "-" can be used to disable key (it will be
ignored when looking for keys).
 Examples:
 key alt-x to toggle nicklist bar:
 /key bind meta-x /bar toggle nicklist
 key alt-r to jump to #weechat IRC channel:
 /key bind meta-r /buffer #weechat
 restore default binding for key alt-r:
 /key reset meta-r
 key "tab" to stop search in buffer:
 /key bindctxt search ctrl-I /input search stop
 middle button of mouse on a nick to retrieve info on nick:
 /key bindctxt mouse @item(buffer nicklist):button3 /msg nickserv
info ${nick}

***** Intro

key bind/unbind keys
 /key list|listdefault|listdiff [<context>]
 bind <key> [<command> [<args>]]
 bindctxt <context> <key> [<command> [<args>]]
 unbind <key>
 unbindctxt <context> <key>
 reset <key>
 resetctxt <context> <key>
 resetall -yes [<context>]
 missing [<context>]
 list: list all current keys (without argument, this list is
displayed)
 listdefault: list default keys
 listdiff: list differences between current and default keys (keys
added, redefined or deleted)
 context: name of context ("default" or "search")
 bind: bind a command to a key or display command bound to key
(for context "default")
 bindctxt: bind a command to a key or display command bound to key,
for given context
 command: command (many commands can be separated by semicolons)
 unbind: remove a key binding (for context "default")
 unbindctxt: remove a key binding for given context
 reset: reset a key to default binding (for context "default")
 resetctxt: reset a key to default binding, for given context
 resetall: restore bindings to the default values and delete ALL
personal bindings (use carefully!)
 missing: add missing keys (using default bindings), useful after
installing new WeeChat version
 When binding a command to a key, it is recommended to use key alt+k (or
Esc then k), and then press the key to bind: this will insert key code
in command line.
 Examples:
 key alt-x to toggle nicklist bar:

 /key bind meta-x /bar toggle nicklist

 key alt-r to jump to #weechat IRC channel:

 /key bind meta-r /buffer #weechat

 restore default binding for key alt-r:

 /key reset meta-r

 key "tab" to stop search in buffer:

 /key bindctxt search ctrl-I /input search stop

 middle button of mouse on a nick to retrieve info on nick:

 /key bindctxt mouse @item(buffer nicklist):button3 /msg nickserv info
${nick

}

***** get the name of key code for weechat

get the name of key code for weechat

 press "alt-k"
 then pressing the key you get the code to the key
 then you can use that code with /key

***** how to bind a key

use this command to bind a key

 /key bind <key> /buffer close

 
 When binding a command to a key, it is recommended to use key alt+k (or
Esc then k), and then press the key to bind: this will insert key code
in command line.
 for example

 /key bind ctrl-W /buffer close

 or /key bind ` /go

 /key bind meta-OB /input history global next

***** bind keys to channels

use this:

/key bind meta-q /buffer #MyChannel

***** reset all keys to default

/key resetall -yes

***** unbind key

key unbind meta-`

***** nicks

***** change nick

issue
 /nick NAMETOCHANGE
 IE
 /nick zeltak

***** identify nic using alias

after each login you need to identify yoursef!

 first make sure the correct server is selected
 (in wee chat ctrl-x by default to switch servers) then issue:

 /nic PASSWORD

 NOTE: i have /nic as an alias (nic = "/msg NickServ identify"), if you
dont use the full command:


 /msg NickServ identify

 an>

***** auto register a nick at weechat startup

use this command:
 If server supports SASL, you should use that instead of sending command
for nickserv authentication, for example:
 /set irc.server default.sasl mechanism dh-blowfish
 /set irc.server.freenode.sasl username "mynick"
 /set irc.server.freenode.sasl password "xxxxxxx"

***** freenode zeltak pass

the freenode nic identify password is : salar

***** logs

***** change format of logs

if you want to change the log saving formats to something more tidy u
can use /iset and put this in:
 [[~/Dropbox/Org/Tech/linux_files/2011-02-06-12-46-12-scrot.jpg]]
 or:
 logger.file.mask string "%Y/%m/$server/$channel.log"
 logger.file.name lower case boolean on
 logger.file.path string "/home/zeltak/.weechat/logs"
 logger.file.replacement char string " "
 logger.file.time format string "%Y-%m-%d %H:%M:%S"
 
***** weechat 'server' (irc relay)

***** setup and start a relay on weechat

1) to start the relay running in weechat server its best to use weechat
own protocol.
 this will work with supported apps like weechat for android
 issue

 /relay add weechat 9001

 you should see this:

 relay: listening on port 9001 (relay: weechat, max 5 clients)
 relay: relay "weechat" (port 9001) added

 2) its also possible to add a by network relays (which can be used with
other non wee chat clients (IE xchat etc)

 /relay add irc.freenode 8000

 3)after you connect you can set a password for it, replacing
"your-secret-password" with your chosen password.
 Note: Connections with weechat are not encrypted, so in theory an
evesdropper can intercept your password and any other communications
sent.
 issue this (or use iset)

 /set relay.network.password "your-secret-password"

 A note about firewalls
 Since weechat is now listening for connections on port 8001, you need
to make sure your firewall is setup to allow that port. If you are
behind a router you will need to configure port forwarding. This is
beyond the scope of this guide however.

***** connect from a client

to connect from a client
 the weechat one can be found here:

[[https://github.com/ubergeek42/weechat-android/downloads][https://github.com/ubergeek42/weechat-android/downloads]]
 note: remember to open that port in the firewall of the router
 also its best to sett a password for the connection
 Configure the app
 The first time you run the app, you will need to configure it. Press
Menu, then Preferences.
 Relay Host - Set this to the ip address/hostname of the machine where
weechat is running
 Relay Port - Set this to the port the weechat relay server is
listening on, if you're following along it should be 8001.
 Relay Password - The password you configured for the connection in
weechat earlier.
 You may wish to change some of the other preferences at this time as
well. Once you leave the preferences page, press Menu, then Connect. If
everything was configured successfully you should be looking at a list
of all the buffers you have open in weechat.

***** WeeCloud

Running and installing weecloud

[[https://github.com/eirikb/weecloud][https://github.com/eirikb/weecloud]]
 1. install node.js
 2.then do this:

 git clone https://github.com/eirikb/weecloud
 cd weecloud
 npm install

 3.to run:

 node app.js

 In example[[~/Dropbox/Org/Tech/linux_files/Image_UgiVhk8rmFRJGuzdYvD53Q_0001.png]]:

 after you installed the weecloud thingie, you should forward port 5000
[[~/Dropbox/Org/Tech/linux_files/Image_UgiVhk8rmFRJGuzdYvD53Q_0002.png]]in your router
 then to connection
 [[http://MACHINE:5000]]
 Note: for local host you need local IP
 [[~/Dropbox/Org/Tech/linux_files/Image_UgiVhk8rmFRJGuzdYvD53Q_0003.png]]

***** save

***** save buffer position

issue:

 /layout save

 the positions shoud be saved for the next session

**** google command line

***** picasa

***** dl a folder

first issue the google picasa get command and issue the username
desired:

--> google picasa get
 Please specify user: USERNAME

 then list the albums avilable

google picasa list-albums

finally dl the desired albums
 google picasa get November 9

*** Mmedia
**** abcde

***** rip a cd

to quicklt rip a cd (assuming the cd is in the normal path) issue:
 abcde -d /dev/cdrom

**** moc player

***** lynx-like directory browsing

here's a handy tip that I'm finding so useful to warrant mentioning to
everybody else. Lynx-like directory browsing:
 go up = LEFT
 go = RIGHT ENTER
 The standard keybindings for left and right are MPlayer-like, but I
browse directories much more than I seek files and I think many others
do. Of course you need to redefine the seeking keybindings too. Here are
some sane values, at least for US keyboards:
 seek backward = [
 seek forward = ]
 seek backward fast = {
 seek forward fast = }
 Thanks to whoever made the keys customizable!

**** caudec-music file encoder 
install from svn (IE download from svn and move to system path, usually ~/bin)
#+BEGIN_SRC 
svn co svn://caudec.outpost.fr/caudec
#+END_SRC
or from AUR
https://aur.archlinux.org/packages/caudec/

then make sure your system has all dependecies in place:

bash procps-ng grep bc which coreutils shntool sed findutils flac opus-tools wget vorbis-tools lame 

to use make use of this script

!warning if you install from AUR change ~/bin/caudec/caudec to caudec! 

#+BEGIN_SRC sh
#!/bin/bash
cd "$1"
if [ "$3" = opus ]
  then export CODEC="opus -q 128"
elif [ "$3" = ogg ]
  then export CODEC="ogg -q 7"
else
  echo "Syntax: batchenc INPUTDIR OUTPUTDIR {opus,ogg}"
  :
exit
fi
find  -type f -name '.flac' -exec dirname '{}' ';' | sort -u | while read d; do ~/bin/caudec/caudec -P "$2" -k -c $CODEC "$d"/.flac; done

#+END_SRC

you luanch it with following syntax:

./SCRIPTNAME  /path/to/flac/basedir /path/to/outputdir ENCODER

this will go recursivly in basedir and convert all FLAC file to OUTPUTDIR

In example:

#+BEGIN_SRC sh
./oggenc.sh /home/zeltak/Zmusic/L/Led\ Zeppelin /home/zeltak/ZH_tmp ogg        
#+END_SRC
**** ffcsat (screencast cli app)

issue ffcast and start the screencast
 finish by pressing q in the CLI
**** youtube-dl
***** Dl the audio from a youtube video
#+begin_src sh
youtube-dl -x URL
#+end_src
*** office

**** Mutt

***** colors

[[http://www.mutt.org/doc/manual/manual-6.html#quote_regexp][$]]

[[http://www.mutt.org/doc/manual/manual-6.html#quote_regexp][quote regexp]]
in the bo dy of

a message)
 quoted1, quoted2, ..., quotedN (higher levels of quoting)
 search (hiliting of words in the pager)
 signature
 status (mode lines used to display info about the mailbox or message)
 tilde (the ``~'' used to pad blank lines in the pager)
 tree (thread tree drawn in the message index and attachment menu)
 underline (hiliting underlined patterns in the body of messages)
 foreground and background can be one of the following:
 white
 black
 green
 magenta
 blue
 cyan
 yellow
 red
 default
 colorx
 foreground can optionally be prefixed with the keyword bright to
makethe foreground c olor boldfaced (e.g., brightred).
 Mutt also recognizes the keywords color0, color1, ...,colorN-1 (N
being the number of colors supported by your terminal).

***** config

***** confirm mutt exit

to confirm exiting mutt put this in your muttrc
 set quit=ask-no

***** keybinds

***** Changing the default key bindings

Usage: bind key function menu
 This command allows you to change the default key bindings (operation
invoked when pressing a key). key is the key (or key sequence) you wish
to bind.
 To specify a control character, use the sequence \Cx, where x is the
letter of the control character (for example, to specify control-A use
``\Ca''). Note that the case of x as well as \C is ignored, so that \CA,
\Ca, \cA and \ca are all equivalent.
 In addition, key may consist of:
 \t tab
 \r carriage return
 \n newline
 \e escape
 up up arrow
 down down arrow
 left left arrow
 right right arrow
 pageup Page Up
 pagedown Page Down
 backspace Backspace
 delete Delete
 key does not need to be enclosed in quotes unless it contains a space
(`` '').
 function specifies which action to take when key is pressed.
 menu specifies in which menu the binding belongs. The currently defined
menus are:
 alias-menu
 attach-menu
 folder-menu
 internal-pager
 main-menu
 send-attach-menu
 send-menu
 url-menu

***** examples

#Some real macros
 macro index S <tag-prefix><save-message>? "Save tagged messages"
 macro index Y "!echo 'fetching...' ; getmail 2>&1 > /dev/null &\n"
"Check for new mail via fetchmail"
 macro pager Y "!echo 'fetching...' ; getmail 2>&1 > /dev/null &\n"
"Check for new mail via fetchmail"
 macro browser Y "!echo 'fetching...' ; getmail 2>&1 > /dev/null &\n"
"Check for new mail via fetchmail"
 # Show documentation when pressing F1
 #macro generic <f1> "!links /usr/local/doc/mutt/html/manual.html\n"
"Show Mutt documentation"
 #macro index <f1> "!links /usr/local/doc/mutt/html/manual.html\n" "Show
Mutt documentation"
 #macro pager <f1> "!links /usr/local/doc/mutt/html/manual.html\n" "Show
Mutt documentation"
 #URLview macro's
 macro attach B ":set pipe decode\n|urlview\n:unsetpipe decode\n"
"Call urlview to extract URLs out of a message"
 macro pager B ":set pipe decode\n|urlview\n:unsetpipe decode\n" "Call
urlview to extract URLs out of a message"
 macro index B ":set pipe decode\n|urlview\n:unsetpipe decode\n" "Call
urlview to extract URLs out of a message"
 # Get me out off here
 macro index Q ":set quit=yes\nqy" "Quit mutt without asking"
 macro browser Q ":set quit=yes\nqqy" "Quit mutt without asking"
 # Moves
 bind index <up> previous-entry
 bind index <down> next-entry
 macro index <right> <display-message>
 macro index <left> <sync-mailbox><change-folder>? "Go to the folder
menu"
 bind index - previous-page
 bind index <space> next-page
 macro pager <left> <exit>
 macro pager <right> <noop>
 macro pager <up> <previous-line>
 macro pager <down> <next-line>
 macro pager <pageup> <previous-entry>
 macro pager <pagedown> <next-entry>
 macro index <tab> <next-unread><enter>
 macro browser <space> <check-new>
 macro browser <right> <select-entry>
 macro browser <left> <home><return> "Goto previous folder"
 #views
 bind index $ sort-mailbox
 bind index P collapse-all
 bind index L limit
 #commands
 bind index x sync-mailbox
 macro pager x <sync-mailbox>q
 bind index l list-reply
 bind pager l list-reply
 bind pager \n noop
 bind pager P noop # I don't have a printer. Save the trees :P
 bind compose <return> send-message
 # If I would bind these the d button wouldn't work anymore.
 macro index <delete> d
 macro pager <delete> d
 macro pager s <save-message>?
 macro index s <save-message>?
 # From
[[http://www.spinnaker.de/mutt/keybind][http://www.spinnaker.de/mutt/keybind]]
 macro index A "!$EDITOR ~/.mutt/aliases\n:source ~/.mutt/aliases\n"
"Edit aliases file and reload it"
 macro pager A "!$EDITOR ~/.mutt/aliases\n:source ~/.mutt/aliases\n"
"Edit aliases file and reload it"
 # I don't have a printer. Poor trees. :'(
 bind index p noop
 bind pager p noop
 macro index M "T \n;WN\^t \n" "Mark all messages read"
 macro pager M "T \n;WN\^t \n" "Mark all messages read"
 bind index \cr search-opposite
 bind index \cs search
 bind pager \cr search-opposite
 bind pager \cs search

***** intro

You can reconfigure Mutt's keybindings to suit your habits. The syntax
for a custom keybinding is simple:
 bind menu key function
 The menu can be one of several menus of functions available within
Mutt; the index menu where you view messages, the editor menu where
messages are composed, the pager menu which is where you read messages,
or any of several others. Mutt also has a generic menu that comprises
functions that are available in most menus, except the pager and editor
menus.
 Let's look at a few examples. The default key for sorting messages in
Mutt is o, which brings up the list of options to sort messages by. If
you wanted to change that to $ instead, you could use the following
directive:
 bind index $ sort-mailbox
 This tells Mutt to use $ for the sort-mailbox function when in the
message index menu. I usually sort messages by the From header, so I've
set up a macro to do that in one step rather than two:
 macro index $ of

***** launch correct mime type with mailcap file

[[~/Dropbox/Org/Tech/linux_files/attach/mailcap][Attachment #06 (mailcap)]]
 Mutt uses the mailcap file and the auto view configuration command to
determine how to display MIME attachments
 download an example mailcap file or use the one attached here
 place it in /home/user/ and rename it to .mailcap
 edit the file and change to the prog you want to run with each filetype

***** launch urls with keyboard

***** urlscan

install from AUR
 install debianutils as well
 Ensure that the BROWSER environment variable is set in zshrc/bashrc
 export BROWSER="firefox"
 then add these macros in your muttrc
 macro index,pager \cb "<pipe-message> urlscan<Enter>" "call urlscan to
extract URLs out of a message"
 macro attach,compose \cb "<pipe-entry> urlscan<Enter>" "call urlscan to
extract URLs out of a message"

***** urlview

urlview
 Install urlview through package manager
 then create .urlview in the home dir and put this inside:
 REGEXP ((((ht|f)tp)|mailto|https):(//)?[\^ >"\t]|www\.[-a-z0-9.]+)[\^
.,;\t>">]
 COMMAND /home/zeltak/.mutt/urlhandler.sh %s > /dev/null
 then create the file /home/zeltak/.mutt/urlhandler.sh, make it
executable and put this inside
 #!/bin/sh
 #chromium-browser -newpage $1
 firefox-beta-bin $1
 Change the comment to choose which browser you want launched
 Finally in muttrc put these lines
 macro index U |urlview\n "Extract a URL, and queue for later download"
 macro pager U |urlview\n "Extract a URL, and queue for later download"

***** my binds

Esc-m reload muttrc (source muttrc file)

***** offlineimap
****** default config example

#+BEGIN_SRC emacs-lisp :results none

#+END_SRC

****** auto check mail

Offlineimap is kind of buggy for me, if I use its built in refresh
mechanism I find it'll often hang or quit and I'll be left with an
unsynced mailbox. Therefore, I set offlineimap to never refresh and put
a [re]start script in a cronjob to take care of it.
 For now, you can test by running offlineimap -o.
 Once you're sure things are syncing fine, set up a cron job to run a
script called mailrun.sh every 3 minutes:
 #crontab -e
 then add this:
 /3     /path/to/mailrun.sh
 Then create that script with these contents:
 #!/bin/sh
 PID=`pgrep offlineimap`
 [[ -n "$PID" ]] && exit 1
 offlineimap -o -u Noninteractive.Quiet &>/dev/null &
 exit 0
 And make it executable via chmod +x /path/to/mailrun.sh

****** inital setup

Installing
 Install the offlineimap package with pacman:
 # pacman -S offlineimap
 then its time to create the place you want the maildir to be located. i
use ~/.mail:
 #mkdir ~/.mail
 then is to setup Offlineimap to keep ~/.mail in sync with our gmail's
IMAP folder. This is a two way sync so anything moved, deleted, or sent
from any IMAP-connected interface or our local mutt interface will act
exactly the same. This also has the added benefit of storing offline,
local copies of all your mails.
 create ~/.offlineimaprc with an editor or copy an example from
/usr/share/offlineimap/offlineimap.conf and open for editing.
 then paste this (or zeltaks script see attached)
 ([general]
 # NOTE: cronjob calls the quiet UI with -u
 ui = TTY.TTYUI
 accounts = GMail
 [Account GMail]
 localrepository = Gmail-Local
 remoterepository = Gmail-Remote
 [Repository Gmail-Local]
 type = Maildir
 localfolders = ~/.maill/GMail
 [Repository Gmail-Remote]
 type = Gmail
 remoteuser = username@gmail.com
 remotepass = gmailpassword
 realdelete = no
 # line breaks added for readability
 nametrans = lambda folder: re.sub('.Spam$', 'spam',
 re.sub('.Drafts$', 'drafts',
 re.sub('.Sent Mail$', 'sent',
 re.sub('.Starred$', 'flagged',
 re.sub('.Trash$', 'trash',
 re.sub('.All Mail$', 'archive', folder))))))
 Send mail:
 to send mail its better to use the default verison of mutt in arch that
comes built in with a smtp service if not you can use msmtp
 Msmtp

Now we need a way to send mails via gmail's smtp server. I like msmtp,
you can also use other smtp clients.
 If you choose to install msmtp, the config file is at ~/.msmtprc and
should look like this:

# msmtp config file
 account default
 host smtp.gmail.com
 port 587
 protocol smtp
 auth on
 from user@gmail.com
 user user@gmail.com
 password XXXXX
 tls on
 tls nocertcheck

***** setup in mutt

***** quick shorts

o -sorts mails by date/thread etc
 m-send mail
 l- limit command You can limit to unread, read, flag and more. All the
standard sorting and tagging commands work when in a limited view. If
you want to see your entire Inbox again, limit to all.
 delete, flag or tag using regex as well. For instance, to delete all
messages matching a pattern, press D. Fill in your regular expression
match pattern and press Enter. With only a few keystrokes, you're done.
Use F for flagging and T for tagging messages by regular expression
matching.

***** refresh mutt while runing

issue:
 :source /home/zeltak/.mutt/muttrc

***** Tagging a Batch Queue

Tagging a Batch Queue

So, what is all this tagging about? Mutt allows you to tag messages
 that you then can act on in one fell swoop. Think of it as a batch
 queue. Press T to tag messages into the queue, or use T to tag using
 regular expression matching. Then, use ; to prefix any command normally
 available to a single message, and all tagged messages will be affected
 in a
batch.[[~/Dropbox/Org/Tech/linux_files/10115f6.jpg]][[http://www.linuxjournal.com/files/linuxjournal.com/linuxjournal/articles/101/10115/10115f6.jpg][F]]igure
6. Tagging Mail Matching a RegexOnce messages are tagged, press ;-D to
delete all tagged messages, ;-F
 to flag and so on. Again, pressing ? shows all available keystrokes.
 Imagine how quickly you now can delete the hordes of unread
mailing-list messages.

***** use googles address book

install goobook thorugh your package manager
 then
 To use it in mutt put it some place and add it to your muttrc like so:
 set query command = "/home/jorge/contactos.py '%s'"
 and then set some keybindings (I prefer tab to the default ctrl-t):
 bind editor <Tab> complete-query
 bind editor \^T complete
 Now every time you hit tab it will autocomplete with your gmail
contacts ... Ctrl-T will query your local aliases if you have those. I
prefer to keep everything in my gmail anyway so I don't use that last
one. Thanks to Kyle Rankin and Rick Harding helping find and configure
this.

***** Using mutt with Gmail IMAP

Basic IMAP configuration
 So, the basic IMAP google options are put in ~/.muttrc :
 # Change the following six lines to match your Gmail account details
 set imap user = "ikloog@gmail.com"
 set imap pass = "XXXXXXX"
 set smtp url = "smtp://ikloog@smtp.gmail.com:587/"
 set smtp pass = "XXXXXXX"
 set from = "ikloog@gmail.com"
 set realname = "Itai Kloog"
 # Basic config, you can leave this as is
 set folder = "imaps://imap.gmail.com:993"
 set mbox= +Inbox
 set spoolfile= +Inbox
 set imap check subscribed
 set hostname = gmail.com
 set mail check = 120
 set timeout = 300
 set imap keepalive = 300
 set postponed = "+[GMail]/Drafts"
 set record = "+[GMail]/Sent Mail"
 sorting
 Gmail was the first app I've used that sorted threads by the date of
the last message in the thread. This is quite nice, because in the times
when I used mutt with POP, I sorted thread by the first message, so if
somebody sends a message to some ancient thread few screens of scrolling
back I could easily miss it.
 So, I've configured similar sorting in mutt, with the only difference
that I prefer newer threads to be in the bottom, not on top.
 So I've added the following lines to my ~/.muttrc:
 set sort=threads
 set sort aux=last-date-received
 The first line says that messages should be grouped in thread, the
second one determines the order of the threads, so in our case we sort
by newest message in the thread. You might want to consult muttrc(5)
manpage for other sorting options.

**** newsbeuter

***** add google reader support

to set up Google Reader integration with Newsbeuter, enter this in a
terminal:
 vim ~/.newsbeuter/config
 And paste this:
 urls-source "googlereader"
 googlereader-login "your-googlereader-account"
 googlereader-password "your-password"

**** Sup

***** New note

**** Task warrior

***** add tab completion

1)install bash-completion:
 pacman -S bash-completion
 2) Copy this file to somewhere (e.g.
~/.bash completion.d/.task completion.sh).
 3) Added the following line to your .bashrc:
 source ~/.bash completion.d/task completion.sh

***** aliases

ALIASES

 You can create aliases to effectively rename commands:

 $ task config alias.zzz list
 and then issue:
 $ task zzz

you can abbreviate those, too.

 $ task z

***** Annotations

Annotations are little notes that can be added to a task. There can be
any number, and each has a time stamp.

 task 1 annotate the 13th looks good

 to remove anno:

 $task 29 denotate mach

***** colors

[[~/Dropbox/Org/Tech/linux_files/2010-12-12-16-35-22-scrot.jpg]]
 add a color rule that uses a blue background for all tasks in the Home
project:

 $ task config color.project.Home on blue

 Note: the color scheme is FB on BG
 for tags:

 $task config color.tag.nix yellow

 Now suppose we which to use a bold yellow text color for all cleaning
work:
 $ task config color.keyword.clean bold yellow
 The precedence for the color rules is determined by the configuration
variable

due.today,active,blocked,overdue,due,keyword,project,tag,recurring,pri,tagged

***** create task from pentadactyl url

use any of these command:
 :js io.run("task", ["add", buffer.URL], false); dactyl.echomsg("Added
task for" + buffer.URL);
 or better yet bind it to a key:
 :map <foo> -js io.run("task", ["add", buffer.URL], false);
dactyl.echomsg("Added task for" + buffer.URL);
 to add arguments (like add a tag) use something like this:
 map <A-i> -js io.run("task", ["add", buffer.URL,"+DL"], false);
dactyl.echomsg("Added task for" + buffer.URL);
 map <A-i> -js io.run("task", ["add", buffer.title,buffer.URL,"+DL"],
false); dactyl.echomsg("Added task for" + buffer.URL);
 or better:
 "integrate into takswarrior
 map et -js io.run("task", ["add", buffer.title,buffer.URL,"+DL"],
false); dactyl.echomsg("Added task for" + buffer.title);

***** create tasks from mutt

Setup Mutt Macro
 in muttrc enter the follwoing line:
 macro index t "<pipe-message>mutt2task<enter>"
 or alternitavly:
 macro index t "<pipe-message>mutt2task<enter>
<save-message>+TODO<enter>"
 But then Make sure you add a TODO message folder in your mutt
configuration so you can see the TODO messages!! The save-message part
saves the email to my TODO folder.
 What this does is set the t key, while in the index of mutt, as a
macro. The macro pipes the email message to a script I wrote that strips
the header from the message and adds that as a task.
 Setup Mutt2Task Script
 create the following script, make sure you place this script somewhere
in $PATH and make it executable.:
 #!/bin/sh
 /usr/bin/task add +email E-mail: $(grep 'Subject' $ | awk -F: '{print
$2}')
 What this does is call the command task add which adds a new task. The
+email tags the task, and the E-mail: $(grep 'Subject' $ | awk -F:
'{print $2}') greps the Subject line and then prints the part after
Subject: from the email, therefor just giving me the subject text.

***** Due dates

Due dates can be specified as dates, durations into the future or past,
mnemonic, ordinal or day of week.
 $ task 1 due:7/31/2010
 $ task 1 due:2wks
 $ task 1 due:-2wks
 $ task 1 due:eom
 $ task 2 due:8th
 $ task 2 due:sunday
 $ task 5 due:eow

***** lists

to get a full list use:
 task list
 to get a lost of specific tags:
 task ls tag:nixtodo

***** Priorities

Piorities are another way to organize tasks.
 You can use priority values of high, medium and low, and taskwarrior
knows these as H, M or L.

 $ task 1-3,5 priority:H

 You can remove priorities by specifying a blank value.

 $ task 3 pri:

 to change a priority

 task 1-3,5 modify priority:H

***** Projects

adding:
 add a task to a project:

 $task 7 project:home

 
 or for multiple:

 $ task 1-6 project:party

 to list all project:

 $ task projects

 to list by project:

 $ task list project:home

 or shorter:

 $ task li pro:par

 removing:
 to remove a project:

 task 20-25 pro:

 modify
 to add projects after task is already created

 task 2-4 16-17 24 modify pro:dl

***** tags

A task may only have one project, but it may have any number of tags,
which are just single words associated with the task.
 add a tag:

 task 3,5,6 +mall

 use tags as a filter:

 task list +mall

 

remove a tag:
 task 3 -mall

 or

 task 25-30 modify -linux

***** taskopen

install from site:
[[https://github.com/ValiValpas/taskopen#readme][https://github.com/ValiValpas/taskopen#readme]]
 that is dl the script and just copy to /usr/bin or ~/bin (if exist and
in your PATH)
 What does it do?
 It enables you to add file based notes to tasks.
 
 Basic usage
 Add a task:
 $ task add Example
 Add an annotation which links to a file:
 $ task 1 annotate ~/notes.txt
 Open the linked file:
 $ taskopen 1
 More complex example
 You can also add weblinks to a task and even mix all kinds of
annotations:
 $ task 1 annotate www.taskwarrior.org
 $ task 1 annotate I want to consider this
 $ task 1 annotate ~/tasknotes/1.txt
 $ taskopen 1
 2 annotation(s) found.
 Please select an annotation:
 1) www.taskwarrior.org
 2) ~/tasknotes/1.txt
 Type number:

***** create task from thunderbird

Email clients and task management tools are quite tight together. I
always like to add task from my email client to my task management tool.
In this article I will explain how to add task from Thunderbird email
client to Taskwarrior.
 Subject of each email would be a task description with email and inbox
tags.
 tb2taswarrior-ss
 Requirements
 Taskwarrior
 Thunderbird
 Custom Button add-on for Thunderbird
 tb2taskwarrior script
 Installation & Usage
 Add new button to Thunderbird (right click on toolbar and select
'Add new button...')
 Name: Add to task
 Code: Copy the content Download custom-button.tb2taskwarrior
 (optional) customise topicName (e.g. change +inbox +email tags)
 Add created button to Thunderbird toolbar
 Select an email and click on created button
 Download tb2taskwarrior.png for button icon.
 

***** Accomplish a task in a certain date intervall

Need to accomplish a task in a certain date intervall?
 You can use the scheduled attribute for this:

 task add scheduled:10th due:20th Visit the museum

***** use dropbox to sync tasks

Simply configure task to store it's data in a dropbox folder, by
modifying the .taskrc file:
 data.location=...
 You might also want to share the same .taskrc file. You can do this by
putting an alias in the .bashrc file along the lines of
 alias task="task rc:/home/username/Dropbox/mysharedtaskrc"

**** todo.sh

***** install

Install the Bash completion, either system-wide pr put it somewhere in
your home directory and source it from your .bashrc:
 source /PATH/TO/todo completion
 Now you can type
 ./todo.sh ad<Tab> and Bash will autocomplete the action to ./todo.sh
add.
 Any words that begin with + or @ will be completed using projects or
contexts, respectively. Task numbers will append the task text as a
shell comment.
 Note: If you define an alias (e.g. t) to todo.sh, you need to
explicitly enable completion for it, too (also put this into your
.bashrc):
 complete -F  todo t

***** install addons

Installing Add-ons
 Add-ons can be installed into the $HOME/.todo.actions.d directory, or
any other directory configured via $TODO ACTIONS DIR. Create this
directory with the following bash shell commands:

 mkdir -p ~/.todo.actions.d

 You must name add-ons after the action you want to add or override. For
 example, create a new "review" action by installing an add-on to
 .todo.actions.d/review. After installing the add-on, you must make it
 executable; for example:

 chmod +x ~/.todo.actions.d/review

 Use the new or overridden action the normal todo.sh way. For example:

 todo.sh review

 You can force todo.sh to use a default action instead of an
 overridden action by prefixing the action's name with the word,
 "command". For example:

 todo.sh command ls

*** Utils
**** autojump     
***** navigate using autojump (j)
`j` is a convenience wrapper function around autojump. Any option that can be used with autojump can be used with j and vice versa.

Jump To A Directory That Contains foo:

#+BEGIN_SRC sh
j foo
#+END_SRC

Jump To A Child Directory:

Sometimes it's convenient to jump to a child directory (sub-directory of current directory) rather than typing out the full name.

#+BEGIN_SRC sh
jc bar
#+END_SRC
***** Open File Manager To Directories (instead of jumping):
Instead of jumping to a directory, you can open a file explorer window (Mac Finder, Windows Explorer, GNOME Nautilus, etc.) to the directory instead.
#+BEGIN_SRC sh
jo music
#Opening a file manager to a child directory is also supported:
jco images
#+END_SRC

**** atools
***** aunpack (unpack)

to unpack an archive issue the aunpack command:
 #auncpack
 To extractall files from all `.tar.gz' archives in the current
directory:
 
 # aunpack -e .tar.gz
 or
 # aunpack -e .zip
 options:
 -D, --subdir
 
 When extracting archives, always create a new directory for the archive
even if the archive only contains one file in its root directory.

***** pack (apack)

To create a zip archive of two files `foo' and `bar':
 
 #apack myarchive.zip foo bar

**** clipbored

***** install

install form aur or from git:

[[https://github.com/trapd00r/clipbored#readme][https://github.com/trapd00r/clipbored#readme]]
 then make sure the deamon starts at startup:
 clipbored
 (in arch this can be put it rc.conf)
 create the following file in:
 $XDG DATA HOME/clipbored/clips

 then assign a key to either:
 dmenuclip - launch dmenu listing all previously clipboarded content
 dmenurl - launch dmenu with all previously yanked URLs for you to
select rom.

***** if its not collection new clips

delete the full history file will be placed in
$XDG DATA HOME/clipbored/clips

**** conky
***** conky weather forecast python script

Conky Weather Forecast Python Script

 install using Using apt or deb file
 https://launchpad.net/~m-buck/+archive/conky
 Weather.com XOAP Service Registration
 Due to the risk of having the previously registered xoap weather.com
account terminated because of high volumes of requests, I have upgraded
the script to use a users own registered details.
 A template config file exists which holds all the settings used by the
script, and most importantly, stores the partner id and registration
code for the weather.com xoap service.
 It can be found here "/usr/share/conkyforecast/conkyForecast.config"
 For a working script you NEED to define, in a user specific config
file, a partner id and registration code for the weather.com xoap
service. For this purpose the config file should be copied to
"~/.conkyForecast.config" and setup as required.
 To register and obtain the necessary codes you need to visit the
following url and fill out the form:
http://www.weather.com/services/xmloap.html
 After successfully completing the form, you will then receive a couple
of
 emails providing you with the necessary codes to update these settings
with, along with the software development kit and terms and conditions.
 To copy and edit the config file, using the command line , run the
following two commands in a terminal, one after the other:
 cp /usr/share/conkyforecast/conkyForecast.config
~/.conkyForecast.config
 nano ~/.conkyForecast.config
 Location Code For Script Calls
 To identify the location code for your town/city the following URL
should be used, replacing NORWICH with the one you're looking up :
 http://xoap.weather.com/search/search?where=NORWICH
 The following xml is returned for the above url, from which the correct
location code (loc id value) can be picked. Mine was UKXX0103.
 <search ver="2.0">
 <loc id="USNY0428" type="1">East Norwich, NY</loc>
 <loc id="USNY1036" type="1">North Norwich, NY</loc>
 <loc id="USCT0155" type="1">Norwich, CT</loc>
 <loc id="UKXX0103" type="1">Norwich, United Kingdom</loc>
 <loc id="USKS0428" type="1">Norwich, KS</loc>
 <loc id="USND0266" type="1">Norwich, ND</loc>
 <loc id="USNY1044" type="1">Norwich, NY</loc>
 <loc id="USOH0716" type="1">Norwich, OH</loc>
 <loc id="USVT0175" type="1">Norwich, VT</loc>
 </search>
 Once you know your location code, use it when calling the script with
the "--location=" option.
 Example Use
 In the /usr/share/conkyforecast/example folder you'll find 2 files,
conkyrc and conkyForecast.templateConky can be run using these example
files as follows:
 conky -c /usr/share/conkyforecast/example/conkyrc &
 By running this you should see some output at the top right of your
screen, detailing all sorts of weather information.The important thing
to note now is that the script is called using this in Conky:
 {execi 1800 conkyForecast ...options...}
 The usage is as follows:
 Usage: conkyForecast [options]
 Options:
 -h, --help show this help message and exit
 -l CODE, --location=CODE
 location code for weather data [default:
UKXX0103],Use
 the following url to determine your location
code by
 city name:

http://xoap.weather.com/search/search?where=Norwich
 -d DATATYPE, --datatype=DATATYPE
 [default: HT] The data type options are: DW
(Day of
 Week), WF (Weather Font output), LT
(Forecast:Low
 Temp,Current:Feels Like Temp), HT
(Forecast:High
 Temp,Current:Current Temp), CC (Current
Conditions),
 CT (Conditions Text), PC (Precipitation
Chance), HM
 (Humidity), VI (Visibility), WD (Wind
Direction), WA
 (Wind Angle - in degrees), WS (Wind Speed), WG
(Wind
 Gusts), BF (Bearing Font), BS (Bearing font
with
 Speed), CN (City Name), CO (Country), OB
 (Observatory), SR (SunRise), SS (SunSet), DL
 (DayLight), MP (Moon Phase), MF (Moon Font), BR
 (Barometer Reading), BD (Barometer
Description), UI
 (UV Index), UT (UV Text), DP (Dew Point), LU
(Last
 Update at weather.com), LF (Last Fetch from
 weather.com). Not applicable at command line
when
 using templates.
 -s NUMBER, --startday=NUMBER
 define the starting day number, if omitted
current
 conditions are output. Not applicable at
command line
 when using templates.
 -e NUMBER, --endday=NUMBER
 define the ending day number, if omitted only
starting
 day data is output. Not applicable at command
line
 when using templates.
 -S NUMBER, --spaces=NUMBER
 [default: 1] Define the number of spaces
between
 ranged output. Not applicable at command line
when
 using templates.
 -t FILE, --template=FILE
 define a template file to generate output in
one call.
 A displayable item in the file is in the form
 [--datatype=HT --startday=1]. The following are
 possible options within each item:
--location,--

datatype,--startday,--endday,--night,--shortweekday,--

imperial,--beaufort,--hideunits,--hidedegreesymbol,--
 spaces,--minuteshide. Note that the short forms
of the
 options are not supported! If any of these
options is
 set from the commandline, it sets the default
value of
 the option for all template items.
 -L LOCALE, --locale=LOCALE
 override the system locale for language output
 (en=english, es=spanish, fr=french,
bg=bulgarian,
 cs=czech, more to come)
 -i, --imperial request imperial units, if omitted output is in
 metric.
 -b, --beaufort request beaufort scale for wind speeds, if omitted
 output is either metric/imperial.
 -n, --night switch output to night data, if omitted day output
 will be output.
 -w, --shortweekday Shorten the day of week data type to 3 characters.
 -u, --hideunits Hide units such as mph or C, degree symbols () are
 still shown.
 -x, --hidedegreesymbol
 Hide the degree symbol used with temperature
output,
 this is only valid if used in conjunction with
 --hideunits.
 -m NUMBER, --minuteshide=NUMBER
 Works only with LU and LF. If present, hides
the date
 part of the LU or LF timestamp if the day of
the
 timestamp is today. The time part is also
hidden, if
 the timestamp is older than minutes specified
in this
 argument. If set to 0, the time part is always
shown.
 If set to -1, the value EXPIRY MINUTES from
the config
 file is used.
 -c WIDTH, --centeredwidth=WIDTH
 If used the output will be centered in a string
of the
 set width, padded out with spaces, if the
output width
 is greater than the setting it will have no
effect
 -r, --refetch Fetch data regardless of data expiry.
 -v, --verbose Request verbose output, not a good idea when running
 through conky!
 -V, --version Displays the version of the script.
 --errorlogfile=FILE If a filepath is set, the script appends errors
to the
 filepath.
 --infologfile=FILE If a filepath is set, the script appends info to
the
 filepath.

***** conky google calendar python script

Conky Google Calendar Python Script

 install using Using apt or deb file
 https://launchpad.net/~m-buck/+archive/conky
 You can get the current help options at any time by running (change the
path as necessary):
 python ~/.scripts/conkyGoogleCalendar.py -h
 The usage is as follows:
 Usage: conkyGoogleCalendar [options]
 Options:
 -h, --help show this help message and exit
 -u USERNAME, --username=USERNAME
 Username for login into Google Calendar, this
will
 normally be your gmail account
 -p PASSWORD, --password=PASSWORD
 Password for login
 -r TEXT, --requestCalendarNames=TEXT
 Define a list of calendars to request event
data for,
 calendar names should be separated by
semi-colons ";".
 For example
--requestCalendarNames="cal1;cal2;other
 cal" If not set all calendar data will be
returned.
 -d NUMBER, --daysahead=NUMBER
 [default: 7] Define the number of days ahead
you wish
 to retrieve calendar entries for, starting from
today.
 -s DATE, --startdate=DATE
 Define the start date to retrieve calendar
events. In
 the form '2007-12-01'
 -e DATE, --enddate=DATE
 Define the end date to retrieve calendar
events, must
 be supplied if --startdate supplied. In the
form
 '2007-12-01'
 -a, --allevents Retrieve all calendar events
 -w TEXT, --wordsearch=TEXT
 Define the text to search calendar entries
with.
 -l NUMBER, --limit=NUMBER
 [default: 0] Define the maximum number of
calendar
 events to display, zero means no limit.
 -t FILE, --template=FILE
 Template file determining the format for each
event.
 Use the following placeholders: [title],
[starttime],
 [endtime], [location], [description], [who].
Ensure
 only one placeholder per line, as the whole
line is
 removed if no data for that placeholder exists.
 -f "DATEFORMAT", --dateformat="DATEFORMAT"
 If used this overrides the default date
formatting.
 The values to use are standard formatting
strings e.g.
 Weekday=%a, Day=%d, Month=%m, Year=%y. For an
output
 like "Thu 15/10/2008" you would require
 --dateformat="%a %d/%m/%y", to have no date you
would
 require --dateformat=""
 -F "TIMEFORMAT", --timeformat="TIMEFORMAT"
 If used this overrides the default time
formatting.
 The values to use are standard formatting
strings e.g.
 Hours (12hr)=%l, Hours (24hr)=%H, Minutes=%M,
 Seconds=%S, AM/PM=%P. For an output like "05:22
PM"
 you would require --timeformat="%l:%M %P",
 --timeformat="" is not supported, default
locale
 settings are used
 -i NUMBER, --indent=NUMBER
 [default: 0] Define the number of spaces to
indent the
 output (excludes template based output)
 -m NUMBER, --maxwidth=NUMBER
 [default: 40] Define the number of characters
to
 output per line
 -n, --nowho Hides who is attending the events (excludes template
 based output)
 -c NUMBER, --connectiontimeout=NUMBER
 [default: 10] Define the number of seconds
before a
 connection timeout can occur.
 -v, --verbose Request verbose output, no a good idea when running
 through conky!
 -V, --version Displays the version of the script.
 --errorlogfile=FILE If a filepath is set, the script appends errors
to the
 filepath.
 --infologfile=FILE If a filepath is set, the script appends info to
the
 filepath.
 The important thing to note now is that the script is called using this
in Conky:
 {execi 1800 conkyGoogleCalendar ...options...}
 Example:
 ${color8}${execpi 1800 conkyGoogleCalendar -an -u ikloog -p nati1975
--requestCalendarNames="itai kloog;Ykloog" -t
/home/zeltak/.conky/conkyGoogleCalendar.config}

***** moc plugin

mocp provides straightforward CLI options to grep song metadata,
rendering all scripting unnecessary.
 example
 mocp -Q %song
 Returns the song title. Similarly, %album and %artist return the album
and artist, %ct and %tt give the current and total time respectively.
 There are several more strings listed in the mocp man page.So getting
mocp info into conky is as simple as:
 $alignc${exec mocp -Q %artist} - ${exec mocp -Q %song}

***** power
 I wrote up a power usage script for conky. I put it in the pastebin
here http://crunchbanglinux.org/pastebin/23. copy the script, name it
what you want and put in your scripts directory. Make sure you make it
executable, then add a line similar to this to your conky config:
 Power Usage: ${execi 1 /home/eric/battery.py}
 replace the path with wherever you put the script.

[[http://pix.nofrag.com/6/6/e/7ea549b24f3c59c541a230dc8adc7.png][http://pix.nofrag.com/6/6/e/7ea549b24f3c59c541a230dc8adc7.png]]
 edit: oh forgot to mention it only works when your not plugged in,
otherwise it says Not available.
 script:
 #!/usr/bin/env python
 # -- coding: utf-8 --
 import os
 rate = 0.0
 batteries = os.listdir("/proc/acpi/battery")
 home = os.getenv("HOME")
 path = "/tmp/draw"
 if batteries:
 batInfo = open("/proc/acpi/battery/%s/state" % (batteries[0],))
 voltage = 0.0
 watts drawn = 0.0
 amperes drawn = 0.0
 seconds = 0.0
 available = True
 for line in batInfo:
 if "charging state" in line:
 if not "discharging" in line:
 available = False
 if "present voltage" in line:
 voltage = float(line.split()[2]) / 1000.0
 if "present rate" in line and "mW" in line:
 watts drawn = float(line.split()[2]) / 1000.0
 if "present rate" in line and "mA" in line:
 amperes drawn = float(line.split()[2]) / 1000.0
 if "remaining capacity" in line:
 capacity = float(line.split()[2])
 if watts drawn == 0.0 and amperes drawn == 0.0:
 if os.path.exists(path):
 draw file = open(path)
 draw = draw file.readline()
 if draw:
 draw = float(draw)
 seconds = float(draw file.readline())
 if draw == capacity:
 seconds = seconds + 1
 amperes drawn = float(draw file.readline())
 else:
 draw = draw - capacity
 amperes drawn = draw / seconds  3600.0 / 1000.0
 seconds = 0.0
 draw = open(path,"w")
 draw.write(str(capacity) + "\n" + str(seconds) + "\n" +
str(amperes drawn))
 rate = watts drawn + voltage  amperes drawn
 if available:
 if rate < 1.0:
 print "Gathering Data"
 else:
 print '%.2f'%(rate)
 else:
 print "No Data"
 if os.path.exists(path):
 os.remove(path)
 else:
 print "No Data"
 if os.path.exists(path):
 os.remove(path)

***** placement
How to make the correct placement
 To place the conky widgets can be a bit tricky, but this tip should
help.
 In your .conkyrc XXX you should have these settings:
#+BEGIN_EXAMPLE
 maximum width 130
 gap x 10
 gap y 30
 maximum width is the the width of the widget
 gap x is the distance from the right edge of your screen
 gap y is the distance from the top edge of your screen
#+END_EXAMPLE
The height of the widget is calculated automatically based on the
content of your .conkyrc XXX
The command xwininfo could be usefull, but the geometry string from
these outputs and the gap  settings does not always match. alignment
Text alignment on screen, {top,bottom,middle} {left,right,middle} or
none. Can also be abbreviated with first chars of position, ie. tr for
top right.
 Run multiple conky sessions
 Prepare your files/folders
 Create the directory where these .conkyrc should be placed
 mkdir .conky
 and then inside .conky create sample conkyrc files
 touch .conkyrc clock
 touch .conkyrc sys
 Now edit the files to suit your needs
 Your startup script
 Now when everything is in place you would like to have it all started
when you log in, this is the script that makes it all happen.
 Open your preferred editor
 $EDITOR conky start
 Put this in the file
 #!/bin/bash
 conky -c ~/.conky/.conkyrc clock &
 conky -c ~/.conky/.conkyrc sys &
 conky -c ~/.conky/.conkyrc net &
 conky -c ~/.conky/.conkyrc proc
 Yes, the last line must not have a trailing &
 Make the file executable
 chmod +x conky start
 The only thing left to do is to have these lines in the bottom of your
~/.config/openbox/autostart.sh
 # Launch Conky
 # conky &
 (sleep 2s && /home/zeltak/scripts/conky start) &

***** design
add a line :

 ${hr 1} for thin
 ${hr 2} for thick
 etc...

***** setup multiple conky sessions

HOWTO setup multiple Conky sessions
 
 Conky is a free, light-weight system monitor for X, that displays any
information on your desktop.
 
 Conky has more than 250 built in objects, including support for:
 

-  A plethora of OS stats
-  Built in IMAP and POP3 support
-  Built in support for many popular music players (MPD, XMMS2, BMPx,
   Audacious)

 
 ... and much much more.
 
 Conky can display this info either as text, or using simple progress
bars and graph widgets, with different fonts and colours.
 About this HOWTO
 This howto is about how to have several conky sessions running, at the
same time, on your desktop at startup.
 
 In #! Crunchbang you should allready have conky up and running, so no
install is needed.
 
 It's assumed that you allready know how to edit your ~/.conkyrc and
how to use the different variables and settings.
 
 When you're done it could look like this:
 
 [[~/Dropbox/Org/Tech/linux_files/Image_zdChj9NLtWQc4aVpDO.png]]
 Planning
 The first thing you have to do is to have some thoughts about the
following:
 

-  How many conky's do you want
-  What should they look like
-  Where on the desktop, do you want them

 1). This is defined in your startup script.
 2). This is defined in the .conkyrc for the specific widget.
 3). This is also defined in the .conkyrc for the specific widget (see
below).
 In this example we want to have 4 conky widgets:
 

-  clock
-  system
-  net
-  processes

 Prepare your files/folders
 Create the directory where these .conkyrc should be placed
 mkdir .conky touch .conkyrc clock touch .conkyrc sys touch
.conkyrc net touch .conkyrc proc
 
 Now edit the files to suit your needs, you can find more information on
the conky[[http://conky.sourceforge.net/documentation.html][homepage]]e
 How to make the correct placement
 To place the conky widgets can be a bit tricky, but this tip should
help.
 In your .conkyrc XXX you should have these settings:
 maximum width 130 gap x 10 gap y 30
 maximum width is the the width of the widget
 gap x is the distance from the right edge of your screen
 gap y is the distance from the top edge of your screen
 The height of the widget is calculated automatically based on the
content of your .conkyrc XXX
 
 The command xwininfo could be usefull, but the geometry string from
these outputs and the gap  settings does not always match.
 Your startup script
 Now when everything is in place you would like to have it all started
when you log in, this is the script that makes it all happen.
 
 Open your preferred editor
 $EDITOR conky start
 Put this in the file
 #!/bin/bash conky -c ~/.conky/.conkyrc clock & conky -c
~/.conky/.conkyrc sys & conky -c ~/.conky/.conkyrc net & conky -c
~/.conky/.conkyrc proc
 Yes, the last line must not have a trailing &
 
 Make the file executable
 chmod +x conky start
 And put the file in your $PATH
 
 The only thing left to do is to have these lines in the bottom of your
~/.config/openbox/autostart.sh
 # Launch Conky # conky & (sleep 2s && conky start) &

***** mpd support
Add this to the config file
 mpd host localhost
 mpd port 6660
 then add the variables you need, IE:
 ${color8}MPD${hr 2}
 ${color1}$alignc$mpd artist
 ${color1}$alignc$mpd album
 ${color1}$alignc$mpd title
 ${color8}$mpd bar

***** output conky to dzen

Dzen & Conky
 Conky can be used to pipe information directly to dzen for output in a
statusbar. This can be done with Conky in the Extra repository and also
with conky-cli, a stripped-down version of the Conky status utility from
AUR .
 The following example displays the the loadavg values in red and the
current time in the default dzen foreground colour:
 ~/.conkyrc:
 background no
 out to console yes
 out to x no
 update interval 1.0
 total run times 0
 use spacer none
 TEXT
 \^fg(\#ff0000)${loadavg 1 2 3} \^fg()${time %a %b %d %I:%M%P}
 ~/bin/dzconky:
 #!/bin/sh
 FG='#aaaaaa'
 BG='#1a1a1a'
 FONT='--terminus--r-normal---120-----iso8859-'
 conky | dzen2 -e - -h '16' -w '600' -ta r -fg $FG -bg $BG -fn $FONT
 Simply execute dzconky in your startup scripts.

***** color based on state

${font}
 ${voffset 5}${font StyleBats:size=10}${color FFFF00}k${voffset
-2}${font}${offset 2}CPU1${offset 5}${cpu
cpu1}%${color}${color7}${alignr 2}${if match ${cpu}<=50}${color
green}${else}${if match ${cpu}<=70}${color orange}${else}${if match
${cpu}>70}${color red}${endif}${endif}${endif}
 ${voffset 2}${font StyleBats:size=10}${color 059EFA}k${voffset
-2}${font}${offset 2}CPU2${offset 5}${cpu
cpu2}%${color}${color7}${alignr 2}${if match ${cpu}<=50}${color
green}${else}${if match ${cpu}<=70}${color orange}${else}${if match
${cpu}>70}${color red}${endif}${endif}${endif}
 ${font}
 ${voffset 4}${font StyleBats:size=10}${color 00FFFF}l${voffset
-2}${font}${offset 3}RAM${offset 5}${memperc}%${color}
 ${font}
 ${voffset 4}${font StyleBats:size=10}${color 00FF00}x${voffset
-2}${font}${offset 4}ROOT${color}
 ${fs used /}${offset 3}/${offset 3}${fs size /}${offset 5}${if match
${fs used perc /}<=60

**** dmenu

***** dmenurc

in order to make dmenu identical across all scripts :
 1) using dmenu create a dmenurc file in /home/user/
 IE:
 # makes dmenu identical across all scripts by sourcing this file
 # aur/dmenu-xft required for xft fonts
 DMENU='dmenu -i -fn Verdana-8 -nb #303030 -nf #909090 -sb #909090 -sf
#303030'
 2) then in every dmenu script have this line after first (after
#!/bin/bash)
 if [ -f $HOME/.dmenurc ]; then
 . $HOME/.dmenurc
 else
 DMENU='dmenu -i'
 fi
 then when its time to call dmenu issue:
 $DMENU
 options can still be put after this like:
 $DMENU -l 15

***** compile and patch dmenu

Dowload the latest version
 [[http://tools.suckless.org/dmenu][http://tools.suckless.org/dmenu]]
 Apply any patches avilable (for example
from[[%20http://bbs.archlinux.org/viewtopic.php?id=54086&p=2][http://bbs.archlinux.org/viewtopic.php?id=54086&p=2]])
see [[#1CXkKt.aMX6J9reHqRLdHA][this]] for how to patch
 install (first read the readme to see if changes are necceseray) by
issuing:
 sudo make clean install
 after that dmenu is installed
 to invoke it a script needs to be run for example:
 ~/.config/dmenu/mpc song dmenu-bind.sh
 NOTE: to use demu with MPD read [[#qNaA8XC2k4g9RlQBA9xFxA][THIS]]
guide!!

***** show mpd info

 being able to check what song is playing without having to open
something :
 mpc status | head -1 | dmenu -nb '#222222' -nf '#888888' -sb '#900000'
-sf '#ffffff'

***** pydemnu

1.First install dmenu which is in dwm-tools on Ubuntu repositories or in
ARCH.
 2. Then download pydmenu and extract it
 $ wget
[[http://www.codercpf.be/stuff/pydmenu.tar.bz2][http://www.codercpf.be/stuff/pydmenu.tar.bz2]]
 $ tar xjfv pydmenu.tar.bz2
 in the same folder as the extracted pydemunu, create a file named
dmenu-bind.shand put following code in it:
 #!/bin/bash
 exe=`pydmenu.py` && eval "exec $exe"
 Or just run following command and it'll automatically do it for you.
 $ echo -e '#!/bin/bash\nexe=`pydmenu.py` && eval "exec $exe"' | sudo
tee /usr/local/bin/new.sh
 You should change persmission of the file too
 $ sudo chmod 755 /usr/local/bin/dmenu-bind.sh
 3. then either link (i preffer it) the 2 files (pydmenu.py and
dmenu-bind.sh) to /usr/bin or physiclly copy them there
 4.assign a shortcut dmenu-bind.sh to bring it up


***** zz.Archive

***** dmenu hack for mpd

1) make sure you have apatched dmenu with the vertical hack (can be
dowloaded from http://bbs.archlinux.org/viewtopic.php?id=54086&p=2)
 2) install gawk and socat:
 apt-get install gawk socat
 3) use this script to load the dmenu mpd chooser
 note it will load and que songs when run normally and load albums when
run with the album argument:
 ./mpc album dmenu-bind.sh album

***** song add only.sh

[[~/Dropbox/Org/Tech/linux_files/attach/mpc_song_dmenu-bind.sh][Attachment #10
(mpc song dmenu-bind.sh)]]

**** dzen2

***** current dzen options

bottom dzen osd:
 dzen2 -y 998 -x 455 -h 20 -ta c -sa c -tw 400 -w 400 -fg "#FF086A" -bg
"#EEEEEC" -fn "Envy Code R" -p 2 -e onstart=togglecollapse ;

***** cli options

[[~/Dropbox/Org/Tech/linux_files/Image_08iJfzgtDWKuNZS07Visug_0001.png]]

***** dynamically grow-shrink the title window

Dynamically grow/shrink the title window
 In some cases (statusbars) you want dzen's title window to to
grow/shrink dynamically with the width of its contents. The -expand
<l|c|r> option provides this feature.
 -expand <l|c|r>:
 l grow/shrink to the left
 r grow/shrink to the right
 c grow/shrink on both ends ( not implemented yet)

***** dzen manuall

==================================
 dzen, (c) 2007 by Robert Manea
 ==================================
 A general purpose messaging, notification and menu program
 The "gadgets" subdirectory contains some tools that you can
 use in combination with dzen.
 Script archive with a collection of interesting ideas:
 http://gotmor.googlepages.com/dzenscriptarchive
 Use "./help" to view a nicely formated version of the documentation.
 nnm
 Features
 --------
  scriptable in any language
  dynamic colorizer
  keyboard support
  single line and/or windows holding multiple lines
  menu functionality
  in-text formating language
  flexible event/action mechanism
  hideable, collapsable
  Xinerama support
 Requirements
 ------------
 In order to build dzen you need the Xlib header files.
 Installation
 ------------
 Edit config.mk to match your local setup (dzen is installed into
 the /usr/local namespace by default).
 Afterwards enter the following command to build and install dzen (if
 necessary as root):
 make clean install
 Optionally if you want to use dzen's gadgets:
 cd gadgets
 make clean install
 Note: By default dzen will not be compiled with Xinerama and XPM
support.
 Uncomment the respective lines in config.mk to change this.
 Contact:
 --------
 Feature requests, patches or anything else related to dzen can be send
 to: rob dot manea at gmail dot com
 Running dzen
 ------------
 dzen accepts a couple of options:
 -fg foreground color
 -bg background color
 -fn font
 -ta alignement of title window content
 l(eft), c(center), r(ight)
 -tw title window width
 -sa alignment of slave window, see "-ta"
 -l lines, see (1)
 -e events and actions, see (2)
 -m menu mode, see (3)
 -u update contents of title and
 slave window simultaneously, see (4)
 -p persist EOF (optional timeout in seconds)
 -x x position
 -y y position
 -h line height (default: fontheight + 2 pixels)
 -w width
 -xs number of Xinerama screen
 -v version information
 see (5) for the in-text formating language.
 X resources
 -----------
 Dzen is able to read font and color setting from X resources.
 As an example you can add following lines to ~/.Xresources
 dzen2.font: --fixed------------
 dzen2.foreground: #22EE11
 dzen2.background: black
 Window layout
 -------------
 Dzen's window layout is as follows:
 ------------------------------------------
 | Title window, single line |
 `------------------------------------------
 |                                 |
 | scrollable                      |
 | Slave window                    |
 | multiple lines                  |
 | lines to display simultaneously |
 | controlled with the             |
 | '-l' option                     |
 |                                 |
 |                                 |
 `------------------------------------------
 The first line you provide to dzen always goes to the title window,
 all other consecutive lines will be drawn to the slave window unless
 you explicitly overide this with the (5) In-text formating language
 command \^tw().
 QA:
 ---
 Q1: I don't want a slave window, what to do?
 A1: Do not provide the '-l' option, all lines will be displayed
 in the title window, this is the default behaviour.
 Q2: I used the '-l' option but no slave window appears.
 A2: With the default event/action handling the slave window will
 only be displayed if you hoover with the mouse over the title
 window. See "(2) Events and actions" if you'd like to change
 this.
 Q3: If I echo some text or cat a file dzen closes itself imediatelly.
 A3: There are 2 different approaches dzen uses to terminate itself,
 see next section "Termination".
 Q4: Ok, the title and slave thing works, can I update the
 contents of both windows at the same time?
 A4: Sure, see "(4) Simultaneous updates" or use the in-text
 command "\^tw()" to explicitly draw to the title windwow.
 See section (5) for further details
 Q5: Can i chnage color of my input at runtime?
 A5: Yes, you can change both background and foreground colors and
 much more See "(5) In-Text formating language"
 Q6: Can I use dzen as a menu?
 A6: Yes, both vertical and horizontal menus are supported.
 See "(3) Menu" for further details.
 Termination:
 ------------
 dzen uses two different approaches to terminate itself:
  Timed termination: if EOF is received -> terminate
 - unless the '-p' option is set
  '-p' without argument persist forever
  '-p' with argument n persist for n seconds
  Interactive termination: if mouse button3 is clicked -> terminate
 - this is the default behaviour, see (2)
 - in some modes the Escape key terminates too, see (2)
 Return values:
 --------------
 0 - dzen received EOF
 1 - some error occured, inspect the error message
 user defined - set with 'exit:retval' action, see (2)
 (1) Option "-l": Slave window
 --------------------------------
 Enables support for displaying multiple lines. The parameter to "-l"
 specifies the number of lines to be displayed.
 These lines of input are held in the slave window which becomes active
as soon
 as the pointer enters the title (default action) window.
 If the mouse leaves the slave window it will be hidden unless it is set
 sticky by clicking with Button2 into it (default action).
 Button4 and Button5 (mouse wheel) will scroll the slave window up
 and down if the content exceeds the window height (default action).
 (2) Option '-e': Events and actions
 -----------------------------------
 dzen allows the user to associate actions to events.
 The command line syntax is as follows:
 -e 'event1=action1:option1:...option<n>,...,action<m>;...;event<l>'
 Every event can take any number of actions and every action can take
any number
 of options. (By default limited to 64 each, easily changable in
action.h)
 An example:
 -e
'button1=exec:xterm:firefox;entertitle=uncollapse,unhide;button3=exit'
 Meaning:
 button1=exec:xterm:firefox;
 on Button1 event (Button1 press on the mouse) execute xterm and
 firefox.
 Note: xterm and firefox are options to the exec action
 entertitle=uncollapse,unhide;
 on entertitle (mouse pointer enters the title window) uncollapse
 slave window and unhide the title window
 button3=exit
 on button3 event exit dzen
 Supported events:
 -----------------
 onstart Perform actions right after startup
 onexit Perform actions just before exiting
 onnewinput Perform actions if there is new input for the slave
window
 button1 Mouse button1 released
 button2 Mouse button2 released
 button3 Mouse button3 released
 button4 Mouse button4 released (usually scrollwheel)
 button5 Mouse button5 released (usually scrollwheel)
 button6 Mouse button6 released
 button7 Mouse button7 released
 entertitle Mouse enters the title window
 leavetitle Mouse leaves the title window
 enterslave Mouse enters the slave window
 leaveslave Mouse leaves the slave window
 sigusr1 SIGUSR1 received
 sigusr2 SIGUSR2 received
 key KEYNAME Keyboard events ()
 () Keyboard events:
 --------------------
 Every key can be bound to an action (see below). The format is:
 key KEYNAME where KEYNAME is the name of the key as defined in
 keysymdef.h (usually: /usr/include/X11/keysymdef.h). The part
 after 'XK ' in keysymdef.h must be used for KEYNAME.
 Supported actions:
 ------------------
 exec:command1:..:n execute all given options
 menuexec executes selected menu entry
 exit:retval exit dzen and return 'retval'
 print:str1:...:n write all given options to STDOUT
 menuprint write selected menu entry to STDOUT
 collapse collapse (roll-up) slave window
 uncollapse uncollapse (roll-down) slave window
 togglecollapse toggle collapsed state
 stick stick slave window
 unstick unstick slave window
 togglestick toggle sticky state
 hide hide title window
 unhide unhide title window
 togglehide toggle hide state
 raise raise window to view (above all others)
 lower lower window (behind all others)
 scrollhome show head of input
 scrollend show tail of input
 scrollup:n scroll slave window n lines up (default n=1)
 scrolldown:n scroll slave window n lines down (default n=1)
 grabkeys enable keyboard support
 ungrabkeys disable keyboard support
 grabmouse enable mouse support
 only needed with specific windowmanagers, such
as fluxbox
 ungrabmouse release mouse
 only needed with specific windowmanagers, such
as fluxbox
 Note: If no events/actions are specified dzen defaults to:
 Title only mode:
 ----------------
 -e 'button3=exit:13'
 Multiple lines and vertical menu mode:
 --------------------------------------
 -e 'entertitle=uncollapse,grabkeys;
 enterslave=grabkeys;leaveslave=collapse,ungrabkeys;
 button1=menuexec;button2=togglestick;button3=exit:13;
 button4=scrollup;button5=scrolldown;
 key Escape=ungrabkeys,exit'
 Horizontal menu mode:
 ---------------------
 -e 'enterslave=grabkeys;leaveslave=ungrabkeys;
 button4=scrollup;button5=scrolldown;
 key Left=scrollup;key Right=scrolldown;
 button1=menuexec;button3=exit:13
 key Escape=ungrabkeys,exit'
 If you define any events/actions, there is no default
behaviour,
 i.e. you will have to specify  all  events/actions you want
to
 use.
 (3) Option '-m', Menu
 ---------------------
 Dzen provides two menu modes, vertical and horizontal menus. You can
 access these modes by adding 'v'(ertical) or 'h'(horizontal) to the
 '-m' option. If nothing is specified dzen defaults to vertical menus.
 Vertical menu, both invocations are equivalent:
 dzen2 -p -l 4 -m < file
 dzen2 -p -l 4 -m v < file
 Horizontal menu:
 dzen2 -p -l 4 -m h < file
 All actions beginning with "menu" work on the selected menu entry.
 Note: Menu mode only makes sense if '-l <n>' is specified!
 Horizontal menus have no title window, so all actions
 affecting the title window will be silently discarded
 in this mode.
 (4) Option '-u', Simultaneous updates
 -------------------------------------
 This option provides facilities to update the title and slave window at
 the same time.
 The way it works is best described by an example:
 Motivation:
 We want to display an updating clock in the title and some log
 output in the slave window.
 Solution:
 while true; do
 date # output goes to the title window
 dmesg | tail -n 10 # output goes to the slave window
 sleep 1
 done | dzen2 -l 10 -u
 For this to work correctly it is essential to provide exactly the
number
 of lines to the slave window as defined by the parameter to '-l'.
 (5) In-text formating language:
 -------------------------------
 This feature allows to dynamically (at runtime) format the text dzen
 displays.
 Currently the following commands are supported:
 Colors:
 -------
 \^fg(color) set foreground color
 \^fg() without arguments, sets default fg color
 \^bg(color) set background color
 \^bg() without arguments, sets default bg color
 Graphics:
 ---------
 \^i(path) draw icon specified by path
 Supported formats: XBM and optionally XPM
 \^r(WIDTHxHEIGHT) draw a rectangle with the dimensions
 WIDTH and HEIGHT
 \^ro(WIDTHxHEIGHT) rectangle outline
 \^c(RADIUS) draw a circle with size RADIUS pixels
 \^co(RADIUS) circle outline
 Positioning:
 ------------
 \^p(PIXEL) position next input amount of PIXELs to the right
 or left of the current position
 a.k.a. relative positioning
 \^pa(PIXEL) position next input at PIXEL
 a.k.a. absolute positioning
 For maximum predictability \^\^pa() should only
be
 used with '-ta l' or '-sa l'.
 Other:
 ------
 \^tw() draw to title window
 This command has some annoyances, as only
 the input after the command will be drawn
 to the title window, so it is best used
 only once and as first command per line.
 \^cs() clear slave window
 This command must be the first and only command
 per line.
 \^ib(VALUE) ignore background setting, VALUE can be either
 1 to ignore or 0 to not ignore the bg color set
 with \^bg(color).
 This command is useful in combination with \^p()
 and \^pa() in order to position the input inside
 other already drawn input.
 Example:

\^ib(1)\^fg(red)\^ro(100x15)\^p(-98)\^fg(blue)\^r(20x10)\^fg(orange)\^p(3)\^r(40x10)\^p(4)\^fg(darkgreen)\^co(12)\^p(2)\^c(10)
 These commands can appear anywhere and in any combination in dzen's
 input.
 The color can be specified either as symbolic name (e.g. red,
 darkgreen, etc.) or as #rrggbb hex-value (e.g. #ffffaa).
 Icons must be in the XBM or optionally XPM format, see the "bitmaps"
 directory for some sample icons. With the standard "bitmap" application
 you can easily draw your own icons.
 Note: Displaying XPM (pixmap) files imposes a somewhat
 higher load than lightweight XBM files, so use
 them with care in tight loops.
 Rectangles will be truncated to the maximum possible size if you
specify
 a size bigger than dzen's window.
 Doubling the '\^\^' character removes the special meaning from it.
 Some examples:
 Input:
 \^fg(red)I'm red text \^fg(blue)I am blue
 Input:
 \^bg(#ffaaaa)The \^fg(yellow)text to
\^bg(blue)\^fg(orange)colorize
 Input:
 \^fg(grey70)Some text containing \^\^ characters
 Input for icons:
 \^i(bitmaps/envelope.xbm) I am an envelope \^fg(yellow)and
\^i(bitmaps/battery.xbm) I'm a baterry.
 Input for rectangles:
 6x4 rectangle \^r(6x4) \^fg(red)12x8 \^r(12x8)
\^fg(yellow)and finally 100x15 \^r(100x15)
 Input for relative positioning:
 Some text\^p(100)\^fg(yellow)100 pixels to the
right\^p(50)\^fg(red)50 more pixels to the right
 Examples:
 ---------
  Display message and timeout after 10 seconds:
 (echo "This is a message"; sleep 10) | dzen2 -bg darkred -fg grey80
-fn fixed
  Display message and never timeout:
 echo "This is a message"| dzen2 -p
  Display updating single line message:
 for i in $(seq 1 20); do A=${A}'='; print $A; sleep 1; done | dzen2
  Display header and a message with multiple lines:
 (echo Header; cal; sleep 20) | dzen2 -l 8
 Displays "Header" in the title window and the output of cal in the
8
 lines high slave window.
  Display updating messages:
 (echo Header; while true; do echo test$((i++)); sleep 1; done) |
dzen2 -l 12
 The slave window will update contents if new input has arrived.
  Display log files:
 (su -c "echo LOGFILENAME; tail -f /var/log/messages") | dzen2 -l 20
-x 100 -y 300 -w 500
  Monthly schedule with remind:
 (echo Monthly Schedule; remind -c1 -m) | dzen2 -l 52 -w 410 -p -fn
lime -bg '#e0e8ea' -fg black -x 635
  Simple menu:
 echo "Applications" | dzen2 -l 4 -p -m < menufile
  Horizontal menu without any files:
 {echo Menu; echo -e "xterm\nxclock\nxeyes\nxfontsel"} | dzen2 -l 4
-m h -p
  Extract PIDs from the process table:
 {echo Procs; ps -a} | dzen2 -m -l 12 -p \
 -e
'button1=menuprint;button3=exit;button4=scrollup:3;button5=scrolldown:3;entertitle=uncollapse;leaveslave=collapse'
\
 | awk '{print $1}' |
  Dzen as xmonad (see http://xmonad.org) statusbar:
 status.sh | dzen2 -ta r -fn
'--profont-----11------iso8859' -bg '#aecf96' -fg black \
 -p -e 'sigusr1=raise;sigusr2=lower;onquit=exec:rm
/tmp/dzen2-pid;button3=exit' & echo $! > /tmp/dzen2-pid
 Have fun.

***** gdbar

(echo "$VOL" | gdbar -l "\^i(${ICON})" -fg "$BAR FG" -bg "$BAR BG" -w
"$BAR WIDTH" -s 0 -ss 0 -sw 5 ; sleep "$SECS") > "$PIPE"
 -ss X (X reffer to number if stripes, '0' is none)

***** transparency

[[~/Dropbox/Org/Tech/linux_files/attach/PKGBUILD][Attachment #11 (PKGBUILD)]]
 install with trasparency patch (see attachment)
 issue this option in config
 -0 TRAN%
 In example:

 dzen2 -o80

**** fb (upload pastbin)

***** register and setup

go to

[[http://paste.xinu.at/user/register/JPZ9v4TbGnmIyHN][http://paste.xinu.at/user/register/JPZ9v4TbGnmIyHN]]
 and register (you may need an invite)
 then register the account on the pc:

echo "machine paste.xinu.at login USER password PASSWORD" > ~/.netrc

 and your ready to use it

***** using fb

for text issue either this:

#fb TEXTFILE

 or

#cat TEXTFILE | fb

 for images:

scrot -d 2 somename.png && fb somename.png

 or create a script by issuing this:

echo "scrot -d 2 $1 && fb $1" > screenshot.sh && chmod +x screenshot.sh

 and then runing the script like this:

screenshot.sh SOMENAME.PNG

***** delete posts

you can delete uploads with

fb -d ID

 where ID is the post ID number

**** ix pastebin

***** install

 Dl the script:

-  curl http://ix.io/client -o ix
-  
-  then

chmod +x ix

-  then
-  
-  cp the ix file to /usr/bin
-  
-  now you can do
-  
-  ix SOME FILE
-  
-  or
-  
-  SOME COMMAND | ix

 to auto paste to bin

**** midnight commander
***** Keyboard shortcuts

alt+s launch quick search
***** select all
use:
?Alt+Shift+=?
then enter '' 
to select all files  
***** tips

auto remember last position at poweroff

 add this to your alias file (bashaliases in ubuntu)
 alias mc='. /usr/share/mc/bin/mc-wrapper.sh'
 Program bindings
 1.After a fresh install delete the symlink in home dir .mc folder named
bindings and create a text file with same name and copy the example rc
binding file to it
 2.make sure the >/dev/null 2>&1 & is added at the end of the command so
that the screen wont get garbbled/messed up. for example
 Open=(smplayer %f -close-at-end -fullscreen >/dev/null 2>&1 &)
 3.issue the command of your choice followed by %f for the file and
after that the arguments
 Section example
 if you have a few different filetypes in a catagory that you want to
open with a single program use this exampke below
 ### Comics ###
 regex/\.([cC][bB][rR])$
 Include=comic
 regex/\.([cC][bB][zZ])$
 Include=comic
 include/comic
 Open=(comix %f >/dev/null 2>&1 &)MC Colors
 Base colors: normal, selected, marked, markselect, errors, input,
reverse, gauge
 Menu colors: menu, menusel, menuhot, menuhotsel
 Dialog colors: dnormal, dfocus, dhotnormal, dhotfocus
 Help colors: helpnormal, helpitalic, helpbold, helplink, helpslink
 Viewer color: viewunderline
 Special highlighting colors: executable, directory, link, stalelink,
device, special, core
 Editor colors: editnormal, editbold, editmarked
 the config menus are changed through the dnormal,dfocus etc..
 Color list:
 white, gray, blue, green, yellow, magenta, cyan, red, brown,
birghtgreen, brightblue, brightmagenta, brightcyan, brightred, default
 the drop down menu (F9) is changed through the menu, menusel commands
etc
 NOTE- make sure they are all in one line other wise it wont work

***** shortcuts

File Group ManagementAlt-o If the currently selected file is a
directory, load that directory on the other panel and moves
 the selection to the next file.
 Alt-i make the current directory of the current panel also the
current directory of the other panel.
 Put the other panel to the listing mode if needed. If the
current panel is panelized, the other
 panel doesn't become panelized.
 Alt-y moves to the previous directory in the history, equivalent
to clicking the < with the mouse.
 Alt-u moves to the next directory in the history, equivalent to
clicking the > with the mouse.
 Alt-Shift-h, Alt-H
 displays the directory history, equivalent to depressing
the 'v' with the mouse.


 select Group
 Shift + (+)
 Cancel selection of groups
 \
 reverse selection
 Shift-
 File Tagging
 insert or Ctrl+t
 Filter
 .pdf entry will the MC to show only the files which have pdf extension
 Finding Files
 Meta + ?
 "Chdir" will open a directory with found files in one of its panels
 "Again" will move action back to search window where you can change the
search criteria
 "Panelize" will show all the found files and only the files in one of
the MC's panels
 Server Connections
 following forms:
 user name:password@server address
 or
 user name@server address
 ftp:
 cd /#ftp:user name:password@server address/directory
 or eventually, in case of anonymous user
 cd /#ftp:server address/directory
 View
 Hide panels and show CLI
 Ctrl+O
 ShortcutsShortcuts
 Background Jobs
 ctrl+x wait a few secs then > j
 The Midnight Commander uses the F1 - F10 keys as keyboard shortcuts
for commands appearing in the file menu. The escape sequences for the
function keys are terminfo capa
 bilities kf1 trough kf10. On terminals without function key
support, you can achieve the same functionality by pressing the ESC key
and then a number in the range 1
 through 9 and 0 (corresponding to F1 to F9 and F10
respectively).

***** my customizations

the panel template i use in user defined:
 
 half mark type name:39|bsize:15|mtime:20

***** file operations

to rename a file: use the f6 and enter the new name in the "to" field

***** colors

to launch MC with a specific color theme issue this:
 mc --colors
normal=green,default:selected=brightmagenta,gray:marked=yellow,default:markselect=yellow,gray:directory=blue,default:executable=brightgreen,default:link=cyan,default:device=brightmagenta,default:special=lightgray,default:errors=red,default:reverse=green,default:gauge=green,default:input=white,gray:dnormal=green,gray:dfocus=brightgreen,gray:dhotnormal=cyan,gray:dhotfocus=brightcyan,gray:menu=green,default:menuhot=cyan,default:menusel=green,gray:menuhotsel=cyan,default:helpnormal=cyan,default:editnormal=green,default:editbold=blue,default:editmarked=gray,blue:stalelink=red,default

base color=gray,black:normal=yellow,black:menu=yellow,gray:viewunderline=black,green:(and
so on)

base color=gray,black:normal=yellow,black:menu=yellow,gray:viewunderline=black,green:(and
so on)

base color=gray,black:normal=yellow,black:menu=yellow,gray:viewunderline=black,green:(and
so on)

***** skins

you can launch MC with a skin with a -S argument followed by the full
path of the skin
 mc -S /home/zeltak/.mc/skins/xmc z.ini
 here are some spetial pointers on modifiying a skin:
 1)core
 [core]
  default =black;red
 This is in charge of mc background (red) and the lines and basic text
(black).

 2) The filehighlight is where one defines the color of filetypes
 [filehighlight]
 directory=gray;
 3)the menus are dialogs are defined in the menus and dialogs oprions:
 #the F1-10 menus
 [menu]
  default =lightgray;black
 menuhot=brown;black
 menusel=lightgray;cyan
 menuhotsel=white;cyan
 #the dialog popups
 [dialog]
  default =lightgray;darkgray
 dfocus=lightgray;cyan
 dhotnormal=blue;darkgray
 dhotfocus=white;cyan

***** rename file

press shift f6

**** dunst
***** get different colors for a message via notify-send
dunst is able to get different colors for a message via notify-send. In order to do that you have to add a hint via the -h option. The progress value can be set with a hint, too.

#+BEGIN_SRC sh
notify-send -h string:fgcolor:"#ff4444"
notify-send -h string:bgcolor:"#4444ff" -h string:fgcolor:"#ff4444"
notify-send -h int:value:42 "Working ..."
#+END_SRC

**** mlterm
***** keys

activate menu
 CTRL-<RIGHT MOUSE CLICK>
 activate quick menu
 CTRL-<LEFT MOUSE CLICK>

***** launch

 mlterm -bg="#EEEEEC" -fg="000000"

***** colors
Colorz
 To define your own colors copy the configfile called "color" to the
mlterm-config-directory in your homezone
 cp /etc/mlterm/color ~/.mlterm/color
 Own it:
 sudo chown yourusernam:yourusername ~/.mlterm/color
 And edit it:
 black=#000000
 red=#F92672
 green=#82B414
**** nano

***** basics

Note: In nano's help texts the Ctrl-key is represented by a caret (\^),
so Ctrl+W is shown as \^W, and so on. The Alt-key is represented by an M
(from "Meta"), so Alt+W is shown as M-W.

                                                                                               
 to have all option saved for future use:
 copy the file /etc/nanorc to the home dir and rename to .nanorc

                                                                                               

***** Command Line tips

to enable undo launch nano with -u argument
 to disable text wrap issue -w

***** Saving and exiting

Save and Save As are both accomplished with the Write Out command,
Ctrl-O.
 When prompted, press enter to accept the existing file name. To save as
another file name, type in the new name and press Enter, or use the
Ctrl-T key combination to use nano's built-in file browser.
 Closing Files
 Close a file with the Ctrl-X key combination. If the file you are
working on has been modified since the last time you saved it, you will
be prompted to save the file first. Type y to save the file, or n to
exit nano without saving the file.
 Closing a file also closes nano.

**** ncdu

***** options

a program to see folder sizes in term:

 OPTIONS
 -h Print a small help message
 -q Quiet mode. While calculating disk space, ncdu will update
the screen 10 times a second by default, this
 will be decreased to once every 2 seconds in quiet mode.
Use this feature to save bandwidth over remote con
 nections.
 -v Print version.
 s Order by filesize (press again for descending order)
 a Toggle between showing disk usage and showing apparent size.
 d Delete the selected file or directory. An error message will
be shown when the contents of the directory do
 not match or do not exist anymore on the filesystem.
 t Toggle dirs before files when sorting.
 g Toggle between showing percentage, graph, both, or none.
Percentage is relative to the size of the current
 directory, graph is relative to the largest item in the
current directory.
 e Show/hide 'hidden' or 'excluded' files and directories. Please
note that even though you can't see the hid
 den files and directories, they are still there and they
are still included in the directory sizes. If you
 suspect that the totals shown at the bottom of the screen
are not correct, make sure you haven't enabled
 this option.
 i Show information about the current selected item.
 r Refresh/recalculate the current directory.
 q Quit
 -x Only count files and directories on the same filesystem as
the specified dir.
 --exclude PATTERN
 Exclude files that match PATTERN. This argument can be
added multiple times to add more patterns.
 -X FILE, --exclude-from FILE
 Exclude files that match any pattern in FILE. Patterns
should be seperated by a newline.
 KEYS
 ? Show help + keys + about screen
 up, down j, k
 Cycle through the items
 right, enter, l
 Open selected directory
 left, <, h
 Go to parent directory
 n Order by filename (press again for descending order)

**** nopaste (upload pastebin)

install package 'nopaste'
 use :

nopaste FILENAME4

**** Ranger
***** Basic concepts
****** Macros
Macros can be used in commands to abbreviate things.

#+BEGIN_EXAMPLE
 %f   the highlighted file
 %d   the path of the current directory
 %s   the selected files in the current directory.
 %t   all tagged files in the current directory
 %c   the full paths of the currently copied/cut files
#+END_EXAMPLE

#+BEGIN_EXAMPLE
The macros %f, %d and %s also have upper case variants, %F, %D and %S, which refer to the next tab. To refer to specific tabs, add a number in between. (%7s = selection of the seventh tab.)

%c is the only macro which ranges out of the current directory. So you may "abuse" the copying function for other purposes, like diffing two files which are in different directories:

 Yank the file A (type yy), move to the file B, then type
 @diff %c %f
#+END_EXAMPLE

Macros for file paths are generally shell-escaped so they can be used in the shell command.

Additionally, if you create a key binding that uses <any>, a special statement which accepts any key, then the macro %any (or %any0, %any1, %any2, ...) can be used in the command to get the key that was pressed.
****** Selection
The selection is defined as "All marked files IF THERE ARE ANY, otherwise the current file." Be aware of this when using the :delete command, which deletes all files in the selection.
You can mark files by pressing <Space>, v, etc. A yellow Mrk symbol at the bottom right indicates that there are marked files in this directory.
****** BOOKMARKS

Type m<key> to bookmark the current directory. You can re-enter this directory by typing `<key>. <key> can be any letter or digit. Unlike vim, both lowercase and uppercase bookmarks are persistent.

Each time you jump to a bookmark, the special bookmark at key ` will be set to the last directory. So typing "``" gets you back to where you were before.

Bookmarks are selectable when tabbing in the :cd command.

Note: The bookmarks ' (Apostrophe) and ` (Backtick) are the same.
****** FLAGS

Flags give you a way to modify the behavior of the spawned process. They are used in the commands :open_with (key "r") and :shell (key "!").

 f   Fork the process.  (Run in background)
 c   Run the current file only, instead of the selection
 r   Run application with root privilege (requires sudo)
 t   Run application in a new terminal window

There are some additional flags that can currently be used only in the shell command: (for example :shell -w df)

 p   Redirect output to the pager
 s   Silent mode.  Output will be discarded.
 w   Wait for an Enter-press when the process is done

By default, all the flags are off unless specified otherwise in the rifle.conf configuration file. You can specify as many flags as you want. An uppercase flag negates the effect: "ffcccFsf" is equivalent to "cs".

The terminal program name for the "t" flag is taken from the environment variable $TERMCMD. If it doesn't exist, it tries to extract it from $TERM and uses "xterm" as a fallback if that fails.

Examples: :open_with c will open the file that you currently point at, even if you have selected other files. :shell -w df will run "df" and wait for you to press Enter before switching back to ranger.
****** configs
******* KEY BINDINGS
Key bindings are defined in the file ranger/config/rc.conf. Check this file for a list of all key bindings. You can copy it to your local configuration directory with the --copy-config=rc option.

Many key bindings take an additional numeric argument:
?5j? to move down 5 lines

?2l? to open a file in mode 2

?10<Space>? to mark 10 files.

example: 

map @  console -p6 shell  %%s
The @ key opens the console with "shell  %s" and puts the cursor at
position 6, between the two spaces, so you can enter commands quickly
that require the current selection as arguments.  E.g.: @mount<enter>
to mount the currently selected directory.
******* refresh ranger config (source)
use this i ranger:

#+BEGIN_SRC sh
:source  ~/.config/ranger/rc.conf
#+END_SRC
******* chain commands

#+BEGIN_SRC sh
map ,r chain shell vim ~/.config/ranger/rc.conf; source  ~/.config/ranger/rc.conf 
#+END_SRC
******* launch shell commands in keybinds

#+BEGIN_SRC sh
#examples
map ef shell fb %s

map er chain shell sshfs admin@192.168.0.144:/share/MD0_DATA/ /home/zeltak/mounts/lraid ; shell notify-send -u low  "Ranger" "mounted raid" 

#+END_SRC

***** Other
****** install on non arch machines

1)download the latest git tar.gz file
 2)extract it and move into dir
 3)issue sudo make install
 finsihed
****** rename
extension ?A?
filename ?I?
 
****** keys

S Open a shell in the current directory
 mX Create a bookmark with the name X
 `X Move to the bookmark with the name X
 n, N Find the next file, the previous file. You can define what to
 look for by typing cX. If nothing is specified, pressing
n will
 get you to the newest file in the directory.
 Keybindings for using Tabs
 Tabs are used to work in different directories in the same
Ranger
 instance.
 gN Open a tab. N has to be a number from 0 to 9. If the tab
doesn't
 exist yet, it will be created.
 gn, \^N Create a new tab.
 gt, gT Go to the next or previous tab. You can also use TAB and
 SHIFT+TAB.
 gc, \^W Close the current tab. The last tab cannot be closed.

****** marking

Marking files allows you to use operations on multiple files at once.
 If there are any marked files in this directory, "yy" will copy them
instead
 of the file you're pointing at.
 <Space> mark a file
 v toggle all marks
 V, uv remove all marks
 \^V mark files in a specific direction
 e.g. \^Vgg marks all files from the current to the top
 u\^V unmark files in a specific direction

you can mark files using regex
 :mark <regexp>
 Mark all files matching a regular expression.

for example :
 :mark pdf will mark all pdf files
 unmark will do the opposite
 :unmark <regexp>
 Unmark all files matching a regular expression.
****** tagging

By "tagging" files, you can highlight them and mark them to be
 special in whatever context you want. Tags are persistent across
sessions.
 t tag/untag the selection
 T untag the selection

****** sorting

Sorting
 To sort files, type "o" suffixed with a key that stands for a certain
 sorting mode. By typing any of those keys in upper case, the order will
 be reversed.
 
 os sort by size
 ob, on sort by basename
 om sort by mtime (last modification)
 ot sort by mime type
 or reverse order

****** renaming

A- rename file
 I- rename but from start
 cw- open rename console

****** opening files

****** opening a ./ script

issue:
 :open self d

****** create alias/commands

 first you need to add the alias followed by the command to the
commands.py config file:
 [[~/Dropbox/Org/Tech/linux_files/Image_7N11DfznTQy3GmUBsOnp0g_0001.jpg]]
 then at the bottom of the file add the actual command and what it does:
 [[~/Dropbox/Org/Tech/linux_files/Image_7N11DfznTQy3GmUBsOnp0g_0002.jpg]]

****** add multiple app options

add the app to the app list:
 then configure the states/options as below

[[~/Dropbox/Org/Tech/linux_files/Image_uX0nUQJzU0m69E3AWM_002.jpg]][[~/Dropbox/Org/Tech/linux_files/Image_uX0nUQJzU0m69E3AWM.jpg]]

****** mounting

Try selecting the root directory of the medium and type @umount<enter>
 (This doesnt work ("device busy") if you started ranger from inside a
directory on this medium.)

****** bulk-renaming

[[~/Dropbox/Org/Tech/linux_files/attach/bulk.txt][Attachment #12 (bulk.txt)]]
 

Here is a command for bulk-renaming, demonstrating what you can do with
a little python knowledge. It works like this:
 1. A list of selected files is opened in vim
 2. You can change each filename to what you want it to rename to. When
you're done, save & close the file.
 3. A shell script is generated which applies your changes. It will be
opened in vim too.
 4. Review this script and make sure this is what you want to do, then
save & close it.
 5. The script will be executed and you're back in ranger.

from ranger.api.commands import Command
 class bulkrename(Command):
 You can put this in ~/.config/ranger/commands.py.
 Select some files (with space) and type :bulkrename to test it.
 see script attached

****** run commands in :shell

example:
 :shell -d gimp -a %s

****** add copy path to clipboard

to add the path of the location to the clipboard add this line to the
keys.py (in the browser section) in the ranger config folder:
 map('yp', fm.execute console('shell -d echo -n %d/%f | xsel -i'))
 IE:
 map = keymanager.get context('browser')
 # map 'yp' to yank the current filename path to the clipboard
 map('yp', fm.execute console('shell -d echo -n %d/%f | xsel -i'))

****** aunpack

to use aunpack in ranger:
 shell aunpack %s

****** make ranger use 1 column

change the default column ratio in the options.py file to this :
column ratios = (5, 3)

****** find key numbers for python configs

[[~/Dropbox/Org/Tech/linux_files/attach/print_keys.py][Attachment #13 (print keys.py)]]
 Not all keys have a representation in ranger. use the key code defined
by ncurses.
 You can find out the codes with the little app in
ranger/doc/print keys.py (attached)
 The code for shift+delete is 383, so write:
 map(383, ...)

****** copy files between ranger instances

to copy files between ranger instances use these commands:
 :save copy buffer and :load copy buffer
 to share the copied files between ranger instances
**** screen

***** intro

What screen does
 Screen is best described as a terminal multiplexer. Using it, you can
run any number of console-based applications--interactive command
shells, curses-based applications, text editors, etc.--within a single
terminal. The desire to do this is what gets most people hooked on
screen. I used to start a half-dozen terminal emulators when I logged
into my machine: I wanted one to read my email, one to edit my code, one
to compile my code, one for my newsreader, one for a shell into my web
host, and so on. Now I start one terminal emulator, and run screen in
it. Problem solved.
 The other main cool feature of screen is its ability to decouple the
terminal emulator from the running programs. This means that you can use
screen to keep programs running after you accidentally close the
terminal emulator, or even after you log out, and later resume right
where you were. It means that the idea of a "session" in which you are
running a number of console programs is a free-floating entity that you
can bind to any terminal anywhere, or no terminal at all if you want.
 Getting started with screen: launching and switching between programs
 Start screen just by typing screen at your favorite command shell
prompt. You'll probably be greeted by a welcome message. Dismiss this
and you'll have with an empty terminal containing a shell prompt, which
is pretty much what you had before you started screen. What happened?
 Every program running under screen runs in a window, and every window
is identified by a unique number. Screen made a new window, numbered it
0, and started a command shell inside it. Type something in your new
window so you'll be able to recognize it when you switch to it later.
 Now make another window; this will be window 1. To do this, type C-a c;
that is, type Ctrl-a and then type c (mnemonic: create window).
 Now that you have two windows, try switching between them. To do this,
type C-a C-a, which will switch you to whichever window you were using
before the current one. Some other useful window switching methods,
which you'll need if you plan to run more than two programs:
 1. Use C-a n and C-a p to switch to the next or previous window in
the list, by number.
 2. Use C-a N, where N is a number from 0 to 9, to switch to the
corresponding window.
 3. Use C-a " to get a full-screen list of windows. You can navigate
this list with the arrow keys (or vi-style, with j and k), and pick a
window to activate by pressing Enter when it's highlighted. C-a w will
give you a small, non-interactive list of windows.
 When you're using a window, type C-a A to give it a name. This name
will be used in the window listing, and will help you remember what
you're doing in each window when you start using a lot of windows.
 Exiting the last program in a window will cause the window to
disappear. You can also kill misbehaving programs with C-a K.
 Detaching and reattaching: the magic of terminal decoupling
 If you did the exercise above, you have successfully created a screen
session. You can detach from this session by pressing C-a d. You can
also detach just by closing the terminal emulator that contains the
session. However, keep in mind that neither of these actually end your
session. All they do is unbind your session from the current terminal.
All of the programs you started running within screen are still running.
Really.
 Try it: just close whatever terminal emulator you were using to do the
exercise above. Then log out, and log back in, if you desire. Start up a
new terminal emulator, and type screen -r (the R, obviously, stands for
"reattach"). You'll be right back where you were when you detached.
 You can probably imagine a lot of good uses for this. You can start all
your favorite console programs once and just leave them running in a
persistent screen session. Some people have "screen uptimes" of several
months.
 One other good use for the detach and reattach is as a console-mode
"remote desktop" feature. You can detach from a screen session at work,
shell into the machine from home, and reattach. Very, very handy. With a
bit of extra work, you can even have a number of terminals all attached
to the same session--great for collaborative efforts and meetings.
 Copying, pasting, and the scrollback buffer
 Screen remembers a configurable number of scrollback lines, and you'll
need them because you won't be able to use your terminal emulator's
scroll features while running screen. You can access the scrollback
buffer by entering "copy mode", which is accomplished by typing C-a [.
You can mark text anywhere in the scrollback buffer and paste it with
C-a ]. Screen is also capable of logging to files, but that's beyond the
scope of this tutorial.
 Monitoring for silence and activity
 One of the disadvantages of running a bunch of programs within screen
is that you can't keep an eye on all of them at the same time, since in
general you can only see one at once. (Actually, you can split the
screen and look at more than one at a time, but that's an advanced topic
beyond the scope of this tutorial.) To help mitigate this problem,
Screen has features that allow you to monitor a window for
silence--useful for knowing when a compile has finished, for example--or
activity--useful for knowing when someone is finally talking on your
favorite IRC channel, for example.
 To start or stop monitoring the current window for 30 seconds of
silence, type C-a  ; to start or stop monitoring a window for activity,
type C-a M.
 Making it go away
 As you've seen from the section on detaching and reattaching, screen is
not easy to kill. You can't just close its containing terminal.
(Actually, you can, but then all those processes are still running on
your system, ready to be reattached.) There's no "quit" key in the How
do you fully exit screen?
 To my knowledge, the only way to do this nicely (i.e. without sending
nasty signals to processes that don't deserve it) is to close each of
your screen windows. Exit whatever programs or shells each is running,
and they will go away. When the last program running inside screen is
exited, screen itself will go away.
 Other stuff
 Screen does much, much more than I've described above, but it's enough
to get you started. You can type C-a ? for a terse list of commands
available while you're in screen. The screen man page has a wealth of
info, too. And here are some web resources, if you have questions:

***** install and configure screen

Install and configure screen

 sudo apt-get install screen
 Customizing the configuration file
 Screen keeps its configuration file in the same vein that many
applications do: in a dot file in your user's home directory. This file
is aptly named .screenrc. In my experience, most people use ~/.screenrc
to do two things:
  Make a hardstatus line. This is basically a line at the bottom of
the screen that lists your current terminal and all opened ones. It can
also display the system clock and the hostname.
 
  Default screens on startup. It's quite nice to have your IRC
connection, mail client, and default SSH connections auto-start for you!
 The lines below are numbered for reference. Your config file should not
have numbered lines.
 Issue:
 nano /.screenrc
 startup message off
 # Default screens
 screen -t Ztpc shell 1
 screen -t rtorrent 2 rtorrent
 screen -t BK shell 3
 screen -t Irissi 4 irssi
 Line 4 is a comment, as it starts with #. Lines 5-7 are all screen
statements in the following format:
 Sharing a session with others

 Another great application of Screen is to allow other people to login
to your station and to watch the work you are doing. It is a great way
to teach someone how to do things on the shell.
 Setup to allow screen to be shared
 1. As root: chmod u+s /usr/bin/screen (Screen has to be SUID if you
want to share a term between two users.)
 Note: SUID allows an executable to be run by the owner of that
file, instead of with the user's own permission. There are some security
concerns when doing this, so use this tip at your own discretion.
 2. chmod 755 /var/run/screen
 3. Log out of root, and run Screen as the user who is going to share
the session:
 screen
 4. Press Ctrl+a, then type :multiuser on and press Enter.
 5. Press Ctrl+a, then type :acladd steve (steve is the username of
the person who will connect to your screen session).
 Connecting to the shared screen:
 1. SSH into the workstation that you are going to watch the screen
session on.
 2. On your terminal type: screen -x anderson/ (anderson is the
username of the person who is sharing the screen session. You need the /
at the end.).
 And now both users (from the host and guest) will be sharing a screen
session and can run commands on the terminal.
 Working from multiple locations
 Let's say you have a screen session open at work with X number of
windows on it. Within those screens you may be running an IRC client, an
SSH connection to the web server, and your favorite text-based email
client. It's 5 p.m. and you have to go home, but you still have work
left to do.
 Without Screen you would probably go home, VPN into your company's
network, and fire up all the shells you need to keep working from home.
With Screen, life gets a little easier.
 You can simply SSH into your workstation at work and list your
available screen sessions with the command:
 screen -ls
 And connect to the sessions you were running at work with the command:
 screen -x screen session name
 This way screen will let you pick things up exactly from where you left
off.

***** quick shortcuts



Most keys are started by pressing Control+a (C-a)
 C-a?

Displays commands and it's defaults 


C-a c 

Create a new window (with shell)

C-a " 

Window list
 C-a 0opens window 0
 C-a cCreate a new window (with shell)

***** tips

My aliases do not work in screen
 Add the line
 shell -$SHELL
 to your ~/.screenrc file. this makes the shells think that they are
login shells and have to do full initialisation. For csh-like shells
this means, that both .login and .cshrc files will be loaded. Ususally
people are satisfied when shells under screen only sources their .cshrc
file. Launch screen with non default rc file and give the session name
 screen -dmS serial -c /etc/screenrc.serial
 The -dmS serial options tell screen to launch the session in detached
mode and name the session "serial". User serialuser can log in and
attach to this session exactly like any other normal screen session.
Launching a detached screen also can be used to start screen from a cron
job if this is preferred. to reattach while screen is already runing
 use -x argument, in example
 screen -x 11730.pts-0.marvinCopy and Paste/Scrollback Mode
One of the key features listed in the beginning of the article was
screen's searchable scrollback. This is a feature I could not live
without. It's not immediately obvious to the new screen user, but
screen's scrollback is accessed via the copy command. (You can enter
copy mode with Ctrl-A [ or via the copy command.) Navigation works as
expected with either the Arrow keys and Page Up/Down or the vi motion
equivalents. Searching is accessed via either / and ? for vi-style
search or Ctrl-S and Ctrl-R for incremental search. Case-insensitive
search can be turned on with the screen command ignorecase yes. If you
are using copy mode for scrollback only, it can be exited at any time
with the Esc key.
 To copy text, maneuver the cursor to the beginning of the desired text,
and press the spacebar to mark it. Then position the cursor over the end
of the text you'd like and press the spacebar again to mark it. When you
mark the end, the text is copied into screen's internal copy buffer, and
copy mode is exited. You can paste the text in your copy buffer into the
active window with Ctrl-A ].
 The final thing you should know about the copy and paste mode is the
scrollback buffer is limited to 100 lines by default. This is, in my
opinion, not enough. You can tweak this to a higher value (1,024 for
example) by adding the command defscrollback 1024 to your
.screenrc.Add New Screens

 Command: screen [opts] [n] [cmd [args]]
 (C-a c, C-a C-c)
 Establish a new window. The flow-control options (`-f', `-fn' and
`-fa'), title option (`-t'), login options (`-l' and `-ln') , terminal
type option (`-T term'), the all-capability-flag (`-a') and scrollback
option (`-h num') may be specified with each command. The option (`-M')
turns monitoring on for this window. The option (`-L') turns output
logging on for this window. If an optional number n in the range 0...9
is given, the window number n is assigned to the newly created window
(or, if this number is already in-use, the next available number). If a
command is specified after screen, this command (with the given
arguments) is started in the window; otherwise, a shell is created.
 Screen has built in some functionality of `cu' and `telnet'. See
section 6.6 Window Types.
 Thus, if your `.screenrc' contains the lines
 
 # example for .screenrc:
 screen 1
 screen -fn -t foobar 2 -L telnet foobar
 screen creates a shell window (in window #1) and a window with a TELNET
connection to the machine foobar (with no flow-control using the title
`foobar' in window #2) and will write a logfile `screenlog.2' of the
telnet session. If you do not include any screen commands in your
`.screenrc' file, then screen defaults to creating a single shell
window, number zero. When the initialization is completed, screen
switches to the last window specified in your .screenrc file or, if
none, it opens default window #0.

***** screenrc examples

Sven's example from
http://softpanorama.org/Utilities/Screen/screenrc examples.shtml

 # ===============================================================
 # File: $HOME/.screenrc
 # Purpose: Setup file for program "(GNU) screen"
 # written by: Sven Guckes <guckes-screen@math.fu-berlin.de>
 # Latest update: Sat Feb 16 06:00:00 MET 2002
 # Latest user version: screen-3.9.11 [020215]
 # Latest beta version: screen-3.9.11beta6 [020206]
 # Length and size: 450 lines and about 15 kilobytes
 # ===============================================================
 #
 # ===============================================================
 # SEE ALSO:
 # ===============================================================
 # SCREEN Pages:
 # http://www.math.fu-berlin.de/~guckes/screen/
 #
 # Commands List (from the manual to screen-3.7.6):
 # http://www.math.fu-berlin.de/~guckes/screen/commands.txt
 #
 # MailingList:
 # http://www.yahoogroups.com/group/gnu-screen/
 #
 # ===============================================================
 # ESCAPE - the COMMAND CHARACTER
 # ===============================================================
 # escape \^aa # default
 # escape \^pp # suggested binding for emacs users
 #
 # ===============================================================
 # STARTUP of programs in an extra window:
 # ===============================================================
 # Uncomment one/some following lines to automatically let
 # SCREEN start some programs in the given window numbers:
 #screen -t irssi0 irssi
 #screen -t mutt 1 mutt
 # screen -t EDIT 2 vim
 # screen -t GOOGLE 3 links http://www.google.com
 # screen -t NEWS 4 slrn
 # screen -t WWW 5 links http://www.math.fu-berlin.de/~guckes/
 #
 # ===============================================================
 # VARIABLES - Boolean values (on/off)
 # ===============================================================
 autodetach on # default: on
 crlf off # default: off
 deflogin off # default: on
 # defsilence off # default: off
 hardcopy append on # default: off
 # nethack on # default: off
 startup message off # default: on
 # termcap xterm 'AF=\E[3%dm:AB=\E[4%dm'
 # terminfo xterm 'AF=\E[3%p1%dm:AB=\E[4%p1%dm'
 # Matthias Kopfermann <matthias kopfermann@gmx.de> [020222]:
 termcapinfo linux "ve=\E[?25h\E[?17;0;64c" # red
 vbell off # default: ???
 #
 # ===============================================================
 # VARIABLES - Number values
 # ===============================================================
 defscrollback 3000 # default: 100
 # msgminwait 3 # default: 1
 silencewait 15 # default: 30
 #
 # ===============================================================
 # VARIABLES - Paths and Files (esp. programs)
 # ===============================================================
 # bufferfile: The file to use for commands
 # "readbuf" ('<') and "writebuf" ('>'):
 # bufferfile $HOME/.screen exchange
 #
 # hardcopydir: The directory which contains all hardcopies.
 # hardcopydir ~/.hardcopy
 # hardcopydir ~/.screen
 #
 # shell: Default process started in screen's windows.
 # Makes it possible to use a different shell inside screen
 # than is set as the default login shell. Halleluja! :-)
 # shell zsh
 shell bash
 # shell ksh
 #
 # ===============================================================
 # VARIABLES - Strings
 # ===============================================================
 # some notes on COLOR before explaining its use in
 # the commands caption, hardstatus, and sorendition.
 #
 # COLOR: colors codes are combinations of
 # [attribute modifier] [color description]
 # the manual talks of "attribute/color modifiers".
 # see the manual, section "STRING ESCAPES".
 #
 # Color table:
 # 0 Black . leave color unchanged
 # 1 Red b blue
 # 2 Green c cyan
 # 3 Brown / yellow d default color
 # 4 Blue g green b bold
 # 5 Purple k blacK B blinking
 # 6 Cyan m magenta d dim
 # 7 White r red r reverse
 # 8 unused/illegal w white s standout
 # 9 transparent y yellow u underline
 #
 # note: "dim" is not mentioned in the manual.
 #
 # ===========================================
 # CAPTION - shows a "caption" for the window.
 # ===========================================
 # a "caption" is another line which can show information -
 # in addition to the hardstatus line.
 #
 # use caption to show window list:
 caption always "%{= kw}%?%-Lw%?%{+b kw}%n%t%f %?(%u)%?%{= kw}%?%+Lw%?"
 # caption always '%{= wb}%50=%n%f %t%{= wb}'
 # this basically just shows the current window number and title
 # on its own; the "%50=" displays it in the middle of the line.
 #
 # caption always "%>%{wk}%?%-Lw%?%{bw}%n%f %t%?(%u)%?%{wk}%?%+Lw%?%<"
 # caption always "%-Lw%{= BW}%50>%n%f %t%{-}%+Lw%<"
 # caption always "%?%F%{.RW}%?%3n %t%? [%h]%?"
 # caption always "%{rk}%H %{gk}%c %{yk}%M%d %{wk}%?%-Lw%?%{bw}%n%f
%t%?(%u)%?%{wk}%?%+Lw%?"
 #
 # caption always "%{kG}%?%-Lw%?%{bw}%n%f %t%?(%u)%?%{kG}%?%+Lw%?"
 #
 # "push right border: current time with seconds and current date"
 # caption always "%=%c:%s %Y-%m-%d"
 #
 # Prints the window names and highlight the current window in yellow.
 # On the right there is the time in green and the date in yellow.
 #
 #caption always "%?%{+b kw}%-Lw%?%{yK}%n%f %t%?(%u)%?%?%{wk}%+Lw%?
%{gk}%=%c %{yk}%d/%M/%Y"
 #
 # ===============================================================
 #
 # ===============================
 # Hardstatus Line and sorendition
 # ===============================
 #
 # Prints the window names and highlight the current window in yellow.
 # On the right there is the time in green and the date in yellow.
 #
 #hardstatus alwayslastline "%?%{wk}%-Lw%?%{yK}%n%f
%t%?(%u)%?%?%{wk}%+Lw%? %{gk}%=%c %{yk}%d/%M/%Y"
 hardstatus alwayslastline "%{+b kr}[ %H ] %{ky} Load: %l %-=%{kb} %c
%d.%m.%Y"
 #hardstatus alwayslastline "%{+b kr}[ %H ] %{kw} Load: %l %-=% %{kb}
%c:%s %d.%m.%Y"
 # Colorize the "messages" and "text marking":
 # Example: Blue bg, white fg
 sorendition gK
 #
 # ============================
 # Password
 # ============================
 # password SZnBqiqMtfa6k
 # Do NOT remove the comment if
 # you don't know what this does!
 # (TODO describe the effect - obviously)
 #
 # ===============================================================
 # Messages
 # ===============================================================
 # There are two kinds of messages: "activity" and "bell"
 # They are also the names of the commands that set the
 # respective messages. In every message there can be "meta
 # strings" which are replaced by values. A meta string starts
 # with a percent sign and is then followed by one of the
 # following letters: aAdDmMnstwWyY The meta strings refer to
 # the current date and time or to a window title or number:
 # %t - title
 # %n - number (a single % still works)
 # %d - day
 # %D - weekday name
 # %m - month
 # %M - month name
 # %y - year (2 digit)
 # %Y - year (4 digit)
 # %w - hour:minutes (24h format)
 # %W - hour:minutes (12h format)
 # %s - seconds
 # %a - am/pm
 # %A - AM/PM
 # Older versions of screen used a single '%' character
 # for window titles - but since version 3.7 this is
 # obsoleted by '%n' and will vanish in future releases!
 # So please update your screenrc to meet this convention!
 #
 # ===============================================================
 # "~" stands for the "bell" character
 #
 # activity: This message includes a "beep" with '~'.
 activity "activity in %n (%t) [%w:%s]~"
 #
 # bell: This message includes a "beep" with '~'.
 bell "bell in %n (%t) [%w:%s]~"
 #
 # pow detach msg: Message shown when session
 # gets power detached.
 pow detach msg "BYE"
 #
 # vbell msg: Message shown when the
 # "virtual bell" rings.
 vbell msg " beep "
 #
 # ==============================================================
 # BIND bind - defaults
 # ==============================================================
 # The "bind" command assign keys to (internal) commands
 # SCREEN checks all the keys you type; you type the key
 # which is known as the "command character" then SCREEN
 # eats this key, too, and checks whether this key is
 # "bound" to a command. If so then SCREEN will execute it.
 #
 # The command "bind" allows you to chose which keys
 # will be assigned to the commands.
 #
 # Some commands are bound to several keys -
 # usually to both some letter and its corresponding
 # control key combination, eg the command
 # "(create) screen" is bound to both 'c' and '\^C'.
 #
 # The following list shows the default bindings:
 #
 # break \^B b
 # clear C
 # colon :
 # copy \^[ [
 # detach \^D d
 # digraph \^V
 # displays 
 # dumptermcap .
 # fit F
 # flow \^F f
 # focus \^I
 # hardcopy h
 # help ?
 # history { }
 # info i
 # kill K k
 # lastmsg \^M m
 # license ,
 # log H
 # login L
 # meta x
 # monitor M
 # next \^@ \^N sp n
 # number N
 # only Q
 # other \^X
 # pow break B
 # pow detach D
 # prev \^H \^P p \^?
 # quit \
 # readbuf <
 # redisplay \^L l
 # remove X
 # removebuf =
 # reset Z
 # screen \^C c
 # select " '
 # silence  
 # split S
 # suspend \^Z z
 # time \^T t
 # title A
 # vbell \^G
 # version v
 # width W
 # windows \^W w
 # wrap \^R r
 # writebuf >
 # xoff \^S s
 # xon \^Q q
 # \^] paste .
 # - select -
 # 0 select 0
 # 1 select 1
 # 2 select 2
 # 3 select 3
 # 4 select 4
 # 5 select 5
 # 6 select 6
 # 7 select 7
 # 8 select 8
 # 9 select 9
 # I login on
 # O login off
 # ] paste .
 #
 # FAQ: So many keys are bound to some command already -
 # which keys are unbound yet? Which are free for binding?
 # A: SCREEN does not have a command to show you
 # a table of currently unbound keys - sorry!
 # You simply have to read this setup file. ;-)
 #
 # Summary: Here is a table of the keys
 # which are not bound by default:
 # unbound: -B--E-G--J-L---P-R-TUV--Y-
 # bound: A-CD-F-HI-K-MNO-Q-S---WX-Z
 #
 # And here are the default bind commands if you need them:
 #
 # bind A title
 # bind C clear
 # bind D pow detach
 # bind F fit
 # bind H log
 # bind I login on
 # bind K kill
 # bind L login
 # bind M monitor
 # bind N number
 # bind O login off
 # bind Q only
 # bind S split
 # bind W width
 # bind X remove
 # bind Z reset
 #
 # I suggest that you don't change the bidnings for
 # 'H' ("log") and 'M' ("monitor") as they are really
 # useful and you might want to use them a lot;
 # in this case it is recommended to use
 # the defaults to avoid confusion.
 # personally, I use 'A' ("title") quite often, too.
 #
 # If you are using "split windows" already
 # (this is not available in the latest user release yet)
 # then you will also use the command
 # associated with the keys FQSX a lot, too -
 # so don't change their bindings!
 #
 # Anyway, I have bound the unbound uppercase letters
 # to start programs in windows directly, ie without
 # starting a new window with a shell within first.
 # This simply saves shells and thus saves RAM -
 # and also avoids that the title of a windows is
 # the name of your shell. Also, you need not "exit"
 # from a shell when you are done with some program:
 #
 # ==============================================================
 # BIND and the Services:
 # ==============================================================
 # I am using the uppercase letters to start programs/services:
 #
 bind A title # default!
 #
 # BUUG - Berlin Unix User Group - read some news about Unix
 # bind B screen -t 'buug' 4 links www.buug.de
 #
 # CHEM - LinuxTag event in Chemnitz -- 2002-03-09 + 2002-03-10
 # bind C screen -t 'CHEM' 9 links www.tu-chemnitz.de/linux/tag/
 # NOTE: This overrides the default binding for the "clear" command.
 #
 # DICT - Dictionary English<->German
 # bind D pow detach !
 # bind D screen -t 'DICT' 4 links dict.tu-chemnitz.de
 # Note: this overrides the default binding for the
 # command "pow detach". I hardly ever use that one.
 #
 # MUTT - Email User Agent
 # bind E screen -t 'mail' 0 mutt
 # I use email quite a lot - so window #0 is reserved for that.
 # see also: http://www.math.fu-berlin.de/~guckes/mutt/
 #
 # FTP - File Transfer "Program"
 # bind F fit # default!
 # bind F screen -t 'ftp' 9 ncftp
 # see also: http://www.math.fu-berlin.de/~guckes/ncftp/
 #
 # GOOGLE - Web Search Engine
 bind \^g screen -t 'Google' links www.google.com
 #
 # HEISE - IT NewsTicker
 # bind H log # default!
 # bind H screen -t HeiseTicker links www.heise.de
 # NOTE: This overrides the default binding of the "hardcopy" command!
 #
 # IRC - International Relay Chat
 # bind I screen -t 'irc' 5 irc
 # bind I screen -t 'icq' 9 micq
 # see also: http://www.math.fu-berlin.de/~guckes/irc/
 #
 # Feb 2002: Use it to search the Internet Movie DataBase (IMDB):
 # bind I screen -t 'IMDB' 9 links http://www.imdb.com/
 # bind I screen -t 'IMDB' 9 links http://us.imdb.com/search/
 # see also: http://www.math.fu-berlin.de/~guckes/berlinale/
 #
 bind K kill # default!
 # bind K
 # This removes the binding for 'K'
 # thus requireing you to enter the
 # command via the command line, ie ":kill".
 # This prevent accidental killing of your windows.
 # Old versions of SCREEN do not prompt for
 # confirmation on "killing a window", you see..
 #
 # LYNX - web browser
 # bind L screen -t 'lynx' 4 lynx http://www.math.fu-berlin.de/~guckes/
 # see also: http://www.math.fu-berlin.de/~guckes/lynx/
 #
 # see also: http://www.math.fu-berlin.de/~guckes/links/
 # bind L screen -t 'WWW' 4 links http://www.math.fu-berlin.de/~guckes/
 #
 # bind L screen -t 'WWW' 4 links
http://www.lug-camp-2002.de/programm.html
 # bind L screen -t 'WWW' 4 links
http://www.mdlug.de/index.php/linuxtag2002/vortraege/v12.inc?menu=0|4|
 # bind L screen -t 'WWW' 4 links
http://www.mdlug.de/index.php/linuxtag2002/programm.inc?menu=0|4|&nomfc=1
 #
 bind M monitor # default!
 #
 # NN - newsreader
 # bind N screen -t 'nn' 3 nn
 # see also: http://www.math.fu-berlin.de/~guckes/nn/
 # Get some news about the weather... (dont ask ;-)
 # bind N screen -t 'Nepal' links
http://www.wunderground.com/global/stations/44454.html
 # bind N screen -t 'Nepal' links
http://www.wunderground.com/global/stations/10382.html
 #
 # Paste - use 'P' instead of ']':
 bind P paste .
 # The character ']' is hard to type on german keyboards,
 # as it requires the use of a yet another meta character "AltGR".
 # I prefer to use 'P' for "paste" because it is a letter
 # which is available at the same position both with the
 # US keyboards and keyboards with "Kraut layout" -
 # which I call" Krautboards", by the way. ;-)
 # bind ] paste . # default!
 #
 # Register page at NetMind's Service:
 # bind R screen links
http://www.netmind.com/URL-minder/new/register.html
 #
 #
 # SLRN - newsreader
 # bind S screen -t 'slrn' 3 slrn -n -C -k0
 # see also: http://www.slrn.org http://slrn.sourceforge.net
 # and http://www.math.fu-berlin.de/~guckes/slrn/
 #
 # VIM - editor
 bind V screen -t 'vim' 0 vim
 # Editing comes with email quite naturally -
 # so I have reserved window #1 for this.
 # http://www.math.fu-berlin.de/~guckes/vim/
 # http://www.vim.org/ (which is just a mirror)
 #
 # X - a fast way to lock the current screen.
 # bind X lockscreen
 #
 # bind Y exec !!! echo -n http://www.math.fu-berlin.de/~guckes/
 # bind Y stuff http://www.math.fu-berlin.de/~guckes/
 # This pastes the address of my homepage to the process
 # in the current window. very nice - saves some typing.
 # and you don't have to have the functionality of
 # "abbreviating" in the processes themselves. :-)
 #
 # my binds
 #
 # bind \^w screen -t 'watch' $HOME/.screen/scripts/tetherwatch
 # bind \^c screen -t 'capture' $HOME/.screen/scripts/tethercapture
 # bind \^r screen -t 'output' $HOME/.screen/scripts/tetherout
 # bind \^o screen -t 'output-short'
$HOME/.screen/scripts/tetherout.short
 # bind \^t screen -t 'sysinfo' top
 #bind \^N screen -t 'news' links
www.debian.de/News/weekly/index.de.html
 #bind \^M screen -t w3m cm.adrenalin.de
 #bind \^L screen -t watch -n 5 tail -45 /var/log/sysloc
 bind \^Y screen -t log watch -n 5 rail -40 /var/log/syslog
 #
 #
 # ===============================================================
 # BIND Examples:
 # ===============================================================
 # You can also paste the values of
 # SCREEN's environment variables:
 # bind E stuff $EMAIL
 # bind U stuff $URL
 # bind I stuff $ICQ
 #
 # ===============================================================
 # BINDKEY:
 # ===============================================================
 # [TODO briefly explain the difference between BIND and BINDKEY]
 #
 # Use the function keys F7 and F8
 # to cycle backwards/forwards in
 # the list of existing windows:
 # bindkey -k k7 prev
 # bindkey -k k8 next
 #
 # make the "kb" send a backspace (CTRL-H:)
 # bindkey -d kb stuff \^H
 # WARNING: this does not work as advertised.
 # it eats the "kb" when typing "dankbar" for example. :-(
 #
 #
 # ===============================================================
 # Key bindings (TODO)
 # ===============================================================
 # Remove some default key bindings by binding
 # them to "nothing" (empty right-hand-side):
 #
 # bind . dumptermcap # default
 bind .
 # bind \^\ quit # default
 bind \^\
 # bind \\ quit # default
 bind \\
 # bind h hardcopy # default
 # bind h
 # bind \^h ??? # default
 # bind \^h
 # bind } history # default
 # bind }
 #
 #
 # ===============================================================
 # At the very end... show the current version and say hello :-)
 # ===============================================================
 # Briefly show the version number of this starting
 # screen session - but only for one second:
 msgwait 1
 version
 # change back to showing messages
 # for duration of two seconds:
 msgwait 2
 #
 # Welcome the user:
 echo "welcome :-)"
 #
 # Ths DISPLAY variable keeps getting in my way.
 # usually I do not want to start programs which
 # need a DISPLAY. Text Tools rule! :-)
 # setenv DISPLAY ''
 #
 # Tell Vim to use a "tabstop" of '8',
 # ie expands TABs to the next column
 # whose number is a multiple of eight.
 # EOF vim: ts=8

***** split and resize

Ctrl+a Ssplit terminal horizontally into regions
 (Ctrl+a c to create new window there)


 Ctrl+a |split terminal vertically into regions (Requires
debian/ubuntu patched screen 4.0)
 Ctrl+a tabMove to next region
 Ctrl+a :resize
 resize region
 
You need to press ctrl+a then TYPE resize and define line numbers
 Ctrl+a :fi fit screen size to new terminal size
 Ctrl+a F is the same. Do after resizing xterm
 Ctrl+a :removeremove region
 Ctrl+a X is the same
 
**** tmux
***** Windows/panes
****** switching windows

 Ctrl-b n (Move to the next window)
  Ctrl-b p (Move to the previous window)
  Ctrl-b l (Move to the previously selected window)
  Ctrl-b w (List all windows / window numbers)
  Ctrl-b <window number> (Move to the specified window number, the
 default bindings are from 0 -- 9)
  find-window option & keybinding.
  Type Ctrl-b f and type in the window name you want (it actually
 searches for the window so you can type in only part of the name of the
 window you're looking for).

****** split up a window into multiple smaller windows

 When you split up a window into multiple smaller windows they're
 referred to as panes. Tmux also offers "layouts" for the panes, or the
 default positioning and behavior when you create a new window. You can
 switch through the panes by using the key binding:
  Ctrl-b <space>
  which will toggle through the different layouts.
***** Sessions
****** create a new names session
issue 'tmux new -s NAME'

#+BEGIN_SRC sh
tmux new -s Uni
#+END_SRC

this creates a new tmux session named session name
****** attach and switch to a specific session 
'tmux attach -t NAME'

attaches to an existing tmux session named NAME
%Tip- you can use `a` instead of the full `attach` % 

#+BEGIN_SRC sh
tmux a -t Uni
#+END_SRC

'tmux switch -t NAME' switches to an existing session named NAME

****** list sessions
'tmux list-sessions' lists existing tmux sessions 
 

#+BEGIN_SRC sh
tmux list-sessions
#+END_SRC

****** kill a session
#+BEGIN_SRC sh
tmux kill-session -t session name
#+END_SRC

kills current sassion (by name)

***** configuring tmux 
****** config syntax
Note on binding:
bind is the same as bind-key

-r means 'repeatable without repeating the prefix'
-n means 'does not need prefix'
setw (and set -w) is short for set-window-option, and is
window-specific
set -g means 'set globally', set -u un-sets, set -a appends to a
current value (for strings)     

****** zeltak script example
below is an annotated script (annotation in blue)
#+BEGIN_EXAMPLE
#!/bin/sh
see comment , will not launch the session twice
#to not launch if already running
tmux has-session -t tmux mpd
if [ $? != 0 ]
then
#create the main tmux session and detach
tmux new-session -s tmux mpd -n Player -d
#create first window
tmux send-keys -t tmux mpd 'ncmpcpp' C-m
#split that window vert
tmux split-window -v -t tmux mpd
#focus on that split and execute lyvi
tmux send-keys -t tmux mpd:1.2 'lyvi' C-m
#split the botom into 2 horizontoly
tmux split-window -h -t tmux mpd
#focus on right split now and execute alsamixer
tmux send-keys -t tmux mpd:1.3 'export PS1=""; clear' C-m
tmux split-window -h -t tmux mpd
#focus on right split now and execute alsamixer
tmux send-keys -t tmux mpd:1.4 'ncmpcpp -c
home/zeltak/.ncmpcpp/alt config' C-m
#create a new window 2
tmux new-window -t tmux mpd -n Audio
tmux send-keys -t tmux mpd:2.1 'alsamixer' C-m
#split that window vert
tmux split-window -v -t tmux mpd
#focus on that split and execute lyvi
tmux send-keys -t tmux mpd:2.2 'pacmixer' C-m
#create a new window 3
tmux new-window -t tmux mpd -n Tag
tmux send-keys -t tmux mpd:3.1 'mpc' C-m
#create a new window 4
tmux new-window -t tmux mpd -n Extra
tmux send-keys -t tmux mpd:4.1 'mpc' C-m
#select default focus
tmux select-window -t tmux mpd:1
use the -t switch to target a specific tmux session
###########THEME############################
#split panes border colours
#non active
tmux set -t tmux mpd pane-border-fg default
tmux set -t tmux mpd pane-border-bg default
#active
#set -t tmux mpd pane-active-border-bg '#006F95' #comment out to make
ane thinner
tmux set -t tmux mpd pane-active-border-fg '#006F95'
#command line
tmux set -t tmux mpd message-fg white
tmux set -t tmux mpd message-bg black
tmux set -t tmux mpd message-attr bright
#Status-Bar
tmux set -t tmux mpd status-bg "#222222"
tmux set -t tmux mpd status-fg "#777777"
# center align window list
tmux set -t tmux mpd status-justify centre

#Left side of status bar
tmux set -t tmux mpd status-left-length 500
tmux set-option -t tmux mpd status-left
#[fg=#ffffff]Track#(/usr/bin/mpc current -f "%%track%%")(#(/usr/bin/mpc
urrent -f "%%time%%"))'
#right side of status bar
tmux set -t tmux mpd status-right-length 500
tmux set-option -t tmux mpd status-right '#[fg=#ffffff]#(/usr/bin/mpc
urrent -f "%%title%%-%%album%% \(%%artist%%"))'
####window properties
you will need to define each window property seperatly
###Win1
# Current or active window in status bar
tmux set -t tmux mpd:1 window-status-current-attr bold
tmux set -t tmux mpd:1 window-status-current-fg white
tmux set -t tmux mpd:1 window-status-current-bg '#0099CC'
# Non active window in status bar
tmux set -t tmux mpd:1 window-status-attr bold
tmux set -t tmux mpd:1 window-status-fg black
tmux set -t tmux mpd:1 window-status-bg '#828282'
###Win2
tmux set -t tmux mpd:2 window-status-current-attr bold
tmux set -t tmux mpd:2 window-status-current-fg white
tmux set -t tmux mpd:2 window-status-current-bg '#0099CC'
tmux set -t tmux mpd:2 window-status-attr bold
tmux set -t tmux mpd:2 window-status-fg black
tmux set -t tmux mpd:2 window-status-bg '#828282'
###Win3
tmux set -t tmux mpd:3 window-status-current-attr bold
tmux set -t tmux mpd:3 window-status-current-fg white
tmux set -t tmux mpd:3 window-status-current-bg '#0099CC'
tmux set -t tmux mpd:3 window-status-attr bold
tmux set -t tmux mpd:3 window-status-fg black
tmux set -t tmux mpd:3 window-status-bg '#828282'
###Win4
tmux set -t tmux mpd:4 window-status-current-attr bold
tmux set -t tmux mpd:4 window-status-current-fg white
tmux set -t tmux mpd:4 window-status-current-bg '#0099CC'
tmux set -t tmux mpd:4 window-status-attr bold
tmux set -t tmux mpd:4 window-status-fg black
tmux set -t tmux mpd:4 window-status-bg '#828282'
#clear annoying window flags
tmux set -t tmux mpd:1 window-status-current-format " #I$ #W"
tmux set -t tmux mpd:2 window-status-current-format " #I$ #W"
tmux set -t tmux mpd:3 window-status-current-format " #I$ #W"
tmux set -t tmux mpd:4 window-status-current-format " #I$ #W"
tmux set -t tmux mpd:1 window-status-format " #I$ #W "
tmux set -t tmux mpd:2 window-status-format " #I$ #W "
tmux set -t tmux mpd:3 window-status-format " #I$ #W "
tmux set -t tmux mpd:4 window-status-format " #I$ #W "
fi
tmux attach -t tmux mpd
#+END_EXAMPLE

****** from within tmux.conf
 Session initialization
 You can have tmux open a session with preloaded windows by including
 those details in your ~/.tmux.conf:
  new -n WindowName Command
  neww -n WindowName Command
  neww -n WindowName Command
  To start a session with split windows (multiple panes), include the
 splitw command below the neww you would like to split; thus:
  new -s SessionName -n WindowName Command
  neww -n foo/bar foo
  splitw -v -p 50 -t 0 bar
  selectw -t 1
  selectp -t 0
  would open 2 windows, the second of which would be named foo/bar and
 would be split vertically in half (50%) with foo running above bar.
 Focus would be in window 2 (foo/bar), top pane (foo).
  Note: Numbering for sessions, windows and panes starts at zero, unless
 you have specified a base-index of 1 in your .conf
  To manage multiple sessions, source separate session files from your
 conf file:
  # initialize sessions
  bind F source-file ~/.tmux/foo
  bind B source-file ~/.tmux/bar
****** Using shell scripting to setup your tmux enviroment

 Using shell scripting to setup your tmux enviroment
  Tmux allows you to easily run commands for your different sessions
 through the command line without having to ever login to the session.
 This also allows us to make a simple bootstrap script which will setup
 your tmux environment and log you into it. Here is an example script I
 personally use:
  1) The command new-session -d -s SESSION NAME creates a new tmux
 session, detaches it (so it doesn't open in your current terminal) and
 names it SESSION NAME in this case.
  THE script will not work without the -d at the begining
  2)The following set of new-window commands create five new windows and
 executes the command at the end.
  The arguments are broken down as follows:
  -t SESSION NAME :1
  tells tmux to "target" the session SESSION NAME and the window with
 the id of 1.
  The -n 'Server1 ssh root@10.x.x.x'
  portion tells tmux to name the window Server1 and executes the command:
 ssh root@10.x.x.x
  3) The select-window -t SESSION NAME:1
  command tells tmux that you want the active window the session to be
 SESSION NAME and window 1.
  4) The
  -2 attach-session -t SESSION NAME
  tells tmux you want to attach the terminal with 256 colors and attach
 to the session SESSION NAME.
  Note: This is the command that brings the tmux session to the
 foreground. If you recall earlier when the script created the session we
 specified the -d switch which prevents it from loading in your terminal.
****** Specify an alternative configuration file
 use the -f option:
  tmux -f file
  Specify an alternative configuration file. By default, tmux loads the
 system configuration file from /etc/tmux.conf, if present, then looks
 for a user
  configuration file at ~/.tmux.conf. The configuration file is a set of
 tmux commands which are executed in sequence when the server is first
 started.
****** by sourcing a session file

You can source different sessions from your .tmux.conf like so:
 # initialize sessions
 bind S source-file ~/.tmux/session1
 bind s source-file ~/.tmux/session2
 And then format the sessions as you require:
 new -s SessionName -n WindowName Command
 neww -n foo/bar foo
 splitw -v -p 50 -t 0 bar
 selectw -t 1
 selectp -t 0
 would open 2 windows, the second of which would be named foo/bar and
would be split vertically in half (50%) with foo running above bar.
Focus would be in window 2 (foo/bar), top pane (foo).
****** source part of the config (use base config and add on themes for
 each tmux session)

 you can make life easier if you have several tmux sessions and you want
 them all to share the same base properties but different theme settings
 for each by using the source option in your tmux.conf
  In example:
  have the same commands for each .tmux.conf you use in the first part.
  then at the very end issue the source command:
  #command to launch an internal ssh window
  bind S command-prompt -p 'SSH to:' "new-window -n %1 'ssh %1'"
  # Set Copy mode to escape key
  unbind [
  bind Escape copy-mode
  #clear buffer history
  bind -n C-k clear-history
  source /home/zeltak/ZH tmp/mux home
  this will load the file mux home with all its properties. in that file
 you can define theme and special commands.
****** pane thickness
the pane separator background colour is in charge of the pane seperator thickness. it will always be one cell thick but if you set the bg colour they look much bigger

#+BEGIN_EXAMPLE
#set -g pane-active-border-bg '#F9F9F9'
set -g pane-active-border-fg '#F9F9F9'
#+END_EXAMPLE

$Note-that the active border is commented out. to make it a thicker border uncomment it$

****** formating
 We target a pane using the format
 #+BEGIN_EXAMPLE
 [session]:[window].[pane]
 #in our case
 development:1.2.
 #+END_EXAMPLE
 So, we add this line to our configuration script, and we get exactly what we want.

 #+BEGIN_EXAMPLE
 tmux send-keys -t development:1.2 'cd ~/devproject' C-m
 #+END_EXAMPLE
****** Automatic window rename
Automatic window rename

You can have tmux rename the window to the command that is currently
running. This is useful when you load up something such as irssi and the
window is labeled accordingly:

 #+BEGIN_EXAMPLE
 # Automatically set window title
 setw -g automatic-rename
 #+END_EXAMPLE

 [[http://blog.hawkhost.com/wp-content/uploads/2010/07/tmux-window-rename.png][]]
***** keybinds
****** main shortcuts

 <prefix> fSearch for window name)
  <prefix> wSelect from interactive list of windows
  <prefix>qshow pane numbers
  <prefix>
  <prefix>
  <prefix>

****** bring up tmux command prompt
type: ?<prefix> b?  
****** move between panes and show pane ID 
 #+BEGIN_EXAMPLE
 #switch through panes by issuing the
 Ctrl-b o
 #list the pane ID's and you select the one you want.
 Ctrl-b q
 #+END_EXAMPLE
***** split the terminal window

Now here are some default basic key bindings and commands to split the
terminal window (vertically and horizontally) and to switch between them
 Ctrl-b % (Split the window vertically)
 Ctrl-b : "split-window" (Split window horizontally)
 Ctrl-b o (Goto next pane)
 Ctrl-b q (Show pane numbers, when the numbers show up type the key
to goto that pane)
 Ctrl-b { (Move the current pane left)
 Ctrl-b } (Move the current pane right)
 Now some obviously the default bindings don't encompass some of
features, such as splitting horizontally. I personally rebind the keys
so "|" splits the current window vertically, and "-" splits it
horizontally. Not the easiest things to type, though easy to remember.
 You can achieve this by putting the following in ~/.tmux.conf or by
typing it in the interactive prompt (Ctrl-b :). Keep in mind if you do
the latter it will only be in effect for that session:
 unbind %
 bind | split-window -h
 bind -- split-window -v
 see binding keys section for detalied examples

***** Make your pane into its own window
Make your pane into its own window
 If you want to take a pane and make it into its own window you do the
following:
 Ctrl-b : "break-pane"
Simple enough, you should now have the pane in its brand new window. If
you don't want it to automatically make the pane you just broke out as
the active window issue the "-d" switch which will simply break the pane
to a new window but keep you in the current window.

***** Resizing Panes

Resizing Panes
 You can also resize panes if you don't like the layout defaults. I
personally rarely need to do this, though it's handy to know how. Here
is the basic syntax to resize panes:
 Ctrl-b : resize-pane (By default it resizes the current pane down)
 Ctrl-b : resize-pane -U (Resizes the current pane upward)
 Ctrl-b : resize-pane -L (Resizes the current pane left)
 Ctrl-b : resize-pane -R (Resizes the current pane right)
 Ctrl-b : resize-pane 20 (Resizes the current pane down by 20 cells)
 Ctrl-b : resize-pane -U 20 (Resizes the current pane upward by 20
cells)
 Ctrl-b : resize-pane -L 20 (Resizes the current pane left by 20
cells)
 Ctrl-b : resize-pane -R 20 (Resizes the current pane right by 20
cells)
 Ctrl-b : resize-pane -t 2 20 (Resizes the pane with the id of 2
down by 20 cells)
 Ctrl-b : resize-pane -t -L 20 (Resizes the pane with the id of 2
left by 20 cells)
 
***** kill all windows and pane with 1 command

use:

 kill-seesion

 command from the tmux command prompt
 or to kill the specific sever:

 kill-server

 to terminate server and every window

***** move tmux copy buffer into x clipboard

issue in conf file:
 # move x clipboard into tmux paste buffer
 bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
 # move tmux copy buffer into x clipboard
 bind C-y run "tmux show-buffer | xclip -i"
 or
 ##CLIPBOARD selection integration
 ##Requires prefix key before the command key
 #Copy tmux paste buffer to CLIPBOARD
 bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
 #Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
 bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\";
tmux paste-buffer"

***** fix error: terminal open failed: missing or unsuitable terminal:
rxvt-unicode-256color

if you get this error:
 terminal open failed: missing or unsuitable terminal:
rxvt-unicode-256color
 create on the SERVER these 2 dirs:
 ~/.terminfo/r/
 ~/.terminfo/s/
 then copy to the r dir via scp this file (the files are at
/usr/share/terminfo/r and /usr/share/terminfo/s/):

 scp /usr/share/terminfo/r/rxvt-unicode-256color
zeltak.homelinux.com:~/.terminfo/r/

 and copy to the s dir vis scp this file:

 scp /usr/share/terminfo/s/screen-256color
zeltak.homelinux.com:~/.terminfo/s/

 for termite:

 scp /usr/share/terminfo/x/xterm-termite
zeltak.homelinux.com:~/.terminfo/x/

 restart tmux on the server and you should be good to go

***** tmux layouts

number of preset layouts are available.
 These may be selected with the select-layout command or cycled with
next-layout (bound to `Space' by default); once a layout is chosen,
panes within it may be moved and resized as normal.
 The following layouts are supported:

 even-horizontal
 Panes are spread out evenly from left to right across the window.
 even-vertical
 Panes are spread evenly from top to bottom.
 main-horizontal
 A large (main) pane is shown at the top of the window and the
remaining panes are spread from left to right in the leftover space at
the bottom. Use the main-pane-height window option to specify the height
of the top pane.
 main-vertical
 Similar to main-horizontal but the large pane is placed on the left
and the others spread from top to bottom along the right. See the
main-pane-width window option.
 tiled
 Panes are spread out as evenly as possible over the window in both
rows and columns.

***** Binding a key for "last-window"
One of my favorite screen hotkeys is the last window hotkey which allows
you to quickly switch between the current window and last window that
was active. By default tmux doesn't have a binding for this however it
can easily be achieved by using the following:
 bind-key C-a last-window
 What this does is binds Ctrl-a to switch between the last active
window. To use this binding you would hit Ctrl-a twice (since the prefix
is set to Ctrl-a and the binding Ctrl-a).

***** bind a key (not with ctrl-b first) to action

use something like this: (with the -n switch) :
 bind -n f1 next-window

***** keybing to kill current pane

keybing to kill current pane:
 c-a x

***** rebind default action binding

the Ctrl-b binding isn't horribly intuitive especially if you're used to
screen. You can rebind this by putting the following in ~/.tmux.conf:
 set -g prefix Ctrl-a
 NOTE:replace all examples bellow using Ctrl-b with Ctrl-a

***** important config options

Start Window Numbering at 1

Zero-based indexing is sure great in programming languages, but not
 so much in terminal multiplexers where that zero is all the way on the
 other side of the keyboard.

set -g base-index 1
 Faster Command Sequences


Upon starting to use tmux, I noticed that I had to add a noticeable
 delay between two characters in a command sequence for it to recognize
 the command, for example between the C-a and n in C-a n. This is
because tmux is waiting for an escape sequence. Fix that by setting
escape time to zero.

set -s escape-time 0
 Aggressive Resize


By default, all windows in a session are constrained to the size of
 the smallest client connected to that session, even if both clients are
 looking at different windows. It seems that in this particular case,
 Screen has the better default where a window is only constrained in
size
 if a smaller client is actively looking at it. This behaviour can be
 fixed by setting tmux's aggressive-resize option.

setw -g aggressive-resize on
***** colors

you can use a hex code now in the tmux config to define colors IE:
 ###Ztheme
 #default statusbar colors
 set -g status-fg white
 set -g status-bg '#DDDDDD'
 set -g status-attr bright
 # default window title colors
 set-window-option -g window-status-fg white
 set-window-option -g window-status-bg '#777777'
 set-window-option -g window-status-attr dim
 # active window title colors
 set-window-option -g window-status-current-fg white
 set-window-option -g window-status-current-bg '#33B5E5'
 set-window-option -g window-status-current-attr bright
 # command/message line colors
 set -g message-fg white
 set -g message-bg black
 set -g message-attr bright
 #split panes border colours
 set -g pane-active-border-bg '#33B5E5'

 The first two commands set the background t and foreground of the
status bar.

***** Notify you when a window has activity



This quick snippet will have tmux notify you in the status area when a
window has activity:# Set window notifications:
 setw -g monitor-activity on
 set -g visual-activity on
 [[~/Dropbox/Org/Tech/linux_files/tmux-window-activity2.png]]
 [[~/Dropbox/Org/Tech/linux_files/tmux-window-activity.png]]

[[http://blog.hawkhost.com/wp-content/uploads/2010/07/tmux-window-activity2.png][]][[http://blog.hawkhost.com/wp-content/uploads/2010/07/tmux-window-activity.png][A]]s
you can see in the first image it lets me know that there was activity
in window 0 (in this case sleep 10 && echo "narwhal" and switching the
window).

***** Aggressive Resize

By default, all windows in a session are constrained to the size of the
smallest client connected to that session, even if both clients are
looking at different windows. It seems that in this particular case,
Screen has the better default where a window is only constrained in size
if a smaller client is actively looking at it. This behaviour can be
fixed by setting tmux's aggressive-resize option.
 setw -g aggressive-resize on

***** make ctrl-a ctral s work like alt-tab (

#make ctrl-a ctral s work like alt-tab (last window)
 bind-key C-a last-window

***** Faster Command Sequences

Faster Command Sequences
 Upon starting to use tmux, I noticed that I had to add a noticeable
delay between two characters in a command sequence for it to recognize
the command, for example between the C-a and n in C-a n. This is because
tmux is waiting for an escape sequence. Fix that by setting escape time
to zero.
 set -s escape-time 0

***** status line

***** status

STATUS LINE
 tmux includes an optional status line which is displayed in the bottom
 line of each terminal. By default, the status line is enabled (it may
be
 disabled with the status session option) and contains, from left-to-
 right: the name of the current session in square brackets; the window
 list; the title of the active pane in double quotes; and the time and
 date.
 The status line is made of three parts: configurable left and right
sections (which may contain dynamic content such as the time or output
from a shell command
 see the:
 status-left, status-left-length, status-right, and status-right-length
 and a central window list.
 By default, the window list shows the index, name and (if any) flag of
the windows present in the current session in ascending
 numerical order. It may be customised with the window-status-format and
window-status-current-format options. The flag is one of the following
 symbols appended to the window name:
 Symbol Meaning
  Denotes the current window.
 - Marks the last window (previously selected).
 # Window is monitored and activity has been detected.
 ! A bell has occurred in the window.
 + Window is monitored for content and it has appeared.
 ~ The window has been silent for the monitor-silence
 interval.
 The # symbol relates to the monitor-activity and + to the
monitor-content window options. The window name is printed in inverted
colours if an
 alert (bell, activity or content) is present The colour and attributes
of the status line may be configured, the entire status line using the
 status-attr, status-fg and status-bg session
 options and individual windows using the window-status-attr,
window-status-fg and window-status-bg window options.
 The status line is automatically refreshed at interval if it has
changed,
 the interval may be controlled with the status-interval session option.

***** panel attributes

Special values in titles include:
 Character pair Replaced with
 #(shell-command) First line of the command's output
 #[attributes] Colour or attribute change
 #H Hostname of local host
 #F Current window flag
 #I Current window index
 #P Current pane index
 #S Session name
 #T Current window title (a shell thing? typically user@host:path ?)
 #W Current window name (tmux's own, the one shown in the bottom bar)
 ## A literal '#'
 The #(shell-command) form executes 'shell-command' and inserts the
first line of its output.
 Note that shell commands are only executed once at the interval
specified by the status-interval option: if the status line is
 redrawn in the meantime, the previous result is used.
 Shell commands are executed with the tmux global environment set (see
the ENVIRONMENT section).
 For details on how the names and titles can be set see the NAMES AND
TITLES section.
 #[attributes] allows a comma-separated list of attributes to be
specified, these may be 'fg=colour' to set the
 foreground colour, 'bg=colour' to set the background colour, the name
of one of the attributes (listed under
 the message-attr option) to turn an attribute on, or an attribute
prefixed with 'no' to turn one off, for example
 nobright. Examples are:
 #(sysctl vm.loadavg)
 #[fg=yellow,bold]#(apm -l)%%#[default] [#S]
 Where appropriate, special character sequences may be prefixed with a
number to specify the maximum length, for
 example '#24T'.
 By default, UTF-8 in string is not interpreted, to enable
 UTF-8, use the status-utf8 option.

***** get rid of flags (the ~,+, etc in window name)

add this to the config:
 setw -g window-status-format " #I$ #W "
 setw -g window-status-current-format " #I$ #W"

***** windows

window-status-bell-attr attributes
 Set status line attributes for windows which have a bell
 alert.
 window-status-bell-bg colour
 Set status line background colour for windows with a bell
 alert.
 window-status-bell-fg colour
 Set status line foreground colour for windows with a bell
 alert.
 window-status-content-attr attributes
 Set status line attributes for windows which have a
 content alert.
 window-status-content-bg colour
 Set status line background colour for windows with a
 content alert.
 window-status-content-fg colour
 Set status line foreground colour for windows with a
 content alert.
 window-status-activity-attr attributes
 Set status line attributes for windows which have an
 activity (or silence) alert.
 window-status-activity-bg colour
 Set status line background colour for windows with an
 activity alert.
 window-status-activity-fg colour
 Set status line foreground colour for windows with an
 activity alert.
 window-status-attr attributes
 Set status line attributes for a single window.
 window-status-bg colour
 Set status line background colour for a single window.
 window-status-current-attr attributes
 Set status line attributes for the currently active
 window.
 window-status-current-bg colour
 Set status line background colour for the currently
 active window.
 window-status-current-fg colour
 Set status line foreground colour for the currently
 active window.
 window-status-current-format string
 Like window-status-format, but is the format used when
 the window is the current window.
 window-status-fg colour
 Set status line foreground colour for a single window.
 window-status-format string
 Set the format in which the window is displayed in the
 status line window list. See the status-left option for
 details of special character sequences available. The
 default is '#I:#W#F'.

***** escape characters

some character need to be escaped before use in the status line,
 for example '%' would be exaped as %%
 '(' would need to be set to /(
 In example:
 tmux set-option -t tmux mpd status-left
'#[fg=#ffffff]#[bg=#0099CC]#(/usr/bin/mpc current -f
"%%title%%//%%album%% \(%%artist%%")) '

***** tmux info

`tmux list-keys` lists out every bound key and the tmux command it runs

`tmux list-commands` lists out every tmux command and its arguments

`tmux info`  lists out every session, window, pane, its pid, etc.

`tmux source-file ~/.tmux.conf` reloads the current tmux configuration (based on a default tmux config)

***** copy/paste mode
`
first configure you conf file to use better copy-paste config

#+BEGIN_SRC sh
setw -g mode-keys vi # vim-style movement
# in normal tmux mode
bind Escape copy-mode # `tmux prefix + Escape` starts copy mode.
bind p paste-buffer # `prefix + p` pastes the latest buffer

# in copy mode…
bind -t vi-copy v begin-selection # `v` begins a selection. (movement keys to select the desired bits)
bind -t vi-copy y copy-selection # `y` copies the current selection to one of tmux's "paste buffers"
bind -t vi-copy V rectangle-toggle # `V` changes between line- and columnwise selection

bind -t vi-copy Y copy-end-of-line # ^1
bind + delete-buffer
#+END_SRC

I like Y to yank the current line, which is what ^1 does.

Once you’ve copied some stuff, you can do more than just paste the last thing:

#+BEGIN_EXAMPLE
           #           List all paste buffers.
           -           Delete the most recently copied buffer of text.
           =           Choose which buffer to paste interactively from a list.
           [           Enter copy mode to copy text or view the history.
           ]           Paste the most recently copied buffer of text. 
#+END_EXAMPLE

$Note$ I have `[` remapped to `Escape` and `]` remapped to `p`. I use - for split-window -v, so I moved delete-buffer to +.)

tmux remembers old buffers and prefix + = lets you paste them arbitrarily!
***** Tmux Tips
****** Browsing URL's
To browse URL inside tmux you must have urlview installed and configured.

https://aur.archlinux.org/packages/urlview/

to see how to configure urlview: id:03d71f1b-8ec7-427e-a363-d023b07402d5

Inside a new terminal:

 #+BEGIN_SRC sh
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e urlview /tmp/tmux-buffer"
 #+END_SRC

Or inside a new tmux window (no new terminal needed):

 #+BEGIN_SRC sh
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'
 #+END_SRC

****** reconnect a ssh session that has different resolution
 #+begin_src sh
 tmux a -d
 #+end_src
 
****** Select and focus on a specific pane every X seconds
to switch to a tmux window after x seconds

#+BEGIN_EXAMPLE
while :; do sleep 10; tmux select-window -t tmux mpd:1; done
#+END_EXAMPLE
to switch to a tmux window and then a pane:
#+BEGIN_EXAMPLE
while :; do sleep 10; tmux select-window -t tmux mpd:1 \; selectp -t
tmux mpd:1.1; done
#+END_EXAMPLE

****** TODO Autostart with systemd
There are some notable advantages to starting a tmux server at startup. Notably, when you start a new tmux session, having the service already running reduces any delays in the startup.
Furthermore, any customization attached to your tmux session will be retained and your tmux session can be made to persist even if you have never logged in, if you have some reason to do that (like a heavily scripted tmux configuration or shared user tmux sessions).
The service below starts tmux for the specified user (i.e. start with tmux@username.service):

#+BEGIN_EXAMPLE
/etc/systemd/system/tmux@.service
[Unit]
Description=Start tmux in detached session

[Service]
Type=forking
User=%I
ExecStart=/usr/bin/tmux new-session -s %u -d
ExecStop=/usr/bin/tmux kill-session -t %u

[Install]
WantedBy=multi-user.target
#+END_EXAMPLE

%Tip%-You may want to add WorkingDirectory=custom_path to customize working directory.

Alternatively, you can place this file within your systemd/User directory (without User=%I), for example ~/.config/systemd/user/tmux.service. This way the tmux service will start when you log in.

****** reload config without killing server
reload config without killing server add this to config:

#+BEGIN_EXAMPLE
bind R source-file ~/.tmux.conf
#+END_EXAMPLE

***** plugins 
****** install tmux plugins
https://github.com/tmux-plugins

Clone TPM:

#+BEGIN_SRC sh
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#+END_SRC

Put this at the bottom of your .tmux.conf (backslashes at the end of the lines are required):

#+BEGIN_EXAMPLE
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
#+END_EXAMPLE

Reload TMUX environment so TPM is sourced:

type this in terminal

#+BEGIN_SRC sh
tmux source-file ~/.tmux.conf
#+END_SRC

That's it!
****** adding plugins
add a new plugin to the @tpm_plugins listm .₆In example₆ 


#+BEGIN_EXAMPLE
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-cpu           \
'
#+END_EXAMPLE

hit prefix + I (I as in Install) to fetch the plugin
You're good to go! The plugin was cloned to ~/.tmux/plugins/ dir and sourced.

****** Tmux sessionist
?prefix + g? - prompts for session name and switches to it. Performs 'kind-of' name completion.
Faster than the built-in prefix + s prompt for long session lists.
?prefix + shift + c? - prompt for creating a new session by name.
?prefix + shift + s? - switches to the last session.

****** tmux open
https://github.com/tmux-plugins/tmux-open

Plugin for opening highlighted selection directly from Tmux copy mode.

Key bindings In tmux `copy mode`:

?o? - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
?Ctrl-o? - open a highlighted selection with the $EDITOR

Examples, In `copy mode`:

#+BEGIN_EXAMPLE
highlight file.pdf and press o - file will open in the default PDF viewer.
highlight file.doc and press o - file will open in system default .doc file viewer.
highlight http://example.com and press o - link will be opened in the default browser.
highlight file.txt and press Ctrl-o - file will open in $EDITOR.
#+END_EXAMPLE

Configuration

How can I change the default "o" key binding to something else? For example, key "x"?
Put set -g @open 'x' in tmux.conf.

How can I change the default "Ctrl-o" key binding to "Ctrl-x"?
Put set -g @open-editor 'C-x' in tmux.conf.
****** Tmux copycat
******* basic search
Search:

?prefix + /?  - regex search (strings work too)

Example search entries:

#+BEGIN_EXAMPLE
foo - searches for string foo
[0-9]+ - regex search for numbers
Grep is used for searching.
Searches are case insensitive.
#+END_EXAMPLE

Predefined searches

#+BEGIN_EXAMPLE
prefix + ctrl-f - simple *f*ile search
prefix + ctrl-g - jumping over *g*it status files (best used after git status command)
prefix + ctrl-u - *u*rl search (http, ftp and git urls)
prefix + ctrl-d - number search (mnemonic d, as digit)
prefix + alt-i - *i*p address search
#+END_EXAMPLE

These start "copycat mode" and jump to first match.

"Copycat mode" bindings

These are enabled when you search with copycat:

#+BEGIN_EXAMPLE
n - jumps to the next match
N - jumps to the previous match
#To copy a highlighted match:
Enter - if you're using Tmux vi mode
ctrl-w or alt-w - if you're using Tmux emacs mode
#Copying a highlighted match will take you "out" of copycat mode. Paste with prefix + ] (this is Tmux default paste).
#+END_EXAMPLE

Copying highlighted matches can be enhanced with tmux yank.
******* config

Most of the behavior of tmux-copycat can be customized via tmux options.
To set a value, just put set -g @option 'value' in your .tmux.conf before loading the tmux-copycat plugin.

Other options:

@copycat_search (default /) defines the key-binding used (after prefix) to start an interactive search.
@copycat_next (default n) defines the key (without prefix) used to jump to next search result.
@copycat_prev (default N) defines the key (without prefix) used to jump to previous search result.

Options for predefined searches:

@copycat_git_special (default C-g) git status search
@copycat_file_search (default C-f) file search
@copycat_url_search (default C-u) url search
@copycat_digit_search (default C-d) digit search
@copycat_ip_search (default M-i) IP address search

Example: to remap default file search to use C-t put

#+BEGIN_EXAMPLE
set -g @copycat_file_search 'C-t'
#+END_EXAMPLE

 in .tmux.conf.
******* Defining new stored searches
To speed up the workflow you can define new bindings in .tmux.conf for searches you use often.

After adding any of the below snippets, make sure to reload your tmux configuration:

# type this in the terminal
$ tmux source-file ~/.tmux.conf
Dummy examples (just for testing):

prefix + ctrl-t example string search

set -g @copycat_search_C-t 'search me'
prefix + alt-t example regex search

set -g @copycat_search_M-t 'regex search[[:alnum:]]\*'
Useful searches

prefix + ctrl-e in the Rails log output searches for previous request start

set -g @copycat_search_C-e '^Processing[[:space:]]by[[:space:]][^[:space:]]*'
prefix + D searches for numbers at the beginning of line.
Useful with $ pgrep -lf process command to quickly select process PID.

set -g @copycat_search_D '^[[:digit:]]+'
prefix + G searches for git commit SHA1.
Works for both the short (5 chars) and full (40 chars) versions.

set -g @copycat_search_G '\b[0-9a-f]{5,40}\b'

****** Tmux Yank
$Note-requires xclip$

Key bindings:

?prefix + y? - copies text from the command line to clipboard.

Works with all popular shells/repls. Tested with:
shells: bash, zsh (with bindkey -e), tcsh
remote shells: ssh, mosh

copy mode bindings:

?y? - copy selection to system clipboard
?Y?- (shift-y) - "put" selection - equivalent to copying a selection, and pasting it to the command line
?Alt-y? - performs both of the above: copy to system clipboard and put to command line

%Tip- Mouse Support%

When making a selection using tmux mode-mouse on or mode-mouse copy-mode, you cannot rely on the default 'release mouse after selection to copy' behavior. Instead, press `y` @before@ releasing mouse.
****** Tmux cpu status
Enables displaying cpu percentage and status icon in Tmux status-right.

This is done by introducing 2 new format strings that can be added to status-right option:

#{cpu_icon} - will display a cpu status icon
#{cpu_percentage} - will show cpu percentage

Usage:

Add #{cpu_icon} or #{cpu_percentage} format strings to existing status-right Tmux option. Example:

#+BEGIN_SRC sh
# in .tmux.conf
set -g status-right "CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M "
#+END_SRC

config: 

By default, these icons are displayed:

cpu: "❏"
You can change these defaults by adding the following to .tmux.conf (the following lines are not in the code block so that emojis can be seen):

set-option -g @cpu_icon ":sunglasses:"

Don't forget to reload TMUX environment ($ tmux source-file ~/.tmux.conf) after you do this.
****** Tmux battery status
Enables displaying battery percentage and status icon in Tmux status-right.

This is done by introducing 2 new format strings that can be added to status-right option:

#{battery_icon} - will display a battery status icon
#{battery_percentage} - will show battery percentage

Usage
Add #{battery_icon} or #{battery_percentage} format strings to existing status-right Tmux option. Example:

#+BEGIN_EXAMPLE
# in .tmux.conf
set -g status-right "Batt: #{battery_icon} #{battery_percentage} | %a %h-%d %H:%M "
#+END_EXAMPLE

Changing icons

By default, these icons are displayed:

charged: ":battery:" ("❇ " when not on OS X)
charging: ":zap:"
discharging: (nothing shown)
You can change these defaults by adding the following to .tmux.conf (the following lines are not in the code block so that emojis can be seen):

set-option -g @batt_charged_icon ":sunglasses:"
set-option -g @batt_charging_icon ":+1:"
set-option -g @batt_discharging_icon ":thumbsdown:"
Don't forget to reload TMUX environment ($ tmux source-file ~/.tmux.conf) after you do this.

**** urxvt
***** install perl-scripts

to get most of the below customization's install the rep package:
 
 urxvt-perls

***** Yankable URLs (No Mouse)

You can select and open URLs in your web browser without using the
mouse.
 Install the urxvt-perls package from the official repositories and
adjust your .Xresources as necessary. An example is shown below:
 URxvt.perl-ext: default,url-select
 URxvt.keysym.M-u: perl:url-select:select next
 URxvt.url-select.launcher: /usr/bin/firefox -new-tab
 URxvt.url-select.underline: true
 Note: This extension replaces the Clickable URLs extension mentioned
above, so matcher can be removed from the URxvt.perl-ext list.
 Key commands:
 Alt+UEnter selection mode. The last URL on your screen will be
selected. You can repeat Alt+U to select the next upward URL.
 K Select next upward URL
 J Select next downward URL Return Open selected URL in browser and
quit selection mode
 O Open selected URL in browser without quitting selection mode
 Y Copy (yank) selected URL and quit selection mode
 Esc Cancel URL selection mode

***** keyboard-select

keyboard-select
 Use keyboard shortcuts to select and copy text.
 After installing, put the following lines in your
.Xdefaults/.Xresources:
 URxvt.perl-ext-common: ...,keyboard-select
 URxvt.keysym.M-Escape: perl:keyboard-select:activate
 The following line overwrites the default Meta-s binding and allows to
activate keyboard-select directly in backward search mode:
 URxvt.keysym.M-s: perl:keyboard-select:search
 Use Meta-Escape to activate selection mode, then use the following
keys:
 h/j/k/l: Move cursor left/down/up/right (also with arrow keys)
 g/G/0/\^/$/H/M/L/f/F/;/,/w/W/b/B/e/E: More vi-like cursor movement keys
 '/'/?: Start forward/backward search
 n/N: Repeat last search, N: in reverse direction
 Ctrl-f/b: Scroll down/up one screen
 Ctrl-d/u: Scroll down/up half a screen
 v/V/Ctrl-v: Toggle normal/linewise/blockwise selection
 y/Return: Copy selection to primary buffer, Return: deactivate
afterwards
 q/Escape: Deactivate keyboard selection mode

***** transperancy

to get transperacy in urxvt there are 2 ways:
 to get real transperancy:
 URxvt.tintColor: #FFFFF
 URxvt.shading: 25
 URxvt.fading: 30
 Rxvt.background:rgba:0000/0000/0000/cccc
 Rxvt.transparent:True
 Rxvt.transparency:30
 to get fake transparency:
 URxvt.tintColor: #FFFFF
 URxvt.shading: 25
 URxvt.fading: 30
 URxvt.inheritPixmap:true

***** copy with mouse

use:
 alt+ctrl+mouse

***** fix home/end issues

add these lines to your bashrc or zshrc
 bindkey "\e[1~" beginning-of-line
 bindkey "\e[4~" end-of-line
 bindkey "\e[8~" end-of-line
 bindkey "\e[7~" beginning-of-line
 bindkey "\eOH" beginning-of-line
 bindkey "\eOF" end-of-line
 note:you can find out the correct keycodes with ctrl+v then hit end key
or pos1 key

***** fix wierd font spaces

if you get fonts that look like this in urxvt
 [[~/Dropbox/Org/Tech/linux_files/Image_ryVuQGiPx3oxU3GJx8ujlA_0001.png]]
 add this to xdefaults
 URxvtletterSpace: -2
***** define fonts
you need to define all 3 font types with the switches:

#+BEGIN_SRC sh
-fn "xft:Source Code Pro:size=12" -fb "xft:Source Code Pro:size=12" -fi "xft:Source Code Pro:size=12" 
#+END_SRC

**** RAR

***** use unrar from command line

To open rar (unpack) file in current directory type command:

$ unrar e file.rar
 Please note that replace file.rar filename with your actual filename.

 Task: List (l) file inside rar archive:

$ unrar l file.rar

 Task:To extract (x) files with full path type command:

$ unrar x file.rar
 Pasted from
<[[http://www.cyberciti.biz/faq/open-rar-file-or-extract-rar-files-under-linux-or-unix/][http://www.cyberciti.biz/faq/open-rar-file-or-extract-rar-files-under-linux-or-unix/]]>

***** extract multiple files in a folder

use the following command:

ls -1 .rar | sed 's/ /\\ /g' | xargs -i unrar x -pPASSWORD {}

 NOTE: there is no SPACE between the -p and the actual PASSWORD

**** xdotool

***** Basic

the number 1 in the command refers to the mouse button here -- 1 is the
left, 2 is the middle and 3 is the right. You can also use 4 as a
virtual mouse wheel up movement, and 5 for down.
 the start of the screen is the top-left corner, which has the X and Y
(horizontal and vertical) co-ordinates of 0 and 0. If your screen
resolution is 1024x768, then the co-ordinates for the top right location
are 1023 (X) and 0 (Y). The bottom-right is 1023 (X) and 767 (Y), and so
forth.
 We're going to move the mouse pointer to the main menu button on our
desktop and click to open it. Your desktop layout may vary, so you'll
need to change the co-ordinates to fit, but in our case we have Xubuntu
with the main menu in the top-left of the screen. Try this command:

xdotool mousemove 0 0 click 1

 Here, you can see that we're stringing commands together -- we have a
mousemove followed by the X and Y locations, and then a left-button
click

***** sleep command

For instance, on our machine we want to automate the process of getting
the power status. Normally, that involves moving the mouse to the
battery icon in the system tray, right clicking it, and choosing the
Power Information entry in the Context menu. We could bunch together
various xdotool commands in one line to achieve this, but what happens
if the system is busy and the Context menu doesn't come up immediately?
Well, we need to add sleep commands in between the calls to xdotool.
Here's our script, which also includes some other new features:
 #!/bin/bash
 xdotool mousemove --sync 1000 10
 xdotool click 3
 sleep 1
 xdotool mousemove relative --sync 0 80
 xdotool click 1
 Note here the --syncoption for the mousemove command, which says that
we don't just want to tell the X Window System to move the mouse, but
wait until it has sent back a confirmation message that the move was
successful. So it's generally a good idea to use --sync.
 Next, there's a new command: mousemove relative. As the name
suggests, this just moves the pointer relative to the current position,
and not to an absolute location on the screen. In our case, the Power
Information entry in the Context menu is 80 pixels down from where we
activated the menu, so we move to that point. This gives us extra
flexibility: if we move the Power icon to somewhere else in the panel
one day, we only have to change the first mousemove command as
everything else stays relative to it.

***** window movment/managmanet

Advanced usage
 Now, xdotool's ability to click around at pre-programmed co-ordinates
is cool, but it's not that useful if we have to manually activate a
window before we perform our actions. As an example, you might have a
really cool music player that you always run in the background, and
occasionally bring up from your window selector to perform an operation
(eg switch to a different playlist).
 Some media apps enable you to control them from the CLI, thereby
allowing you to map key combos in your window manager to commands, but
not all have this facility. Instead of bringing up your media player
each time manually and then running your xdotool script (at which point
you might as well just click manually), you can make xdotool
automatically switch to the appropriate window using the search and
windowactivate commands.
 For instance, we've just opened up the Parole media player on our
desktop, and left it running in the background while we type commands
into a terminal. We enter:
 xdotool Parole "Firefox" windowactivate
 This makes Parole jump to the foreground. Try it on your machine,
replacing Parole with anything else you have running. Here, xdotool is
working with your window manager to find specific windows -- it looks
for the first window with the word "Parole" in the title. You can
replace that with anything else, and if there's no match, no actions
will take place.
 Of course, Parole's window could be anywhere on the screen, and so we
can't start our series of click actions at a fixed location. We need to
move the mouse cursor to where Parole is and start working from there.
 As you'll expect by now, xdotool's authors have thought of this, so...

xdotool search "Parole" windowactivate --sync mousemove
 --window %1 0 0

 After locating and activating the Parole window, we perform a mousemove
command, but this time to a location in window number 1 of the search
results (ie the first window that had Parole in the title -- you'll
probably never need any others).
 With just a few more mousemove relative commands, you could create a
robot that draws the Mona Lisa.
 With just a few more mousemove relative commands, you could create a
robot that draws the Mona Lisa.
 We move the mouse to location 0 0, which is the X and Y co-ordinates
for the top-left of the window. Excellent! We can now write a script
using offset co-ordinates from the top-left, clicking buttons, opening
menu and checking boxes at will, regardless of where the program's
window was originally set.
 If it pains you that your windows could be in arbitrary places,
however, xdotool can move them for you. Try this:
 xdotool search "Parole" windowactivate --sync windowmove
 100 200
 This locates Parole and moves its windows to 100 pixels across the
screen, and 200 down. You can take out the windowactivate --sync part
and do the moves in the background if you like. Another option is
resizing windows:
 xdotool search "Parole" windowsize 500 200
 This finds Parole and resizes it to 500 pixels wide, 200 high. You can
even move the window to another workspace/virtual desktop like this:
 xdotool search "Parole" set desktop for window 0
 Just change the number at the end to whichever desktop you require, and
note that in typical programming fashion, 0 is the first desktop, 1 is
the second, and so forth.
 Like xdotool, but for the command line
 All this talk of GUI automation is lovely, but it doesn't work with
command-line apps. However, there's a fantastic little tool that lets
you automate actions at the CLI called expect. The name here comes from
the program's main feature: it expects a user-defined string to appear
on the screen, and then sends out the appropriate text in response.
expect is installed by default in many distros, or will almost certainly
be available in your distro's default package repositories. Here's an
example of how it works:
 expect "What is your name?"
 send "Rembrandt Q Einstein\n"
 Here, we wait for a program to give us the What is your name? prompt
and then send a response. Note the \n bit at the end of the send command
-- that says that we want to output a newline character, ie simulating
that the user has hit Enter.
 The expect program is an interpreter, and you normally use it by
stringing together a series of commands. Here's an example of using
expect to automate logging into an SFTP server and retrieving a file:
 #!/usr/bin/expect -f
 spawn sftp user@example.com
 expect "Password:"
 send "mypasshere\n";
 expect "sftp>"
 send "get myfile.txt\n";
 expect "sftp>"
 send "exit\n";
 interact
 In the first line, we supply the full path to the expect binary, and
use the -f flag to say that we want it to read the following commands,
rather than start in interactive mode.
 Then we use the vitally important spawn function, which lets us run a
program and work with the output that it generates. Here we're spawning
an SFTP process to log into a remote server.
 We expect the server to respond with a Password: prompt, so when that
happens we send our password with a newline character as described
above. Once the login is successful, we wait for an sftp> prompt and
then perform our get command to retrieve a file. We wait for the prompt
to come back and then log out with exit.
 Note the interact line at the end -- you must have this as the final
line in your expect script, otherwise nothing will happen. It just tells
expect to perform everything you've written so far. expect is an
amazingly versatile tool and can save you a huge amount of time, so have
a skim through the manual page to see what else it's capable of.
 What a drag, dude
 Clicking is all good and well, but what if we want to perform an
operation where the mouse button is always held down, such as a
click-and-drag?
 Have a peek at the manual page (man xdotool) to see a full list of
available options.
 Have a peek at the manual page (man xdotool) to see a full list of
available options.
 Fortunately, xdotool caters for this by providing a more versatile
alternative to the click command: mousedown and mouseup. Let's try this
out by firing up Gimp, going to File > New, and creating a new canvas of
the default size (its window title should have "Untitled" in it).
 Select the Pencil tool from the Gimp Toolbox window, then open up a
terminal and enter the following into a file called test.sh:
 xdotool search "Untitled" windowactivate --sync mousemove
 --window %1 100 100
 sleep 0.5
 xdotool mousedown 1
 sleep 0.5
 xdotool mousemove relative --sync 200 200
 sleep 0.5
 xdotool mouseup 1
 Here, we activate the Gimp canvas window, and move to location 100, 100
(X, Y) inside it. We then set the left mouse button to down, move the
mouse diagonally down-right by 100 pixels in each direction, and then
set the mouse button to up. In other words, we've created a robot that
draws a diagonal line -- see the screenshot. As with the earlier
examples, we've included a few sleep commands here to make sure that we
don't work too quickly for the window manager or Gimp to process. (If
your box is particularly snappy, you could change those sleep periods
from half a second to 0.1.)
 To wrap up, in this tutorial we've explored various different ways to
interact with the GUI: moving the mouse, sending virtual clicks and
drags, and finding specific windows. Putting these actions together, and
exploring more possibilities with the xdotool manual page, you can
automate pretty much everything on your desktop, leaving you with more
time to spend on important things. Fancy a game of Frozen Bubble,
anyone?
 Virtual keyboards
 While we've focused on mouse events in this tutorial, xdotool can send
virtual keystrokes as well. For example:
 xdotool key F1
 This simply simulates pressing the F1 key. You can create combination
keypresses with the plus sign like this:
 xdotool key ctrl+c
 Given that you're using xdotool to get away from the mouse, however,
it's unlikely that you're going to spend much time with the key command.
But there's another option called type, which sends a stream of
characters, and which can be useful for working with text editors. For
instance, launch AbiWord and then enter this in a terminal:
 xdotool search "AbiWord" windowactivate --sync type
 "Hello world"
 You'll see that the focus switches to the AbiWord window, and then the
text is entered into the document, as if by magic. There's even a tiny
pause between the virtual keystrokes, as if someone were typing it. You
can change this with the --delay option followed by a number of
milliseconds, but the default is fine (and makes sure the target
application doesn't get too confused by receiving an inhumanly rapid
stream of keypresses). As an example, here's a script called mikesig.sh
that we've put in /usr/bin:
 #!/bin/sh
 xdotool type This post brought to you by Mike Saunders
 Email me at okachi@gmail.com for more great wit
 Note that the carriage return in the script is also produced by
xdotool, so you can insert new lines. We've used our window manager to
make the Ctrl+Alt+S combo run mikesig.sh, so whatever program we're in,
we can press Ctrl+Alt+S to get an instant signature generator. If you
have a more serious workload, you'll find this useful, as it works
across all sorts of applications and window managers.
 First published in Linux Format
 First published in Linux Format magazine issue 154
 You should follow us on Identi.ca or Twitter
 Your comments
 Your Future
 Rhakios - May 15, 2012 @ 7:27pm
 "Well, the calendar on the wall of LXF Towers says that it's officially
The Future()"
 That's because of who employs you, for the rest of us our calendars are
merely for the present.
 Key Bindings?
 09vwrabbit (not verified) - May 15, 2012 @ 7:48pm
 What if I want to assign Fn + G on my asus x101 netbook to enable and
disable my wireless card? This is the way it came when it had meego but
now doesn't work with Lubuntu. Could I use xdotool to assign this?
Thanks again for another great post!
 Best use
 Bruno Girin (not verified) - May 15, 2012 @ 11:43pm
 Best use for that tool as far as I'm concerned is automated GUI
testing. Think about it: you just find a bug in your favourite app so
rather than go through a lengthy explanation, write an xdotool script to
reproduce it and attach the script to your bug report.
 no need for a mouse
 torwag (not verified) - May 17, 2012 @ 9:19am
 Well a bit OT
 Well if you feel you push the mouse to much around, try one of the more
keyboard-centric WMs. I like "awesome wm", there is "notion" and many
others.
 Get use to the keyboard-chords and you barley have to touch the mouse
to do window management stuff.
 As writers you can switch over to use Emacs, VIM or even one of these
distraction free full screen text editors like "textroom". Get your text
down quickly and efficient and don't take care of formatting, layout,
fonts, etc.
 Personally I can hight recommend emacs + org-mode. This gives you
writing and organizing capabilities you never had before... check
[[http://orgmode.org/][http://orgmode.org/]]
 With this you can do 90% of your work without touching the mouse and
without being distracted by GUI-bloated software features. Only switch
back to mouse-centric operations for layout and other graphic tasks at
the very final end.
 After all its Linux... you choose how to use it!
 Wish This Was More Like AutoHotKey in Windows
 BaldFat (not verified) - June 27, 2012 @ 7:31pm
 Glad I have found this. I grew fond of AutoHotKey in windows and used
it on my horrible Windows XP machine to take care of mundane web browser
data entry.
 So if I had to click on 50 click boxes on a page I could do it with
AutoHotKey.
 So if I had to change the format of an entire 1000 cell spreadsheet I
could do it with Autohotkey and it worked wonders.
 I guess I might do a little hacking to see if I can improve on my
AutoHotKey scripts.
 Bald&Fat
 Map mouse to keyboard, fully functional
 Jac (not verified) - July 16, 2012 @ 6:05pm
 Im trying to map the left click of the mouse to the keyboard F key,
but with no sucess, when I do it using "xdotool click 1" only a single
click of the mouse is mapped so I cant click and drag. do you know how
to achieve a real mouse button simulation using the F keyboard key?
 Post new comment
 Your name:
 Title:
 Comment: 
 CAPTCHA
 Fill in this captcha, or you shall be mocked mercilessly.
 reCAPTCHA challenge image
 Get a new challenge Get an audio challenge Help 
 
 Username: Password:
 Create Account | About TuxRadar
 Future Publishing Ltd Copyright 2012 Future Publishing Limited (company
registered number 2008885), a company registered in England and Wales
whose registered office is at Beauford Court, 30 Monmouth Street, Bath,
BA1 2BW, UK
 Terms & Conditions | Privacy Policy
 Web hosting by UKFast

***** drag command

Clicking is all good and well, but what if we want to perform an
operation where the mouse button is always held down, such as a
click-and-drag?
 Fortunately, xdotool caters for this by providing a more versatile
alternative to the click command: mousedown and mouseup. Let's try
this out by firing up Gimp, going to File > New, and creating a new
canvas of the default size (its window title should have "Untitled" in
it).
 Select the Pencil tool from the Gimp Toolbox window, then open up a
terminal and enter the following into a file called test.sh:
 xdotool search "Untitled" windowactivate --sync mousemove
 --window %1 100 100
 sleep 0.5
 xdotool mousedown 1
 sleep 0.5
 xdotool mousemove relative --sync 200 200
 sleep 0.5
 xdotool mouseup 1
 Here, we activate the Gimp canvas window, and move to location 100, 100
(X, Y) inside it. We then set the left mouse button to down, move the
mouse diagonally down-right by 100 pixels in each direction, and then
set the mouse button to up. In other words, we've created a robot that
draws a diagonal line -- see the screenshot. As with the earlier
examples, we've included a few sleep commands here to make sure that we
don't work too quickly for the window manager or Gimp to process. (If
your box is particularly snappy, you could change those sleep periods
from half a second to 0.1.)

***** keyboard automation

Virtual keyboards
 While we've focused on mouse events in this tutorial, xdotool can send
virtual keystrokes as well. For example:

xdotool key F1

 This simply simulates pressing the F1 key. You can create combination
keypresses with the plus sign like this:

xdotool key ctrl+c

 Given that you're using xdotool to get away from the mouse, however,
it's unlikely that you're going to spend much time with the key command.
But there's another option called type, which sends a stream of
characters, and which can be useful for working with text editors. For
instance, launch AbiWord and then enter this in a terminal:
 xdotool search "AbiWord" windowactivate --sync type
 "Hello world"
 You'll see that the focus switches to the AbiWord window, and then the
text is entered into the document, as if by magic. There's even a tiny
pause between the virtual keystrokes, as if someone were typing it. You
can change this with the --delay option followed by a number of
milliseconds, but the default is fine (and makes sure the target
application doesn't get too confused by receiving an inhumanly rapid
stream of keypresses). As an example, here's a script called mikesig.sh
that we've put in /usr/bin:
 #!/bin/sh
 xdotool type This post brought to you by Mike Saunders
 Email me at okachi@gmail.com for more great wit
 Note that the carriage return in the script is also produced by
xdotool, so you can insert new lines. We've used our window manager to
make the Ctrl+Alt+S combo run mikesig.sh, so whatever program we're in,
we can press Ctrl+Alt+S to get an instant signature generator. If you
have a more serious workload, you'll find this useful, as it works
across all sorts of applications and window managers.

**** password organizer

[[~/Dropbox/Org/Tech/linux_files/attach/keysearch][Attachment #15 (keysearch)]]
 how to setup rasi password organizer
 Install gnupg, available in the official repositories.
 Create key- Generate a private key by typing in a terminal:

# gpg --gen-key

 You'll have to answer a bunch of questions but generally, you can
accept the defaults.
 create a empty file and then encrypt it with the key:
 gpg -c filename
 
 then use (and install first) the gnupg.vim plugin- this will make vim
ask for the password on files with .gpg extension
 
 in vim edit the text file you created to put the passwords in this
format
 PASSWORD LOGIN SERVICE
 
 NOTE: you need to use 1 space between each section
 the use this little bash script - keysearch (attached) that searches
for a keyword (SERVICE) and puts the first word of that line in
clipboard for 30 seconds
 
**** jmptpfs

Exchanging files between Android devices and Linux
 Run jmtpfs with a directory as a parameter, and it will mount to that
directory the first MTP device it finds. You can then access the files
on the device as if it were a normal disk.

[jason@colossus ~]$ jmtpfs ~/mtp
 Device 0 (VID=04e8 and PID=6860) is a Samsung
GT-P7310/P7510/N7000/I9100/Galaxy Tab 7.7/10.1/S2/Nexus/Note.
 Android device detected, assigning default bug flags

 Unmount with fusermount.

 [jason@colossus ~]$ fusermount -u ~/mtp

[[https://aur.archlinux.org/packages.php?ID=59408][https://aur.archlinux.org/packages.php?ID=59408]]

**** pacgraph

***** check apps by size

issue:

 pacgraph -c

 or to upload:

 pacgraph -c | fb

**** sxhkd
***** Config

after installing one must create a config file here:

[[file:~/home/us]]er/.config/sxhkd/sxhkdrc


Each line of the configuration file is interpreted as so:

-  If it starts with '#', it is ignored.
-  If it starts with one or more 'white space' characters, it is read as a command.
-  Otherwise, it is parsed as a hotkey: each key name is separated by 'spaces' and/or '+' characters.

General syntax:

#+BEGIN_EXAMPLE
    [MODIFIER + ][@|!|:]KEYSYM
        COMMAND
#+END_EXAMPLE

Where MODIFIER is one of the following names: super, hyper, meta, alt, control, ctrl, shift, mode_switch, lock, mod1, mod2, mod3, mod4, mod5.

If '@' is added at the beginning of the keysym, the command will be run on key release events, otherwise on key press events.

If '!' is added at the beginning of the keysym, the command will be run on motion notify events and must contain two integer conversion
specifications which will be replaced by the /x/ and /y/ coordinates of the pointer relative to the root window referential (the only valid
button keysyms for this type of hotkeys are: button1, ..., button5).

If ':' is added at the beginning of the keysym, the captured event will
be replayed for the other clients.

When multiple chords are separated by semicolons ';' , the hotkey is a chord chain: the command will only be executed after receiving each chord of the chain in consecutive order.

The keysym names are those your will get from xev.

Mouse hotkeys can be defined by using one of the following special keysym names: button1, button2, button3, ..., button24.

The hotkey can contain a sequence of the form {STRING_1,…,STRING_N}, in which case, the command must also contain a sequence with /N/
elements: the pairing of the two sequences generates /N/ hotkeys.

In addition, the sequences can contain ranges of the form A-Z where
/A/ and /Z/ are alphanumeric characters.

What is actually executed is SHELL -c COMMAND, which means you can use
environment variables in COMMAND.

SHELL will be the content of the first defined environment variable in
the following list: SXHKD_SHELL, SHELL.

If /sxhkd/ receives a SIGUSR1 signal, it will reload its configuration
file.

If no configuration file is specified through the -c option, the
following is used: $XDG_CONFIG_HOME/sxhkd/sxhkdrc.
***** reload config
to reload config after you change it use a SIGUSR1 signal, it will reload its configuration file.
you can issue a SIGUSR1 with

#+BEGIN_SRC sh
kill -10 PID
###or better yet
pkill -USR1 -x sxhkd
#+END_SRC

or using htop

***** Example file

#+BEGIN_SRC sh
###config file

#MPD Play/Pause
XF86Launch1
  mpc toggle
#^^^^ the 2 spaces that indicate a start of command


#Main_Term
Mod4 + Return 
  xfce4-terminal


#+END_SRC
      
***** create visual cues
sxhkd writes to the socket specified by '-s' and the script reads from this socket.

# Make the socket
mkfifo /path/to/sxhkd_socket
# Start the notifier
sxhkd_notify /path/to/sxhkd_socket &
# Start sxhkd
sxhkd -s /path/to/sxhkd_socket

the notifier script is a simple base script here:

#+BEGIN_SRC sh
#! /bin/sh

[ $# -ne 1 ] && exit 1

status_fifo=$1

{ while read -r line ; do 
    msg=${line#?}
    case $line in
        H)
            duration=2
            ;;
        C)
            duration=4
            ;;
        T)
            duration=1
            ;;
    esac
    notify-send -t $duration "$msg"
done } < "$status_fifo"

#+END_SRC

**** simpleswitcher

***** config

the config is done in the command line
 IE:
 simpleswitcher -now -font "Envy Code R-13" -fg "#ffffff" -bg "#000000"
-hlfg "#FFFFFF" -hlbg "#33b5e5" -o 85
**** Jarvis 
***** basics
`j add, j +`-Add the current directory as a bookmark. 
`j add <file>, j + <file>` Adds the <file> as a bookmark.     
`j <bookmark>` f the bookmark is for a directory, then cd there, f the bookmark is for a file, then open the file for edit.
`j del, j -, j del <bookmark>, j - <bookmark>`-Delete a bookmark.
`j edit, j vim`-Edits your bookmarks using your shell's default editor
**** cv (core utils viewer)
https://github.com/Xfennec/cv

monitor all current and upcoming instances of coreutils commands in a simple window:

watch cv -q
**** Rofi
rofi is an X11 popup window switcher. A list is displayed center-screen showing open window titles, WM_CLASS, and desktop number. The user may filter the list by typing, navigate with Up/Down or Tab keys, and select a window with Return (Enter). Escape cancels.
***** config
you can define setting Globaly for rofi in Xdefaults ₆In example₆ :

#+NAME: Xdefaults
#+BEGIN_SRC bash 
! -- Rofi settings -- !

rofi.bordercolor: #33b5e5
rofi.highlightbg: #0C73C2
rofi.background: #000000
rofi.borderwidth: 1
rofi.highlightfg: #FFFFFF
rofi.highlightbg: #33b5e5
rofi.foreground: #FFFFFF
rofi.font: Source\Code\Pro-12 
rofi.padding: 3
rofi.opacity: 90

#+END_SRC
 
you can use

#+BEGIN_SRC sh
rofi -dump-xresources
#+END_SRC

#+BEGIN_EXAMPLE
rofi.opacity: 90
rofi.width: 50
rofi.lines: 15
rofi.columns: 1
rofi.font: SourceCodePro-12
rofi.fg: #FFFFFF
rofi.bg: #000000
rofi.hlfg: #FFFFFF
rofi.hlbg: #33b5e5
rofi.bc: #33b5e5
rofi.bw: 1
rofi.loc: 0
rofi.padding: 3
rofi.yoffset: 0
rofi.xoffset: 0
rofi.fixed-num-lines: false
rofi.hmode: false
rofi.terminal: x-terminal-emulator
rofi.ssh-set-title: true
rofi.disable-history: false
rofi.levenshtein-sort: false
rofi.key: F12
rofi.rkey: mod1+F2
rofi.skey: mod1+F3
#+END_EXAMPLE
***** command line switches
#+BEGIN_SRC sh
rofi [ -width pct_scr ] [ -lines lines ] [ -columns columns ] [ -font xftfont ] [ -fg color ] [ -bg color ] [ -hlfg color ] [ -hlbg color ] [ -key combo ] [ -dkey comdo ] [ -rkey comdo ] [ -terminal terminal ] [ -loc position ] [ -hmode ] [ -fixed-num-lines ] [ -padding padding ] [ -opacity opacity% ] [ -display display ] [ -bc color ] [ -bw width ] [ -dmenu [ -p prompt ] ] [ -ssh-set-title true|false ] [ -now ] [ -rnow ] [ -snow ] [ -version ] [ -help] [ -dump-xresources ] [ -disable-history ] [ -levenshtein-sort ]
#+END_SRC
***** add rofi as a sidebar
use the -loc command line Switch

#+NAME: 
#+BEGIN_SRC sh
rofi -now -loc 8 -width 250 -lines 35 -fixed-num-lines    
#+END_SRC
**** stow
***** base use
create a dotfile folder or clone from a ready repo and move all your config files from across your $HOME dir there

#+BEGIN_EXAMPLE
~/dotfiles/
    irssi/
        .config
        themes/
    bash/
        .bashrc
        .bashrc_aliases
    vim/
        .vimrc
        .vim/
               bundle/
               colors/
#+END_EXAMPLE

To install Bash configuration files, just do:

#+BEGIN_SRC sh
cd ~/dotfiles
stow bash
#+END_SRC

If you would like to install Vim configuration files as well, do:

#+BEGIN_SRC sh
cd ~/dotfiles
stow vim
#+END_SRC

GNU Stow will symbolically link ~/dotfiles/bash/ and ~/dotfiles/vim to you home directory, so that content of bash and vim will be exposed in $HOME directory.

***** Removing/Restow a config package
this follows the same logic by adding -D flag and specifying installed package:

#+BEGIN_SRC sh
stow -D bash
stow -D vim
#+END_SRC

And -R flag to restow so, delete and install again, basically rescan package for any new files:

#+BEGIN_SRC sh
stow -R bash
stow -R vim
#+END_SRC
***** adding after stowing
just add the additional config file/folders and issue the relevant stow command again 
***** per enviroment

Clone your Git dotfiles repository to ~/dotfiles or create it and enter the directory.

You need to organise per-environemnt directories for example:

#+BEGIN_EXAMPLE
~/dotfiles/
    work/
        .config/
        .icewm/
        .mutt/
    server/
        .tmux.conf
    common/
        .vimrc
        .vim/
               bundle/
               colors/
        .bashrc
        .bashrc_aliases
#+END_EXAMPLE

This will allow you divide which packages/configuration you would like to install on which type of machines and simplify deployment. For example work would be Mutt configuration, IceWM configuration only installed on laptop/desktop, but TMux config on server. Some configs, of course, will be shared especially Vim or Bash.

To install work configuration files on your laptop/desktop, just do:

#+BEGIN_SRC sh
cd ~/dotfiles
stow work
#+END_SRC

But on server:

#+BEGIN_SRC sh
cd ~/dotfiles
stow server
#+END_SRC

And add shared configuration:

#+BEGIN_SRC sh
cd ~/dotfiles
stow common
#+END_SRC
 
**** urlview
     :PROPERTIES:
     :ID:       03d71f1b-8ec7-427e-a363-d023b07402d5
     :END:
dowload from

https://aur.archlinux.org/packages/urlview/

to configure default browser and other option one needs to create a config file:

file:$HOME/.urlview

you define a browser like this: 

#+BEGIN_EXAMPLE
#COMMAND chromium %s
#+END_EXAMPLE
** graphics
*** gimp

**** open a file as a new image

open a file as a new image
 issue the command
 gimp -a

**** add reflection scipt

add it to here (the scm file):
 /usr/share/gimp/2.0/scripts
 restart gimp and it should work

*** inkscape
**** tips

Inkscape Tips

 F1:Chooses object
 Ctrl-shift-f:Color
 Ctrl- Keep Circle a circle?
 Ctrl-shift Scale in ratio??
 Ctrl-shift-a:Align

**** Mass convert svg to png from the command line

Mass convert svg to png from the command line:
go into the folder with the svg's and issue this:

 for i in .svg; do inkscape -f "$i" -e "${i%%.svg}.png" -w 128; done

**** keyboard and mouse

Tools
 F1, sSelector
 SpaceSelector (temporary)
 Space switches to the Selector tool temporarily; another Space switches
back.
 When the "Left mouse button pans when Space is pressed" option is on in
Preferences, Space+mouse drag pans canvas instead of switching to
Selector.
 F2, nNode tool
 Shift+F2, wTweak tool
 F3, zZoom tool
 F4, rRectangle tool
 Shift+F4, x3D box tool
 F5, eEllipse/arc tool
 F6, pFreehand (Pencil) tool
 Shift+F6, bBezier (Pen) tool
 Ctrl+F6, cCalligraphy tool
 Shift+F7, uPaint Bucket tool
 Ctrl+F1, gGradient tool
 F7, dDropper tool
 F8, tText tool
 F9, iSpiral tool
 Shift+F9, Star tool
 Ctrl+F2, oConnector tool
 Double click on the tool buttons opens the Preferences dialog showing
the page of the corresponding tool.
 Dialogs
 Open
 Shift+Ctrl+FFill and Stroke
 Shift+Ctrl+WSwatches
 Shift+Ctrl+TText and Font
 Shift+Ctrl+MTransform
 Shift+Ctrl+LLayers
 Shift+Ctrl+AAlign and Distribute
 Shift+Ctrl+OObject Properties
 Shift+Ctrl+HUndo History
 Shift+Ctrl+XXML Editor
 Shift+Ctrl+DDocument Preferences
 Shift+Ctrl+PInkscape Preferences
 Shift+Ctrl+EExport to PNG
 Ctrl+FFind
 Shift+Alt+BTrace Bitmap
 Shift+Ctrl+7Path Effects
 These shortcuts open a new dialog window if it wasn't open yet,
otherwise the corresponding dialog gets focus.
 Toggle visibility
 F12toggle dialogs
 This temporarily hides all open dialogs; another F12 shows them again.
 Within a dialog
 Escreturn to the canvas
 Ctrl+F4, Ctrl+Wclose the dialog
 Tabjump to next widget
 Shift+Tabjump to previous widget
 Enterset the new value
 This accepts the new value you typed in a text field and returns focus
to canvas.
 Ctrl+Enterin XML Editor, set the attr value
 When editing an attribute value in XML Editor, this sets the new value
(same as clicking the "Set attribute" button).
 Space, Enteractivate current button or list
 Ctrl+PgUp, Ctrl+PgDnin a multi-tab dialog, switch tabs
 Controls bar
 Access
 The Controls bar at the top of the document window provides different
buttons and controls for each tool.
 Alt+Xjump to the first editable field
 Navigate
 Tabjump to next field
 Shift+Tabjump to previous field
 Use these to navigate between fields in the Controls bar (the value in
the field you leave, if changed, is accepted).
 Change values
 Up arrow, Down arrowchange value by 0.1
 PgUp, PgDnchange value by 5.0
 Enteraccept the new value
 This accepts the new value you typed in a text field and returns focus
to canvas.
 Esccancel changes, return to canvas
 This cancels any changes you made in a text field and returns focus to
canvas.
 Ctrl+Zcancel changes
 This cancels any changes you made in a text field but you stay in the
field.
 Canvas
 Zoom
 =, +zoom in
 -zoom out
 The keypad +/- keys do zooming even when you are editing a text object,
unless NumLock is on.
 middle click, Ctrl+right clickzoom in
 Shift+middle click, Shift+right clickzoom out
 Ctrl+mouse wheelzoom in or out
 When the "Mouse wheel zooms by default" option is on in Preferences,
Ctrl+wheel scrolls instead of zooming. To zoom, use wheel without Ctrl.
 Shift+middle button dragzoom into the area
 Alt+Zactivate zoom field
 The zoom field in the lower left corner of the window allows you to
specify zoom level precisely.
 Preset zooms
 1zoom 1:1
 2zoom 1:2
 3zoom to selection
 4zoom to drawing
 5zoom to page
 Ctrl+E, 6zoom to page width
 Zoom history
 `(back quote) previous zoom
 Shift+`next zoom
 With these keys, you can travel back and forth through the history of
zooms in this session
 Scroll (pan)
 Ctrl+arrowsscroll canvas
 Scrolling by keys is accelerated, i.e. it speeds up when you press
Ctrl+arrows in quick succession, or press and hold.
 middle button dragpan canvas
 Shift+right button drag, Ctrl+right button dragpan canvas
 mouse wheelscroll canvas vertically
 When the "Mouse wheel zooms by default" option is on in Preferences,
mouse wheel zooms instead of scrolling. To scroll, use Ctrl+wheel.
 Shift+mouse wheelscroll canvas horizontally
 When the "Left mouse button pans when Space is pressed" option is on in
Preferences, Space+mouse drag also pans canvas.
 Guides, grids, snapping
 mouse dragdrag off a ruler to create guide
 Drag off the horizontal or vertical ruler to create a new guideline.
Drag a guideline onto the ruler to delete it.
 | , Shift+\toggle guides and snapping to guides |
 If you want to see the guides but not snap to them, use the global
snapping toggle (% key).
 When you create a new guide by dragging off the ruler, guide visibility
and snapping are turned on.
 #, Shift+3toggle grids and snapping to grids
 If you want to see the grids but not snap to them, use the global
snapping toggle (% key).
 Note that only the 3 key on the main keyboard works, not on the keypad.
 %toggle snapping on and off
 This toggle affects snapping to grids, guides, and objects in all
tools.
 Display mode
 Ctrl+keypad 5toggle normal/outline mode
 Palette
 These keys work both in the floating palette dialog and in the palette
frame at the bottom of the window.
 clickset fill color on selection
 Shift+clickset stroke color on selection
 right clickset stroke color on selection
 mouse dragdrag fill color to objects
 Shift+mouse dragdrag stroke color to objects
 To change fill/stroke of an object by dragging color on it, that object
need not be selected.
 You can also drag colors to the Fill (F) and Stroke (S) indicators in
the statusbar to change the selection.
 File
 Ctrl+Ncreate new document
 Ctrl+Oopen an SVG document
 Shift+Ctrl+Eexport to PNG
 Ctrl+Iimport bitmap or SVG
 Ctrl+Pprint document
 Ctrl+Ssave document
 Shift+Ctrl+Ssave under a new name
 Shift+Ctrl+Alt+Ssave a copy
 Ctrl+Qexit Inkscape
 Window
 Ctrl+Rtoggle rulers
 Ctrl+Btoggle scrollbars
 F11toggle fullscreen
 F10main menu
 Menus can also be activated by Alt with the letter underscored in the
menu name.
 Shift+F10, right clickdrop-down (context) menu
 Ctrl+F4, Ctrl+Wclose document window
 This shuts down Inkscape if it was the only document window open.
 Ctrl+Tabnext document window
 Shift+Ctrl+Tabprevious document window
 These cycle through the active document windows forward and backward.
 Layers
 Shift+PgUpmove to layer above
 Shift+PgDnmove to layer below
 These commands move the selected objects from one layer to another.
 Shift+Ctrl+PgUpraise layer
 Shift+Ctrl+PgDnlower layer
 Shift+Ctrl+Homeraise layer to top
 Shift+Ctrl+Endlower layer to bottom
 These commands move the current layer among its siblings (normally
other layers).
 Object
 Undo/redo
 Shift+Ctrl+Y, Ctrl+Zundo
 Shift+Ctrl+Z, Ctrl+Yredo
 Clipboard
 Ctrl+Ccopy selection
 This places a copy of the selection to the Inkscape clipboard. Text
from text objects is also placed onto the system clipboard.
 Ctrl+Xcut selection
 This works the same as "copy selection" followed by deleting the
selection.
 Ctrl+Vpaste clipboard
 This places the clipboard objects at the mouse cursor, or at the center
of the window if mouse is outside the canvas.
 When editing text with the text tool, this pastes the text from the
system clipboard into the current text object.
 Ctrl+Alt+Vpaste in place
 This places the clipboard objects to the original location from which
they were copied.
 Shift+Ctrl+Vpaste style
 This applies the style of the (first of the) copied object(s) to the
current selection.
 If a gradient handle (in Gradient tool) or a text span (in Text tool)
are selected, they get the style instead of the entire object.
 Ctrl+7paste path effect
 This applies the path effect of the copied path to the paths/shapes in
current selection.
 Duplicate
 Ctrl+Dduplicate selection
 New object(s) are placed exactly over the original(s) and selected.
 Clone
 Alt+Dclone object
 A clone can be moved/scaled/rotated/skewed independently, but it
updates the path, fill, and stroke from its original.
 The clone is placed exactly over the original object and is selected.
 You can only clone one object at a time; if you want to clone several
objects together, group them and clone the group.
 Shift+Alt+Dunlink clone
 Unlinking a clone cuts the link to the original, turning the clone into
a plain copy.
 Shift+Dselect original
 To find out which object this is a clone of, select the clone and give
this command. The original will be selected.
 Bitmaps
 Alt+Bcreate a bitmap copy
 This exports the selected object(s) (all other objects hidden) as PNG
in the document's directory and imports it back.
 The imported bitmap is placed over the original selection and is
selected.
 Shift+Alt+Btrace bitmap
 This opens the Trace Bitmap dialog allowing you to convert a bitmap
object to path(s).
 Patterns
 Alt+Iobject(s) to pattern
 This converts the selection to a rectangle with tiled pattern fill.
 Shift+Alt+Ipattern to object(s)
 Each selected object with pattern fill is broken into the same object
without fill and a single pattern object.
 Group
 Shift+Ctrl+U, Ctrl+Ggroup selected objects
 Use Ctrl+click to select objects within group.
 Shift+Ctrl+G, Ctrl+Uungroup selected group(s)
 This removes only one level of grouping; press Ctrl+U repeatedly to
ungroup nested groups.
 Z-order
 Homeraise selection to top
 Endlower selection to bottom
 PgUpraise selection one step
 PgDnlower selection one step
 Path
 Convert to path
 Shift+Ctrl+Cconvert selected object(s) to path
 Ctrl+Alt+Cconvert stroke to path
 Boolean operations
 Ctrl++union
 Union combines any number of objects into a single path, removing
overlaps.
 Ctrl+-difference
 Difference works on 2 objects, extracting the top from the bottom.
 Ctrl+intersection
 Intersection creates a path representing the common (overlapping) area
of all selected objects.
 Ctrl+\^exclusive OR (XOR)
 XOR is similar to Union, except that it works on 2 objects and removes
areas where the objects overlap.
 Ctrl+/division (cut)
 Division cuts the bottom object into pieces by the top object,
preserving the fill and stroke of the bottom.
 Ctrl+Alt+/cut path
 Cut Path cuts the bottom object's stroke only where it is intersected
by the top path, removing any fill from the result.
 The result of Union, Difference, Intersection, and XOR inherits the id=
attribute and therefore the clones of the bottom object.
 Division and Cut path normally produce several objects; of them, a
random one inherits the id= of the bottom source object.
 Offsets
 Ctrl+(inset path (towards center)
 Ctrl+)outset path (away from center)
 The default offset distance is 2 px (SVG pixel units, not screen
pixels).
 Alt+(inset path by 1 pixel
 Alt+)outset path by 1 pixel
 Shift+Alt+(inset path by 10 pixels
 Shift+Alt+)outset path by 10 pixels
 The actual distance for pixel offsets depends on zoom level. Zoom in
for finer adjustment.
 All the (, ) commands convert the object to path, if necessary, and
produce regular path.
 Ctrl+Jcreate dynamic offset
 Ctrl+Alt+Jcreate linked offset
 These commands produce an offset object, editable by the node tool,
standalone or linked to the original.
 Shift+Dselect source
 Selecting a linked offset and giving this command will select the
source path of the linked offset.
 Combine
 Ctrl+Kcombine paths
 This is different from grouping in that combined paths create one
object.
 This is different from Union in that overlapping areas are not
affected.
 Whether overlapping areas are filled is controlled by the Fill:
winding/alternating switch on the Fill & Stroke dialog.
 Shift+Ctrl+Kbreak paths apart
 This attempts to break an object into constituent paths; it will fail
if the object is one solid path.
 Simplify
 Ctrl+Lsimplify
 This command attempts to simplify selected path(s) by removing extra
nodes. It converts all objects to paths first.
 If you invoke this command several times in quick succession, it will
act more and more aggressively.
 Invoking Simplify again after a pause restores the default threshold
(settable in the Inkscape Preferences dialog).
 Selector
 Select (mouse)
 clickselect an object
 When you left-click on an object, previous selection is deselected.
 Shift+clicktoggle selection
 Shift+click adds an object to the current selection if it was not
selected, or deselects it otherwise.
 clickclickedit the object
 For paths, double clicking switches to Node tool; for shapes, to
corresponding shape tool; for text, to Text tool.
 For groups, double clicking performs the "Enter group" command (the
group becomes temporary layer).
 Double clicking in empty space swithes to the parent layer in the
hierarchy, if any.
 Rubberband, touch selection
 mouse dragselect by rubberband
 Dragging around objects does "rubberband" selection; previous selection
is deselected.
 Shift+mouse dragadd objects to selection
 Normally, you need to start from an empty space to initiate a
rubberband.
 However, if you press Shift before dragging, Inkscape will do
rubberband selection even if you start from an object.
 Alt+mouse drag, Shift+Alt+mouse dragselect by touch
 Alt+dragging over objects selects those objects that are touched by the
path.
 To start touch selection with Alt, you must have nothing selected;
otherwise use Shift+Alt.
 You can switch rubberband selection to touch selection and back while
dragging by pressing/releasing Alt.
 Select (keyboard)
 Tabselect next object
 Shift+Tabselect previous object
 These keys pick objects in their z-order (Tab cycles from bottom to
top, Shift+Tab cycles from top to bottom).
 Unless you did manual rearrangements, the last object you created is
always on top.
 As a result, if nothing is selected, pressing Shift+Tab once
conveniently selects the object you created last.
 This works on objects within the current layer (unless you change that
in preferences).
 Ctrl+Aselect all (current layer)
 This works on objects within the current layer (unless you change that
in preferences).
 Ctrl+Alt+Aselect all (all layers)
 This works on objects in all visible and unlocked layers.
 !invert selection (current layer)
 This inverts selection (deselects what was selected and vice versa) in
the current layer.
 Alt+!invert selection (all layers)
 This inverts selection (deselects what was selected and vice versa) in
visible and unlocked layers.
 Escdeselect
 Backspace, Deldelete selection
 Select within group, select under
 Ctrl+clickselect within group
 Ctrl+click selects the object at click point disregarding any levels of
grouping that this object might belong to.
 Ctrl+Shift+clicktoggle selection within group
 Alt+clickselect under
 Alt+click selects the object at click point which is beneath (in
z-order) the lowest selected object at click point.
 If the bottom object is reached, Alt+click again selects the top
object. So, several Alt+clicks cycle through z-order stack at point.
 On Linux, Alt+click and Alt+drag may be reserved by the window manager.
If you reconfigure your window manager
 to not map Alt+click, then it will be free for Inkscape to use.
 If your keyboard has a Meta key, you may wish to set your "Modifier
key" to use it instead of Alt.
 (Sometimes you can also use Ctrl+Alt+click (select under in groups)
with the same effect as Alt+click.)
 Shift+Alt+clicktoggle under
 Ctrl+Alt+clickselect under, in groups
 Shift+Ctrl+Alt+clicktoggle under, in groups
 Ctrl+Enterenter group
 Ctrl+Backspacego to parent group/layer
 Move (mouse)
 mouse dragselect + move
 Dragging an object selects it if it was not selected, then moves
selection.
 Alt+mouse dragmove selected
 Alt+drag moves the current selection (without selecting what is under
cursor), no matter where you start the drag.
 On Linux, Alt+click and Alt+drag may be reserved by the window manager.
Reconfigure it so you can use them in Inkscape.
 Ctrl+mouse dragrestrict movement to horizontal or vertical
 Shift+mouse dragtemporarily disable snapping
 This temporaily disables snapping to grid or guides when you are
dragging with grid or guides on.
 mouse dragSpacedrop a copy
 When dragging or transforming with mouse, each Space leaves a copy of
the selected object.
 You can press and hold Space while dragging for a nice "trail."
 Move (keyboard)
 arrowsmove selection by the nudge distance
 Shift+arrowsmove selection by 10x nudge distance
 The default nudge distance is 2 px (SVG pixel units, not screen
pixels).
 Alt+arrowsmove selection by 1 pixel
 Alt+Shift+arrowsmove selection by 10 pixels
 The actual distance for pixel movements depends on zoom level. Zoom in
for finer movement.
 Transform (mouse)
 click, Shift+Stoggle scale/rotation handles
 mouse dragscale (with scale handles)
 mouse dragrotate or skew (with rotation handles)
 Scale by handles
 mouse dragscale
 Ctrl+mouse dragscale preserving aspect ratio
 Shift+mouse dragsymmetric transformation
 Holding Shift while transforming makes transformation symmetric around
the center of the selection.
 Alt+mouse dragscale by integer
 Hold Alt while scaling to limit scale to 2, 3, 4, etc. or 1/2, 1/3, 1/4
etc. of the initial size.
 Scale (keyboard)
 ., >scale selection up by the scale step
 ,, <scale selection down by the scale step
 The default scale step is 2 px (SVG pixel units, not screen pixels).
 Ctrl+., Ctrl+>scale selection to 200%
 Ctrl+,, Ctrl+<scale selection to 50%
 Alt+., Alt+>scale selection up by 1 pixel
 Alt+,, Alt+<scale selection down by 1 pixel
 The actual size increment for pixel scaling depends on zoom level. Zoom
in for finer scaling.
 Scaling is uniform around the center, so that the size increment
applies to the larger of the two dimensions.
 Rotate/skew by handles
 mouse dragrotate or skew
 Ctrl+mouse dragsnap skew angle
 Holding Ctrl when dragging a skew (non-corner) handle snaps the skew
angle to angle steps (default 15 degrees).
 Ctrl+mouse dragsnap rotation angle
 Holding Ctrl when dragging a rotation (corner) handle snaps the
rotation angle to angle steps (default 15 degrees).
 Rotate (keyboard)
 [, ]rotate selection by the angle step
 The default angle step is 15 degrees. ] rotates clockwise, [ rotates
counterclockwise.
 Ctrl+[, Ctrl+]rotate selection by 90 degrees
 Alt+[, Alt+]rotate selection by 1 pixel
 The actual angle for pixel rotation depends on zoom level. Zoom in for
finer movement.
 These commands use the rotation center, draggable in Selector (by
default it's in geometric center).
 Flip
 hflip selection horizontally
 vflip selection vertically
 If the tool is in rotate mode (rotation center visible), that center
becomes the axis of flipping; otherwise it flips around geometric center
of selection
 Rotation center
 mouse dragmove rotation center
 Moved rotation center remembers and saves its position for (all)
selected object(s); you can reset it.
 Dragging the center snaps it to the centerlines and bounding box edges
of the selection.
 Shift+mouse dragmove without snapping
 Shift+clickreset rotation center
 Resetting rotation center moves it back to the geometric center of the
object's or selection's bounding box.
 Cancel
 Esccancel rubberband, move, transformation
 Press Esc while mouse button is still down to cancel rubberband
selection, move, or transformation of any kind.
 Node tool
 Select objects (mouse)
 clickclick a non-selected object to select
 Alt+clickselect under
 Shift+clicktoggle selection
 These work the same as in Selector. The nodes or handles of the single
selected object become editable.
 Select nodes (mouse)
 clickselect a node
 Clicking on a node selects it.
 clickselect two adjacent nodes
 Clicking on a selected path between the nodes selects the two nodes
closest to the click point.
 Shift+clicktoggle selection
 This adds/removes a node (if clicked on node) or two nodes (if clicked
on path) to/from the node selection.
 clickdeselect
 Clicking in an empty space deselects all selected nodes. Next click
will deselect the object.
 Rubberband selection
 mouse dragselect multiple nodes
 Dragging around nodes does "rubberband" selection; previous node
selection is deselected.
 Shift+mouse dragadd nodes to selection
 Normally, you need to start from a point not over a path or a node to
initiate a rubberband.
 However, if you press Shift before dragging, Inkscape will do
rubberband selection even if you start over the path.
 Select nodes (keyboard)
 Tabselect next node
 Shift+Tabselect previous node
 These keys select nodes within the selected path
 Ctrl+Aselect all nodes in subpath(s)
 If the path has multiple subpaths and some nodes selected, this selects
all only in subpaths with already selected nodes.
 Ctrl+Alt+Aselect all nodes in path
 This selects all nodes in the entire path.
 !invert selection in subpath(s)
 If the path has multiple subpaths and some nodes selected, this inverts
selection only in subpaths with already selected nodes.
 Alt+!invert selection in path
 This inverts selection (deselects what was selected and vice versa) in
the entire path.
 Escdeselect all nodes
 Grow/shrink node selection
 PgUp, PgDngrow/shrink selection (spatial)
 mouse wheelgrow/shrink selection (spatial)
 Ctrl+PgUp, Ctrl+PgDngrow/shrink selection (along path)
 Ctrl+mouse wheelgrow/shrink selection (along path)
 Your mouse pointer must be over a node for growing/shrinking.
 Each key press or wheel click selects the nearest unselected node or
deselects the farthest selected node.
 Distance to nodes can be calculated directly (spatial mode) or along
path.
 Move nodes (mouse)
 mouse dragmove selected nodes
 Ctrl+mouse dragrestrict movement to horizontal or vertical
 Ctrl+Alt+mouse dragmove along handles
 This restricts movement to the directions of the node's handles, their
continuations and perpendiculars (total 8 snaps).
 If the node has straight lines on one or both sides, this will snap it
to these lines' directions and perpendiculars instead.
 Shift+mouse dragtemporarily disable snapping
 Snapping nodes is enabled in Document Preferences. By default, only
bounding box of objects snaps to grid/guides.
 Shift+mouse dragdrag out handle
 If a node has a retracted handle, dragging with Shift lets you drag it
out of the node.
 mouse dragSpacedrop a copy
 When dragging nodes with mouse, each Space leaves a copy of the
selected object.
 You can press and hold Space while dragging for a nice "trail."
 Alt+mouse dragsculpt selected nodes
 Sculpting moves the selected nodes so that the dragged node moves all
the way, the farthest selected nodes stay put;
 all intermediate selected nodes move intermediate distances, governed
by a bell-like curve.
 Sculpting is pressure-sensitive with a tablet; press harder for a
blunter drag profile, press lightly for a sharper profile.
 To stop sculpting without losing the pressure-sensitive profile,
release Alt first and then lift the pen.
 Move nodes (keyboard)
 arrowsmove selected node(s) by the nudge distance
 Shift+arrowsmove selected node(s) by 10x nudge distance
 The default nudge distance is 2 px (SVG pixel units, not screen
pixels).
 Alt+arrowsmove selected node(s) by 1 pixel
 Alt+Shift+arrowsmove selected node(s) by 10 pixels
 The actual distance for pixel movements depends on zoom level. Zoom in
for finer movement.
 Move node handle (mouse)
 mouse dragmove a node handle
 Ctrl+mouse dragsnap the handle to angle steps
 The default angle step is 15 degrees. This also snaps to the handle's
original angle, its continuation and perpendiculars.
 Shift+mouse dragrotate both handles
 Alt+mouse draglock the handle length
 Ctrl, Shift, Alt can be combined when dragging handles.
 Ctrl+clickretract the handle
 Retracted handle is zero length; use Shift+drag to drag it back out.
 Scale handle (1 node selected)
 <, >contract/expand both handles by scale step
 The default scale step is 2 px (SVG pixel units, not screen pixels).
May apply to more than one node.
 Left Ctrl+<, Left Ctrl+>scale left handle by the scale step
 Right Ctrl+<, Right Ctrl+>scale right handle by the scale step
 Left Alt+<, Left Alt+>scale left handle by 1 pixel
 Right Alt+<, Right Alt+>scale right handle by 1 pixel
 The actual size increment for pixel scaling depends on zoom level. Zoom
in for finer scaling.
 Instead of the < and > keys, you can use the , (comma) and . (period)
keys respectively.
 Rotate handle (1 node selected)
 [, ]rotate both handles by the angle step
 The default angle step is 15 degrees. ] rotates clockwise, [ rotates
counterclockwise. May apply to more than one node.
 Left Ctrl+[, Left Ctrl+]rotate left handle by the angle step
 Right Ctrl+[, Right Ctrl+]rotate right handle by the angle step
 Left Alt+[, Left Alt+]rotate left handle by 1 pixel
 Right Alt+[, Right Alt+]rotate right handle by 1 pixel
 Scale nodes (>1 nodes selected)
 These commands scale the selected nodes as if they were an "object".
 If mouse is over a node, that node becomes the axis of scaling;
otherwise it scales around geometric center of selected nodes.
 ., >scale nodes up by the scale step
 ,, <scale nodes down by the scale step
 The default scale step is 2 px (SVG pixel units, not screen pixels).
 Alt+., Alt+>scale nodes up by 1 pixel
 Alt+,, Alt+<scale nodes down by 1 pixel
 The actual size increment for pixel scaling depends on zoom level. Zoom
in for finer scaling.
 Scaling is uniform around the center, so that the size increment
applies to the larger of the two dimensions.
 Rotate nodes (>1 nodes selected)
 These commands rotate the selected nodes as if they were an "object".
 If mouse is over a node, that node becomes the axis of rotation;
otherwise it rotates around geometric center of selected nodes.
 [, ]rotate nodes by the angle step
 The default angle step is 15 degrees. ] rotates clockwise, [ rotates
counterclockwise.
 Alt+[, Alt+]rotate nodes by 1 pixel
 The actual angle for pixel rotation depends on zoom level. Zoom in for
finer movement.
 Flip nodes (>1 nodes selected)
 These commands flip the selected nodes as if they were an "object",
around the center of that object.
 hflip nodes horizontally
 vflip nodes vertically
 If mouse is over a node, that node becomes the axis of flipping;
otherwise it flips around geometric center of selected nodes
 Change segment(s)
 Shift+Lmake line
 Shift+Umake curve
 These commands require that more than two adjacent nodes be selected.
 Change node type
 Shift+Cmake cusp
 Shift+Smake smooth
 Shift+Ymake symmetric
 When making smooth or symmetric, you can lock the position of one of
the handles by hovering mouse over it.
 Ctrl+clicktoggle smooth/cusp/symmetric
 Join/break
 Shift+Jjoin selected nodes
 This requires that exactly two end nodes within the path be selected.
 You can lock the position of one of the two joined nodes by hovering
mouse over it.
 Shift+Bbreak selected node(s)
 After break, only one of each two new nodes is selected. May apply to
more than one node.
 Delete, create, duplicate
 Backspace, Deldelete selected node(s)
 Ctrl+Backspace, Ctrl+Deldelete without preserving shape
 Deleting without Ctrl adjusts handles on the remaining nodes to
preserve the shape of the curve as much as possible.
 Deleting with Ctrl does not touch the remaining nodes.
 Ctrl+Alt+clickcreate/delete node
 Ctrl+Alt+click on a node deletes it; Ctrl+Alt+click on the path between
nodes creates a new node in the click point.
 Deleting nodes this way always tries to preserve the shape of the curve
(same as Del/Backspace).
 clickclickcreate node
 Double clicking on the path between nodes creates a node in the click
point.
 Insinsert new node(s)
 This adds new node(s) in the middle(s) of selected segment(s), so it
requires that more than two adjacent nodes be selected.
 Shift+Dduplicate selected node(s)
 New nodes are created on the same path; they are placed exactly over
the old ones and are selected.
 Reverse
 Shift+rreverse path direction
 Edit shapes
 Node tool can also drag the handles of shapes (rectangles, ellipses,
stars, spirals). Click on a shape to select it.
 See the corresponding shape tools for their editing shortcuts, all of
which also work in node tool.
 Cancel
 Esccancel rubberband or move
 Press Esc while mouse button is still down to cancel rubberband
selection, node move, handle move, or handle move.
 Tweak tool
 Operation
 mouse dragact on selected paths in the current mode
 Ctrl+mouse dragact temporarily switching to shrink mode
 Ctrl+Shift+mouse dragact temporarily switching to grow mode
 The amount of tweaking action is the greatest at the center of the
circular area and drops off smoothly towards the edges.
 Modes
 Shift+ppush mode
 Shift+sshrink (inset) mode
 Shift+ggrow (outset) mode
 Shift+aattract mode
 Shift+erepel mode
 Shift+rroughen mode
 Shift+ccolor paint mode
 Shift+jcolor jitter mode
 Parameters
 Left arrow, Right arrowadjust brush width by 1
 Home, Endset brush width to 1 / 100
 Up arrow, Down arrowadjust tweaking force
 Width and force can be adjusted while drawing. With a
pressure-sensitive tablet, force also depends on pen pressure.
 Rectangle tool
 Draw
 mouse dragdraw a rectangle
 Ctrl+mouse dragmake a square or integer-ratio rectangle
 This restricts rectangle so its height/width ratio is a whole number.
 Shift+mouse dragdraw around the starting point
 This creates a rectangle symmetric around the starting point of the
mouse drag.
 Select
 clickclick to select
 Alt+click, Ctrl+Alt+clickselect under
 Shift+clicktoggle selection
 In this tool, selecting by click disregards any grouping (i.e. acts as
clicking with Ctrl in Selector)
 Escdeselect
 Resize by handles
 mouse dragdrag a square handle to resize
 Initially, the two resize (square) handles are in top left and bottom
right corners.
 Resize handles change the width and height of the rectangle in its own
coordinate system, before any transforms are applied.
 Ctrl+mouse draglock width, height, or ratio
 Round corners by handles
 mouse dragdrag a circular handle to round corners
 Initially, the two rounding handles are in the top right corner of the
rectangle.
 Ctrl+mouse draglock the corner circular
 Ctrl+clickset the corner circular
 When rounding corners, dragging one rounding handle keeps the corner
circular if the other remains at the corner.
 You can drag both handles for an elliptic rounded corner, or drag/click
one with Ctrl to make it circular again.
 Shift+clickremove corner rounding
 3D box tool
 Draw
 mouse dragdraw a 3D box (X/Y plane)
 Shift+mouse dragdraw a 3D box (extrude in Z)
 Select
 clickclick to select
 Alt+click, Ctrl+Alt+clickselect under
 Shift+clicktoggle selection
 Escdeselect
 Edit by handles
 All editing operations occur "in perspective", i.e., either along PLs
or within planes spanned by these.
 mouse dragresize/move box
 The four front handles and the center normally move withing the
XY-plane, the four rear handles along the Z-axis.
 Shift+mouse dragresize/move (with handle behaviour swapped)
 Ctrl+mouse dragresize/move (handles snap to axes or diagonals)
 Edit perspectives
 In what follows, we use the abbreviations VP = vanishing point, PL =
perspective line.
 mouse dragdrag square handles to move the VPs
 [, ]rotate X-PLs (if parallel) by the angle step
 The default angle step is 15 degrees. ],),} rotate clockwise, [,(,{
rotate counterclockwise.
 Alt+[, Alt+]rotate X-PLs (if parallel) by 1 pixel
 (, )rotate Y-PLs (if parallel) by the angle step
 Alt+(, Alt+)rotate Y-PLs (if parallel) by 1 pixel
 {, }rotate Z-PLs (if parallel) by the angle step
 Alt+{, Alt+}rotate Z-PLs (if parallel) by 1 pixel
 Visual appearance
 Ltoggle visibility of PLs
 Atoggle PLs to all corners/only front corners
 Ellipse tool
 Draw
 Without Alt the starting end ending point of the mouse drag mark the
corners of the bounding box.
 With Alt the ellipse is enlarged so that its circumference passes
through these two points (Ctrl+Alt is a special case; see below).
 mouse dragdraw an ellipse
 Ctrl+mouse dragmake circle or integer-ratio ellipse
 This restricts ellipse so its height/width ratio is a whole number.
 Shift+mouse dragdraw around the starting point
 This creates an ellipse symmetric around the starting point of the
mouse drag.
 Ctrl+Alt+mouse drag
 This creates a perfect circle whose diameter is defined by the starting
and ending point of the mouse drag.
 Select
 clickclick to select
 Alt+click, Ctrl+Alt+clickselect under
 Shift+clicktoggle selection
 In this tool, selecting by click disregards any grouping (i.e. acts as
clicking with Ctrl in Selector)
 Escdeselect
 Edit by handles
 mouse dragresize, make arc or segment
 Initially, the two resize handles are at the topmost and leftmost
points; the two arc/segment handles are in the rightmost point.
 Ctrl+mouse draglock circle (resize handles)
 Ctrl+mouse dragsnap to angle steps (arc/segment handles)
 Resize handles change the width and height of the ellipse in its own
coordinate system, before any transforms are applied.
 The default angle step is 15 degrees.
 Shift+clickmake whole (arc/segment handles)
 Star tool
 Draw
 mouse dragdraw a star
 Ctrl+mouse dragsnap star to angle steps
 The default angle step is 15 degrees.
 Select
 clickclick to select
 Alt+click, Ctrl+Alt+clickselect under
 Shift+clicktoggle selection
 In this tool, selecting by click disregards any grouping (i.e. acts as
clicking with Ctrl in Selector)
 Escdeselect
 Edit by handles
 mouse dragdrag a handle to vary the star shape
 Ctrl+mouse dragkeep star rays radial (no skew)
 Shift+mouse draground the star
 Shift+clickremove rounding
 Alt+mouse dragrandomize the star
 Alt+click, Ctrl+Alt+clickremove randomization
 Spiral tool
 Draw
 mouse dragdraw a spiral
 Ctrl+mouse dragsnap spiral to angle steps
 The default angle step is 15 degrees.
 Select
 clickclick to select
 Alt+click, Ctrl+Alt+clickselect under
 Shift+clicktoggle selection
 In this tool, selecting by click disregards any grouping (i.e. acts as
clicking with Ctrl in Selector)
 Escdeselect
 Edit by handles
 mouse dragroll/unroll from inside (inner handle)
 Dragging the inner handle adjusts the "inner radius" parameter.
 Alt+mouse dragconverge/diverge (inner handle)
 Alt+click, Ctrl+Alt+clickreset divergence (inner handle)
 Vertical Alt+drag of the inner handle adjusts the "divergence"
parameter, Alt+click resets it to 1.
 Shift+clickzero inner radius (inner handle)
 Shift+click on inner handle makes the spiral start from the center.
 mouse dragroll/unroll from outside (outer handle)
 Dragging the outer handle adjusts the "turns" parameter. Use
Shift+Alt+drag to roll/unroll without changing radius.
 Shift+mouse dragscale/rotate (outer handle)
 Use Shift+Alt to rotate only (locks the radius of the spiral).
 Ctrl+mouse dragsnap handles to angle steps
 The default angle step is 15 degrees. This works for both handles.
 Zoom tool
 clickzoom in
 Shift+clickzoom out
 mouse dragzoom into the area
 Pencil tool
 mouse dragdraw a freehand line
 Shift+mouse dragadd to selected path
 If a path is selected, Shift+dragging anywhere creates a new subpath
instead of a new independent path.
 Shift+mouse dragtemporarily disable snapping
 Shift also temporaily disables snapping to grid or guides when you are
drawing with grid or guides on.
 Create dots
 Ctrl+clickcreate a dot
 This creates a small circle. Its size (relative to the current stroke
width) can be set in Preferences.
 Shift+Ctrl+clickcreate a double-sized dot
 Alt+Ctrl+clickcreate a random-sized dot
 Pen (Bezier) tool
 Create nodes
 clickcreate a sharp node
 If no path is being created, this starts a new path.
 Shift+clickadd to selected path
 If a path is selected, Shift+clicking anywhere starts a new subpath
instead of a new independent path.
 mouse dragcreate a bezier node with two handles
 Shift+mouse dragmove only one handle
 This moves only one handle (instead of both) while creating a node,
making it cusp.
 Ctrl+mouse dragsnap the handle to angle steps
 The default angle step is 15 degrees.
 Move last node
 These commands move the last created node (at the start of the red
segment) while creating a path.
 arrowsmove last node by the nudge distance
 Shift+arrowsmove last node by 10x nudge distance
 The default nudge distance is 2 px (SVG pixel units, not screen
pixels).
 Alt+arrowsmove last node by 1 pixel
 Alt+Shift+arrowsmove last node by 10 pixels
 The actual distance for pixel movements depends on zoom level. Zoom in
for finer movement.
 Create/modify segments
 Ctrl+snap last segment to angle steps
 This snaps the new node's angle, relative to the previous node, to
angle steps (default 15 degrees).
 Shift+Lmake last segment line
 Shift+Umake last segment curve
 These commands change the last (red) segment of the path to straight
line or curve.
 Create dots
 Ctrl+clickcreate a dot
 This creates a small circle. Its size (relative to the current stroke
width) can be set in Preferences.
 Shift+Ctrl+clickcreate a double-sized dot
 Alt+Ctrl+clickcreate a random-sized dot
 Finish
 Enterfinish current line
 right clickfinish current line
 clickclickfinish current line
 Enter, right click, or double left click finish the current line,
discarding the last unfinished (red) segment.
 Cancel
 Esc, Ctrl+zcancel current line
 Backspace, Delerase last segment of current line
 Calligraphy tool
 mouse dragdraw a calligraphic line
 Shift+mouse dragadd to selected path
 Drawing with Shift unions the newly created stroke with the previous
selection
 Ctrl+mouse dragtrack a guide path
 Drawing with Ctrl tracks a selected guide path at the constant distance
 Left arrow, Right arrowadjust pen width by 1
 Home, Endset pen width to 1 or 100
 Up arrow, Down arrowadjust pen angle
 Width and angle can be adjusted while drawing.
 Escdeselect
 Paint Bucket
 clickfill a bounded area
 Shift+clickadd to selected path
 Clicking with Shift unions the newly created fill with the previous
selection
 mouse dragfill from each point
 From each point, the fill spreads to the neighbors with the colors
similar to that point.
 This can be used to fill an area currently filled with a gradient or
blur.
 Alt+mouse dragfill from each point same as initial point
 From each point, the fill spreads to the neighbors with the colors
similar to the initial point of the drag.
 This can be used to fill several disjoint bounded areas by starting in
one and dragging over all of the areas.
 Ctrl+clickset fill color
 Shift+Ctrl+clickset stroke color
 Ctrl+clicking an object sets its fill (or stroke with Shift) to the
tool's current style; the object need not be selected
 Gradient tool
 Select objects
 clickclick an object to select
 Alt+clickselect under
 Shift+clicktoggle selection
 Create gradients
 mouse dragcreate gradient
 This creates gradient on selected objects. The Controls bar lets you
select linear/radial and fill/stroke for the new gradient.
 clickclickcreate default gradient
 This creates default (horizontal edge-to-edge for linear, centered
edge-to-edge-to-edge for radial) gradient on clicked object.
 Select handles
 clickselect a handle
 Shift+clickadd handle to selection
 Shift+mouse dragselect by rubberband
 Tabselect next handle
 Shift+Tabselect previous handle
 Ctrl+Aselect all handles
 Escdeselect all handles
 Single click outside all handles also deselects all handles.
 Create/delete intermediate stops
 Ctrl+Alt+clickcreate a stop
 clickclickcreate a stop
 Ctrl+Alt+click or double click on a gradient line creates a new
intermediate stop
 Ctrl+Alt+clickdelete stop
 Ctrl+Alt+click on a stop's handle deletes the stop; if it was an end
stop, gradient shortens or disappears
 Insinsert new stop(s)
 This adds new stop(s) in the middle(s) of selected segment(s), so it
requires that more than two adjacent handles be selected.
 Deldelete selected stops
 Move handles/stops
 mouse dragmove selected handle(s)
 Ctrl+mouse dragmove stops in 1/10 range increments
 Ctrl+dragging selected intermediate stops moves them snapping to 1/10
steps of the available range
 Alt+mouse dragsculpt selected stops
 Sculpting moves the selected intermediate stops depending on how close
each one is to the stop being dragged, using a smooth bell-like curve
similar to the node sculpting feature in Node tool.
 arrowsmove selected handle by the nudge distance
 Shift+arrowsmove selected handle by 10x nudge distance
 The default nudge distance is 2 px (SVG pixel units, not screen
pixels).
 Alt+arrowsmove selected handle by 1 pixel
 Alt+Shift+arrowsmove selected handle by 10 pixels
 If at least one end handle is selected, arrow keys move the end handle
to move or resize the gradient line.
 If only mid stops are selected, arrow keys move the selected stops
along the gradient line.
 The actual distance for pixel movements depends on zoom level. Zoom in
for finer movement.
 Reverse
 Shift+rreverse gradient definition
 This mirrors the stop positions of the current gradient without moving
the gradient handles.
 Gradient editor
 clickclickopen gradient editor
 Double clicking a gradient handle opens the Gradient Editor with that
gradient and the clicked handle chosen in the stops list.
 Dropper tool
 clickpick fill color
 Shift+clickpick stroke color
 mouse dragaverage fill color
 Shift+mouse dragaverage stroke color
 Click applies the color under cursor to the current selection. Dragging
a radius calculates the average color of a circular area.
 If a gradient handle (in Gradient tool) is selected, it gets the color
instead of the entire object.
 Alt+clickpick inverse color
 If Alt is pressed, picking color (with or without Shift, by click or by
drag) picks the inverse of the color.
 Ctrl+Ccopy color
 This copies the color under cursor to the system clipboard, as text in
RRGGBBAA format (8 hex digits).
 Text tool
 Select/create
 clickcreate/select a text object
 Clicking in an empty space or on a non-text creates a text object; now
you can type your text.
 Clicking on a text object selects it; cursor is placed near the click
point.
 Escdeselect the text object
 Navigate in text
 arrowsmove cursor by one character
 Ctrl+Left arrow, Ctrl+Right arrowmove cursor by one word
 Ctrl+Up arrow, Ctrl+Down arrowmove cursor by one paragraph
 Home, Endgo to beginning/end of line
 Ctrl+Home, Ctrl+Endgo to beginning/end of text
 All these commands cancel current text selection, if any.
 Flowed text (internal frame)
 mouse dragcreate flowed text
 Clicking and dragging in an empty space or on a non-text creates a
flowed text object with internal frame.
 mouse dragadjust frame size
 Dragging the handle in the lower right corner of the selected flowed
text changes width/height of the frame.
 Ctrl+mouse draglock width, height, or ratio of frame
 Dragging the corner handle with Ctrl resizes the frame preserving
either width, or height, or ratio.
 Flowed text (external frame)
 Alt+Wflow text into frame
 With a text object and a shape/path selected, this flows text into the
shape/path.
 Both remain separate objects, but are linked; editing the shape/path
causes the text to reflow.
 Alt+Shift+Wunflow text from frame
 This cuts the flowed text's link to the shape/path, producing a
single-line regular text object.
 Shift+Dselect external frame
 To find out which object is the frame of this flowed text, select it
and press Shift+D. The frame will be selected.
 Text on path
 Shift+Dselect path from text
 To find out which path this text is put on, select it and press
Shift+D. The path will be selected.
 Edit text
 To type + and - characters, use the main keyboard; keypad + and - are
reserved for zoom (unless NumLock is on).
 Enterstart a new line or paragraph
 Enter in regular text creates new line; in flowed text it creates a new
paragraph
 Ctrl+Utoggle Unicode entry
 To insert an arbitrary Unicode character, type Ctrl+U, then the
hexadecimal code point, then Enter.
 For example, type Ctrl+U 2 0 1 4 Enter for an em-dash; Ctrl+U a 9 Enter
for a copyright sign.
 To stay in Unicode mode after inserting the character, press Space
instead of Enter.
 Press Esc or another Ctrl+U to cancel Unicode mode without inserting
the character.
 Ctrl+Spaceinsert no-break space
 A no-break space is visible even in a text object without
xml:space="preserve".
 Select text
 mouse dragselect text
 Left-dragging over a text object selects a text span.
 Shift+arrowsselect text by character
 Ctrl+Shift+arrowsselect text by word
 Shift+Home, Shift+Endselect to beginning/end of line
 Ctrl+Shift+Home, Ctrl+Shift+Endselect to beginning/end of text
 clickclickselect word
 clickclickclickselect line
 Ctrl+Aselect all text
 This selects the entire text of the current text object.
 Style selection
 Ctrl+Bmake selection bold
 Ctrl+Imake selection italic
 Also, you can use the Text&Font or Fill&Stroke dialogs to assign any
style to text selection.
 Letter spacing
 Alt+>expand line/paragraph by 1 pixel
 Shift+Alt+>expand line/paragraph by 10 pixels
 Alt+<contract line/paragraph by 1 pixel
 Shift+Alt+<contract line/paragraph by 10 pixels
 These commands (only when editing text) adjust letter spacing in the
current line (regular text) or paragraph (flowed text).
 The actual adjustment for pixel movements depends on zoom level. Zoom
in for finer adjustment.
 Line spacing
 Ctrl+Alt+>make the text object taller by 1 pixel
 Shift+Ctrl+Alt+>make the text object taller by 10 pixels
 Ctrl+Alt+<make the text object shorter by 1 pixel
 Shift+Ctrl+Alt+<make the text object shorter by 10 pixels
 These commands (only when editing text) adjust line spacing in the
entire text object (regular or flowed).
 The actual adjustment for pixel movements depends on zoom level. Zoom
in for finer adjustment.
 Kerning and shifting
 Alt+arrowsshift characters by 1 pixel
 Shift+Alt+arrowsshift characters by 10 pixels
 These commands work when editing a regular text object. Kerning does
not work in flowed text.
 With no selection, they shift (horizontally or vertically) the
characters after the cursor until the end of line.
 With selection, they shift the selection relative to the rest of text
(by inserting opposite kerns at both ends of selection).
 The actual adjustment for pixel movements depends on zoom level. Zoom
in for finer adjustment.
 Rotate
 Ctrl+[, Ctrl+]rotate character(s) by 90 degrees
 Alt+[, Alt+]rotate character(s) by 1 pixel
 These commands rotate the next character (without selection) or all
characters in the selection (with selection).
 Rotation only works in regular text (not flowed text).
 The actual angle for pixel rotation depends on zoom level. Zoom in for
finer movement.

**** Creating Arching Text in Inkscape

Creating Arching Text in Inkscape
 For this first half, I referenced Heathenx's tutorial. I will include
 the video tutorial at the end of the post.
 1. Create a circle in Inkscape (no fill, just a line stroke)
 2. On top of the circle, create a square (fill and stroke, but not
mandatory).
 3. Place the square over the bottom half of the circle (the square
 will be totally covering the bottom half of the circle).
 4. Select both the circle and the square using the Shift key.
 5. In the Path menu choose Path-->Cut Path
 6. You'll now have a separate arch (you can delete the other by
 products, unless you find something to use them for :-) )
 7. Type your text
 8. Select the arch you created and the text using the Shift key.
 9. In the Text menu, select Text---> Put on Path
 10. You can adjust the path points on the arch (using the Edit Path
 Nodes tool), which will change the arch position of your text.
 11. Select the arch and in the Fill and Stroke dialog, set the arch's
 Alpha channel to zero (0). This will make the arch invisible but the
 text will stay arched. Do not delete the arch or you'll break the link
 b/w the arch and the text and the text will no longer arch (since you
 deleted the reference path for the text).

**** Make Cutouts in Objects

Note: Both objects need to be a "path" object..look at the status bar
for errors if the cut dosent work
 choose the 2 objects
 [[~/Dropbox/Org/Tech/linux_files/Image_6soxBsaIQRCxkt3UxLVWeA_0001.png]]
 put the 'cut' object above the object that will have the 'hole' and
make sure both are selected
 then issue the difference command :
 [[~/Dropbox/Org/Tech/linux_files/Image_6soxBsaIQRCxkt3UxLVWeA_0002.png]]
 you will be left with the hole in object

**** Mass convert EPS to SVG from the command line

[[~/Dropbox/Org/Tech/linux_files/attach/eps2svg.sh][Attachment #16 (eps2svg.sh)]]
 use:

 inkscape /PATH/TO/FILE.eps -l drawing.svg

 NOTE: you MUST use a full path for the file since there is a bug
currently
 example:

 inkscape /home/zeltak/ThemeDB/1 Inbox/1 Vector/01A01.EPS -l
drawing.svg

 Batch:
 you can also use a script (attached) to batch it or use this command:

 DIR="/home/zeltak/ZH tmp/ttt/"; cd $DIR && for i in .EPS; do inkscape
$DIR/$i -l $i.svg; done
**** "clip" a vector
Let’s start with our little monster friend that i downloaded from the Open Clip Art Library:

Our monster is actually a group of 21 objects (a mixture of Ellipses and Paths). When clipping, it is always easier to group the objects being clipped. Grouping objects is as simple as selecting 2 or more objects and choosing Object > Group.
Choose the Rectangle Tool from the Toolbar, and draw a Rectangle over our poor little monster’s face.

#+DOWNLOADED: http://inkscapetutorials.files.wordpress.com/2011/02/3.png?w=628 @ 2014-03-08 18:26:41
#+attr_html: :width 300px
[[/home/zeltak/org/attach/images_2014/Software/3_2014-03-08_18:26:41.png]]

Select both the the monster (the group) and the Grey Rectangle (a rectangle object). After selecting both, Choose Object > Clip > Set from the menu.

#+DOWNLOADED: http://inkscapetutorials.files.wordpress.com/2011/02/4.png?w=628 @ 2014-03-08 18:27:58
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014//Software/4_2014-03-08_18:27:57.png]]

…and our monster is now cropped in a nice neat rectangle.



#+DOWNLOADED: http://inkscapetutorials.files.wordpress.com/2011/02/5.png?w=628 @ 2014-03-08 18:28:11
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014//Software/5_2014-03-08_18:28:11.png]]

*** picasa

**** picasa places freeze

Problem when pressing "Places" workaround:
 To stop Picasa from hanging on startup:
 pkill Picasa3.exe
 Edit ~/.google/picasa/3.0/user.reg
 Find the line:
 "active metadata tab"=places toggle
 Replace it with:
 "active metadata tab"="
 or
 "active metadata tab"=people toggle
 Restart Picasa.
 Don't click "Places" anymore!

**** face rags

Q: Is face tag data stored in the photo itself?
 A: We currently do not store face tag data directly inside the photo
but this is functionality that we hope to have in the future.
 Q: Since my face tag data is not stored in the photo itself, where is
my face tags data stored?
 A: Face tag data is stored in the Picasa database and also in the
.picasa.ini file in the folder where your tagged photo sits. To see the
location of the photo on your hard drive and the .ini file where the
information is stored, right click the photo and select "Locate on
Disk".
 Q: How do I transfer my face tags from one computer to another?
 A: There are a few different ways to transfer your face tags:
 1) You can perform a Backup of your photos and restore them on your new
computer. This process will preserve your face tags. ("Tools" > "Backup
Pictures")
 2) You can copy your files and the .picasa.ini file from your hard
drive to the new destination
 3) Upload your face tag albums to Picasa Web Albums and download the
album to the new destination
 Important note on option 3: In order for your contact information to
be preserved you'll need to make sure that your contacts associated with
your face tags are marked as "Online Contacts." This means that the
person is synchronized with Google Contacts. After copying the photos to
the destination computer, make sure you are logged in to your Google
user account so that Picasa can retrieve your Google Contacts and update
your face tags with the corresponding information. See reference section
for more info on syncing contacts."

**** install win version on linux

install win version of picasa on linux
Install .deb package using the following command
 sudo dpkg -i picasa 3.0-current i386.deb
 install wine using the following command
 sudo apt-get install wine
 download picasa XX.XX for windows
 Once downloaded .exe file install this by double clicking on this.
 Now you need to copy installed picasa XX from
 /home/YOUR USER NAME/.wine/drive c/Program Files/Google/Picasa3
 to
 /opt/google/picasa/3.0/wine/drive c/Program Files/Google/Picasa3
 Use the following command to copy or use nautilus
 su cp -r /home/YOUR USER NAME/.wine/drive c/Program
Files/Google/Picasa3
 /opt/google/picasa/3.0/wine/drive c/Program Files/Google/Picasa3
 Once done, You can open Picasa XX from your Applications > Graphics >
Picasa

*** shutter

**** Shutter Bug: Can't edit

Shutter Bug: Can't edit
 Problem is, in Ubuntu 10.04, the Edit button is disabled. I found this
bug post: Editing disabled in Ubuntu Lucid.
 Solution:
 install the package: libgoo-canvas-perl

*** osdsh

**** launch osd and show volume

to launch the deamon run:
 osdsh
 to control the osd you use a command named osdctl
 for example to activate volume OSD use:
 osdctl -m 1

**** use a theme to set color/properties

to set colors properties one can use a themfile and then launch osdsh
with -S:
 osdctl -S /home/zeltak/.osdTheme
 example theme file:
 #This osdsh theme was created for osdsh-0.6.0
 #with Tkosdshconfig, by Lord Darth Moultak
 dset(d,5)
 dset(f,--lucidatypewriter-bold-----120------)
 dset(C,red)
 dset(k,black)
 dset(o,0)
 dset(O,0)
 dset(x,0)
 dset(y,0)
 dset(l)
 dset(t)
 smix(d,5)
 smix(f,fixed)
 smix(C,green)
 smix(k,black)
 smix(o,0)
 smix(O,0)
 smix(x,0)
 smix(y,0)
 smix(l)
 smix(t)
 sppp(d,5)
 sppp(f,fixed)
 sppp(C,green)
 sppp(k,black)
 sppp(o,0)
 sppp(O,0)
 sppp(x,0)
 sppp(y,0)
 sppp(l)
 sppp(t)
 sapm(d,5)
 sapm(f,fixed)
 sapm(C,green)
 sapm(k,black)
 sapm(o,0)
 sapm(O,0)
 sapm(x,0)
 sapm(y,0)
 sapm(l)
 sapm(t)
 sclk(d,5)
 sclk(f,fixed)
 sclk(C,green)
 sclk(k,black)
 sclk(o,0)
 sclk(O,0)
 sclk(x,0)
 sclk(y,0)
 sclk(l)
 sclk(t)
 pdev(ppp0)
 clkf(%H:%M:%S)
 clck(0)
 mixr(0)
 apmw(0)
 pppw(0)
 connecting(,)
 connected(,)
 disconnected(,)
 Zeltaks relevant parts:
 smix(d,2)
 smix(f,--lucidatypewriter-bold-----120------)
 smix(C,#F92672)
 smix(k,black)
 smix(o,0)
 smix(O,0)
 smix(x,0)
 smix(y,0)
 smix(l)
 smix(t,2)

*** feh
**** CLI option
| -Z                 | autozoom                                      |
| -x                 | boedrelss                                     |
| -f                 | go through files (with pgup/pgdown)           |
| -m                 | montage mode                                  |
| --scale-down       | make sure image fits screen                   |
| -t                 | Thumbnail mode                                |
| --geometry 500x500 | like scale down mode but better for tiling wm |
| -Sfilename         | sort by filename                              |
**** display properties of images of dir in CLI
use -l
#+NAME: 
#+BEGIN_SRC sh
feh -l
#+END_SRC
Useful in scripts to hunt out images of a certain size/resolution/type etc.
**** montage mode
show a image with images of 256x256

#+NAME: 
#+BEGIN_SRC sh
feh -t -Sfilename -E 256 -y 256 -W 1024  /home/zeltak/MLT/cheatsheets/
#+END_SRC
**** change key bind

`EYS CONFIG SYNTAX`

.config/feh/keys defines key bindings. It has entries of the form “action [key1 [key2 [key3]]]”.

Each key is an X11 keysym name as shown by xev(1), like “Delete”. It may optionally start with modifiers for things like Control, in which case key looks like mod-keysym (for example “C-Delete” for Ctrl+Delete or “C-1-Delete” for Ctrl+Alt+Delete)

Available modifiers are C for Control, S for Shift and 1, 4 for Mod1 and Mod4. To match an uppercase letter like “S” instead of “s”, the Shift modifier is not required.

Specifying an action without any keys unbinds it (i.e. the default bindings are removed).

Note: Do not use the same keybinding for multiple actions. feh does not check for conflicting bindings, so their behaviour is undefined. Either unbind the unwanted action, or bind it to another unused key. The order in which you bind / unbind does not matter, though.

For a list of the action names, see KEYS.
**** keys
? and < ? rotate and save new position of image
?space? show next image
?n? show file name
?e? show exif
?f? fullscreen
?o? zoom out
?i? zoom in

*** Display (part of imagemagic)
use with basic commad+image
supports svg as well
#+NAME: 
#+BEGIN_SRC sh
display /path/to/image.png
#+END_SRC

** internet
*** Archive

**** pidgin

Change Pidgin Iconset

 Place new icons in /usr/share/pixmaps/ and replace original icons in
the pidgin folder

***** Change Pidgin Iconset

*** rtorrent

**** tips

rTorrents FAQ

 Saving torrent state and resume data between sessions

 # Point to a directory where rTorrent will save the torrent files. You
 # may also use relative paths if you want different session
 # directories depending on where you execute rtorrent.
 #
 # session = ./session
 session = ~/Download/session
 Watch a directory for torrents

 # Watch a directory for new torrents, restart torrents that have been
 # copied back and stop those that have been deleted.
 schedule =
watch directory,10,10,load start=~/Download/watch/.torrent
 schedule = tied directory,10,10,start tied=
 schedule = untied directory,10,10,close untied=
 # Watch another directory with a different destination. (0.7.7+)
 schedule =
watch directory 2,10,10,"load start=~/Download/watch stuff/.torrent,d.set directory=~/Download/stuff/"
 Create symbolic links to indicate the download state

 # Create symlinks in the watch directory with a suffix indicating the
 # download state.
 on start = link1,"create link=tied,,.started"
 on stop = link1,"delete link=tied,,.started"
 on finished = link1,"create link=tied,,.finished"
 on erase = link1,"delete link=tied,,.finished"
 # Create symlinks in the same directory as the download.
 on start = link2,"create link=base path,,.started"
 on stop = link2,"delete link=base path,,.started"
 on finished = link2,"create link=base path,,.finished"
 on erase = link2,"delete link=base path,,.finished"
 # Create a symlink in another directory without a suffix.
 # You need to quote the command in this case.
 on finished = link3,"create link=base filename,/files,"
 Move completed torrents

 When the torrent finishes, it executes "mv -n <base path> ~/Download/"
and then sets the destination directory to "~/Download/". (0.8.4+)
 on finished = move complete,"d.set directory=~/Download/
;execute=mv,-u,$d.get base path=,~/Download/"
 # On MacOSX and BSD.
 on finished = move complete,"d.set directory=~/Download/
;execute=mv,-n,$d.get base path=,~/Download/"
 For versions 0.7.7 to 0.8.3 use this:
 on finished =
move complete,"execute=mv,-u,$d.get base path=,~/Download/
;d.set directory=~/Download/"
 # On MacOSX and BSD.
 on finished =
move complete,"execute=mv,-n,$d.get base path=,~/Download/
;d.set directory=~/Download/"
 
 Move completed torrents to different directory depending on watch
directory

 Each watch directory adds torrents with the final destination stored in
the "custom1" string of the download. You can check this string with
ctrl-X then "print=$d.get custom1=" in the client. In rtorrent 0.8.4+:
 schedule =
watch directory 1,10,10,"load start=~/Download/watch stuff1/.torrent,d.set custom1=~/Download/stuff1/"
 schedule =
watch directory 2,10,10,"load start=~/Download/watch stuff2/.torrent,d.set custom1=~/Download/stuff2/"
 # On completion, move the torrent to the directory from custom1.
 on finished = move complete,"d.set directory=$d.get custom1=
;execute=mv,-u,$d.get base path=,$d.get custom1="
 # On MacOSX and BSD.
 on finished = move complete,"d.set directory=$d.get custom1=
;execute=mv,-n,$d.get base path=,$d.get custom1="
 For versions 0.7.7 to 0.8.3 use this on finished handler instead:
 on finished =
move complete,"execute=mv,-u,$d.get base path=,$d.get custom1=
;d.set directory=$d.get custom1="
 # On MacOSX and BSD.
 on finished =
move complete,"execute=mv,-n,$d.get base path=,$d.get custom1=
;d.set directory=$d.get custom1="
 Stop torrents after reaching a specified upload ratio

 For rTorrent 0.8.4 please see RTorrentRatioHandling.For versions before
0.8.4:
 # stop on ratio = min ratio,min upload,max ratio
 #
 # Example:
 schedule = ratio,60,60,"stop on ratio=200,50M,300"
 The "stop on ratio" command can be scheduled to stop torrents that
have reached a specified upload ratio. The above example will stop a
torrent once it has uploaded 200% of the torrent size, unless less than
50MB has been uploaded and the ratio is below 300%.
 Use shift-I to make a torrent ignore this and other commands.
 Delete data files when removing incomplete downloads

 If you often add older torrents and find that they never complete due
to lack of seeds, these commands will automatically delete the data
files when removing an incomplete download (either manually or with
remove untied by removing the tied file). Note that all files will be
removed on incomplete or partially complete downloads, even those files
from it which are in fact completely downloaded.
 WARNING: Do not use this setup if you ever change a download's
base path to something like /home/bob/ or similar, or you could lose a
lot of files!
 # Enable removal for all downloads added from this watch directory.
 schedule =
watch directory,10,10,"load start=~/Download/watch stuff/.torrent,d.set custom2=1"
 # Clear custom2 when download completes.
 on finished = set done var,d.set custom2=
 # Erase data files when a download is removed that still has custom2
set.
 on erase =
rm files,"branch=d.get custom2=,\"execute={rm,-rf,--,$d.get base path=}\""
 To make an incomplete download exempt from the automated deletion on
removal, select the download then press Ctrl-X and enter
"d.set custom2=".
 
Scheduling download rate
 schedule = throttle 1,01:00:00,24:00:00,download rate=0
 schedule = throttle 2,05:00:00,24:00:00,download rate=25
 Every day "throttle 1" gets triggered at 01:00 and sets the download
rate to unlimited, while "throttle 2" sets it to 25kb at 05:00. Using
this the client may be made to perform a somewhat crude form of
bandwidth scheduling.
 
 Starting rTorrent on System Startup

 Step 1: Assuming a Debian-based distribution, create
/etc/init.d/rtorrent with one of the rtorrentInit files attached to this
page, editing the Configuration to suit your needs.
 Step 2: Make sure it has appropriate permissions:
 # ls -l /etc/init.d/rtorrent
 -rwxr-xr-x 1 root root 3000 2007-03-06 22:40 /etc/init.d/rtorrent
 Change permissions if required:
 sudo chmod a+x /etc/init.d/rtorrent
 Step 3: Update your init system (as sudo/su/root):
 # update-rc.d rtorrent defaults
 step 4:Edit Script and reboot system
 Misc

 Using a different configuration file
 $ rtorrent -n -o import=~/foo.rc
 The '-n' switch tells rtorrent not to load the default resource file,
while the import option loads '~/foo.rc'.
 Adding fast resume data to torrent files
 When you are the first seeder for a torrent, rTorrent will normally
have to hash-check all files even if you just created the torrent file
from them and thus know that they are correct. To eliminate this step,
the following Perl script by Josef Drexler can add rTorrent's fast
resume data to the torrent file:
http://libtorrent.rakshasa.no/downloads/rtorrent fast resume.pl.
 Usage:
 $ rtorrent fast resume.pl [base-directory] < original.torrent >
modified.torrent
 Then you can distribute the original torrent file and load the modified
file into rTorrent and start seeding without needing a hash check. The
base directory specifies where the files in the torrent are located,
equivalent to the "directory" option in rtorrent.rc. If not specified,
the files are assumed to be in the current directory.
 Note that this script requires the Convert::Bencode module from CPAN,
if this module is not available on your system you will need to install
it first:
 $ perl -MCPAN -e 'install Convert::Bencode'

**** rtorrent manual

rtorrent manual

 rtorrent
 Name
 rtorrent -- a BitTorrent client for ncurses
 Synopsis
 rtorrent [-h] [-n] [-o key1=opt1,...] [-O key=opt] [URL | FILE...]
 DESCRIPTION
 rtorrent is a BitTorrent client for ncurses, using the libtorrent
library. The client and library is written in C++ with emphasis on speed
and efficiency, while delivering equivalent features to those found in
GUI based clients in an ncurses client.
 Most of the options below have their own default unit in addition to
supporting B, K, M and G suffixes.
 KEYBOARD CONTROL
 Global Keys
 \^q
 Initiate shutdown, press again to force the shutdown and skip
sending the stop signal to trackers.
 up | down | left | right arrow keys, \^P | \^N | \^B | \^F
 Select entries or change windows. The right arrow key or \^F is
often used for viewing details about the selected entry, while the left
arrow key or \^B often returns to the previous screen.
 a | s | d
 Increase the upload throttle by 1/5/50 KB.
 A | S | D
 Increase the download throttle by 1/5/50 KB.
 z | x | c
 Decrease the upload throttle by 1/5/50 KB.
 Z | X | C
 Decrease the download throttle by 1/5/50 KB.
 Main View Keys
 ->
 View download.
 1 - 7
 Change view.
 \^S
 Start download.
 \^D
 Stop an active download, or remove a stopped download.
 \^K
 Close a torrent and its files.
 \^R
 Initiate hash check of torrent.
 \^O
 Change the destination directory of the download. The torrent must
be closed.
 \^X
 Call commands or change settings.
 + | -
 Change the priority of the download.
 backspace
 Add torrent using an URL or file path. Use tab to view directory
content and do auto-complete.
 l
 View log. Exit by pressing the space-bar.
 U
 Delete the file the torrent is tied to, and clear the association.
 I
 Toggle whether torrent ignores ratio settings.
 Download View Keys
 ->
 View torrent file list. Use the space-bar to change the file
priority and  to change the priority of all files. Use / to collapse
the directories. OUTDATED
 1 | 2
 Adjust max uploads.
 3 | 4
 Adjust min peers.
 5 | 6
 Adjust max peers.
 u
 Display transfering blocks.
 i
 Display chunk rarity.
 o
 Display the tracker list. Cycle the trackers in a group with the
space-bar.
 p
 View peer and torrent information.
 t | T
 Initiate tracker request. Use capital T to force the request,
ignoring the "min interval" set by the tracker.
 k
 Disconnect peer.
 
 Choke/Snub peer.
 OPTIONS
 -b a.b.c.d
 Bind listening socket and outgoing connections to this network
interface address.
 -d directory
 Set the default download directory. Defaults to "./".
 -h
 Display help and exit.
 -i a.b.c.d
 Set the address reported to the tracker.
 -n
 Don't load ~/.rtorrent.rc on startup.
 -o key1=opt1,..., -O key=opt
 Set any number of options, see the SETTINGS section. The options
given here override the resource files. Use capital -O to allow comma in
the option.
 -p a-b
 Try to open a listening port in the range a up to and including b.
 -s directory
 Session management will be enabled and the torrent files for all
open downloads will be stored in this directory. Only one instance of
rtorrent should be used with each session directory, though at the
moment no locking is done. An empty string will disable the session
directory.
 GENERAL SETTINGS
 bind = a.b.c.d
 Bind listening socket and outgoing connections to this network
interface address.
 ip = a.b.c.d, ip = hostname
 Set the address reported to the tracker.
 port range = a-b
 Try to open a listening port in the range a up to and including b.
 port random = yes | no
 Open the listening port at a random position in the port range.
 check hash = yes | no
 Perform hash check on torrents that have finished downloading.
 directory = directory
 Set the default download directory. Defaults to "./".
 session = directory
 Session management will be enabled and the torrent files for all
open downloads will be stored in this directory. Only one instance of
rtorrent should be used with each session directory, though at the
moment no locking is done. An empty string will disable the session
directory.
 http proxy = url
 Use a http proxy. Use an empty string to disable.
 encoding list = encoding
 Add a preferred filename encoding to the list. The encodings are
attempted in the order they are inserted, if none match the torrent
default is used.
 encryption = option,...
 Set how rtorrent should deal with encrypted Bittorrent connections.
By default, encryption is disabled, equivalent to specifying the option
none. Alternatively, any number of the following options may be
specified:
 allow incoming (allow incoming encrypted connections),
try outgoing (use encryption for outgoing connections), require
(disable unencrypted handshakes), require RC4 (also disable plaintext
transmission after the initial encrypted handshake), enable retry (if
the initial outgoing connection fails, retry with encryption turned on
if it was off or off if it was on), prefer plaintext (choose plaintext
when peer offers a choice between plaintext transmission and RC4
encryption, otherwise RC4 will be used).
 schedule = id,start,interval,command
 Call command every interval seconds, starting from start. An
interval of zero calls the task once, while a start of zero calls it
immediately. Currently command is forwarded to the option handler. start
and interval may optionally use a time format, dd:hh:mm:ss. F.ex to
start a task every day at 18:00, use 18:00:00,24:00:00.
 schedule remove = id
 Delete id from the scheduler.
 start tied =
 Start torrents that are tied to filenames that have been re-added.
 stop untied =, close untied =, remove untied =
 Stop, close or remove the torrents that are tied to filenames that
have been deleted. Clear the association with the 'U' key.
 close low diskspace = space
 Close any active torrents on filesystems with less than space
diskspace left. Use with the schedule option.
 load = file, load verbose = file, load start = file,
load start verbose = file
 Load and possibly start a file, or possibly multiple files by using
the wild-card "". This is meant for use with schedule, though ensure
that the start is non-zero. The loaded file will be tied to the filename
provided.
 import = file, try import = file
 Load a resource file. try import does not throw
torrent::input error exception on bad input.
 stop on ratio = min ratio, stop on ratio = min ratio,min upload,
stop on ratio = min ratio,min upload,max ratio
 Stop torrents when they reach the given upload ratio min ratio in
percent. If the optional min upload is given, require a total upload
amount of this many bytes as well. If the optional max ratio is given,
stop the torrent when reaching this ratio regardless of the total upload
amount. Exclude certain torrent by pressing Shift+I in the downlist
list. Use with the schedule option.
 on insert = id,command, on erase = id,command, on open = id,command,
on close = id,command, on start = id,command, on stop = id,command,
on hash queued = id,command, on hash removed = id,command,
on hash done = id,command, on finished = id,command
 Call a command on a download when its state changes. Only a subset
of commands are available.
 THROTTLE SETTINGS
 upload rate = KB, download rate = KB
 Set the maximum global uploand and download rates.
 min peers = value, max peers = value
 Set the minimum and maximum number of peers to allow in each
download.
 min peers seed = value, max peers seed = value
 Set the minimum nad maximum number of peers to allow while seeding,
or -1 (default) to use max peers.
 max uploads = value
 Set the maximum number of simultaneous uploads per download.
 max uploads div = value, max downloads div = value
 Change the divider used to calculate the max upload and download
slots to use when the throttle is changed. Disable by setting 0.
 max uploads global = value, max downloads global = value
 Max upload and download slots allowed. Disable by setting 0.
 TRACKER RELATED SETTINGS
 Tracker related settings.
 enable trackers = yes
 Set to no to disable all tracker requests. Useful for disabling
rtorrent with the schedule command.
 tracker dump = filename
 Dump tracker requests to filename, disable by supplying an empty
string. Only torrents loaded while tracker dump contains a non-empty
string will be logged at the moment, although disabling it will work as
expected.
 tracker numwant = number
 Set the numwant field sent to the tracker, which indicates how many
peers we want. A negative value disables this feature.
 use udp trackers = yes
 Use UDP trackers. Disable if you are behind a firewall, etc, that
does not allow connections to UDP trackers.
 http capath = path, http cacert = filename
 Set the certificates to use in http requests. See Curl's
CURLOPT CAPATH and CURLOPT CAINFO options for further information.
 USER-INTERFACE SETTINGS
 Display related settings.
 view add = name
 Create a new view.
 view sort = name, view sort = name,seconds
 Sort a view according the the criteria set by view sort current.
If the optional argument is supplied, the view is not sorted if a change
happened during the last seconds. This command is meant to be used with
schedule.
 view sort new = name,..., view sort current = name,...
 Set the sorting criteria for when new elements inserted or
view sort is called. The list can contain any number of criteria,
including zero, from the following:
 name, name reverse, stopped, started, complete, incomplete,
state changed, state changed reverse
 view filter = name,...
 Set a list of filter to apply when new new downloads are added and
when view sort is called. All filters must match for the download to be
included.
 stopped, started, complete, incomplete,
 key layout = qwerty|azerty|qwertz|dvorak
 Change the key-bindings.
 FILE-SYSTEM SETTINGS
 File-system related settings.
 max file size = size
 Set the maximum size a file can have. Disable by passing -1.
 split file size = size
 Split files in a torrent larger than size into seperate files.
Disable by passing -1.
 split suffix = string
 Set the suffix used on split files. Defaults to .part.
 DOWNLOAD SETTINGS
 Settings that require a download as a target, the options need to be
called through f.ex on finished.
 create link = type,path,suffix, delete link = type,path,suffix
 Create or delete a symbolic link. The link path is the
concatenation of path, the result of the type on the download, and
suffix.
 Available types are; base path uses the base path of the download,
base filename uses the base filename of the download, tied uses the
path of the file the download is tied to, see start tied.
 ADVANCED SETTINGS
 This list contains settings users shouldn't need to touch, some may
even cause crashes or similar if incorrectly set.
 hash read ahead = MB
 Configure how far ahead we ask the kernel to read when doing hash
checking. The hash checker uses madvise(..., MADV WILLNEED) for the
requests.
 hash interval = ms
 Interval between attempts to check the hash when the chunk is not
in memory, in milliseconds.
 hash max tries = tries
 Number of attempts to check the hash while using the mincore
status, before forcing. Overworked systems might need lower values to
get a decent hash checking rate.
 safe sync = yes|no
 Always use MS SYNC rather than MS ASYNC when syncing chunks. This
may be nessesary in case of filesystem bugs like NFS in linux ~2.6.13.
 max open files = value
 Number of files to simultaneously keep open. LibTorrent dynamically
opens and closes files as necessary when mapping files to memory.
Default is based on sysconf( SC OPEN MAX). You probably only think
you know what this option does, so don't touch it.
 max open sockets = value
 Number of network sockets to simultaneously keep open. This value
is set to a reasonable value based on sysconf( SC OPEN MAX).
 max open http = value
 Number of sockets to simultaneously keep open. This value is set to
32 by default.
 max memory usage = bytes
 Set the max amount of memory space used to mapping file chunks.
This may also be set using ulimit -m where 3/4 will be allocated to file
chunks.
 send buffer size = value, receive buffer size = value
 Adjust the send and receive buffer size for socket.
 umask = 0644
 Set the umask for this process, which is applied to all files
created by the program.
 working directory = directory
 Changes the working directory of the process using chdir.
 session on completion = yes
 Controls if the session torrent is saved when a torrent finishes.
By default on.
 session lock = yes
 Controls if a lock file is created in the session directory on
startup.
 session save =
 Save the session files for all downloads.
 tos = default|lowdelay|throughput|reliability|mincost, tos = hex
 Change the TOS of peer connections, by default set to throughput.
If the option is set to default then the system default TOS is used. A
hex value may be used for non-standard settings.
 handshake log = yes
 Enable logging of the peer handshake. This generates a large number
of log messages, but may be useful to debug connection problems.
 AUTHORS
 Jari "Rakshasa" Sundell <jaris@ifi.uio.no>

**** torrent security

full encryption and a blocklist

**** Could not lock session directory error

delete the lock in the session folder defined in the rtorrent rc file.

**** paste a url from the web

press 'enter' to open the open dialog
 paste the copied URL
 thats it :)

*** google chrome

**** install on ubuntu

to install google chromium

 Add these lines at the very bottom of sources.list
 deb http://ppa.launchpad.net/chromium-daily/ppa/ubuntu intrepid main
 deb-src http://ppa.launchpad.net/chromium-daily/ppa/ubuntu intrepid
main
 then install
 sudo apt-get install chromium-browser
 How to install Google Chrome Dev Build on Ubuntu 9.04 (Jaunty
Jackalope)

-  
-  Add the Google software repository:
-  $ sudo gedit /etc/apt/sources.list.d/google-chrome.list
-  
-  Then add this line:
-  
-  deb http://dl.google.com/linux/deb/ stable main
-  
-  Add signing key:
-  $ wget -q -O -
   https://dl-ssl.google.com/linux/linux signing key.pub | sudo
   apt-key add -
-  
-  Update sources list:
-  $ sudo aptitude update
-  
-  Install Google Chrome Dev Build:
-  $ sudo aptitude install google-chrome-unstable
-  
-  Run Google Chrome by clicking Applications  Internet  Google
   Chrome.
-  
-  [[~/Dropbox/Org/Tech/linux_files/Image_nZcGZWhdEhrPksvTnOFnEA_0001.png]]
-  

**** keyboard shortcuts

 2.Shift and esc :It opens up the chrome task manager
 CTRL+B opens your bookmark toolbar for the ones that miss it
dearly...like me.
 Open a new window Ctrl + N
 Open a new windows in incognito mode Ctrl + Shift + N
 Open link in a new tab Ctrl + Click on link
 Open link in new window Shift + Click on link
 Close current window Alt + F4
 Open a new tab Ctrl + T
 Reopen the last tab you've closed Ctrl + Shift + T
 Switch to the tab at the specified position Ctrl + 1 through Ctrl + 8
 Switch to the last tab Ctrl + 9
 Switch to the next tab Ctrl + Tab or Ctrl + PgDown
 Switch to the previous tab Ctrl + Shift + Tab or Ctrl + PgUp
 Go to the previous page in your browsing history for the tab Backspace,
or press Alt + Left Arrow
 Go to the next page in your browsing history for the tab Shift +
Backspace, or press Alt + Right Arrow
 Close current tab or pop-up Ctrl + W or Ctrl + F4
 Open your homepage Alt + Home
 Open a file from your computer in Google Chrome Ctrl + O, then select
file
 Add 'www.' and '.com' to your input in the address bar and open the web
address Type the part of the web address that's between 'www.' and
'.com', then press Ctrl + Enter
 Highlight content in the web address area F6 or Ctrl + L or Alt + D
 Open your web address in a new tab Type a web address, then press Alt +
Enter
 Places a '?' in the address bar. Type a search term after the '?' to
perform a search using your default search engine. Ctrl + K or Ctrl + E
 Jump to the previous word in the address bar Place your cursor in the
address bar, the press Ctrl + Left Arrow
 Jump to the next word in the address bar Place your cursor in the
address bar, then press Ctrl + Right Arrow
 Delete the previous word in the address bar Place your cursor in the
address bar, then press Ctrl + Backspace
 Toggle bookmarks bar on and off Ctrl + B
 View the History page Ctrl + H
 View the Downloads page Ctrl + J
 View the Task Manager Shift + Esc
 Print your current page Ctrl + P
 Reload current page F5
 Stop page loading Esc
 Reload current page, ignoring cached content Ctrl + F5 or Shift + F5
 Scroll down the web page Space bar
 Go to the top of the page Home
 Go to the bottom of the page End
 Download link Press Alt, then click the link
 Open find-in-page box Ctrl + F
 Find next match for your input in the find-in-page box Ctrl + G or F3
 Find previous match for your input in the find-in-page box Ctrl + Shift
+ G or Shift + F3
 View source Ctrl + U
 Bookmark your current webpage Ctrl + D
 Make text larger Ctrl + +
 Make text smaller Ctrl + -
 Return to normal text size Ctrl + 0[/list]

**** linux chrome now with flash extensions

[[http://h3g3m0n.wordpress.com/2009/07/12/linux-chrome-flash-ext/][Linux
Chrome now with Flash &extensions]]
 The Linux version of Chrome has been coming along fairly quickly, the
latest development build of Chrome (Chromium) for Linux now works with
Flash and has extension support. It is also possible to configure the
options (although there are still some TODO stubs so setting a proxy
isn't possible, EDIT: Try the --proxy-server argument). Tested under
Ubuntu 9.04 64bit.
 To install under Ubuntu:
 sudo su
 echo "deb http://ppa.launchpad.net/chromium-daily/ppa/ubuntu jaunty
main #chromium-browser" > /etc/apt/sources.list.d/chromium.list
 sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com
0xfbef0d696de1c72ba5a835fe5a9bf3bb4e5e17b5
 sudo apt-get update && sudo apt-get install chromium-browser
 To enable Flash support:

 cd /usr/lib/chromium-browser/plugins
 sudo ln -s ../../flashplugin-installer/libflashplayer.so
 For extensions:
 Start browser with the following:
 chromium-browser --enable-plugins --enable-greasemonkey
--enable-user-scripts --enable-extensions
 Clink on a crx link (such as adsweep) and browse to
chrome://extensions/ to check installation.

**** manually add a search engine

Go to the search engine you want to add.
 Do a search.
 Copy and paste the web address of the search results pageinto the
URL field
 For example, while you'd go to
[[http://www.demonoid.com][http://www.demonoid.com]] to access Google,
the URL you'd add here is for the search results page.

[[http://www.demonoid.com/files/?category=0&subcategory=All&quality=All&seeded=0&external=2&query=muse&uid=0&sort=][http://www.demonoid.com/files/?category=0&subcategory=All&quality=All&seeded=0&external=2&query=muse&uid=0&sort=]]
 Replace the search term in the URL with %s.
 To continue the Google search engine example, you'd end up with
[[http://www.google.com/search?q=%s][http://www.google.com/search?q=%s]]
as your final search engine URL.
 When you type a search in the address bar, %s will automatically be
replaced by your search term.

**** tips

***** dl flash videos

Create a new bookmark and call it "Download YouTube" or something you
will remember, then for the address field paste:
 Quote:
 javascript:window.location.href =
'http://youtube.com/get video?video id=' + swfArgs['video id']+ "&l="
+ swfArgs['l'] + "&sk=" + swfArgs['sk'] + '&fmt map' +
swfArgs['fmt map'] + '&t=' + swfArgs['t'];
 Then save your bookmark. Next go to the YouTube video you want to
download, when it starts playing click your "Download YouTube" bookmark
and you will see the .flv start to download in Chrome's download status
bar.

***** how to undo a tab that was closed

Many of you probably know this already but I though I would create its
own thread for it because I have been using it a lot lately. This
command enables you to re-open the last tab that was open after you
closed it, perhaps accidentally. So to save you from that frustration,
Google Chrome allows you to re-open that tab even if you have closed
other tabs after it!
 Keyboard Shortcut:
 Use Ctrl+Shift+T - Google Chrome will re-open the last tab that was
closed. Use the shortcut again and it will re-open the tab that was
closed before that you can do this up to 10 times to restore tabs.
 With the New Tab Page:
 Open a new tab then go to Recently Closed Tabs section in the
lower-right of the page. There, you will see the last 3 tabs that were
recently closed (during the ongoing browser session)

***** about

about: ->show version info
 about:version -> same to about:
 about:cache -> show cache content
 about:plugins -> show information of the current plugins installed
 about:memory ->show memory usage from chrome and others web browsers
running!
 about:crash -> crash the tab! and show the friendly crash image
 about:dns -> show dns info, like time
 about:network -> network tools
 about:stats -> shh! this page is secret!
 about:internets -> the tubes are clogged!
 about:histograms ->histograms resume

***** search with keywords

you can easily assign keywords for you search engines under options.
 so if you have "g" for google and "y" for yahoo - "g test" will search
google for test and "y test" will search yahoo accordingly
 When you want to run a search directly from Google's address bar , also
known as the Omnibar, just type a question mark (?) followed by a
keyword.

***** launch options

--bookmark-menu
 adds a bookmark icon

***** make google chrome open with permanently pinned tabs

Make Google Chrome Open with Permanently Pinned Tabs

 add this to the chrome launcher arguments
 In the address area for "Target:" you will need to add the following
command to the end of the target path making certain to leave a single
space in between the final quote mark and the "pinned tab count
command". Enter the number of permanent pinned tabs that you would like
to have in place of the "x"...for our example we chose "5".
 It should look like this:
 --pinned-tab-count=5
 [[~/Dropbox/Org/Tech/linux_files/Image_gZbGEczbPyecScI-3EzM3Q_0001.png]]
 Now for the second part. You will need to add the URL for each website
that you would like to have as a permanently pinned tab after the
"pinned tab count command". Make certain to leave a single space in
between each URL and the "pinned tab count command" as shown below.

***** increase the number of suggestions in chromes omnibox

One very useful way to tweak Chrome is by adding command line switches
to your Chrome shortcut. One I've been utilizing for ages increases the
number of suggestions in the Omnibox. By default Chrome only displays 5
items, and sometimes that's just not enough to be useful.
 To expand your list of suggestions, simply add -omnibox-popup-count=10
to your shortcut's target. In Windows, just right click the icon and
choose properties, and add the text here:
 You don't have to limit yourself to ten, of course - you can set the
number to whatever you want.

**** extensions

***** vimium

Editing the exclusion list
 +1. Navigate to chrome://extensions/ (i.e. put that address in the
address bar and hit enter)
 
 +2. Click on the "options" button for vimium
 +3. Add the site you want to exclude into the exclusion list
 
 + 1. The entries in the list are regular expressions. So if you want to
block vimium from running on google reader, thus ensuring that its
keyboard shortcuts work, put this entry in the list:
 
 + http://www.google.com/reader/
 
 + 2. Enter one site per line that you want to exclude
 
 +4. Click "save options"
 
 +5. The sites in your exclusion list will now be blocked.

*** firefox
**** tips

Disable Firefox Resizing

 Hate it when websites take it on themselves to resize your browser
window?
 Click "Edit", then "Preferences"
 Select the "Content" tab
 To the right of "Enable Javascript" click "Advanced"
 Uncheck the box next to "Move or Resize Existing Windows"
 change extension compatanilty manually

 edit install.rdf inside the xpi file (use krusader VFS) and change max
version
 Send link with kmail (internal with no extension needed)

 With Firefox 3 you don't need to do the about:config stuff anymore.
 simply use Send Link from the main menu. You should get a prompt
 from Firefox asking what application to use.
 choose:
 /usr/bin/kmailservice
 and set as default..should work now
 Disable middle click opening clipboard links

 change the value of
 middlemouse.contentLoadURL
 to False in about:config

**** skip compatabilty for ff4

in about:config create a new entry (boolean) with:
 extensions.checkCompatibility.4.0b
 and
 False
 [[~/Dropbox/Org/Tech/linux_files/Image_cTGTFAFKl1p7qNXTI3KxNw_0001.jpg]]
 and your all set

**** create own search plugin

The first thing you will want to do is point your browser towards the
OpenSearch plugin generator. This awesome utility allows you to create a
search plugin in he open search format that Firefox (and many other
browsers) use. This way you could search Firefox Facts without even
visiting the website first and typing your search into my search form.
The only hard part about this is locating the HTML source code that
represents the search box on the website. In Firefox, you can do this
fairly easily by right-clicking on a website, choose "View Source" and
then find where the form starts for the search box.
 [[~/Dropbox/Org/Tech/linux_files/2011-05-09-21-45-20-scrot.png]]
 Here is one more quick tip, if you hit "Ctrl + F" you can bring up the
search options in the webpage's view source pane. From there, search for
"form" until you find the right form you need. For webmasters, this
should be pretty easy. Now, for the easy part.
 On the OpenSearch plugin generator webpage, simply fill in the website
name, the website URL and then copy and paste in the form data you found
on the website you want to create the search plugin for. I would
recommend not changing the data for input encoding, plugin file name, or
favicon file name. Next, hit the big button labeled "Generate Plugin".
 The website will now give you the code you need to save on your own
website hosting server to make the search plugin work. Scroll down the
webpage, and make sure you follow each step as they have it.

**** bugs
***** Firefox hangs w/memory leak (example on ynet.co.il) 

Click the Adblock Plus icon and choose Filter Preferences.
Click the Custom Filters tab.
If you don't have any filter categories there, click the Add Filter Group button and create one.
If filters aren't displayed on the right side, right-click any filter category and choose Show/Hide Filters.
Click the Add Filter button and add the following filter:

#+BEGIN_EXAMPLE
||ynet.co.il/generator-article-.js 
#+END_EXAMPLE

That solved the problem when i tested. If it doesn't work for you, or it breaks site functionality, click the Adblock Plus icon and choose Disable on ynet.co.il. You will then of course see ads on the site.
**** remove lock after crash

Sometimes when you try to start Firefox, it warns you that Firefox is
already running. The message looks like this:
 Firefox is already running, but is not responding. To open a new
window, you must first close the existing Firefox process, or restart
your system.
 Usually, you can just kill the firefox process to solve this problem.
For example, on Linux the command "ps auxwww | grep firefox" will find
the process number and then "kill [processnumber]" will work fine. But
sometimes things are more horked than usual. That happened to me today,
surprise surpriseHere's how to fix the deeper problem:
 Step 1. Find your profile. This page tells you how
to[[http://kb.mozillazine.org/Profile_folder#Where_is_my_profile_folder.3F][find
the location of your Firefox profile]]. Under Linux (e.g. Ubuntu), it
will be at ~/.mozilla/firefox/[Profile name]/ .
 Step 2. Remove the lock files. This page tells
you[[http://kb.mozillazine.org/Profile_in_use][what the lock files are
for Firefox on Windows/Linux/Mac]]. Under Unix/Linux, you'll need to
remove two files "lock" and ".parentlock" .

*** vimperator
**** show bookmark bar

set guioptions+=B

**** guioptions

to get to it enter:
 :help guioptions
 to get menus back:
 se gui=noaddons,nobookmarks,nomenu,nonavigation,tabs
 Pasted from
<[[http://code.google.com/p/vimperator-labs/issues/detail?id=500][http://code.google.com/p/vimperator-labs/issues/detail?id=500]]>

**** Opening web pages

Open one or more URLs in the current tab.
 Multiple URLs can be separated with 'urlseparator' (default: ",")
 Note that the space after the comma is required.)
 The first URL is opened in the current tab, and all other URLs are
opened in new tabs. Each token is analyzed and in this order:
 
**** usefull keys

B- shows all buffers

**** searching

***** open ff search dialog

issue:
 :dialog searchengines

**** make scrolling with j/k faster

enter this in the vimperator rc file:
 map j 8<c-e>
 map k 8<c-y>

**** quickmarks

 go<key> opens a quickmark in the current tab
 gn<key> opens a quickmark in a new tab
 
 Retrieve a list of your quickmarks
 

To find what quickmarks you have created with which key,
 give the command :qmarks. This will give a list of all
 quickmarks.

***** Open a group of pages each in it's own tab

Create a quickmark that points to several URLs, seperated with a comma
(,):
 :qmark f URL1,URL2,URL3
 Now you can open these URLs, each in it's own tab, with the command:
 gnf

**** get to add ons

use shift+ctrl+a

**** tabs

***** MOVING BETWEEN TABS

If you have a couple of tabs open you can switch btwn them with gt and
gT, but if you have 5 or six tabs open:
 b + # of tab <Enter>
 The tabs numbers run from 1 starting from left to right.
 Example:
 So, if you want to move to tab #5:
 b + 5 <Enter>

***** reload all

reload all tabs:
 reloadall!

***** move to a tab number

to move to a specific tab (1,2,3 tec..) issue:
 [count]gt
 so to go to tab #3 youd issue:
 3gt

***** move to last tab visited

<c-6> or <c-\^>

**** bookmarks

***** To bookmark a site in a particular folder

 To bookmark a site in a particular folder with the toolbars on
 press the caps key and do Ctrl+d, you can also try
 :bmark <Enter>
 with the site open you want to bookmark.

**** restart FF using vimp

Restarting
 :res:restart:res[tart]
 Force Minefield to restart. Useful when installing extensions.
**** Macros
***** record a macro
To record a macro press ?q? then 'macro letter you want' and enter the keys you want to capture
when you finish press ?q? again.
***** launch a macro

issue ?@? and then the 'macro letter you choose'
₆In example₆ ?@o?      

you can also use counts    
@@[count]@@
        Replay the last executed macro [count] times.
**** movment

***** Jumping to elements

[[~/Dropbox/Org/Tech/linux_files/Image_rSlVlhc1m5I0Ywuh8AfBMw_0001.jpg]]

***** List all jumps aka current tab's history

:ju[mps]
 List all jumps aka current tab's history aka session history.

**** copy/paste

Copying text
 When running in X11, the text of the following commands is not only
 copied to the clipboard but is also put into the X11 selection, which
 can be pasted with the middle mouse button:
 y
 
 Yank current location to the clipboard. When running in X11
the location is
 also put into the selection, which can be pasted with the
middle mouse button.
 
 
 Y
 Copy currently selected text to the system clipboard.

**** Setting Minefield options

[[~/Dropbox/Org/Tech/linux_files/Image_.jpg]]

**** options

***** guioptions

[[~/Dropbox/Org/Tech/linux_files/Image_rWaLCENwwjyOhAlsgP3X7w_0001.jpg]]

***** menus and dialogs

[[~/Dropbox/Org/Tech/linux_files/Image_FSLhP1WPyOdgc_002.jpg]]
 [[~/Dropbox/Org/Tech/linux_files/Image_FSLhP1WPyOdgc.jpg]]

**** Hints

***** hint type

[[~/Dropbox/Org/Tech/linux_files/Image_dSpr63drSDwS66exqv2nLw_0001.jpg]]

**** pass through on google sites:

Enable passthrough mode on all Google sites:
 :autocmd LocationChange . js modes.passAllKeys =
/google\.com/.test(buffer.URL)
 Enable passthrough mode on some Google sites:
 :autocmd LocationChange . js modes.passAllKeys =
/(www|mail)\.google\.com/.test(buffer.URL)

**** open hints in background

use:
 ;F

**** passthough

***** one time action

press 'i' and then you get 1 time pasthourgh

**** show tab numbers

Tab numbers can now be set with
 :set tabnumbers
 (:set [no]tabnumbers)

*** ktorrent

**** fix php webmin issue in kubuntu

fix php webmin issue in kubuntu

 sudo apt-get install php5-cli php-pear
 then restart prog and the green light should be on

*** konqueror

**** Konqueror service menu tips

Konqueror service menu tips

 1. to make a action show in the main menu, add this to the desktop file
 X-KDE-Priority=TopLevel
 below the action entry. here is an example for a .desktop file
 [Desktop Entry]
 ServiceTypes=image/
 Actions=copyInGimp
 X-KDE-Priority=TopLevel
 [Desktop Action copyInGimp]
 Name=ZWork on copy in GIMP
 Icon=gimp
 Exec=gimp --as-new %U

**** make konqueror work with gmail

make konqueror work with gmail

 If you want GMail to load this interface by default, this is what you
have to do:
 - Open "Configure Konqueror..." on the settings menu.
 - On the tree view at the left side of the dialog, choose "Browser
identification", on the "Web browsing" group.
 - Add a new Site Specific Identification like this:
  When browsing the following site: mail.google.com
  Use the following identification: Mozilla 1.7.3
 Now you can access [[http://www.gmail.com][http://www.gmail.com]] from
Konqueror decently.
 Note: GTalk chat inside GMail doesn't seems to work.

[[http://forum.kde.org/showthread.php?tid=9036][http://forum.kde.org/showthread.php?tid=9036]]

**** Restore original Konqueror settings

Restore original Konqueror

 run this command from konsole:
 ln -s /usr/share/apps/konqueror/konqueror-orig.rc
~/.kde/share/apps/konqueror/konqueror.rc
 then logout and back in again

*** dropbox

**** Dropbox without Gnome

Dropbox without Gnome

 Dropbox, the 'it just works' file syncing service, released their Linux
client recently. Unfortunately, it has a heavy Gnome/Nautilus
dependency. If you don't use Gnome, you can get Dropbox to work without
that baggage with these steps:
 1. Download the closed source Dropbox Linux client from
[[http://www.getdropbox.com/download?plat=lnx.x86][http://www.getdropbox.com/download?plat=lnx.x86]]
(x86 64 for 64 bit)
 2. Extract the contents and you should get a .dropbox-dist folder
out of the archive. Move the folder to /home/zeltak
 3. Run ~/.dropbox-dist/dropboxd.
 The first time you run the dropboxd daemon, a wizard will prompt you to
configure the client for your machine. By default, Dropbox syncs the
contents of the ~/Dropbox folder and as long as the dropboxd daemon is
running, it will transparently sync that folder with your Dropbox
account. To ensure that the daemon runs whenever you use your computer,
just add a symlink to it in your ~/.kde/Autostart/ folder or equivalent
location.
 You don't actually need to do anything beyond that since it 'just
works'. But if you feel like getting hold of some of the info that the
Nautilus client provides, you can download this command line utility
that some kind soul has written. Hopefully, someone out there is working
on KDE integration even as I write this!
 The only thing that I am syncing right now with my Dropbox account is
my Firefox bookmarks and history information. Firefox 3 stores this data
in a file called places.sqlite which lives in the Firefox user profile
folder. On my work and home computers, I just moved this file to my
~/Dropbox folder and symlinked to it from the profile folder. It's been
working ok for me so far without any conflicts. Let's see if this turns
out to be a better solution than Weave which has never ever worked for
me.

[[http://antrix.net/journal/techtalk/dropbox_kde.html][http://antrix.net/journal/techtalk/dropbox kde.html]]
 


**** Sync Files outside Dropbox folder

Sync Files outside Dropbox folder

 On OS X or Linux, try the following:
 Use the ln command, for example:
 ln -s /path/to/desired-folder ~/Dropbox/desired-folder
 This works with files too:
 ln -s /path/to/desired-file ~/Dropbox/desired-file
 Another easy way to do this with Terminal is type the ln -s part,
then from Finder drag the folder/file that you want into the Terminal
window then drag the Dropbox folder and hit return.
 Note that an Alias file or folder does not work.
 On Windows:
 Use either the JUNCTION utility from Sysinternals, or the MKLINK
command built in to Windows Vista and Server 2008, for example:
 junction "C:\Documents and Settings\User\My Documents\My
Dropbox\DesiredFolder" "C:\Path\To\DesiredFolder"
 mklink /D "C:\Users\Steve\Documents\Dropbox\DesiredFolder"
"C:\Path\To\DesiredFolder"
 Or, if you prefer a GUI, install Link Shell Extension.
 [You could also] use SyncToy to echo changes from another folder to
your Dropbox folder. This keeps 2 copies on disk though.


**** Sync KeePass Passwords Across the Internet with Dropbox

Sync KeePass Passwords Across the Internet with Dropbox
We've already covered how to get up and running with KeePass once
before, so I won't go into a lot of detail. Assuming you've already
created your KeePass database, you need to move it to the Dropbox folder
so Dropbox can sync it over the internet. I just selected File -> Save
As, then pointed KeePass at my Dropbox folder. (Simple enough, right?)
Now on any other subsequent computer, just open KeePass (or KeePassX for
OS X or Linux users---which works just as well), select File -> Open
Database, and point it to the synced KeePass database file that you
added to your Dropbox folder. Assuming the step above went as planned,
this file should already have synced to the Dropbox folder on all of the
computers you want to sync passwords to. That's really all there is to
it. Any time you edit or create a new password on one computer, it'll
automatically sync to the other; all you need to know to access any of
your passwords is one master password. There's a small catch here:
KeePass doesn't automatically update your passwords when it's open, so
if you make a change on one computer and then make a change on the other
without re-opening the new database, you'll end up with a conflict.
Dropbox handles conflicts well---that is, nothing will break and it
alerts you of the conflict---but you may lose changes from one of your
computers.

*** quassel

**** Inital Setup for core-client

Inital Setup for core-client

 1)install the quassel-core package on the server side
 sudo apt-get install quassel-core
 after that run the core through the init script, issue
 sudo /etc/init.d/quasselcore start
 Note: This should start automatic when ubuntu boots up. to make sure
run:
 ls -l /etc/rc2.d/
 and see if there is a file pointing to /etc/init.d/quasselcore , should
look like
 lrwxrwxrwx 1 root root 27 2009-03-21 07:29 S20nfs-kernel-server ->
../init.d/nfs-kernel-server
 lrwxrwxrwx 1 root root 21 2009-06-23 22:09 S20quasselcore ->
../init.d/quasselcore
 lrwxrwxrwx 1 root root 15 2009-03-20 08:10 S20rsync -> ../init.d/rsync
 after the core is connected go to the PC with GUI you want to connect
to the core and install quassel-client (not the default combined client
that ships with kubuntu)
 sudo apt-get install quassel-client
 then launch the client from the kubuntu menu, it wont connect but offer
a wizard, launch it.
 create a user and password, enter the server (core) IP and add channels
and your good to go!

*** sopcast

**** Sopcast on linux

Sopcast on linux

 This guide will help you install sopcast on Ubuntu 7.10 Gutsy. It will
also help you get a special modified version of the GUI running and
setup firefox to send sop:// links to the program.
 Installing packages
 Make sure you have all universe and multiverse repositories switched
on. Then, in terminal:
 sudo apt-get install qt3-apps-dev vlc build-essential
 Downloading the latest SopCast binary
 Link: Sopcast ix86 binary
 Unzip it and cd into that directory using terminal. Then run:
 sudo cp sp-sc-auth /usr/bin/sp-sc
 Downloading and building the latest GUI
 Download this specially modified source package. I have added URL
handling.
 Link: RKMOD version of QSopCast
 Again, unzip it and cd into that (src) directory using terminal. Then
run
 sudo qmake
 sudo make
 sudo make install
 This should compile the source and install the binary into the correct
location.
 Creating a menu shortcut
 Go to System / Preferences / Main Menu... then 'Internet' and 'Add New
Item'. Give it the name "QSopCast" and command "qsopcast". You should
now be able to launch from the main menu.
 Setting up the GUI
 Once the gui is open, goto config then config again. Make sure that the
player settings are all set to "vlc" and that the channel URL is set to
"[[http://www.sopcast.com/gchlxml][http://www.sopcast.com/gchlxml]]"
 You should now be able to watch sop casts by selecting a channel,
launching it and then hitting player when the stream is at 100%
 Firefox sop:// URLS
 Go into firefox and enter URL: "about:config". Right click, select new
and string. The string name is "network.protocol-handler.app.sop" and
the value is "qsopcast". It should now send sops to the modified version
of QSopCast ready to be launched.

**** launch manually

sp-sc "STREAM URL" 3908 8908 &
 
 then issue:
 
 vlc "[[http://localhost:8908]]"

*** pentadacytl
**** quick keys
go to the insert ares > gi
**** open link in succesion in background

g;b

**** make new tabs open in forground

when using the :t option it FF defaults to open in the background. if
you want it to open in the foreground use the build in FF options or a
tab manager extension to change that

**** select all

select all in using penta:
 <C-v><C-a> 
 (press control-v for passthrough and then ctrl-a as usuall)

**** create a custom shortcut

add a line in your .pentadactlyrc and add a command:
 map KEY <COMMAND>
 for example:
 map tt <End>

**** quickmarks
***** add a bunch of sites to one quickmark

to add a bunch of sites to one quickmark issue the following command:
 :qmark 9
[[http://www.walla.co.il/][http://www.walla.co.il/]]|[[http://www.ynet.co.il/][http://www.ynet.co.il/]]|[[http://www.nrg.co.il/][http://www.nrg.co.il/]]
 note that each website is seperated by a |

**** make a site always load with passthrough

make a site always load with passthrough, here is google reader as an
examle:
 au LocationChange 'google\.com/reader' -js
modes.set(modes.PASS THROUGH)

**** passkeys

passkeys are used to pass certain keys through directly for the given
URLs.
 IE:
 :set passkeys+=https://mail\.google\.com/:jk<Return>
 or an example i use for greader:
 set passkeys+='google\.com/reader':jkvnpbumoAXNOVPJK?gehtl<Return>

**** abbriviations
***** input mode abbriviations
 use the follwing in your pentarc
to expand them enetr the abbrivition and press ctrl+]
**** Tabs
***** get the bookmark menu to open in a new tab

issue this in the penta CLI:
 bmark -title='Bookmark Library'
chrome://browser/content/places/places.xul -k bookmarks
 then to open the bookmark above in a new tab issue:
 :open bookmarks

***** open in new tab (add on options)

use this commad:
 :extopt ADDONNAME
 IE
 :extopt LastPass

***** pin tabs

use:
 :pintab
 or to unpin
 :unpintab

**** Hints
***** use hints in penta menus

MOW : Multi-line Output Widget (or Window)
 In case you've not used :bmarks or :addons in recent nightlies (or when
installing from the repository) these two very useful commands make use
of MOW. If you're just now testing these functions after calling them
enter into a hint mode. If you've just used :bmarks, press ;t to open
the extending tabopen hints and notice that the titles of your bookmarks
(on the right) are now accessible via hint tags. If you've used :addons,
press f to see that you can turn addons [On] or [Off] as well as access
their options [Opt], delete them [Del] or update them [Upd].
 These aren't the only commands though that use this, in my humble
opinion, powerful capability. Others include:
 :history
 :buffers (or B) (or :ls)
 :jumps
 :listcommands
 :listkeys
 :listoptions
 :pageinfo

***** map keys to get up/down movment in hints mode
you can add this do you pentarc
 map -m hints j -ex normal! j
 map -m hints k -ex normal! k
 map -m hints <C-f> -ex normal! <C-f>
 map -m hints <C-b> -ex normal! <C-b>
 map -m hints gg -ex normal! gg
 map -m hints G -ex normal! G
 i usually just used the first 2 lines

***** allow letters to be used as hints
use this in the pentarc
#+BEGIN_EXAMPLE
set hintkeys=fdsaghjklwertyuiovbcnm
#+END_EXAMPLE

For more Vimium-like highlighting:

highlight -a Hint text-transform: uppercase; padding: 0 2px 0 1px;
background-color: yellow; font: bold 11px "Droid Sans Mono";
highlight -a HintElem background-color: transparent;r

**** keymaps

***** map a bookmarklet using bookmark keywords

first bookmark a page/bookmarlklet and give it a keyword
 you can do it either via gui:
 [[~/Dropbox/Org/Tech/linux_files/2011-06-12-13-25-54-scrot.png]]
 
or via the penta command line:


:bmark -keyword foo URL/URI

 then use a normal map URL command to launch the bookmarklet:
 map eg :open gmt<CR>
 where:
 eg is the shortcut (press e then g)
 gmt is the bookmark keyword

***** Mapping javascript

I read a significant amount of RSS feeds and often if I open a story in
a new tab it is with the intent to share the link with others. This
becomes annoying when sites like Slashdot, Ars Technica and other
websites I frequent use tracking scripts that add things like
'?utm source=rss&utm content=..." which make the URL far too long and
unruly. In the past I've used O (Shift-o), entered text-edit mode (\^t)
then visual mode (v) used F (Shift-f) and'?' to delete the tracking
information. This morning I created this function at the commandline and
later put it in my pentarc
 javascript <<EOF
 function utm trimmer (url) {
 var utm = url.indexOf('?utm');
 if ( utm > 0 ) {
 url = url.substring(0, utm);
 dactyl.clipboardWrite(url, true);
 }
 }
 EOF
 Admittedly it's simplistic but it does the job (so far). With that done
I then added one extra line to my pentarc:
 map -g user <Leader>y -js utm trimmer(buffer.URL)
 and now I just press \y (because I currently have mapleader set to '\')
and it runs the function which takes away the tracking section and
copies the URL to my clipboard.

***** map special keys (-,= etc)

use either:
 :map -b '-' <C-p>
 or
 :map -ex '-' :tabprevious
 note: in the config file dont use the ':'

**** bookmark keywords

one could assign bookmark keywords to ff bookmarks and then launch it
via a penta keymap:
 map eg :open gmt<CR>
 where:
 eg is the shortcut (press e then g)
 gmt is the bookmark keyword

**** sync between linux and windows

this world very similar to vim syncing (with a few exceptions)
 in windows under the home directory create a empty pentarc file:
 c:\Users\ekloog\ pentadactylrc

 in that file source thesynced rc file (but make sure that you adress
the spaces:
 source c:/Users/ekloog/Documents/My\
Dropbox/multisync/penta/.pentadactylrc
 its advisable to manually sync the .pentadactyl dir since auto sync
 could casue issues

**** reload config
use the ':rehash' command
**** Gui elements
***** list of elements

use in penta 
:help 

#+DOWNLOADED: /tmp/screenshot.png @ 2014-08-16 08:47:27
#+attr_html: :width 300px

 [[/home/zeltak/org/attach/images_2014/screenshot_2014-08-16_08:47:27.png]]

***** hide elemetns
put the elements you want to hide ($Note$ the '-' sign) like this
#+BEGIN_EXAMPLE
set guioptions-=br
#+END_EXAMPLE
***** show elemetns
put here elements to show like this $Note$ the '+' sign 
#+BEGIN_EXAMPLE
set guioptions+=nrBT
#+END_EXAMPLE

***** color themes
To install this color scheme, copy it into your ~/.pentadactyl/colors folder, creating it if it doesn't exist:
#+BEGIN_SRC sh
$ mkdir -p ~/.pentadactyl/colors
$ cp solarized-.penta ~/.pentadactyl/colors/.
#+END_SRC

Then change your default theme by adding the following to your ~/.pentadactylrc

#+BEGIN_EXAMPLE
colorscheme solarized-light
#+END_EXAMPLE

**** Mapping javascript
So yesterday I decided to also look into the rest of the flags that could be used for mapping new keys. One of them is -js which allows you to execute some snippets of javascript or a javascript function you defined at the commandline or in your .pentadactylrc.

I chose to do both since I wanted to test my simple function and had been meaning to make this for a while.

I read a significant amount of RSS feeds and often if I open a story in a new tab it is with the intent to share the link with others. This becomes annoying when sites like Slashdot, Ars Technica and other websites I frequent use tracking scripts that add things like '?utm_source=rss&utm_content=..." which make the URL far too long and unruly. In the past Ive used O (Shift-o), entered text-edit mode (^t)
then visual mode (v) used F (Shift-f) and '?' to delete the tracking information. This morning I created this function at the commandline and later put it in my pentarc

#+BEGIN_EXAMPLE
    javascript <<EOF
    function utm_trimmer (url) {
        var utm = url.indexOf('?utm');
        if ( utm > 0 ) {
             url = url.substring(0, utm);
             dactyl.clipboardWrite(url, true);
        }
    }
    EOF
#+END_EXAMPLE

Admittedly it's simplistic but it does the job (so far). With that done I then added one extra line to my pentarc:

#+BEGIN_EXAMPLE
map -g user <Leader>y -js utm_trimmer(buffer.URL)
#+END_EXAMPLE

and now I just press \y (because I currently have mapleader set to '\') and it runs the function which takes away the tracking section and copies the URL to my clipboard.

*** sabnzbd

**** python error

If you get the python error:
 sabnzbd
 File "/opt/sabnzbd/SABnzbd.py", line 20
 print "Sorry, requires Python 2.4 or higher."
 Just amend the startup script:
 nano /usr/bin/sabnzbd
 Change
 python /opt/sabnzbd/SABnzbd.py -f $HOME/.sabnzbd.ini "$@"
 To
 python2 /opt/sabnzbd/SABnzbd.py -f $HOME/.sabnzbd.ini "$@"

*** Uzbl

**** scipt to use dmenu for dl

dl Lich's download script for UZBL

[[http://www.uzbl.org/wiki/lich-download.sh][http://www.uzbl.org/wiki/lich-download.sh]]
 then edit it and change
  awk '{print $8}'`
 to
 awk '{print $9}'`
 and add the -l 20 option to make dmenu vertical:
 SELECTION=`echo -e -n "$SAVE\n$CANCEL\n$UP\n$DIRLIST" | dmenu -nb
"$BGCOLOR"
 to
 SELECTION=`echo -e -n "$SAVE\n$CANCEL\n$UP\n$DIRLIST" | dmenu -l 20
-nb "$BGCOLOR"
 then in the uzbl config file enter this:
 # Download handler
 #@on event DOWNLOAD REQUEST spawn @scripts dir/download.sh %s
\@proxy url
 @on event DOWNLOAD REQUEST spawn
$XDG DATA HOME/uzbl/scripts/lich-download.sh

**** make everything open in new tab

1)for regular links:
 make sure only this line is uncommented in the dynamic event section
 # === Dynamic event handlers
=================================================
 # Open link in new window
 #@on event NEW WINDOW sh 'uzbl-browser ${8:+-u "$8"}' %r
 # Open in current window
 #@on event NEW WINDOW uri %s
 # Open in new tab
 @on event NEW WINDOW event NEW TAB %s
 2)for hints
 dl the following script (follownew.js) from:

[[http://www.uzbl.org/wiki/follow_numbers_new_tab][http://www.uzbl.org/wiki/follow numbers new tab]]
 and add this to the uzbl config
 set javascript windows = 1
 @cbind F = script @scripts dir/follownew.js '@follow hint keys %s'

**** Use firefox bookmarks in Uzbl and set Bookmarks page as Home page

Use firefox bookmarks in Uzbl and set Bookmarks page as Home page
 First export your bookmarks to a html page:In Firefox, Bookmarks,
Organize Bookmarks, Import and Backup and Export Html; this will produce
a html page in /home/user/.
 Now open the uzbl config file.
 This can be according to your setup at different places; on my Arch it
is in /home/paul/.config/uzbl
 Find uzbl. org till you discover:
 # --- Hard-bound bookmarks ---
 @cbind gh = set uri = [[http://uzbl.org][http://uzbl.org]]
 change to:
 @cbind gh = set uri =
[[file:///home/paul/bookmarks.html][file:///home/paul/bookmarks.html]]
 and find:
 menu add Go Home = set uri = [[http://uzbl.org][http://uzbl.org]]
 and change to:
 menu add Go Home = set uri =
[[file:///home/paul/bookmarks.html][file:///home/paul/bookmarks.html]]
 So in the cmd mode (when you want to type do i; when returning to cmd
do Esc, like in Vi) type gh to get to your bookmarks.
 Or right click and choose: go home.

**** bookmark with tags for folders



This allows you to organize bookmarks as if they are in folders by
 allowing you first to select through dmenu the tag, then bookmarks with
 that tag. It currently does not support multiple tags and it does not
 currently support bookmarks without tags. I will try to resolve this
 soon. Note: I did this assuming your dmenu was not vertical.

#!/bin/bash
 #NOTE: it's the job of the script that inserts bookmarks to make sure
there are no dupes.

file=${XDG DATA HOME:-$HOME/.local/share}/uzbl/bookmarks
 [ -r "$file" ] || exit
 COLORS=" -nb #303030 -nf khaki -sb #CCFFAA -sf #303030"
 DMENU="dmenu -i"
 TAG=`cat $file | awk '{print $2}' | sort -u | $DMENU -nb \#303030 -nf
khaki -sb \#CCFFAA -sf \#303030`
 goto=`grep $TAG $file | awk '{print $1}' | $DMENU $COLORS`
 [ -n "$goto" ] && echo "uri $goto" | socat - unix-connect:$5

 Pasted from
<[[http://www.uzbl.org/wiki/bookmark_with_tags_for_folders][http://www.uzbl.org/wiki/bookmark with tags for folders]]>

*** transmission
**** transmission in arch

Configuration
 For transmission-gtk and transmission-qt, the default path of
configuration files is ~/.config/transmission.
 For transmission-cli, default configuration path is
~/.config/transmission-daemon.
 If you use systemd, you have to override the user in both the service
file (/usr/lib/systemd/system/transmission.service) and the tmpfile
(/usr/lib/tmpfiles.d/transmission.conf). To do so, copy both files to
the appropriate directory in /etc:

 cp /usr/lib/systemd/system/transmission.service /etc/systemd/system/
 cp /usr/lib/tmpfiles.d/transmission.conf /etc/tmpfiles.d/

 Create a new group named for example, transmission:
 warning: This may already exist

 groupadd transmission

 Add your custom user to the newly created [group] ie. transmission:

 gpasswd -a [user] [group]

 ie:

 gpasswd -a zeltak transmission

 Then change User= to your custom user in the service file by editing
/etc/systemd/system/transmission.service
 [Service]
 User=zeltak
 Type=forking
 PIDFile=/run/transmission/transmission.pid
 ExecStart=/usr/bin/transmission-daemon --pid-file
/run/transmission/transmission.pid
 edit the tmpfile by editing etc/tmpfiles.d/transmission.conf default
is: d /run/transmission - [user] [group] -
 to
 d /run/transmission - zeltak transmission -
 Then run

 systemd-tmpfiles --create transmission.conf

 enable the transmission service.

 systemctl enable transmission.service

 change permissions to 777 on folder '/run/transmission'.

 sudo chmod 777 /run/transmission

**** transmission in debian
install these packages
transmission-cli - A collection of cli tools for transmission.
transmission-remote-cli - A BitTorrent Client using a curses interface for accessing the daemon.
transmission-daemon - A BitTorrent daemon using a web interface.
also only if using gui:
transmission-gtk - A BitTorrent Client using a GTK interface.
transmission-qt - A BitTorrent Client using a QT interface.

Currently transmission overwrites the settings.json configuration file on exit. The daemon can be instructed to reload the config with a SIGHUP, or service transmission-daemon reload Otherwise changes made manually to the file while the daemon is running will be silently overwritten on exit.

for running as root:
The transmission-daemon can be configured by editing /etc/transmission-daemon/settings.json.

~for running USER and gui:~

The transmission-gtk and transmission-qt clients can be configured via the application or via ~/.config/transmission/settings.json.
Connecting to daemon

!important-its easier to just run transimssion as USER ₆In Example₆:
#+BEGIN_SRC emacs-lisp :results none
transimssion-deamon
#+END_SRC

instead of the init scripts that run as root


Web Interface

Once the daemon is running, it can be accessed from your web browser by pointing it at http://127.0.0.1:9091 or the address for your server (once you have whitelisted the IP range).

curses cli tool

The curses interface can be accessed via the terminal using:

# transmission-remote-cli -c username:password@127.0.0.1

replacing username:password and IP address with your settings.
**** curses interface

[[~/Dropbox/Org/Tech/linux_files/attach/transmission-remote-cli.py][Attachment #17
(transmission-remote-cli.py)]]
 install the :
 transmission-remote-cli-git
 and then issue:

 transmission-remote-cli

 [[~/Dropbox/Org/Tech/linux_files/Image_wy96fqyeAXEfcH2XP1ZWVw_0001.png]]
 under arch you may need change the first line to point to python2

**** add watch folder


 2. edit /share/Apps/Transmission/.transmission/settings.json and add
the following two settings (be careful to add commas at the end of the
lines as needed):
 "watch-dir": "/share/Download/ watch",
 "watch-dir-enabled": true
 3. start transmission

**** set privacy

Open [[http://www.transmissionbt.com/download.php][Transmission]] and
click on Edit > Preferences (Linux) or Transmission > Preferences (Mac
OS). Then click on the Privacy tab (Linux) or the Peers tab (Mac OS).
 [[~/Dropbox/Org/Tech/linux_files/Image_qaly7AtKstHeRBR3bmE6jQ_0001.png]]
 Under the "Encryption mode" dropdown box, select Prefer encryption.
This will still accept unencrypted connections when there is a lack of
encrypted connections available.
 open ports
 In Transmission, open up the app's preferences and head to the Network
pane. Check both the Randomize Port on Launch and Automatically Map Port
boxes. If you see that the light next to the port's number goes from red
to green, then you've successfully opened your current port to
BitTorrent traffic, and you should notice a good increase in speed.
 Note that for best results, you'll want to make sure your router is
UPnP capable and has UPnP enabled. Most routers are UPnP ready, but if
you find that you're having trouble, you may need to look at your
router's manual and settings page to enable its use.

**** command line

The first thing to do is tell the daemon where to store its socket
file:
 transmission-daemon -s ~/.transmission/daemon/
 The daemon is controlled through a remote program. Before adding any
torrents it would be a good idea to set some preferences. The command
for my setup looks like this:
 transmission-remote -DU -c required -p [port] -f [path to download
location]
 The -DU options set the download and upload speeds to unlimited. To set
these to limited instead, swap the letter for its lower case version
followed by a number of KBps. For example, "-d 50 -u 20" would set the
max download speed at 50KBps and the upload speed at 20KBps. The -c
option refers to encryption. The required keyword means that all peers
are required to use encryption. Exchanging this for preferred means that
peers with encryption will be preferred, but not required. The -p option
sets the port to operate on. This should be the port number that is open
on your router for BitTorrent connections. Instead or in addition to
this, you can enable
[[http://en.wikipedia.org/wiki/Universal_Plug_and_Play][UPnP]] mapping
with the -m option. This will only work if UPnP is enabled on your
router. This is turned off with the -M option. The -f option will set
the location where newly added torrents are downloaded to. For example,
"~/Downloads/" will store all downloaded files in a directory called
Downloads, located in your Home directory.
 To add a torrent to the daemon, use this command:
 transmission-remote -a [path to file].torrent
 Start all torrents:
 transmission-remote -s all
 Stop all torrents:
 transmission-remote -S all
 Start a specific torrent:
 transmission-remote -s [hash]
 Stop a specific torrent:
 transmission-remote -S [hash]
 Remove all torrents:
 transmission-remote -r all
 Remove a specific torrent:
 transmission-remote -r [hash]
 Get hashes for all torrents:
 transmission-remote -iList all torrents with status:
 transmission-remote -lQuit the daemon:
 transmission-remote -q
 Pasted from
<[[http://blog.zloether.com/2009/03/command-line-bittorrent-with.html][http://blog.zloether.com/2009/03/command-line-bittorrent-with.html]]>

**** config file

Note: Before editin always stop transmission (with systemctrl stop)
 Note: always end a config line with a "," unless its the last line!!
 Rpc formatting:
 {
 "rpc-enabled": true,
 "peer-port" : 51413,
 "rpc-whitelist": "127.0.0.1,192.168.."
 }
 add watch folder
 "watch-dir": "/share/Download/ watch",
 "watch-dir-enabled": true

*** box.net

**** mount box.net through davfs

 install davfs2 (aur or apt-get etc.)
 issue the following command to edit the box.net account

sudo echo https://www.box.net/dav USERNAME PASSWORD >>
/etc/davfs2/secrets

 Where USERNAME PASSWORD is your own password
 
 create a mounting dir

sudo mkdir /media/box.net

 added the following to /etc/fstab
 https://www.box.net/dav /mnt/box.net davfs
rw,suid,dev,exec,noauto,nouser,async,uid=USERID,gid=GROUPID 0 0
 TIP: To find the uid and gid see [[#IgXWFVAuPkznznJwqqixjw][here]]
 NOTE: this will bot be automounted since if there is no network
connection it could screw things up
 change the permissions (before you mount) on the to-be-mounted folder:

sudo chmod -R 777 /media/box.net

 Now to have have it mounted issue:

sudo mount /mnt/box.net

**** mount box.net with fuse

install boxfs:
 [[http://code.google.com/p/boxfs/][http://code.google.com/p/boxfs/]]
 use the following command to mount it:
 boxfs -u USERNAME -p PASSWORD /home/zeltak/mounts/boxnet
 IE:
 boxfs -u zeltak@gmail.com -p salar21 /home/zeltak/mounts/boxnet
 now i can use it as a file system

*** deluge

**** remote connect

to be able to remote connect first setup authentication:
 The daemon looks at the file <config folder>/auth for doing
authentication.
 The format of this file is straightforward, each line contains a
username:password:level tuple in plaintext.
 There should always be a 'localclient' entry for use by the UIs running
locally by your user.
 Note: If you do not have an auth file in your config folder, first run
the daemon to have it created for you.
 Deluge 1.2.0 introduces different levels of authentication:
 Level Name Level Value
 None 0
 Read Only 1
 Normal 5
 Admin 10
 Note: Currently, authentication levels aren't used for much but will be
in the future.
 Example of an auth file:
 localclient:a7bef72a890:10
 andrew:password:10
 user3:anotherpass:5
 Example of adding a new user under Linux:
 echo "username:password:level" >> ~/.config/deluge/auth
 From the GtkUI, you will have to add the host with a username and
password, if you don't do this, you won't be able to connect to the host
or tell if it's online.

*** P2P

**** deluge

***** web interface

Web ui

The Web-ui runs on the server and the clients only need a Web-Browser.
 You need to install python2-mako on the server:

# pacman -S python2-mako
 start the web ui daemon:

rc.d start deluge-web

 and login in on
[[http://deluge-machine:8112][http://deluge-machine:8112]].
 Where 'deluge-machine' is name of your deluge server or its private or
public IP address. When asked for a password, enter "deluge" as it's the
default password.
 The preferences in the web ui should be rather self explanatory and the
first obvious thing to do is to change your password.
 As usual, you should add the daemons to your /etc/rc.conf:
 DAEMONS=( ... network deluged deluge-web ... )
 Just make sure your network connection is up at the time you start
either of those Deluge daemons.

*** dwb
**** bypass default keyboard shortcuts on specific sites

[[~/Dropbox/Org/Tech/linux_files/attach/auto_insert_greader][Attachment #18
(auto insert greader)]]
 bypass default keyboard shortcuts on specific sites :
 if one enters insert-mode (default key 'i') all keys will be ingnored
apart from ESC which will exit insert mode and re-enable all shortcuts.
 one can also used attached script to auto enter insert mode in specific
sites

**** private browsing

if you want to set enable-private-browsing on startup you can:
 1.enable it with

 dwb -x "set enable-private-browsing true"

 
 2.you could create a profile for private browsing and launch dwb with
that profile
 3.enable globally in settings for you profile
 4.add a hot key custom command to turn on off
 xpp:toggle enable-private-browsing
 Note: you can adjust the color of private browsing mode in
settings>color

**** Command line/search history

Dwb remembers the commands and searches history between sessions
 Using the default keys Ctrl-j and Ctrl-k one can move back/forward in
the dwb CLI history
 the default keys can be changed in the settings under keys

**** pinned (locked/protected) tabs

you can create pinned like tabs if you have single-instance enabled
and you save your session.
 issue

 :protect

 In addition you can also lock a tab to a domain with (default key xd
or issue in the command line full command: lock domain)

 :lock

 so IE if your first tab is gmail and you lock the first tab to gmail
after a restart it will again come up with gmail and it will still be
locked
 a protected tabs is indicated with a red number while a locked tab has
a 'd' on the bottom status bar

**** custom keys

some tips regarding setting custom keys:
 -Backspace is hardcoded, you can only map backspace if you use a
modifier
 -You cant map specific key that are not in the setting page
 -Make sure extensions are not using these keys or they are not
hardcoded (like backspace)
 -you can add your own command at the bottom of the keys section (see
custom commands page)

**** Custom commands

Custom commands
 Custom commands can be defined in the following form:
 [shortcut]:[command];;[command];;...
 IE:
 y:yank;;yank primary
 xpp:toggle enable-private-browsing

**** define default search engine

define default search:
 the default search engine will always be the first search engine you
have on the seacrh engine list.

**** extensions
***** extensions

extensions are installed through the command line with the following
command:

 dwbem -i EXTENSION NAME

 There are several other options which include:
 -a, --list-all List all available extensions
 -b, --bind When installing an extension use extensions.bind instead
of extensions.load
 -B, --setbind=<extension> Edit configuration, use extensions.bind
 -c, --config=<extension> Show configuration for <extension>
 -d, --disable=<extension> Disable <extension>
 -e, --enable=<extension> Enable <extension>
 -E, --edit=<extension> Edit configuration with EDITOR
 -i, --install=<extension> Install <extension>
 -I, --info=<extension> Show info about <extension>
 -l, --list-installed List installed extensions
 -L, --setload=<extension> Edit configuration for <extension>, use
exensions.load
 -n, --no-config Don't use config in loader script, use extensionrc
instead
 -N, --no-confirm Update extensions
 -r, --remove=<extension> Remove <extension>
 -p, --proxy HTTP-proxy to use
 -u, --upgrade Update all extensions
 -U, --update=<extension> Update <extension>
 editing of the options is done in an editor with the -E switch

***** autoquvi

must install quvi to use extension

***** DL handler

install the extension downloadhandler
 edit config:
 handler : [
 // Each handler must have 2 or 3 properties:
 //
 // command : command to execute, must contain %f which will be
replaced with
 // the filepath, this property is mandatory
 //
 // extension : a filename extension, optional
 //
 // mimeType : a mimetype, optional
 //
 // { command : "xpdf %f", mimeType : "application/pdf" }
 // { command : "xdvi %f", extension : "dvi" }
 { command : "mv %f /home/zeltak/Downloads/pdf", mimeType :
"application/pdf" }
 ]
 add commands as needed in the format commented above. the above configs
moves all pdf files to a specific location

**** userscripts
***** create userscript

Userscripts can be stored in ~/.config/dwb/userscripts.
 The first argument of the script will be the current url, the second
argument is the title, the third argument will be the profile name, the
fourth argument is the numerical modifier and the fifth argument is a
commandline argument.
 Also the variables DWB URI, DWB TITLE,DWB PROFILE, DWB NUMMOD,
DWB ARGUMENT, DWB REFERER, and DWB USER AGENT are set.
 The keybinding for the script must be defined in the script itself in a
commented line of the form
 <comment symbols> dwb: <keybinding>.
 dwb also provides a small javascript api, scripts that use the api must
have the special shebang #!javascript, for details see:
 

[[http://portix.bitbucket.org/dwb/resources/jsapi.html][http://portix.bitbucket.org/dwb/resources/jsapi.html]]

!Note: Dont forget to make the script executable- other wise it will not run!

In example:

to add the current title and URL to task warrior:



#+NAME: dwb script example
#+BEGIN_SRC sh
#!/bin/bash
# dwb: xtw
task add +DL $DWB TITLE $DWB URI
#+END_SRC

where, the 2nd line is the shortcut (xtw)
and then the command followed by the dwb variables
**** tabs
***** Move tabs
issue the tabm command plus position (starting from '1') to move tabs around.

there is also a tab_move_left/right commands

these are all configurable with binds in the keys page
**** save a page (:download)

To save a page in dwb (IE the 'save page as' function in FF/chrome) one
can used the :download command:

 :download<FILENAME>

 ie:

 :download script.txt

 then as in any download you can select a path to download to

**** Errors

***** dwb dosent save command/search history, passwords etc between
sessions

make sure private browsing isnt enabled

***** pages dont load/come on gray

disable the enable-accelerated-compositingoption

***** dwb dosent remeber passowrds

make sure cookies are set to persistent

**** To debug crashes etc in dwb

To debug crashes etc in dwb
 issue this command :
 curl
[[https://bitbucket.org/portix/dwb/raw/tip/tools/backtrace.sh][https://bitbucket.org/portix/dwb/raw/tip/tools/backtrace.sh]]
| sh |
 this will start dwb in debug mode
 the log will be avilable here:
 the log is under /tmp/DWB DEBUG <UID>/gdb.log

**** dwb is slow and freezes evert few seconds

if dwb is slow and freezes evert few seconds, on these specific webpages
issue:

 sanatize cookies
*** cvim
**** disable specific keybinds in sepcific websites
for gmail one might have something like this:
#+BEGIN_EXAMPLE
let blacklists = ["https://mail.google.com/ gi gt x r f"]
#+END_EXAMPLE
that would disable keys gi, gt, x, r, and f on gmail.
 
**** using gist
you only edit the gist on the github website
₆In example₆ https://gist.github.com/zeltak/287a9f894d3c06a7568a

then you add the above adress to the cvim setting, save and press sync

** multimedia
*** filebot

**** rename and move

use this in the renaming function
 /media/raid/Videos/TV/{n}/Season {s}/{sxe} - {t}

**** Force a series name

In the CLI you can force the series/query via the --q option.
 In the GUI there is two ways:
 1. SHIFT-CLICK the datasource to force manual series/query input
 2. Fetch episode list in "Episodes" panel and than drag-n-drop
everything to the "New Names" list
 btw if there's a nfo file with imdb link or thetvdb link FileBot will
pick that up as part of the series name auto-detection in both CLI and
GUI.

*** Archive

**** banshee

***** Banshee music library location

Banshee music library location

 It is ~/.config/banshee/banshee.db

*** gmusicbrowser

**** layouts

***** Buttons

***** button to change to a specific layout

use this code:
 Button3(stock=gmb-layout-switch,click1=SetPlayerLayout(Z Editor))
 where
 SetPlayerLayout is the command and(LAYOUTNAME) is the name of the
layout to switch to

 NOTE: if you want to open a new window (as opposed to change layout
use:
 OpenCustom(NameOfLayout)


***** add empty button

use this
 Button7(stock=gmb-random-album)
 where 7 is the button number and stock=ICONNAME

***** Tips

***** add line seperator

for a veritcal separator:
 VSeparator1

***** find plugin names

look for RegisterWidget in the plugin.pm fileif they are in a plugin
 all other widgets are defined in gmusicbrowser layout.pm

***** components

Vertical separator
 [[~/Dropbox/Org/Tech/linux_files/Image_hWjyY7INO5HMt6Qh854YAQ_0001.png]]
 Horizontal seperator
 [[~/Dropbox/Org/Tech/linux_files/Image_hWjyY7INO5HMt6Qh854YAQ_0002.png]]

***** keybinds

***** in layout file

use this:
 KeyBindings = c-p OpenSearch c-l SetFocusOn(HBLyrics)
 where c-p is the keycombow
 also some plugins are within containers so you could use a syntax like
this:
 SetFocusOn(Context/PluginLyrics)

***** via dbus

one can use dbus to send command either throught the CLI or kde hotkeys
 dbus-send --dest=org.gmusicbrowser /org/gmusicbrowser
org.gmusicbrowser.RunCommand string:COMMAND
 where COMMAND is any command through the GMB command list, use this to
view the full command list:

musicbrowser -listcmd

***** tabs

***** add icons to tabs

use the tabicon example:
 HBplaylist = (tabtitle= "Playlist",tabicon="gmb-list")
 NOTE: may not work with NB (as opposed to VB), ask squentin

***** Tab position

use the tab position option IE:
 NBSidebar1 = (tabpos=left90,typesubmenu='PC') \
 where:
 you can choose left/right/top/bottom of the pane
 and adjust the degree '90' or '0'

***** tabbed interface with no tabs shwoing

use this code:
 NBleft = (hidetabs=1) VPfp PluginLyrics HPfpmosiac HPfplibrary
VPfpgen VPfpfolder

***** icons

***** queue icons

to change the queue icon based on current function use this:
 stock="noqueue:gmb-queue-on" "queue:gmb-queue-delete"

***** text

***** add simple text field

you can create a new text only entry with Text()
 NOTE: though currently there is no "smart" syntax, so the () will be
there even if no year

***** packing size

***** examples

maxsize=350
 or
 PluginLyrics(minwidth=450)

***** seek bar

***** Timebar

TimeBar(text="$current", font=3)
 $percent, $current, $left, $total
 TimeBar(text="%t by %a ($total)")

**** lyrics

***** put lyrics in the same folder as the current song

[[~/Dropbox/Org/Tech/linux_files/Image_GzcMx3RFfveRZyGobQEPaQ_0001.png]]

**** get current song info

[[~/Dropbox/Org/Tech/linux_files/attach/currentsong.pl][Attachment #19 (currentsong.pl)]]
 use attached pearl script that uses d-bus

**** Search

***** examples

SimpleSearch : add support for "smart" search syntax
 Examples of the new syntax :
 string1 OR string2 | string3
 title:"search string"
 title:'with "quotes"'
 title|artist:string
 title:string|otherstring
 title~a.regular.expression
 !title:negationwith! -title:negationwith-
 title:string1 OR artist:string2
 rating>60
 rating=60
 rating=40..80
 lastplay:Mon
 lastplay~Mon.22:..:.2008
 improve support for date range in SimpleSearch
 these searches will now work :
 added=2011-01-01..2011-01-31
 added=20d-40d
 lots of filter-related changes, in particular fix filter
edition/desc...
 ...ription
 - rewrite of the single-filter edition widgets
 - rewrite of the filter description system
 - new function to determine if a filter is a subset of another,
 used to replace messy old optimization in SimpleSearch
 - some backward-incompatible changes to the internal filter syntax,
 bump version to 1.1.7.1 because of these
 - improvements to SimpleSearch syntax :
 - supports nesting using parentheses
 - lastplay>1d now means last played more than one day ago rather than
the inverse
 - better support for dates, like lastplay>2007
 - other small things
 - the SimpleSearch syntax is now externalized so that it can be used
elsewhere in the future
 - some new filters, in particular filter for if album/artist picture is
set or not
 make date parsing in SimpleSearch smarter
 various new date format are recognized, in particular dates relative to
current date,
 some examples : (using the field "played" that is now an alias for the
field playhistory)
 played:mon played last monday
 played>mon played after last monday
 played=mon-tue played between monday and tuesday
 played<31/3 played before last 31 mars
 played>2apr12 played after 2 april 2012
 played=22:00-23:00 played between (last) 22h and 23h
 and many more
 one change is that when using ">" or "<=", the date used is now the
 last second of the period given.
 So now >2011 exclude 2011 and <=2011 includes 2011
 Also, if using a single "date" with : or =, it will be turned into a
range.
 So "=mars" will match the whole last month of mars

*** mpd
**** Inital setup/config

***** connecting to nix socket for added operations

How to connect to the Unix Socket for added operations
 1.Open your mpd.conf file, uncomment and fill the line that says
bind to address with your FULL .mpd path
 bind to address"/home/USER/.mpd/socket"
 2. Add the following line to your .bashrc file
 export MPD HOST=/home/USER/.mpd/socket
 and reload bash or reboot.
 3.restart mpd
 4. you can now add songs through the command line to mpd using the
following command
 mpc add file:///home/USER/FILE.mp3

***** add comments tag to mpd

1) edit the mpd.conf file and add the "comment" name to the list of tags
to be scaned:
 from
 # This setting defines a list of tag types that will be extracted
during the
 # audio file discovery process. Optionally, 'comment' can be added to
this
 # list.
 #

metadata to use"artist,album,title,track,name,genre,date,composer,performer,disc"
 to
 # This setting defines a list of tag types that will be extracted
during the
 # audio file discovery process. Optionally, 'comment' can be added to
this
 # list.
 #

metadata to use"artist,album,title,track,name,genre,date,composer,performer,disc,comment"
 2. delete the mpd.db file from the ~/.mpd dir
 3. issue the following command
 sudo /etc/init.d/mpd start-create-db
 4.rescan the library with the frontend of choice

***** setting up multiple audio outputs

You need to uncomment the relevant outputs you need
 #
 audio output {
 type"alsa"
 name"My ALSA Device"
 #device"hw:0,0"# optional
 #format"44100:16:2"# optional
 #mixer device"default"# optional
 #mixer control"PCM"# optional
 #mixer index"0"# optional
 }
 #
 # An example of an OSS output:
 #
 #audio output {
 #type"oss"
 #name"My OSS Device"
 #device"/dev/dsp"# optional
 #format"44100:16:2"# optional
 #mixer device"/dev/mixer"# optional
 #mixer control"PCM"# optional
 #}
 #
 # An example of a shout output (for streaming to Icecast):
 #
 #audio output {
 #type"shout"
 #encoding"ogg"# optional
 #name"My Shout Stream"
 #host"localhost"
 #port"8000"
 #mount"/mpd.ogg"
 #password"hackme"
 #quality"5.0"
 #bitrate"128"
 #format"44100:16:1"
 #protocol"icecast2"# optional
 #user"source"# optional
 #description"My Stream Description"# optional
 #genre"jazz"# optional
 #public"no"# optional
 #timeout"2"# optional
 #}
 #
 # An example of a httpd output (built-in HTTP streaming server):
 #
 audio output {
 type"httpd"
 name"My HTTP Stream"
 #encoder"vorbis"# optional, vorbis or lame
 port"8000"
 #quality"5.0"# do not define if bitrate is defined
 bitrate"128"# do not define if quality is defined
 format"44100:16:1"
 }
 #
 save and restart mpd
 sudo /etc/init.d/mpd restart
 now in most clients you would be able to enable/disable outputs
 (in gmpc menu--server)

***** setting up in arch

[[~/Dropbox/Org/Tech/linux_files/attach/.mpdconf][Attachment #20 (.mpdconf)]]
 1) make sure first that your machine's ip listed in /etc/hosts (can be
127.0.0.1)
 2)add mpd to your /etc/hosts.allow file before attempting to use (mpd:
ALL)
 3)use a sample mpd.conf file and adjust to needs (see attached)
 4)Its not recommended to start MPD as root, so just start it with your
user session (mpd & or use a gui in your WM/DE to launch)

***** Replaygain

make sure the replaygain section in mpd.conf looks like this:
 # Normalization automatic volume adjustments
##################################
 #
 # This setting specifies the type of ReplayGain to use. This setting
can have
 # the argument "album" or "track". See <http://www.replaygain.org> for
more
 # details. This setting is disabled by default.
 #
 replaygain "track"
 #
 # This setting sets the pre-amp used for files that have ReplayGain
tags. By
 # default this setting is disabled.
 #
 replaygain preamp "6"
 #
 # This setting enables on-the-fly normalization volume adjustment. This
will
 # result in the volume of all playing audio to be adjusted so the
output has
 # equal "loudness". This setting is disabled by default.
 #
 volume normalization "yes"
 #
 track is volume fixed at level for one song
 album it is for the whole album

**** mpc
***** add song after the current playing song (mpc insert)

issue the insert command:
 mpc insert [[file:///PATH/TO/FILE.EXT][file:///PATH/TO/FILE.EXT]]
 IE

mpc insert file:///home/zeltak/Downloads/mreview/ant/01-Deep.ogg

***** check/change replay gain mode through mpd

to check which replay gain mode is used issue:

mpc replaygain

 to change the replay gain mode

mpc replaygain track

***** launch custom stuff with mpc

launch a specific playlist at random:
 mpc clear; mpc load Z Fav; mpc random on; mpc play

***** seek

use this command
 mpc seek +00:00:05

***** add a song to the playlist thats not in the library

first of all you need to [[#BaC30oz8FD.UrnRmSyUk-g][have a unix socket]]
connection in your mpd.conf file
 issue:
 mpc add [[file:///PATH/TO/FILE]]

***** list all files of an extension type

MPD HOST=localhost mpc listall | grep -Ev '.flac' >
/home/zeltak/Downloads/nonFLAC.txt

***** add X rated songs with stickers
#+BEGIN_SRC sh
mpc clear && mpc sticker / find rating | grep -E "|rating=4|rating=5" | awk -F ':' '{print $1}' | shuf -n 11 | mpc add &&  mpc play      
#+END_SRC
**** errors
***** see verbose output when mpd is broken
sudo mpd --verbose --no-daemon --stdout
***** gmpc cant connect
make sure you have :
 mpd: ALL
 in the /etc/hosts.allow
 this is where it is under arch, maybe located elsewhere in other
distros
***** mpd dosent seem to play and stuck at 00:00
check the pulse output is enabled 
**** Helpers/scripts
***** albumbler     
****** tips

 to view the albums current database:
  issue

  albumbler best

  and

  albumbler worst

  which will give you a birds eye view of the most fav/disliked albumes
  to edit the config options edit :
  ~/.config/albumbler/config
  MusicPaths - Comma separated list of places to find music.
  Player - Choice of music player.
  Notify - Choice of notification alert.
  TimeWindow - Seconds before it think you liked music. Default 60.
  MaxPlaylist - Avoid sending huge directories to the player. Default
 1000.
  MinPlaylist - Avoid sending nearly empty directories. Default 3.
  PlaylistExts - Comma separated list of extensions to treat as
 playlists.

***** mpdcron
****** setup

 MPDCRON
  1)setup a directory for mpd cron:
  /home/zeltak/.mpdcron/
  2)add a config file (mpdcron.conf) in that dir including the following:
  # mpdcron configuration file
  [main]
  # Path to the PID file, by default the PID file is
 MPDCRON DIR/mpdcron.pid
  pidfile = /path/to/mpdcron.pid
  # Wait this many seconds after sending signal to kill the daemon.
  # Default is 3 seconds.
  killwait = 3
  [mpd]
  # Semicolon delimited list of events to wait for.
  # By default mpdcron waits for all events.
  # Valid events are:
  # database: Song database has been updated.
  # stored playlist: A stored playlist has been modified, created,
 deleted or renamed.
  # playlist: The queue has been modified.
  # player: The player state has been changed: play, stop, pause, seek,
 ...
  # mixer: The volume has been modified.
  # output: An audio output device has been enabled or disabled.
  # options: Options have changed: crossfade, random, repeat, ...
  # update: A database update has started or finished.
  events = player;mixer
  # Interval in seconds to reconnect to mpd after an error or disconnect.
  reconnect = 5
  # Timeout in milliseconds for mpd timeout, 0 for default timeout of
 libmpdclient.
  timeout = 0
  3)add a "hooks" dir under the mpdcron dir
  Hooks are executed depending on the event received from mpd.
  for example: hooks/player: mpdcron calls status and currentsong and
 updates the environment.
  4)under the hooks dir add hook (player for example) and in it add what
 is executed when a player event happens.
  for example :
  hooks/dump-status.bash
  will launch the dump-status.bash script when the song changes
  in my case i want dzen2 to show up so i put this in the player file:
  #!/bin/sh
  hooks/dzen music.sh
  and in the dzen music script i put this:
  #!/bin/sh
  echo
 "($MPD SONG TAG TRACK)$MPD SONG TAG TITLE,($MPD SONG TAG GENRE)"
 | dzen2 -l 4 -y 700 -x 0 -fn 'Droid Sans Japanese Bold' -p 2; |
  this will echo the mpdcron info to dzen
  5)start with:

  mpdcron --no-daemon

***** create missing album_Artist  
use this script here id:e3878562-df9e-44b5-813e-df4c32b3cfe7 
**** remote streams

***** stream to another pc using pulse

first make sure both pc's are setup correctly using pulse (see
[[#6gUwaWT14PQjuUZW4Guu9g][here]])
 then edit mpd.conf and create/edit a pulse output with the client (the
pc you want to have music playing out) IP adress:
 audio output {
 type "pulse"
 name "ztpc"
 server "192.168.0.33" # optional
 ## sink "remote server sink" # optional
 }
 in your mpd client (IE gmpc) select the client output (IE ztpc) and you
should hear music

***** connect to a mpd stream (remote connect)

Can i use gmpc to connect to the stream?
 
 MPD can play MPD streams :
 You can have one mpd sessionon the server to stream your music and
one mpd session/other client (ie vlc) where you want to output the
sound (client) connecting to the stream.
 You have to either use a mpd client to choose songs remotely or connect
via ssh and fill your playlist from there
 Of course for the remote session to work you need to open port 6600 for
world, and mpd runing to play that.
 First setup a mpd session on the server to stream the output. this is
done by editing the mod conf file and adding these lines:
 audio output {
 type"httpd"
 name"My HTTP Stream"
 #encoder"vorbis"# optional, vorbis or lame
 port"8000"
 #quality"5.0"# do not define if bitrate is defined
 bitrate"128"# do not define if quality is defined
 format"44100:16:1"
 }
 restrat mpd and there will be an output that steams your music on port
8000
 Now on the client(mpd or any other client that plays streams IE- VLC
etc,,):
 simply add http://IP:PORT to your mpc
 other client stream IEL
 mpc add http://192.169.0.1:8000
 or with vlc:
 [[~/Dropbox/Org/Tech/linux_files/2011-05-29-14-38-13-scrot.png]]
 

***** Listen to your music from home at work

What do you need to get a nice, easy way, to play listen to your music
you have at home on your work.
 First we need:
 MPD running at home.
 GMPC running at your work.
 GMPC-shout plugin.
 mplayer or mpg123 to play back MPD's stream
 Be able to setup an SSH connection to your home pc.
 Enough upload, to stream mp3/ogg.
 Setting up MPD

 We need to setup a httpd output.
 Todo this, add this section to your mpd.conf:
 audio output {
 bind "127.0.0.1"
 type "httpd"
 name "streamatron"
 encoder "lame"
 format "44100:16:1"
 port "8000"
 bitrate "128"
 }
 This setups an output that streams your music mp3 encoded @ 128kbit,
mono.
 If you now start MPD, in your gmpc->server menu it should now show an
extra "streamatron" output.
 Note: if you don't have an output configured and you used to let MPD
autodetect, this will stop working. You need to setup an audio output{}
block for your soundcard. (see man mpd.conf).
 Setting up SSH
 Now we want to tell SSH to forward the right port when ssh'ing home.
 So we add this little section to your ~/.ssh/config file:
 host home
 hostname myhomeadress
 LocalForward 6600 localhost:6600
 LocalForward 8000 localhost:8000
 This assumes that you ssh to the machine running MPD, change the
forward if MPD runs on another machine in your HOME network.
 ssh home
 You will login to your home pc, and the right forwards are made.
 Setting up GMPC
 Now on your work pc, start gmpc and add a profile that connects to
localhost @ port 6600.
 Go to preferences->plugins enable the shout plugin, and then in Shout
plugin's preferences pane enter the following line:
 mplayer -nocache http://localhost:8000/mpd.mp3
 Or if you prefer mpg123
 mpg123 [[http://localhost:8000/mpd.mp3][http://localhost:8000/mpd.mp3]]
 [[~/Dropbox/Org/Tech/linux_files/2011-05-09-21-48-44-scrot.png]]
 Now if you start playback, GMPC will call mplayer or mpg123 for you,
restart when it dies, and kill it when you pause or stop playback.
 And that is it, if everything went ok, you should be listening to your
music from home at your workplace.

**** clients
***** gmpc

****** how to edit lyrics manually

[[~/Dropbox/Org/Tech/linux_files/Image_hGrvNR7KXSEnEjypYs82cw_0001.png]]
 In the metadata view, choose the song then press edit in the lyrics
box. if the lyrics says searching... right click the box and press clear

****** start gmpc hidden

Start Gmpc Hidden
 After closing gmpc, open the configuration file ~/.gmpc/gmpc.cfg And
set the following entry:
 [Default]
 start-hidden="1"

****** dynamic playlist tips

Dynamic playlist tips
to get a "normal" amarok style dynamic playlist
 just disable all "searches in meta tab", enable "search songs with
genre" and select "songs of same genre" and you will get what you want.

****** gmpc shout ssh remote

Use Case
 When you are at work and want to listen to the music you have at home.
 You are sitting with you laptop in the garden and want to listen to the
music playing inside on your stereo.
 Assumptions
 This are conditions needed for this tutorial: These are not part of the
tutorial.
 You have MPD running with a working httpd output.
 GMPC and MPD are not running on the same machine.
 Your network is fast enough to stream the audio + MPD protocol
overhead.
 You have the gmpc-shout plugin.
 You are running the latest GMPC and gmpc-shout (0.19.100). Earlier
versions will work, but might need a different steps in setting up
gmpc-shout.
 You can SSH from your MPD machine to your GMPC machine.
 mplayer is installed on the machine running GMPC.
 For this example:
 The host running MPD is on hostname: mpdhost.example.com.
 The host running MPD is called SERVER
 The client running GMPc is called cLIENT
 MPD listens on port 6600 and accecpts connections from localhost.
 MPD's httpd output listens on port 8000 and accept connections from
localhost.
 On CLIENT port 6600 and 8000 are available.
 Setting up the tunnel
 We are going to use SSH to tunnel the protocol and the stream from
SERVER to CLIENT. We define this in the config file of ssh, so we do not
have to pass remember the right command line arguments every time
 Open on CLIENT ~/.ssh/config (create if needed) Add the following
lines:
 host mpdserver hostname mpdhost.example.com LocalForward6600
localhost:6600 LocalForward8000 localhost:8000
 (ssh man ssh config for more information.)
 now start the tunnel by executing the command "ssh mpdserver" on
CLIENT. This will do a remote login to mpdserver and create the tunnel,
leave this open.
 NOTE: Closing the remote ssh session will close an idle tunnel. If the
tunnel is in use, ssh will stay active until the tunnel is no longer
used.
 Setting up GMPC
 On client start gmpc, configure a profile (preferences->connection)
mpdserver with the following information: name: mpdserver hostname:
localhost port: 6600
 and hit connect. This should connect you to the MPD running on SERVER.
 Now we are going to setup gmpc-shout.
 Go to preferences->plugins and enable the Shout plugin. A new
preferences entry should appear in the left pane. Select this. Here you
see a command line where you can enter the command gmpc should execute
to do the actual playback of the stream. In this example I use mplayer,
other cli player are possible.
 In the entry box enter the following line:
 mplayer -nocache http://localhost:8000/
 On ubuntu you might want to tell mplayer to use pulseaudio: mplayer -ao
pulse -nocache http://localhost:8000/
 edit Listening to music
 Hit the play button. (stop/pause mpd if it was allready playing), this
should start mplayer in the background and start the playback off the
stream. The actual delay between what you hear and see in GMPC is
depending on caching. Normally this should be around 1 second.
 NOTE: If the connection is bad, mplayer might disconnect on song
change, this needs to be worked around in gmpc-shout (see below).
 Note: In the lower left corner of gmpc (in the status bar) there is an
icon for gmpc-shout, this indicate if mplayer is running or
disconnected.
 Things that need to be improved
 GMPC-shout needs to reconnect when connection fail. Use a exponential
back off method for this.
 Add a context menu to the status icon allowing you to reconnect and/or
stop the plugin.
 Support selectively enabling the plugin for certain connection
profiles.
 Allow to add ${SERVER IP} in the gmpc-shout url, that replaces it with
the hostname for the current profile.

****** enable keys custimaztion

set this "gtk-can-change-accels = 1" in your ~/.gtkrc-2.0 and you can
edit the keybindings by opening the menu,
 highlight the entry and type in the new accelerator

****** set custom theme with gmpc

create this file:
 touch .gtkrc-2.0-gmpc
 include this in the file:
 include "/home/zeltak/.gtkrc-2.0"
 #To set the icon theme
 gtk-icon-theme-name = "Humanity"
 run this command each reboot:
 GTK2 RC FILES=/home/zeltak/.gtkrc-2.0-gmpc gmpc

****** Gmpc command line

Commands:
 (might not be up2date)
 Switch
 switch play queue: Switch to play queue
 switch metadata browser: Switch to the metadata browser
 switch search: Switch to the search browser
 Main
 quit: Quit gmpc
 hide: Hide gmpc
 show: Show gmpc
 show notification: Show the tray-icon notification. (if enabled)
 Playback
 play: start playback
 pause: pause playback
 next: next song
 prev: previous song
 stop: stop playback
 random (on|off): Random (on|off)
 repeat (on|off): Repeat (on|off)
 volume [+-]?[0-9]+: Volume <level>
 mute: Mute
 play .: Play <query>
 0.18.1:
 seek hh:mm:ss: Seek to position
 seek +hh:mm:ss: Seek relative to current position
 seek -hh:mm:ss: Seek backwards relative to current position
 Requires gmpc 0.18.1 and mpd 0.15.0:
 repeat current song: Repeats the currently playing song forever
 stop after current song: Stops playback after current song.
 consume (on|off)
 single (on|off)
 Play-Queue Manipulation
 add .: Add <query>
 replace .: Replace <query>
 Clear play queue: Clear play queue
 0.18.1:
 Crop current song: Clears the whole play queue without removing the
current playing song.
 url [a-Z]://.: add url.
 Search
 search database .: Search database <query>
 search playlist .: Search playlist <query>
 Metadata Browser
 show current song: Show the page of the current playing song.
 show current artist: Show the page of the current playing artist.
 show current album: Show the page of the current playing album.
 Query's
 The syntax consist of the following:
 <field>=<value>
 This will search for value in the field field.
 The following fields are supported:
 artist
 album
 title
 track
 Name (applies to streams)
 Genre
 Date
 Composer
 Performer
 Comment
 Disc
 Filename
 AlbuArtist
 Any (searches all the above fields)
 This search is tokenized and case insensitive, so for example:
 artist=eric clapton
 Will match both "eric clapton", "Clapton, Eric". To stop this
tokenization wrap the values in (). For example:
 artist=(Eric Clapton)
 Will not match "Clapton, Eric".
 
 To refine you search multiple queries can be concattenated:
 for example:
 artist=Eric Clapton album=Slowhand
 There is also an option to run multiple queries at once by using the or
operator ||:
 artist=Eric Clapton || artist=Norah Jones
 This will return all songs by Eric Clapton and Norah Jones.
 Chaining
 You can chain multiple commands by using ;
 Key bindings:
 Escape: Close the command line.
 Backspace: (if empty) close the command line.
 Enter: Execute the command.

****** start with other theme

issue:
 gmpc --icon-theme=Humanity

****** clear all cahced images

gmpc --clear-cover-db

***** ncmpcpp
****** browse and add local files to playlist

first of all you need to [[#BaC30oz8FD.UrnRmSyUk-g][have a unix socket]]
connection in your mpd.conf file
 then edit the ncmpcpp config file and change the mpdhost to the socket:
 ##### 1.connection settings #####
 mpd host = "/home/zeltak/.mpd/socket"
 then in the browse library pressing F3 will switch to local file
browser mode

****** go to current artist in library from playlist

go to current artist in library from playlist (~ or G)

****** macro list

MacroUtility:
 Dummy, MouseEvent, ScrollUp, ScrollDown, ScrollUpArtist,
ScrollUpAlbum,
 ScrollDownArtist, ScrollDownAlbum, PageUp, PageDown, MoveHome,
MoveEnd,
 ToggleInterface, JumpToParentDirectory, PressEnter, PressSpace,
PreviousColumn,
 NextColumn, MasterScreen, SlaveScreen, VolumeUp, VolumeDown,
DeletePlaylistItems,
 DeleteStoredPlaylist, DeleteBrowserItems, ReplaySong, Previous, Next,
Pause,
 Stop, ExecuteCommand, SavePlaylist, MoveSortOrderUp,
MoveSortOrderDown,
 MoveSelectedItemsUp, MoveSelectedItemsDown, MoveSelectedItemsTo, Add,
 SeekForward, SeekBackward, ToggleDisplayMode,
ToggleSeparatorsBetweenAlbums,
 ToggleLyricsFetcher, ToggleFetchingLyricsInBackground,
TogglePlayingSongCentering,
 UpdateDatabase, JumpToPlayingSong, ToggleRepeat, Shuffle,
ToggleRandom,
 StartSearching, SaveTagChanges, ToggleSingle, ToggleConsume,
ToggleCrossfade,
 SetCrossfade, EditSong, EditLibraryTag, EditLibraryAlbum,
EditDirectoryName,
 EditPlaylistName, EditLyrics, JumpToBrowser, JumpToMediaLibrary,
 JumpToPlaylistEditor, ToggleScreenLock, JumpToTagEditor,
JumpToPositionInSong,
 ReverseSelection, RemoveSelection, SelectAlbum, AddSelectedItems,
 CropMainPlaylist, CropPlaylist, ClearMainPlaylist, ClearPlaylist,
SortPlaylist,
 ReversePlaylist, ApplyFilter, Find, FindItemForward,
FindItemBackward,
 NextFoundItem, PreviousFoundItem, ToggleFindMode,
ToggleReplayGainMode,
 ToggleSpaceMode, ToggleAddMode, ToggleMouse, ToggleBitrateVisibility,
 AddRandomItems, ToggleBrowserSortMode, ToggleLibraryTagType,
 ToggleMediaLibrarySortMode, RefetchLyrics, RefetchArtistInfo,
 SetSelectedItemsPriority, FilterPlaylistOnPriorities, ShowSongInfo,
 ShowArtistInfo, ShowLyrics, Quit, NextScreen, PreviousScreen,
ShowHelp,
 ShowPlaylist, ShowBrowser, ChangeBrowseMode, ShowSearchEngine,
 ResetSearchEngine, ShowMediaLibrary, ToggleMediaLibraryColumnsMode,
 ShowPlaylistEditor, ShowTagEditor, ShowOutputs, ShowVisualizer,
 ShowClock, ShowServerInfo

***** pimpd2

****** install

CPAN
 This is the preferred way of installing pimpd2 for users. Dependencies
will be resolved automagically.
 As root:
 cpan App::Pimpd
 As user:
 wget --no-check-certificate \

https://github.com/trapd00r/pimpd2/raw/master/doc/pimpd2.conf.example
 -O $HOME/.pimpd2.conf
 Edit the configuration file and start pimpd2:
 vim $HOME/.pimpd2.conf && pimpd2

****** examples

****** clear and add random album

pimpd2 -cl && pimpd2 -ra 1 |pimpd2 -af
***** Mpdmenu
****** switches
#+BEGIN_EXAMPLE
"-album" (load selected album)
"-track" (load selected track)
"-rate"
"-ra" (load random album)
"-rs" (load random songs)
"-show"  notify-send
"-lrated"  (load rated)
#+END_EXAMPLE
 
**** archive

***** add sticker file for rating

Adding a sticker file to rate songs:

 open mpd.conf for editing
 in the main (first) config section add this (marked in green):
 #log file"/home/zeltak/.mpd/mpd.log"
 #
 # This setting sets the location of the file which stores the process
ID
 # for use of mpd --kill and some init scripts. This setting is disabled
by
 # default and the pid file will not be stored.
 #
 pid file"/home/zeltak/.mpd/mpd.error"
 #
 sticker file"/home/zeltak/.mpd/sticker"
 # This setting sets the location of the file which contains information
about
 # most variables to get MPD back into the same general shape it was in
before
 # it was brought down. This setting is disabled by default and the
server
 # state will be reset on server start up.
 #
 state file"/home/zeltak/.mpd/state"
 #
 restart mpd
 sudo /etc/init.d/mpd restart
 rating should appear in gmpc
**** mpdscribble (lastfm stats)
install mpdscribble from AUR

https://aur.archlinux.org/packages/mpdscribble/

create a config file here
file:/home/zeltak/.mpdscribble

and start it with mpdscribble
*** Cantata
**** Manual
See file:/home/zeltak/org/attach/files_2013/Cantata_Readme.txt 

**** Look and feel
**** Show only lyrics
drag the play queue all the way to the left untill cantata auto resizes the info pane to incorprate all 2 views into one. then you can choose the bottom selector that appears

#+DOWNLOADED: /tmp/screenshot.png @ 2013-11-10 08:53:09
#+attr_html: :width 300px

 [[~/org/attach/images_2013//screenshot_2013-11-10_08:53:08.png]]
**** Options
**** Add local file play
-make sure the http is running
-then just drag files to Cantata or just "open with cantata" files from any FM
**** start cantata in debug mode
     #+NAME: 
     #+BEGIN_SRC sh
CANTATA_DEBUG=512 cantata
     #+END_SRC
*** amarok
**** tips

fix sound issues amarok4

 install xine-ui package
 Amarok multimedia keys in Gnome

 This was a known issue due to changes in gnome 2.18. This should get
you up and running in amarok:
 I have written an Amarok script to allow the use of multimedia keys in
fiesty (and other gnome 2.18 distros).
 There is no fuss at all - just load the script into amarok's script
manager and configure the keys in
 system-->preferences-->keyboard shortcuts
 done.
 get it http://kde-apps.org/content/show.php...?content=60910
 or install it directly from the Amarok script manager - its called
"gnome multimedia keys".
 this should be the fastest way to get it working.
 any problems just send me a pm.
 hope this helps. would love your feedback and bug reports.Expressions
for searching

 (It's possible since 2.1-beta)
 Just type added:"expression" in the search field.
 Some examples
 aIt's possible since 2.1-beta.
 Just type added:"expression" in the search field.
 Some examples
 added:today #obviously
 added:<1w #added this week
 You can use the following keys
 today
 yesterday
 < #less than
 w #for week
 d #for day
 m #for month
 y #for year
 more than, using ">", doesn't workdded:today #obviously
 added:<1w #added this week
 You can use the following keys
 today
 yesterday
 < #less than
 w #for week
 d #for day
 m #for month
 y #for year
 more than, using ">", doesn't work

**** choose only 4 star and up

add this:
 rating:>7
 into the collection filter and then add all library to playlist (only
the 4 star and up will appear)

**** amarok 1.4

change the amarok blue artist symbol (KDE3)
 The icon in Amarok for artist (blue guy) is called personal.png!Change
Amarok Icons
 
 LOOK AT #3 BEFORE STARTING!
 1)create a theme based on the original icons in:
 /usr/share/apps/amarok/icons
 For example replace theme Hi-color. using the exact same names!!
 2)Transfer Theme to the Amarok Folder, replacing the Hi-color theme.
 3)Make sure all the new Folder have ALL permissions set to:
 can view and modify content and owner set to Zeltak (or root if not
successful)
 TIP:
 the icon used for the band man is personal.png in
/icons/128x128appsManuall Backup Amarok MySQL Database

 mysqldump -u root (optional) -p -opt dbname > file:
 mysqldump -p --opt amarok > amarokbckup 2 07
 When your database is corrupted, you cannot see all your songs in the
collection browser, and you could see in /var/log/messages that the
MySQL database is corrupted. To repair the database, launch the
mysqlcheck command as root:
 mysqlcheck -p --auto-repair --all-databases
 Then rescan your collection to update the database.
 Restoring from a previous backup can be done in a few steps. First,
remove any old databases and create a new amarok database (this example
uses the same naming convensions as the above backup script):
 # New version. Previous example forgot to mention the need to reset
 # the access rights via "GRANT ALL"...
 $ mysql -p -u root
 DROP DATABASE amarok;
 CREATE DATABASE amarok;
 USE mysql;
 GRANT ALL ON amarok. TO amarok@localhost IDENTIFIED BY
'PASSWORD CHANGE ME';
 FLUSH PRIVILEGES;
 QUIT;
 Next, we need to restore the backup. Lets assume we have one from July
12th, 2006:
 $ cd ~/backup/amarok/2006-07-12/
 $ tar -xvjf amarok.mysql.tar.bz2
 $ mysql -p -u amarok -h localhost amarok < amarok.mysql
 
 Now your database should be restored. Note that the first instance of
'amarok' (zeltak in my setup) is the username and the second instance is
the database name.
 It is also necessary to restore ~/.kde/share/config/amarokrc as this
contains important database version information.Restore From an
Automatic Backup

 Restoring from a previous backup can be done in a few steps. First,
remove any old databases and create a new amarok database (this example
uses the same naming convensions as the above backup script):
 # New version. Previous example forgot to mention the need to reset
 # the access rights via "GRANT ALL"...
 $ mysql -p -u root
 DROP DATABASE amarok;
 CREATE DATABASE amarok;
 USE mysql;
 GRANT ALL ON amarok. TO amarok@localhost IDENTIFIED BY
'PASSWORD CHANGE ME';
 FLUSH PRIVILEGES;
 QUIT;
 Next, we need to restore the backup. Lets assume we have one from July
12th, 2006:
 $ cd ~/backup/amarok/2006-07-12/
 $ tar -xvjf amarok.mysql.tar.bz2
 $ mysql -p -u amarok -h localhost amarok < amarok.mysql
 
 Now your database should be restored. Note that the first instance of
'amarok' (zeltak in my setup) is the username and the second instance is
the database name.
 It is also necessary to restore ~/.kde/share/config/amarokrc as this
contains important database version information.Repair a Corrupted
Database

 When your database is corrupted, you cannot see all your songs in the
collection browser, and you could see in /var/log/messages that the
MySQL database is corrupted. To repair the database, launch the
mysqlcheck command as root:
 mysqlcheck -p --auto-repair --all-databases
 Then rescan your collection to update the database. Create MySQL
Database for amarok
 $ mysql -u root
 set password for root@localhost = password('xxxxxxx');
 flush privileges;
 quit;
 Of course change xxxxxx to the password you want (salar on voices)
 Once you have done that, you must create a MySQL database through any
usual method. You can just use the "mysql" command: (it will ask for
your MySQL root password)
 $ mysql -p -u root
 CREATE DATABASE amarok;
 USE mysql;
 GRANT ALL ON amarok. TO amarok@localhost IDENTIFIED BY
'PASSWORD CHANGE ME';
 FLUSH PRIVILEGES;
 In the above example, a database called "amarok" was created, and a
user called amarok (zeltak on voices) can access it from localhost using
the password "PASSWORD CHANGE ME (salar on voices). To allow access
from remote hosts, use amarok@'%'.
 It is very important that you 'GRANT ALL' privileges to the "amarok"
user. In particular, Amarok needs ALTER privileges on its database.
 Once a database exists, open the Configure Amarok screen (found in the
Settings menu), and go to the Collection tab. Change the drop-down menu
from SQLite to MySQL. You will have to specify the host (probably
localhost), port (probably 3306), and the name of the db that you have
created for it. Additionally, the username and password of a user who
has write access to the given database needs to be specified (above, the
user is amarok, and the password is PASSWORD CHANGE ME).
 So if you get errors about not being able to connect to the server or
database, ( not  password related errors) then you will have to edit
my.cnf on the host machine (/etc/mysql/my.cnf, most likely), comment out
the "bind address" variable and restart MySQL. You may have to comment
out "skip networking", so that MySQL will listen on a tcp socket.

**** irc nicks

Takahani-amarok copy cover and photo applet
 xevix- Helped me to compile 2.2 SVN..likes hdag nasahf from san fran

*** record my desktop

**** basic cli capture

issue this command:
 recordmydesktop --fps 25 -width 1024 -height 768 --v quality 63
--v bitrate 2000000 -o video.ogv

*** smplayer
**** How to exit smplayer when video finishes
How to exit smplayer when video finishes

 I was able to use a temporary workaround to .
 Go to Options->Preferences->Advanced->Options for Mplayer.
 Then supply the following "-lircconf <your lircrc file>". This lets me
control
 the normal playback functions. Of course, this assumes your remote
works
 with the regular mplayer in the first place.
 Exiting: Unlike xine/mplayer, I couldn't exit by just hitting the stop
 button. I setup irexec to kill smplayer by setting the following in my
 lirrc file:
 begin
 remote = Hauppauge 350
 prog = irexec
 button = Red
 config = pkill smplayer
 repeat = 0
 delay = 0
 end
 The only downside to this technique is that smplayer doesn't remember
the
 position of the video. But I am going to check out the -send-action
 option.
*** ampache

**** install

Ampache The Easy Way

 Add Ampache to your /etc/apt/sources.list and install (use PPA for
latest version)
 IMPORTANT:
 Ampache REQUIRES MySQL server to operate. MySQL server is not
installed
 with Ampache due to the fact that if users are using an older version
of
 MySQL server upgrading to mysql-server-5.0 may render their databases
corrupt
 and possible useless. So please upgrade your mysql server with
CAUTION.
 For those who do not have mysql-server-5.0 installed it is very easy to
install.
 In the command line type:
 sudo apt-get install mysql-server-5.0
 WARNING
 Please insure that older versions of Apache-1.x or later are removed,
before
 installing ampache or you will experience installation problems.
 GETTING STARTED WITH AMPACHE
 SUMMARY:
 1. To install mysql-server-5.0 follow instruction above. If you already
have
 mysql-server installed go to step 2.
 2. create a mysql user
 $ mysql -u root
 set password for root@localhost = password('xxxxxxx');
 flush privileges;
 quit;
 Of course change xxxxxx to the password you want (salar on voices)
 Once you have done that, you must create a MySQL database through any
usual method. You can just use the "mysql" command: (it will ask for
your MySQL root password)
 After that you need to create a mysql user, either with the CLI or
better with Webmin
 go to mysql database>user Permissions>Create new user
 and add a new user (zeltak for example) and give it a password andall
permissions
 3. Now point your browser to http://localhost/ampache or
 http://what.ever.your.ip.address.com/ampache.This will bring you to
Ampache's
 Web Installation Interface (step 1)
 Desired Database Name = ampache
 MySQL Hostname = localhost
 MySQL Administrative Username = root or the user name you setup
 MySQL Administrative Password = root pass from before
 Create Database User For New Database = set check mark
 Ampache Database Username = ampache
 Ampache Database User Password = set this to a password you like
 Click on Insert Database.
 4. This will take you to Ampache's Web Installation Interface (step 2)
 Web Path = /ampache
 Desired Database Name = ampache (default)
 MySQL Hostname = localhost (default)
 MySQL Username = this is the username you setup with phpmyadmin
 root will not work
 MySQL Password = this is the password you setup with phpmyadmin
 blank will not work
 Click on Write Config.
 Ampache will prompt you to download a file called "ampache.cfg.php".
Download it
 to your favorite location. Now take "ampache.cfg.php and copy/move it
to
 /etc/ampache.
 Now click on check for config, and everything should turn green. Click
on next
 5. This will take you to Ampache's Web Installation Interface (step 3)
 Enter a password, you will be using this to initially sign into
ampache. You can
 change the admin username and password after the install is complete
through Ampaches
 preferences tab
 Click next this will take you to Ampache's log in screen.
 Enter Admin and the password you entered in the above step.
 6. You are now ready to start adding music and building your music
catalogs.
 If you have never setup Ampache Catalogs please take a look at this
wiki page
 http://trac.ampache.org/wiki/InstallCatalog
 http://ubuntuforums.org/showthread.php?t=546007

**** upgrade

Upgrading your Ampache Installation

 Move your Old Install Directory out of the way
 mv ampache ampache.old
 Note:
 In Ubuntu the ampachew dir is at:
 /usr/share/ampache/www/
 so you would move the whole contents of www to a new dir (backup)
 Extract the new version
 tar -xzf current.tar.gz
 Copy your config file from the old install to the new directory
 cp ampache.old/config/ampache.cfg.php ampache/config/
 Note:
 In Ubuntu the ampachew dir is at:
 /etc/ampache

**** amarok support

Ampache in Amarok

 we need to allow API access to Ampache from our local network. To do
this go to the Admin tab and then click on Show Acls.
 Find Add API / RPC Host and click on it
 Name your ACL Entry, in this example I've called it "My Network" There
are three choices for the type of ACL to create. The default will allow
you to access Ampache's catalog using Amarok but it will not allow you
to login through the web interface. If you want API + Streaming + Web
Interface access pick RPC + All under type.
 Example:
 You'll notice these first two ACL's do not have a Key. Key's are only
required for XML-RPC communication between Ampache servers. Your users
will use their Web Interface Usernames and Passwords to access the API.
Now that we've created a few ACL's we need to make sure that Access
Control is enabled. Open up your /config/ampache.cfg.php in a text
editor and find the access control line and enabled it as seen below
 ; Use Access List
 ; Toggle this on if you want ampache to pay attention to the access
list
 ; and only allow streaming/downloading/xml-rpc from known hosts by
default
 ; xml-rpc will not work without this on.
 ; DEFAULT: false
 access control = "true"
 Log out of your Ampache instance, and then log back in. If that works
then go ahead and try playing some music. If either one of these things
fails disable Access Control and double check your ACL entries. If you
still aren't sure why it's failing then Enable Logging and see what the
Logs report.
 Configuring Amarok
 Go to Settings and then Services. Make sure the Ampache Service is
enabled and then click Settings button on Ampache plugin. Enter the
details for your server and click add.
 Name This is an internal name for Amarok, up to you.
 example: zeltak1
 Server This is the fully qualified address for your Ampache server
including the http://. For example, a valid server would look like
http://ampache.org/demo.
 Example: http://192.168.0.3/ampache
 Username This is your username to the Ampache web interface. If you
specified a User in your RPC ACL then this username must match that
specified in the ACL.
 Example: ampache
 Password This is your password to the Ampache web interface
 Example: salar21

**** current install

[[~/Dropbox/Org/Tech/linux_files/Image_5HErPZrwpQjse0brFiU93Q_0001.png]]

**** errors

if you get an error regarding memory IE:
 Allowed memory size of 25165824 bytes exhausted (tried to allocate 5
bytes) in /usr/share/ampache/www/lib/class/son
 As Root edit the php file and change the memory size from 16mb to a
larger ammount

**** themes

dl a theme and extract it to (in Ubuntu)
 /usr/share/ampache/www/config/themes

*** vlc
**** play a sound without gui

to play a short sound/mp3 through VLC without any GUI popping up:
 vlc --play-and-exit -Idummy PATH TO FILE
 example--play-and-exit -Idummy
 vlc --play-and-exit -Idummy /home/zeltak/My\ Linux\
Theme/1 Zeltak Current/0 Current\ Theme/Ice\ PhoeNix\
1.0/Sounds/Kalarm/buistime.mp3

**** launch ncurses interface

use the ncureses option

vlc -I ncurses [[http://192.168.0.1:8000][http://192.168.0.1:8000]]

**** extensions 
***** install extensions
under linux

file:~/.local/share/vlc/lua/extensions/
*** sopcast

**** run sopcast from CLI with VLC

to run sopcast in a simple way open the command line and issue this:
 sp-sc sop://broker.sopcast.com:3912/6001 3908 8908 &
 where sop://broker.sopcast.com:3912/6001 is the adress you can get from
the webpage (myp2p.eu for example)
 then let that run in the term
 open VLC and choose connect to stream. add this line as the stream:
 http://localhost:8908/tv.asf
 thats it :)

*** pulse audio
**** restart pulse audio

if pulseaudio is running then first issue:

 pulseaudio --kill

 after that to start pulseaudio:

 pulseaudio --start

**** PulseAudio over network

PulseAudio over network

One of PulseAudio's magnificent features is the possibility to stream
audio from clients over TCP to the server running the PulseAudio daemon,
allowing sound to be streamed through the LAN.To accomplish this, one
needs to enable module-native-protocol-tcp, and copy the pulse-cookie to
the clients.

 TCP support (networked sound)

To enable the TCP module, add this to (or uncomment, if already
there)/etc/pulse/default.pa:

 load-module module-native-protocol-tcp

Note: If experiencing trouble connecting, use (on server)
 pacmd>> list-modules

 TCP support with anonymous clients
 warning:make sure the load module command dosent appear twice!!

If it is undesirable to copy the pulse-cookies from clients , allow
anonymous clients, by adding these parameters to the
 module-native-protocol-tcp line (again in/etc/pulse/default.pa)

:

 load-module module-native-protocol-tcp
auth-ip-acl=127.0.0.1;192.168.0.0/24 auth-anonymous=1

Remember to change the LAN IP prefix should it be different from
192.168.0.0.

 Zeroconf (Avahi) publishing

For the remote Pulseaudio server to appear in the PulseAudio Device
Chooser (padevchooser) on the client , load the appropriate zeroconf
modules as well as to enable Avahi.
 On both machines (client and server ), enable the Avahi daemon with the
following command:
 
 # systemctl enable avahi-daemon.service
 On the server, add
 load-module module-zeroconf-publish
 to /etc/pulse/default.pa
 on the client, add

 load-module module-zeroconf-discover

 to/etc/pulse/default.pa
 Now redirect any stream or complete audio output to the remote
pulseaudio server by selecting the appropriate sink.

**** pulse info (pacmd list)

use this command to gather info on the current pulse audio
settings/runing apps:

pacmd list

**** fix low mic volume in pulse audio

enter
 alsamixer -c 0
 where -c is for card and 0 is for defaut
 then check that all mics (inluding the internal mic) are not muted/zero
level
 [[~/Dropbox/Org/Tech/linux_files/2011-05-18-12-04-44-scrot.png]]
 mic should not work normally

**** fix skype mic not working

Open up pavucontrol, and go to the recording tab.
 Start your skype and make a test call. the call should show up in the
recording tab in pavucontrol.
 Next to it will be a button which you can press to move the stream.
Move it to your real input device.
 from
 [[~/Dropbox/Org/Tech/linux_files/2011-05-30-10-41-23-scrot.png]]
 to

 [[~/Dropbox/Org/Tech/linux_files/2011-05-30-10-41-15-scrot.png]]
 now make a test call and it should work

**** Stream music wirelessely using PulseAudio server

on the 'server' machine (the one you want to stream to and the audio to
come out of) install pulse audio and
 the addons to control pulse:
 paman - PulseAudio Manager
 paprefs - PulseAudio Preferences
 pavucontrol - PulseAudio Volume Control
 then open papman
 NOTE-if things seemd greyed out follow [[#KMCXnaLwZxyhDxKJPeVIdw][this
guide]] to fix it

 In the window make sure these are checked:
 [[~/Dropbox/Org/Tech/linux_files/Image_6gUwaWT14PQjuUZW4Guu9g_0001.png]]
 
[[~/Dropbox/Org/Tech/linux_files/Image_6gUwaWT14PQjuUZW4Guu9g_0002.png]]

**** pulseaudio preferences greyed out

if you open up papref (pulse audio preferences) and you can use the tick
boxes since its grayed out:
 issue:

sudo ln -s /usr/lib/pulse-1.0 /usr/lib/pulse-1.0.0

 and it should fix it

**** pulse audio dosent start on startup
make sure autospwan is set to yes in /etc/pulse/client.conf 
#+BEGIN_SRC emacs-lisp
autospawn=yes
; daemon-binary = /usr/bin/pulseaudio
; extra-arguments = --log-target=syslog
#+END_SRC

*** beets
    :PROPERTIES:
    :ID:       e0837792-f794-495e-908f-f75bdb4462b3
    :END:
**** Config
***** basic config
see here for more up to date info:

http://beets.readthedocs.org/en/latest/reference/config.html#id3v23
***** dependecies needed
python2-requests
enum34 
***** define a file structure with top level first letters
use this in your config:

#+BEGIN_SRC emacs-lisp :results none
paths:
    default: %left{$albumartist,1}/$albumartist/$album/$track $title
#+END_SRC

for more options take a look at the function syntax:
 
Functions:

Beets path formats also support function calls, which can be used to
transform text and perform logical manipulations. The syntax for
function calls is like this: %func{arg,arg}. For example, the upper
function makes its argument upper-case, so %upper{beets rocks} will be
replaced with BEETS ROCKS. You can, of course, nest function calls and
place variable references in function arguments, so %upper{$artist}
becomes the upper-case version of the track's artists.
These functions are built in to beets:
%lower{text}: Convert text to lowercase.
%upper{text}: Convert text to UPPERCASE.
%title{text}: Convert text to Title Case.
%left{text,n}: Return the first n characters of text.
%right{text,n}: Return the last n characters of text.
%if{condition,text} or %if{condition,truetext,falsetext}: If
condition is nonempty (or nonzero, if it's a number), then returns the
second argument. Otherwise, returns the third argument if specified (or
nothing if falsetext is left off).
%asciify{text}: Convert non-ASCII characters to their ASCII equival
***** Path Format Configuration
You can also configure the directory hierarchy beets uses to store music. These settings appear under the paths: key. Each string is a template string that can refer to metadata fields like $artist or $title. The filename extension is added automatically. At the moment, you can specify three special paths: default for most releases, comp for “various artist” releases with no dominant artist, and singleton for non-album tracks. The defaults look like this:

#+BEGIN_SRC ruby
paths:
    default: $albumartist/$album%aunique{}/$track $title
    singleton: Non-Album/$artist/$title
    comp: Compilations/$album%aunique{}/$track $title
#+END_SRC

Note the use of $albumartist instead of $artist; this ensure that albums will be well-organized. For more about these format strings, see Path Formats. The aunique{} function ensures that identically-named albums are placed in different directories; see Album Disambiguation for details.

In addition to default, comp, and singleton, you can condition path queries based on beets queries (see Queries). This means that a config file like this:

#+BEGIN_SRC ruby
paths:
    albumtype:soundtrack: Soundtracks/$album/$track $title
#+END_SRC

will place soundtrack albums in a separate directory. The queries are tested in the order they appear in the configuration file, meaning that if an item matches multiple queries, beets will use the path format for the first matching query.

Note that the special singleton and comp path format conditions are, in fact, just shorthand for the explicit queries singleton:true and comp:true. In contrast, default is special and has no query equivalent: the default format is only used if no queries match.
***** Autotagger Matching Options
****** Match
You can configure some aspects of the logic beets uses when automatically matching MusicBrainz results under the match: section. To control how tolerant the autotagger is of differences, use the strong_rec_thresh option, which reflects the distance threshold below which beets will make a “strong recommendation” that the metadata be used. Strong recommendations are accepted automatically (except in “timid” mode), so you can use this to make beets ask your opinion more or less often.

The threshold is a distance value between 0.0 and 1.0, so you can think of it as the opposite of a similarity value. For example, if you want to automatically accept any matches above 90% similarity, use:

#+BEGIN_SRC Yaml
match:
    strong_rec_thresh: 0.10

#+END_SRC

The default strong recommendation threshold is 0.04.

The medium_rec_thresh and rec_gap_thresh options work similarly. When a match is above the medium recommendation threshold or the distance between it and the next-best match is above the gap threshold, the importer will suggest that match but not automatically confirm it. Otherwise, you’ll see a list of options to choose from.
****** preferred
In addition to comparing the tagged metadata with the match metadata for similarity, you can also specify an ordered list of preferred countries and media types.

A distance penalty will be applied if the country or media type from the match metadata doesn’t match. The specified values are preferred in descending order (i.e., the first item will be most preferred). Each item may be a regular expression, and will be matched case insensitively. The number of media will be stripped when matching preferred media (e.g. “2x” in “2xCD”).

You can also tell the autotagger to prefer matches that have a release year closest to the original year for an album.

Here’s an example:

#+BEGIN_SRC sh
match:
    preferred:
        countries: ['US', 'GB|UK']
        media: ['CD', 'Digital Media|File']
        original_year: yes
#+END_SRC

By default, none of these options are enabled.
***** Use only original date of artist release
add this to your config
#+BEGIN_SRC sh
original_date: yes
#+END_SRC 
**** import music
***** basics
To import music, just say beet import MUSICDIR. There are, of course, a few command-line options you should know:

`Dont autotag`
#+BEGIN_SRC sh
beet import -A
#don’t try to autotag anything; just import files (this goes much faster than with autotagging enabled)
#+END_SRC

`keep logfile`
#+BEGIN_SRC sh
beet import -l LOGFILE

#write a message to LOGFILE every time you skip an album or choose to take its tags “as-is” (see below) or the album is skipped as a duplicate; this lets you come back later and reexamine albums that weren’t tagged successfully
#+END_SRC

`quite import`
#+BEGIN_SRC sh
beet import -q
#quiet mode. Never prompt for input and, instead, conservatively skip any albums that need your opinion.
#+END_SRC
%Tip The -ql combination is recommended%

`import single files`
#+BEGIN_SRC sh
beet import -s
#run in singleton mode, tagging individual tracks instead of whole albums at a time. See the “as Tracks” choice below. This means you can use beet import -AC to quickly add a bunch of files to your library without doing anything to them.
#+END_SRC
    
***** import OPTIONS     
      
http://beets.readthedocs.org/en/v1.3.1/guides/tagger.html

#+BEGIN_EXAMPLE
    beet import -A: don’t try to autotag anything; just import files (this goes much faster than with autotagging enabled)

    beet import -W: when autotagging, don’t write new tags to the files themselves (just keep the new metadata in beets’ database)

    beet import -C: don’t copy imported files to your music directory; leave them where they are

    beet import -l LOGFILE: write a message to LOGFILE every time you skip an album or choose to take its tags “as-is” (see below) or the album is skipped as a duplicate; this lets you come back later and reexamine albums that weren’t tagged successfully

    beet import -q: quiet mode. Never prompt for input and, instead, conservatively skip any albums that need your opinion. The -ql combination is recommended.

    beet import -t: timid mode, which is sort of the opposite of “quiet.” The importer will ask your permission for everything it does, confirming even very good matches with a prompt.

    beet import -p: automatically resume an interrupted import. The importer keeps track of imports that don’t finish completely (either due to a crash or because you stop them halfway through) and, by default, prompts you to decide whether to resume them. The -p flag automatically says “yes” to this question. Relatedly, -P flag automatically says “no.”

    beet import -s: run in singleton mode, tagging individual tracks instead of whole albums at a time. See the “as Tracks” choice below. This means you can use beet import -AC to quickly add a bunch of files to your library without doing anything to them.
#+END_EXAMPLE
***** manually entering MB  ID
when the match isnt perfect you can manually enter a music ID when you get prompted
#+begin_src sh
No matching release found for 12 tracks.
For help, see: http://beets.readthedocs.org/en/latest/faq.html#nomatch
[U]se as-is, as Tracks, Skip, Enter search, enter Id, aBort? 
#+end_src
Enter `I` and then enter the correct album ID
one way of getting the MB ID is using the website:


#+DOWNLOADED: /tmp/screenshot.png @ 2013-12-14 08:20:28
#+attr_html: :width 600px
 [[~/org/attach/images_2013//screenshot_2013-12-14_08:20:28.png]]

$Note$ the `MBID` which is the one we are looking for
enter it and continue with importing

***** import and clear part of a field in the process (using zero)
suppose you want to clear a part of the files, ₆In example₆ leave only the F in the comment field
use the zero plugin and use regex

#+BEGIN_EXAMPLE
comments: [ '^[^Ff]' ]
#+END_EXAMPLE

$Note$ the regex needs to be within brackets for the plugins option and then qoutes ('')
$Note$ this removes anything but a soely standing 'f' or 'F'
***** reimport
The import command can also be used to “reimport” music that you’ve already added to your library. This is useful when you change your mind about some selections you made during the initial import, or if you prefer to import everything “as-is” and then correct tags later.

Just point the beet import command at a directory of files that are already catalogged in your library. Beets will automatically detect this situation and avoid duplicating any items. In this situation, the “copy files” option (-c/-C on the command line or copy in the config file) has slightly different behavior: it causes files to be moved, rather than duplicated, if they’re already in your library. (The same is true, of course, if move is enabled.) That is, your directory structure will be updated to reflect the new tags if copying is enabled; you never end up with two copies of the file.

The -L (--library) flag is also useful for retagging. Instead of listing paths you want to import on the command line, specify a query string that matches items from your library. In this case, the -s (singleton) flag controls whether the query matches individual items or full albums. If you want to retag your whole library, just supply a null query, which matches everything: beet import -L

Note that, if you just want to update your files’ tags according to changes in the MusicBrainz database, the MBSync Plugin is a better choice. Reimporting uses the full matching machinery to guess metadata matches; mbsync just relies on MusicBrainz IDs.
***** Choose a path style manually for some music
Sometimes, you need to categorize some songs differently in your file system. For example, you might want to group together all the music you don't really like but keep around to play for friends and family. This is, of course, impossible to determine automatically using metadata from MusicBrainz.

Instead, use a flexible attribute (see above) to store a flag on the music you want to categorize, like so:

#+BEGIN_EXAMPLE
beet modify bad=1 christmas
#+END_EXAMPLE

Then, you can query on this field in your path formats to sort this music differently. Put something like this in your configuration file:

#+BEGIN_EXAMPLE
paths:
    bad:1: Bad/$artist/$title
#+END_EXAMPLE

Used together, flexible attributes and path format conditions let you sort your music by any criteria you can imagine.
**** plugins
***** config plugins

Plugins extend beets’ core functionality. They add new commands, fetch additional data during import, provide new metadata sources, and much more. If beets by itself doesn’t do what you want it to, you may just need to enable a plugin—or, if you want to do something new, writing a plugin is easy if you know a little Python.

To use one of the plugins included with beets (see below for a list), just use the plugins option in your config.yaml file, like so:

#+BEGIN_EXAMPLE
plugins: mygreatplugin someotherplugin
#+END_EXAMPLE

***** MPDUpdate Plugin
***** lyrics plugin
****** Fetch Lyrics During Import

The lyrics plugin fetches and stores song lyrics from databases on the Web. Namely, the current version of the plugin uses Lyric Wiki, Lyrics.com, and, optionally, the Google custom search API.

To automatically fetch lyrics for songs you import, just enable the plugin by putting lyrics on your config file’s plugins line (see Plugins). When importing new files, beets will now fetch lyrics for files that don’t already have them. The lyrics will be stored in the beets database. If the `import.write` config option is on, then the lyrics will also be written to the files’ tags.

This behavior can be disabled with the auto config option (see below).

****** Fetching Lyrics Manually

The lyrics command provided by this plugin fetches lyrics for items that match a query (see Queries).
For example

#+BEGIN_EXAMPLE
beet lyrics magnetic fields absolutely cuckoo
#+END_EXAMPLE

will get the lyrics for the appropriate Magnetic Fields song

#+BEGIN_EXAMPLE
beet lyrics magnetic fields
#+END_EXAMPLE

will get lyrics for all my tracks by that band and

#+BEGIN_EXAMPLE
beet lyrics
#+END_EXAMPLE

will get lyrics for my entire library. The lyrics will be added to the beets database and, if import.write is on, embedded into files’ metadata.

The -p option to the lyrics command makes it print lyrics out to the console so you can view the fetched (or previously-stored) lyrics.

The -f option forces the command to fetch lyrics, even for tracks that already have lyrics.

****** Configuring

To disable automatic lyric fetching during import, set the auto option to false, like so:

#+BEGIN_EXAMPLE
lyrics:
    auto: no
#+END_EXAMPLE

By default, if no lyrics are found, the file will be left unchanged. To specify a placeholder for the lyrics tag when none are found, use the fallback configuration option:

lyrics:
    fallback: 'No lyrics found'

****** Activate Google custom search

Using the Google backend requires BeautifulSoup, which you can install using pip by typing:

#+BEGIN_SRC sh
pip install beautifulsoup4
#+END_SRC

You also need to register for a Google API key. Set the google_API_key configuration option to your key. This enables the Google backend.

Optionally, you can define a custom search engine. Get your search engine’s token and use it for your google_engine_ID configuration option. By default, beets use a list of sources known to be scrapeable.

Here’s an example of config.yaml:

lyrics:
  google_API_key: AZERTYUIOPQSDFGHJKLMWXCVBN1234567890_ab
  google_engine_ID: 009217259823014548361:lndtuqkycfu

Note that the Google custom search API is limited to 100 queries per day. After that, the lyrics plugin will fall back on its other data sources.

***** replay gain
This plugin can use one of two backends to compute the ReplayGain values: GStreamer and mp3gain (and its cousin, aacgain). mp3gain can be easier to install but GStreamer support more audio formats.

#+BEGIN_SRC 
replaygain:
    backend: gstreamer
#+END_SRC

options:

#+BEGIN_EXAMPLE
replaygain:
    overwrite: yes
#+END_EXAMPLE

you can also manually analyze files that are already in your library. Use the beet replaygain command:

#+BEGIN_EXAMPLE
$ beet replaygain [-a] [QUERY]
#+END_EXAMPLE
The -a flag analyzes whole albums instead of individual tracks. Provide a query (see Queries) to indicate which items or albums to analyze.

***** zero

The Zero plugin  lets you get rid of specific fields during import
the only fields that can be cleaned can be found here:
#+begin_src sh
beets fields
#also in the below url
#+end_src
http://beets.readthedocs.org/en/latest/reference/pathformat.html#itemfields


#+begin_src ruby
zero:
    fields: month day genre comments albumartist_sort albumartist_credit composer grouping bpm comp mb_trackid mb_albumid mb_artistid mb_albumartistid albumtype label acoustid_fingerprint acoustid_id mb_releasegroupid asin catalognum script language country albumstatus media albumdisambig disctitle encoder rg_track_gain rg_track_peak rg_album_gain rg_album_peak original_month original_day bitdepth rg_track_gain rg_track_peak rg_album_gain rg_album_peak channels albumartist_sort albumartist_credit  mb_releasegroupid catalognum  script language country albumstatus media albumdisambig rg_album_gain rg_album_peak original_year original_month original_day
#+end_src

From MAN page:

The zero plugin allows you to null fields in files’ metadata tags. Fields can be nulled unconditionally or conditioned on a pattern match. For example, the plugin can strip useless comments like “ripped by MyGreatRipper.” This plugin only affects files’ tags; the beets database is unchanged.

To use the plugin, enable it by including zero in the plugins line of your configuration file. To configure the plugin, use a zero: section in your configuration file. Set fields to the (whitespace-separated) list of fields to change. You can get the list of available fields by running beet fields. To conditionally filter a field, use field: [regexp, regexp] to specify regular expressions.

For example:

#+begin_src ruby
zero:
    fields: month day genre comments
    comments: [EAC, LAME, from.+collection, 'ripped by']
    genre: [rnb, 'power metal']
#+end_src

If a custom pattern is not defined for a given field, the field will be nulled unconditionally.

Note that the plugin currently does not zero fields when importing “as-is”.
***** scrub

if enabled auto blanks all non beets field while importing

-from man page-

The scrub plugin lets you remove extraneous metadata from files’ tags. If you’d prefer never to see crufty tags that come from other tools, the plugin can automatically remove all non-beets-tracked tags whenever a file’s metadata is written to disk by removing the tag entirely before writing new data. The plugin also provides a command that lets you manually remove files’ tags.
Automatic Scrubbing

To automatically remove files’ tags before writing new ones, just enable the plugin (see Plugins). When importing new files (with import.write turned on) or modifying files’ tags with the beet modify command, beets will first strip all types of tags entirely and then write the database-tracked metadata to the file.

This behavior can be disabled with the auto config option (see below).
Manual Scrubbing

The scrub command provided by this plugin removes tags from files and then rewrites their database-tracked metadata. To run it, just type beet scrub QUERY where QUERY matches the tracks to be scrubbed. Use this command with caution, however, because any information in the tags that is out of sync with the database will be lost.

The -W (or --nowrite) option causes the command to just remove tags but not restore any information. This will leave the files with no metadata whatsoever.
Configuring

The plugin has one configuration option, auto, which lets you disable automatic metadata stripping. To do so, add this to your config.yaml:

#+BEGIN_EXAMPLE
scrub:
    auto: no
#+END_EXAMPLE
***** EmbedArt Plugin

Typically, beets stores album art in a “file on the side”: along with each album, there is a file (named “cover.jpg” by default) that stores the album art. You might want to embed the album art directly into each file’s metadata. While this will take more space than the external-file approach, it is necessary for displaying album art in some media players (iPods, for example).

`Embedding Art Automatically`

To automatically embed discovered album art into imported files, just enable the plugin (see Plugins). You’ll also want to enable the FetchArt Plugin to obtain the images to be embedded. Art will be embedded after each album is added to the library.

This behavior can be disabled with the auto config option (see below).

`Manually Embedding and Extracting Art`

The embedart plugin provides a couple of commands for manually managing embedded album art:

beet embedart [-f IMAGE] QUERY: embed images into the every track on the albums matching the query. If the -f (--file) option is given, then use a specific image file from the filesystem; otherwise, each album embeds its own currently associated album art.

beet extractart [-o FILE] QUERY: extracts the image from an item matching the query and stores it in a file. You can specify the destination file using the -o option, but leave off the extension: it will be chosen automatically. The destination filename defaults to cover if it’s not specified.

beet clearart QUERY: removes all embedded images from all items matching the query. (Use with caution!)

`Configuring`

The auto option lets you disable automatic album art embedding. To do so, add this to your config.yaml:

#+BEGIN_EXAMPLE
embedart:
    auto: no
#+END_EXAMPLE

A maximum image width can be configured as maxwidth to downscale images before embedding them (the original image file is not altered). The resize operation reduces image width to maxwidth pixels. The height is recomputed so that the aspect ratio is preserved. PIL or ImageMagick is required to use the maxwidth config option. See also Image Resizing for further caveats about image resizing.

***** beet info
The info plugin provides a command that dumps the current tag values for any file format supported by beets. It works like a supercharged version of mp3info or id3v2.

Enable the plugin and then type:

#+BEGIN_SRC sh
beet info /path/to/music.flac
#+END_SRC

and the plugin will enumerate all the tags in the specified file. It also accepts multiple filenames in a single command-line.
***** convert
****** Installation

First, enable the convert plugin (see Plugins).

To transcode music, this plugin requires the ffmpeg command-line tool. If its executable is in your path, it will be found automatically by the plugin. Otherwise, configure the plugin to locate the executable:

convert:
    ffmpeg: /usr/bin/ffmpeg

****** Usage

To convert a part of your collection, run

#+BEGIN_SRC sh
beet convert QUERY
#+END_SRC

This will display all items matching QUERY and ask you for confirmation before starting the conversion. The -a (or --album) option causes the command to match albums instead of tracks.

****** options
The -t (--threads) and -d (--dest) options allow you to specify or overwrite the respective configuration options.

By default, the command places converted files into the destination directory and leaves your library pristine. To instead back up your original files into the destination directory and keep converted files in your library, use the -k (or --keep-new) option.
Configuration

The plugin offers several configuration options, all of which live under the convert: section:

    dest sets the directory the files will be converted (or copied) to. A destination is required—you either have to provide it in the config file or on the command line using the -d flag.
    embed indicates whether or not to embed album art in converted items. Default: true.
    If you set max_bitrate, all lossy files with a higher bitrate will be transcoded and those with a lower bitrate will simply be copied. Note that this does not guarantee that all converted files will have a lower bitrate—that depends on the encoder and its configuration.
    auto gives you the option to import transcoded versions of your files automatically during the import command. With this option enabled, the importer will transcode all non-MP3 files over the maximum bitrate before adding them to your library.
    quiet mode prevents the plugin from announcing every file it processes. Default: false.
    paths lets you specify the directory structure and naming scheme for the converted files. Use the same format as the top-level paths section (see Path Format Configuration). By default, the plugin reuses your top-level path format settings.
    Finally, threads determines the number of threads to use for parallel encoding. By default, the plugin will detect the number of processors available and use them all.

These config options control the transcoding process:

    format is the name of the audio file format to transcode to. Files that are already in the format (and are below the maximum bitrate) will not be transcoded. The plugin includes default commands for the formats MP3, AAC, ALAC, FLAC, Opus, Vorbis, and Windows Media; the default is MP3. If you want to use a different format (or customize the transcoding options), use the options below.
    extension is the filename extension to be used for newly transcoded files. This is implied by the format option, but you can set it yourself if you’re using a different format.
    command is the command line to use to transcode audio. A default command, usually using an FFmpeg invocation, is implied by the format option. The tokens $source and $dest in the command are replaced with the paths to the existing and new file. For example, the command ffmpeg -i $source -y -aq 4 $dest transcodes to MP3 using FFmpeg at the V4 quality level.

****** example configuration:

#+BEGIN_EXAMPLE
convert:
    embed: false
    format: aac
    max_bitrate: 200
    dest: /home/user/MusicForPhone
    threads: 4
    paths:
        default: $albumartist/$title
#+END_EXAMPLE

If you have several formats you want to switch between, you can list them under the formats key and refer to them using the format option. Each key under formats should contain values for command and extension as described above:

#+BEGIN_EXAMPLE
convert:
    format: speex
    formats:
        speex:
            command: ffmpeg -i $source -y -acodec speex $dest
            extension: spx
        wav:
            command: ffmpeg -i $source -y -acodec pcm_s16le $dest
            extension: wav

#+END_EXAMPLE
 
***** play plug-in
****** config in beets
#+BEGIN_SRC ruby
play:
   command: /home/zeltak/bin/beets_playplugin.sh
   relative_to: /home/zeltak/music/
#+END_SRC

****** general
The play plugin allows you to pass the results of a query to a music player in the form of an m3u playlist.
Use it by invoking the beet play command with a `query`.
The command will create a temporary m3u file and open it using an appropriate application
$Note-for MPD users you don't want the m3u but use the script in the mpd integration section below to auto add to mpd $ 
You can query albums instead of tracks using the -a option.      
examples:

#+BEGIN_EXAMPLE
beet play heavy horses
#if using the custom field and lastimport plugin
beet play play_count:60..70  
#+END_EXAMPLE

****** use with MPD 
to use with mpd use the following script that the play plug-in calls upon.
first in the beets config set it up (see above header)
than save this script in the above path you defined

#+BEGIN_EXAMPLE
#!/bin/sh
#
# Make sure you set your relative_to path in beets' config.
# For example:
#
#   play:
#     relative_to: /mnt/media/music/
#     command: mpc-beets-play.sh
#

test $# -ne 1 && echo "$0 takes 1 argument" && exit 1
test ! -e "$1" && echo "Argument ($1) needs to be a file" && exit 2

mpc clear
cat $1 | mpc add
mpc play
#+END_EXAMPLE

***** lastimport plug-in
https://github.com/rafi/beets-lastimport

Clone somewhere and configure beets:

#+BEGIN_EXAMPLE
pluginpath:
  - /usr/lib/python2.7/site-packages/beetsplug
  - /home/rafi/code/python/beetsplug
plugins: lastimport
lastimport:
  per_page: 500
  retry_limit: 3
lastfm:
  user: yourname
  api_key: secret
types:
  play_count: int
  rating: float
#+END_EXAMPLE

Get your own API key from Last.fm

http://www.last.fm/api/account/create

and don't forgot to change the user name in beets configuration
%Tip- the API key is the first one not he lower one that starts with secrert is% 

then simply run 'beet lastimport' and wait for the plugin to request tracks from last.fm and try to match them to beets' database.

To see more information, run with verbose mode:

#+BEGIN_SRC sh
beet -v lastimport
#+END_SRC

**** Queries
***** Queries Intro

look here for update examples:

http://beets.readthedocs.org/en/v1.3.1/reference/query.html


Many of beets’ commands are built around query strings: searches that select tracks and albums from your library. This page explains the query string syntax, which is meant to vaguely resemble the syntax used by Web search engines.

`Keyword`
This command:

#+BEGIN_EXAMPLE
$ beet list love
#+END_EXAMPLE

will show all tracks matching the query string love. Any unadorned word like this matches anywhere in a track’s metadata, so you’ll see all the tracks with “love” in their title, in their album name, in the artist, and so on.

For example, this is what I might see when I run the command above:

#+BEGIN_EXAMPLE
Against Me! - Reinventing Axl Rose - I Still Love You Julie
Air - Love 2 - Do the Joy
Bag Raiders - Turbo Love - Shooting Stars
Bat for Lashes - Two Suns - Good Love
#+END_EXAMPLE

`Combining Keywords`

Multiple keywords are implicitly joined with a Boolean “and.” That is, if a query has two keywords, it only matches tracks that contain both keywords. For example, this command:

#+BEGIN_EXAMPLE
beet ls magnetic tomorrow
#+END_EXAMPLE

matches songs from the album “The House of Tomorrow” by The Magnetic Fields in my library. It doesn’t match other songs by the Magnetic Fields, nor does it match “Tomorrowland” by Walter Meego—those songs only have one of the two keywords I specified.

`Specific Fields`

Sometimes, a broad keyword match isn’t enough. Beets supports a syntax that lets you query a specific field—only the artist, only the track title, and so on. Just say field:value, where field is the name of the thing you’re trying to match (such as artist, album, or title) and value is the keyword you’re searching for.

example:

#+BEGIN_EXAMPLE
beet list artist:dream
#+END_EXAMPLE
only matches songs by the artist The-Dream. One query I especially appreciate is one that matches albums by year:

#+BEGIN_EXAMPLE
beet list -a year:2012
#+END_EXAMPLE

Recall that -a makes the list command show albums instead of individual tracks, so this command shows me all the releases I have from this year.

`Phrases`

You can query for strings with spaces in them by quoting or escaping them using your shell’s argument syntax. For example, this command:

#+BEGIN_EXAMPLE
beet list the rebel
#+END_EXAMPLE

shows several tracks in my library, but these (equivalent) commands:

$ beet list "the rebel"
$ beet list the\ rebel

only match the track “The Rebel” by Buck 65. Note that the quotes and backslashes are not part of beets’ syntax; I’m just using the escaping functionality of my shell (bash or zsh, for instance) to pass the rebel as a single argument instead of two.
***** Examples
****** Find all artist starting with letter X
#+begin_src sh
beet list artist::^X
#+end_src
****** find specific date (album dates)
finds all your albums that were released in the ‘90s:
#+BEGIN_SRC sh
beet list -a year:1990..1999
#+END_SRC

%tip-To use ranges, write a query that has two dots (..) at the beginning, middle, or end of a string of numbers.%
-dots in the beginning let you specify a maximum (e.g., ..7)
-dots at the end mean a minimum (4..); 
-dots in the middle mean a range (4..7).
****** find last added albums

       #+NAME: 
       #+BEGIN_SRC sh
beet ls -af '$added $album' | sort | tail -n20 
       #+END_SRC

$Note$ you can use head instead of tail to get start of list and use other bash utils..

****** find all tracks without replaygain info
#+begin_src bash
beet ls rg_track_gain::"^$"  
#+end_src

**** Remove

#+BEGIN_SRC sh
beet remove [-ad] QUERY
#+END_SRC

Remove music from your library.

This command uses the same query syntax as the list command. You’ll be shown a list of the files that will be removed and asked to confirm. By default, this just removes entries from the library database; it doesn’t touch the files on disk.

!To actually delete the files, use:!

#+BEGIN_SRC sh
beet remove -d. 
#+END_SRC iDO mode
**** Modify
***** General modify command

#+BEGIN_EXAMPLE
beet modify [-MWay] QUERY FIELD=VALUE...
#+END_EXAMPLE

Change the metadata for items or albums in the database.

Supply a query matching the things you want to change and a series of field=value pairs. For example, beet modify genius of love artist="Tom Tom Club" will change the artist for the track “Genius of Love.” The -a switch operates on albums instead of individual tracks. Items will automatically be moved around when necessary if they’re in your library directory, but you can disable that with -M. Tags will be written to the files according to the settings you have for imports, but these can be overridden with -w (write tags, the default) and -W (don’t write tags). Finally, this command politely asks for your permission before making any changes, but you can skip that prompt with the -y switch.

***** Add/change lyrics
use modify to add lyrics in the following way:

#+BEGIN_SRC sh
beet modify bum leg lyrics="LYRICS HERE"
#+END_SRC

$Note- you may need to add the last " manually and press enter in some terminals$
**** updating/tweaking
***** manually remove file (delete) and remove from beets DB
two options:

1.delete the files/folder you want and issue
#+begin_src sh
beet update
#+end_src

use the beets remove pointing to a specific folder

#+BEGIN_SRC sh
beet remove /FULL/PATH/
#+END_SRC

***** fix a soundtrack wrong placment
edit the album and remove the musicbrainz albumtype id (from soundtrack to album or blank)
then import again using the -A option
#+BEGIN_SRC sh
beet import -A  /home/zeltak/music/2Soundtracks/A\ Hard\ Day\'s\ Night
#+END_SRC
**** MPD integration
***** add query to mpd
enter this in you zshrc/bashrc

#+BEGIN_EXAMPLE
alias badd='sed "s:/home/zeltak/music/::" | sed "s/ /\ /g" | mpc add'
#+END_EXAMPLE

#+begin_src sh
beet ls -ap 'a_query' | badd
#+end_src
**** Cookbook
***** adding 
beet list -a added:="last 10 days" 
beet ls -a added:2014-02
*** Picard
**** Basic tagging

This quick start guide describes how you can tag your files using MusicBrainz Picard.

Click View, and then click File Browser.  Drag a folder to the Unmatched Files folder in the right-hand pane.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/6/6c/Picard2011_1.png @ 2013-11-16 08:43:17
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_1_2013-11-16_08:43:16.png]]

Wait for Picard to process the files (the names will turn from grey to black) and then click the Cluster toolbar button to cluster files into album clusters.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/f/f7/Picard2011_2.png @ 2013-11-16 08:43:39
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_2_2013-11-16_08:43:39.png]]


Select a clustered album and click the Lookup toolbar button to look the cluster up. Depending on your previous metadata, album will show up in the right-hand pane. If an album shows up, go to step 7. Since you are a new Picard user, we recommend that you read the steps in between as well.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/4/42/Picard2011_3.png @ 2013-11-16 08:44:08
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_3_2013-11-16_08:44:08.png]]

If nothing happened when you clicked the Lookup toolbar button, click the Lookup button in the bottom panel. Your default browser will open and allow you to find the right album manually.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/f/fe/Picard2011_4.png @ 2013-11-16 08:45:41
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_4_2013-11-16_08:45:41.png]]

Pay attention to the amount of tracks in each album, and pick the one you have.

Click the green tagger icon, the album should now appear in the right pane


#+DOWNLOADED: /tmp/screenshot.png @ 2013-11-16 08:46:59
#+attr_html: :width 300px
 [[~/org/attach/images_2013//screenshot_2013-11-16_08:46:59.png]]

Drag the clustered album onto the album that was just opened, if it didn't happen automatically.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/8/8b/Picard2011_6.png @ 2013-11-16 08:47:14
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_6_2013-11-16_08:47:14.png]]

Depending on your previous metadata, Picard will try to guess the matching tracks. The order is green > yellow > orange > red, where green is the best match. If you are seeing a lot of red and orange, it could mean that Picard has guessed wrong, or that your files didn't have a lot previous metadata to work with.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/4/41/Picard2011_7.png @ 2013-11-16 08:47:24
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_7_2013-11-16_08:47:24.png]]

If this is the case, it's recommended to click a track and compare the metadata using the Original Metadata and New Metadata panels at the bottom of picard window. If there is an incorrect match, simply drag & drop the track to its correct spot.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/b/bc/Picard2011_8alt.png @ 2013-11-16 08:47:42
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_8alt_2013-11-16_08:47:42.png]]

When you are satisfied with the matches, select the album you want to save and click on the Save toolbar button to save files.

#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/b/bc/Picard2011_9.png @ 2013-11-16 08:47:57
#+attr_html: :width 300px
 [[~/org/attach/images_2013//Picard2011_9_2013-11-16_08:47:57.png]]
A green check mark means the file is saved in its proper location.


#+DOWNLOADED: http://wiki.musicbrainz.org/-/images/f/f3/Picard2011_10.png @ 2013-11-16 08:48:01
#+attr_html: :width 300px

 [[~/org/attach/images_2013//Picard2011_10_2013-11-16_08:48:01.png]]

*** replaygain
**** best way to add replaygain tags (through foobar/wine)
install foobar on linux with a simple command:

wine /PATH/TO/foobar.exe

then add the files you need to add replaygain to the playlist

mark then all (ctrl-a) and choose replay gain and use the "scan selection by albums (by tags)"
y
let it compute all the replaygains and then save the replaygain into the tag

*** puddletag

**** copy one filed to another

[[~/Dropbox/Org/Tech/linux_files/Image_PnUiQXLx8wYDorS3BJyBRg_0001.png]]
 make a new action :
 Action Menu, then choose Actions. Click on the New Configuration icon,
and give the Configuration a name, click OK. In the next box (Actions)
you need to click New Configuration again, and select Action Type, then
Format Value. Click OK. In the next box choose the field to replace and
the field you want to replace it with (between %'s):
 %artist%. Click OK.
 
 NOTE: make sure the letters are not capitilized

**** BUG: fix the actions not saving names etc

Actions are Buggy in puddletag, to give an action a unique name and
maybe edit some fields by hand that are hard to edit from within
Puddletag, edit the actions files located here in :
 /home/zeltak/.puddletag/actions

 with a text editor and restart puddletag

*** minidlna

Installation

[[https://wiki.archlinux.org/index.php/Pacman][Install]][[https://www.archlinux.org/packages/?name=minidlna][minidlna]]from
thearch
[[https://wiki.archlinux.org/index.php/Official_Repositories][official
repositories]].
 Configuration

The MiniDLNA daemon can be run as either a global
(config:/etc/minidlna.conf) or per-user instance (config:user-defined),
these are the necessary common config options you should edit
 vim /etc/minidlna.conf
 settings:

#network interface=eth0 # Self-discovers if commented (at times
necessary to set)
 media dir=A,/home/user/Music # Mounted Media Collection drive
directories
 media dir=P,/home/user/Pictures # Use A, P, and V to restrict media
'type' in directory
 media dir=V,/home/user/Videos
 friendly name=Media Server # Optional
 db dir=/var/cache/minidlna # MiniDLNA Media DB dir needs to be
un-commented
 log dir=/var/log # Log dir needs to be un-commented
 inotify=yes # 'no' for less resources, restart required for new media

presentation url=[[http://www.mylan/index.php][http://www.mylan/index.php]]
# or use your device static IP IE
[[http://192.168.0.14:8200/][http://192.168.0.14:8200/]]
 Global

MiniDLNA scans your/Media Collection/at startup and creates or
updates database/Media DB/browsable via media players.
 Set database cache and logging dirs in config, so the db and album art
cache won't be re-created on every restart. By default MiniDLNA runs
as/nobody/[[https://wiki.archlinux.org/index.php/Users_and_Groups][user]]without
shell access as set in//etc/conf.d/minidlna/, unless you set your own.
 That user needs rw permissions to cache and log directories you
specified in conf. Create the required directories andchownthem
tonobody:nobody.
 issue this
 # mkdir /var/{cache,log}/minidlna
 # chown nobody:nobody /var/{cache,log}/minidlna

**** update database

as root issue:

 minidlna -R

 note: its not needed if you enabled inotify

** launchers
*** gnome-do

**** gnome do tips

How to kill gnome-do
 Get the process number and then kill it. once killed you can restart
from your main menu or via command line with gnome-do
 To get the process number:
 ps aux | grep Do
 To start GNOME Do without showing its window
 use the --quiet option:
 $ gnome-do --quiet
 or
 $ gnome-do -q
 
 Install gnome-do from SVN
 On an Ubuntu, Debian, or derived system, these dependencies can be
installed by
 sudo aptitude install automake bzr mono-gmcs libmono-cairo2.0-cil
gtk-sharp2 libndesk-dbus-glib1.0-cil libndesk-dbus1.0-cil
libgnome-vfs2.0-cil libgtk2.0-dev libtool intltool gnome-sharp2
ca-certificates
 Once all the dependencies are installed, the Do source can be branched
by:
 bzr branch lp:do gnome-do
 and then built and installed by one of the following:
 cd gnome-do
 ./autogen.sh
 make
 sudo make install
 To update run
 $ bzr pull

**** Window layer bug under kde4

Window Layer Bugs
 Some KDE users have reported a bug (particularly in KDE 4) where Do
stops aphring above their other windows like it is supposed to. Do user
Killerah has posted a fix on Launchpad, transcribed here:
 In KDE 4 go to System Settings>Window Behavior and create a new window
specific setting. Change "Window Class" to "Exact Match" and type in
"do".
 Now click on the "Window Extra" tab and set the window type to "Splash
Screen", then change "Window Title" to "Exact Match" and type in "Do".
 Now go to the "Workarounds" tab and set "Focus Stealing Prevention" to
"Force" and "None", then change "Window type" to "Force" and "Splash
Screen".
 Then just Hit OK and Apply and you should be good to go.

*** gmrun

**** Usage

Usage:
 GUI apps can just be typed in and run by pressing enter, terminal apps
can be run by using ctrl-enter. Entering ctrl-enter with a blank input
box will open up a blank terminal.
 Gmrun features tab completion, entering tab will bring up a scrollable
list of possible matches.
 Web addresses eg
[[http://crunchbanglinux.org][http://crunchbanglinux.org]], entered into
Gmrun will launch a web browser automatically.
 The same goes for email addresses, using the '[[mailto:%27][mailto:']]
prefix eg [[mailto:foo@bar.com][mailto:foo@bar.com]], will launch you
email client.
 Search:
 You can enter search mode by entering '!' as the first letter, the
title should change from 'Run program' to 'Search', letters you input
will then automatically come up with suggestions from your command
history.
 Ctrl-r will allow you to search backwards through that history.
 Ctrl-s will search forward through the history.
 Ctrl-g will cancel a search
 If an extension has been defined in the configuration file, files can
be launched by the correct program just by typing the file name.
 Press escape to exit, without running anything.

**** example full rc file

Example full rc file (.gmrunrc)
 # gmrun configuration file
 # gmrun is (C) Mihai Bazon, <mishoo@infoiasi.ro>
 # GPL v2.0 applies
 # Set terminal
 Terminal = sakura
 TermExec = ${Terminal} -e
 AlwaysInTerm = ssh telnet ftp lynx mc vi vim pine centericq perldoc man
 # Set window geometry (except height)
 Width = 400
 Top = 100
 Left = 200
 # History size
 History = 256
 # Shows last history line selected when invoked
 ShowLast = 1
 # Show files starting with '.'
 # Default is 0 (off), set it to 1 if you want "hidden" files to show up
 # in the completion window
 ShowDotFiles = 0
 # Timeout (in milliseconds) after which gmrun will simulate a TAB press
 # Set this to NULL if don't like this feature.
 TabTimeout = 0
 # URL handlers
 # If the entered text is "http://www.google.com" then:
 # - %u gets replaced with the whole URL ("http://www.google.com")
 # - %s gets replaced with "//www.google.com". This is useful for URL-s
 # like "man:printf" --> %s will get replaced with "printf"
 URL http = mozilla -remote "openURL(%u, new-window)"
 URL mailto = mozilla -remote "mailto(%s)"
 URL man = ${TermExec} 'man %s'
 URL info = ${TermExec} 'info %s'
 URL pd = ${TermExec} 'perldoc %s'
 URL file = nautilus %s
 URL readme = ${TermExec} 'less /usr/doc/%s/README'
 URL info = ${TermExec} 'info %s'
 URL sh = sh -c '%s'
 # extension handlers
 EXT:doc,rtf = AbiWord %s
 EXT:txt,cc,cpp,h,java,html,htm,epl,tex,latex,js,css,xml,xsl,am = emacs
%s
 EXT:ps = gv %s
 EXT:pdf = xpdf %s

**** crunchbang specific

edit your ~/.gmrunrc like this:
 # Set window geometry
 Width = 500
 Top = 350
 Left = 250
 # You can make aliases withing gmrun, for example:
 # My second firefox profile (made with `firefox -ProfileManager`)
 URL ff =`/usr/bin/firefox -P 2` #type ff:
 Terminal = gnome-terminal #type ctrl-enter
 TermExec = gnome-terminal -e
 URL http = /usr/bin/firefox %u
 URL https = /usr/bin/firefox %u
 URL uf = /usr/bin/firefox http://ubuntuforums.org/ #type uf://
 URL mail = /usr/bin/firefox https://mail.google.com/ #type mail://
 URL top = ${TermExec} '%s' #type [command] ctrl-enter
 URL mc = ${TermExec} '%s'
 Getting a little more out of GMRun
 The box that pops up to launch an app when you hit Alt - F2 is gmrun.
 Crunchbang, or at least my version of it (this may have changed)
doesn't ship with a gmrun config file. It's got the
/usr/share/gmrun/gmrunrc symlink but not /etc/gmrunrc or ~/.gmrunrc
 I'm getting a little more out of gmrun with the following config
 Terminal = terminator
 TermExec = terminator --command
 URL http = /usr/bin/firefox %u
 It works the same way regardless of location, so you can add it to
either /etc/gmrunrc or ~/.gmrunrc.
 Why bother? Now Alt+F2 to open the gmrun dialog, then:
 1) type htop (or whatever), then Ctrl + Enter ==> Terminator will
open running htop (or whatever)
 2) leave the dialog blank and hit Ctrl + Enter ==> just Terminator
ready to go (an openbox keyboard binding is better but worth point out
you've got this now)
 3) http://example.com ==> Firefox opens with example.com loaded
 I think you can add your own URL link for anything you want with that
general format (say ftp to gFTP for example)
 Hopefully that helps someone. Now if only the alt+f2 binding worked all
the time...

**** using url as aliases

you can use the url function to assign aliases
 for exmaple:
 URL up = ${TermExec} 'sudo pacman -Syu && echo %s'
 to run it in gmenu you would have to enter up://

*** bashrun

**** adding your aliases to bashrun

You can use the same conditional that is in .bashrc to specify another
file in which you can define all of your aliases, i.e:
 if [ -f ~/.bash aliases ]; then
 . ~/.bash aliases
 fi
 .so you don't have to copy everything across to another config file
when you want to change things

**** making sure it dosent lose focus on kde

go to the application window settings and make sure the keep above
"apply initially" is marked
 [[~/Dropbox/Org/Tech/linux_files/Image_N1BLHTjZk8IJ2V1n4vfaYA_0001.jpg]]

**** fix for focus/below window problems

** office
*** keepnote

**** get spell checker working under arch

install these depencies:
 pacman -S gnome-python-extras aspell aspell-en gtkspell

*** Notecase pro

**** errors

if you get the error about another instance of notecase runing delete
the lock file in ~/.notecase

**** keyboard shortcuts

switch from tree to note view ctrl+p

**** install on arch

issue:
 pacman -U notecase-i686.pkg.tar.xz

**** scripts

***** 13 SortLines.lua

Sort a marked text by alphabetic order
 that is
 abc
 zzd
 bba
 to
 abc
 bba
 zzd

***** 29 MarkedSetIcon.lua

change icons for selected notes
 its better to change this to your own icon IE:
 if bIsMarked ~= 0 then
 -- set an icon to the note
 -- Nc Note Icon SetValues(nDocID, strNoteID, 0)
 Nc Note Icon SetValues(nDocID, strNoteID, 2,
"/home/zeltak/MLT/programs/notecase/level1.png")
 --Nc Note Icon SetValues(nDocID, strNoteID, 1, "help")
 end
 end

***** 30 InsertBlockMarker.lua

creates a simple boundry of '----------------------' around text lines

***** 31 SetDefaultIcons.lua

sets default icons for all notes
 its better to edit the icons for the user picked ones

***** 34 CycleChildIcons.lua

Assigns an icon to the newly created note based on the icon of its
parent
 (6 predefined internal icons are cycled)
 Register this script to be executed on "Post note insert" event to get
the automatic icon assignment
 See Help file > How To > Scripts, Usage of > Launch Scripts Quicker >
Launch Scripts Automatically.
 Automatic icon assignment must be disabled for this script to function
as desired.

***** 36 ConvertLuaScript.lua

converts old NC scripts to new format

***** 40 WrapTextAsColumn.lua

Wrap selected note text to have maximal line length of 60 letters,
center the text too

***** 41 AutoTagger.lua

auto creates tag in document
 it goes through the text in each note and looks for avilable tags there

***** U1 SearchSelectedText.lua

Purpose: Create a list of nodes which contain the selected text
("search related info")
 
 Usage: Mark some text in a note, then start the script.
 
 Result: The list pane will show all notes of the current document
which contain the
 text which has been selected, either in the note text or in
the note title.

**** automation

***** intro

This document demonstrates different ways to use the NoteCase Pro
AutoReplace feature. It includes examples of a variety of abbreviations
and their expansions. Please browse this file for ideas on how you might
use AutoReplace.
 An AutoReplace template document will not trigger any expansions unless
it is closed, i.e., will not trigger an expansion if you have it opened
for editing. The document must also be registered with the current
document template group. See in the Help file, User Interface > Dialogs
> General Settings > AutoReplace Settings, for instructions.
 After saving and closing the edited AutoReplace template document, to
read the changes into memory, go to the AutoReplace sub-menu on the
Tools menu. Select a different group name or "(none)", then select the
group the template document is assigned to. That will cause the program
to load the revised version into memory.
 After an AutoReplace template document is read into memory, you may
reopen it to use as a reference if needed.
 An AutoReplace template document is a normal NoteCase Pro document and
can be saved in any of the program's non-encrypted natively-supported
file formats. The only limitations are that abbreviations (note titles)
must contain no spaces and that the document must be saved and the
program relaunched before any changes will be available. (Template
documents are loaded but invisible when in use. The document must also
be registered as an AutoReplace template document and assigned to an
AutoReplace group in Tools > General Settings > AutoReplace.
 At present there can be three types of notes in an AutoReplace template
document: [i] abbreviations (note title) and their expansions (note
content); [ii] abbreviations (note title prepended with a "lua:" string
and in the note content the script that will be executed when the
abbreviation is typed (without the prepended "lua:" string; and [iii]
comment notes whose titles are prepended by a colon. Only comment notes
may contain spaces in their titles.
 Note titles prepended by the "lua:" string signal NoteCase Pro that the
note's content is a script to be executed. In comment notes, the
prepended colon indicates to NoteCase Pro that the note is not an
abbreviation to be expanded or an embedded script. This allows you to
hierarchically arrange your abbreviations and expansions and also
enables you to create child notes containing information about their
parent notes that should not be included in the expansion.
 The activating keystrokes inserted after an abbreviation that will
trigger action on an abbreviation are:
 closing French brace ("}")
 closing bracket ("]")
 colon (";")
 double quote (" " ")
 equal sign (" = ")
 exclamation mark ("!")
 greater than symbol (">")
 period (".")
 question mark ("?")
 Return
 semi-colon (";")
 single quote (" ' ")
 space (" ")
 Tab
 
 Of course, no relevant action will occur unless an abbreviation has
been defined.
 For instructions on usage of the AutoReplace feature, please review the
AutoReplace Usage section of the NoteCase Pro Help file, at How To >
AutoReplace Usage.
 You are cordially invited to help improve this demonstration document
with your ideas. In that regard, please contact NoteCase Pro Support.
For contact methods, see NoteCase Pro Help file, About NoteCase Pro >
Contact.

***** autoreplace

AutoReplace uses Notecase documents as storage.
 You need to create one AutoReplace group (Options window, "AutoReplace"
page) having one or more .ncd (or .ncz).documents inside, and activate
it.
 [[~/Dropbox/Org/Tech/linux_files/2011-05-03-23-17-16-scrot.png]]
 The Notecase document consists of notes having a title and body (as
always). you can also use subfolders.
 [[~/Dropbox/Org/Tech/linux_files/2011-05-03-23-21-02-scrot.png]]
 Now, when you type some word in a text view (with the space character
following it), program checks if that word is equal to one of the titles
in the AutoReplace documents within a current AutoReplace group.
 If the match is found, word is replaced with the body of the matching
note.
 
 For example, you type "HappyHolidays" and the result is that a nicely
formatted message (with pictures) appears instead of that word.
 This is an concrete example from the demo file "AutoReplaceDemo.ncz"
that ships with the project.
 
 

***** auto replace rules

You have a demo file named "AutoReplaceDemo.ncz" coming with the
program.
 Basic rules for "autoreplace" documents:
 1. note title prefixed with ":" is not an autoreplace entry
 2. note title prefixed with "lua:" is an autoreplace Lua script
 3. all other titles are autoreplace text entries
 
 Basically, if you want to type "X" to execute a script, in your
Autoreplace file, you need to have a note having the title "lua:X".
Without "lua:" prefix, program does not know that the entry is a script
and it will just put the contents of the script at the place where you
typed the X.

***** auto complete

The usage is simple:
 
 - AutoComplete uses wordlists (one word per line in a plain text file)
 You need to create one AutoComplete group (Options window,
"AutoComplete" page) having one or more wordlist files and activate it
(it is already active if it was the last group you edited in Options
window).
 Now when you start typing some word in the text view, AutoComplete
will create a drop down list with all the words from your word list that
match the letters that you aready typed. For example you type "au" and
below your cursor you get the list with "automobile", "automatic", etc.
You can quickly select one of suggested words to complete the word you
type.

**** configuring

***** actions

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-19-26-10-scrot.png]]
 double click- when you double click the file
 drag-draging the file
 rawshoe (like F3 view)
 Raw action (like F4 edit)
 run custom action = you define a custom action (IE luanch mplayer) that
can be run on files
 User action- you can use one of the def 0-9 ones or define your own
 parent type-start the action of parent type (if different then
filetype)

**** tagging

***** tag a lost of nodes

1)select (mark) the nodes you want to tag
 2)press add marks to list
 3)in list mode open the tag pane and right click it
 
 choose the add thag to "listed notes"

**** change launch prog for attachments

edit this file as root:

sudo vim /usr/share/applications/mimeinfo.cache

 and change the mimetype prog

**** Awiki theme

bakckgroud: #FFFFFF
 note:#DDDDFF
 link: #3366BD
 main header: #222222 (bold)
 content bg: #F9FAFF
 warning: #FFDDDD
 tip: #DDFFDD
 code bg : #EBF1F5
 Example:
 Header1
 Header2
 Header3
 Note: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
ex ea commodo consequat.
 Warning: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed
do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
aliquip ex ea commodo consequat.
 Tip:Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
ex ea commodo consequat.

 CLI: sudo pacman -Ss Lorem

 Code:Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do
eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
ex ea commodo consequat.

*** basket 2

**** basket tips

How to Use BasKet Note Pads

 The basic concepts of this application:
 - Basket: a document where you can type notes. This is that big yellow
rectangle you're watching. Create different baskets for every subjects,
topics, projects you wish.
 - Basket tree: the tree on the left represents all your baskets. Click
on one of them to make it active.
 - Note: Baskets can contain a lot of notes. Notes are every single
rectangles here. They help separate every ideas you have about a
subject. You can have text, images, link, file notes...
 - Group: You can group related notes together. A little [-] will appear
in front of the group, letting you to only show the first note of the
group, to temporarily hide non-important notes.
 - Tag: You can assign several tags to every notes. You can mark a note
as Important, as To Do, and then check the note to mark it as Done...
You can also create your own tags, to categorize notes. Tags can change
the appearance of the note by setting colors and fonts.
 - Filter: Using the filter bar on top of this window, you can
immediatly show only the notes that match the text you type, or the
notes that have the tag you selected.
 - System tray icon: BasKet Note Pads is always running in the system
tray if you close the main window. Your notes are always at hand, very
quickly.
 You can assign a different icon and background color to your baskets.
 This greatly helps you recognize them quickly in the basket tree as it
grows.
 There are two basket layouts: columns, where notes are automatically
arranged for your convenience, and free-form, where you can put notes
everywhere, like you do with a piece of paper.
 There are three different options to create a new basket:
 - New Basket: create a blank one on the very bottom of your basket tree
(unless you specify a parent basket in the window that pops up).
 - New Sub-Basket: create a basket into the current basket. The
sub-basket will get the same background and image color, icon, layout...
so you do not have to configure that.
 - New Sibling Basket: create a basket at the same depth in the basket
tree as the current basket. Also inherit the properties of the current
basket. Practical if you represent different pages with sub-baskets: you
can add a "page" very quickly.
 You do not have to save your changes, they are always safe.
 You do not have to close text editors: text notes are automatically
saved.
 To select several notes at once (to be able to group or move them,
etc), draw a rectangle with the mouse.
 Click, and without releasing the mouse button, move the mouse to create
a blue rectangle that includes all the notes you want to select.
 You then can move them together or click the Group button in the
toolbar to put them together.
 General

 You can assign or remove a tag or a tag state to several notes at once
if there are several selected notes.
 To select a note, drag a selection rectangle on it: it's quicker than
clicking the note handle.
 You can move selected notes by dragging them: no need to drag the tiny
handle in this case.
 You can Ctrl+click a note to select or unselect it. It is quicker than
clicking its handle or drawing a selection rectangle on it.
 By Ctrl+clicking several notes, you can select several separated notes.
 You can Shift+click a note, and then Shift+click a second note: every
notes between the first and the second notes (including them) will be
selected.
 You can tag your notes to get more organized and find your data
quicker.
 For that, move your mouse on a note, click the little arrow that
appeared on the left and check the tags you want to assign to that note.
 You can make check-lists with this mechanism by assigning the "To Do"
tag and click the little square that appear to check the note.
 When inserting a note just before or after a note that have this "To
Do" tag, the new note will also have the checkbox.
 The notes that have tags with no visual clue (no icon, no color, no
font) or with overriden ones, present ellipsis ("...") at the left of
the emblems, so you can always quickly see what notes are tagged.
 To select several object that are not contiguous, Ctrl+click each one
to add or remove them from your selection.
 You can double-click a note handle or a group handle to copy the
note(s) to the selection. Click the little [+] on the left of this note
to learn what is the selection.
 When you select a text in any application, it is automatically copied
to a special clipboard named "Selection".
 You paste the selection with the middle mouse button.
 Double-clicking the handle of an iteam or a group let you paste it in
one click.
 The KDE session managment restore every applications when you restart
your session or your computer (active by default).
 You do not need to exit BasKet Note Pads before closing your session:
it will be automatically restarted during your next log in.
 You can definitively hide the text formatting toolbar so that it do not
waste space on the screen.
 Keyboard shortcuts (Ctrl+B for Bold, etc) will continue to work to
change the formatting.
 BasKet Note Pads easily lets you backup and restore your baskets. Go to
the Basket menu and choose Backup & Restore...
 It is recommanded to backup often to protect your data against a
computer failure.
 BasKet Note Pads data are all stored in a hidden folder, generally in
~/.kde/share/apps/basket (where ~ represents your Home folder).
 You can change that folder to a more visible one like ~/Notes or
~/Baskets for easy manual backups by going to the Basket menu and choose
Backup & Restore.
 You can use your own images for basket icons and tag icons. Simply open
the icon chooser window, click "Browse..." and select your image file
(the PNG format is recommended in order to use transparency).
 The Select All action (Ctrl+A) is progressive. It starts by selecting
all the notes in the group where the current note is. If you press
Ctrl+A a second time, all the note of the parent group will be added to
the selection, etc. Then all the column of the current note is selected.
And finally, all the notes of the basket are selected.
 The Home key is also progressive in the same manner: the focus will be
moved to the first note of the group, and then the first note of the
parent group, the first note of the current column, and finally, the
first note of the basket.
 Same for the End key.Keyboard Navigation
 To insert a new text note at cursor position, press Insert.
 This also works when you are editing another note, so you're not
interrupted.
 To insert a new note other than text, press Alt+I to popup the Insert
menu.
 Press Alt+T to popup the Tags menu and assign/remove tags to the
selected notes.
 You can move notes by maintaining the Ctrl and Shift keys, and pressing
the arrow keys. For instance, Ctrl+Shift+Down to move down a note.
 To switch between baskets, use Alt+Up and Alt+Down.
 You can fold or expand basket trees with Alt+Left and Alt+Right, like
you would do in any other tree, but with the Alt key!
 When the cursor is on the first note of a group, you can press Left to
fold the group, or Right to expand the group.
 When the cursor is in a group, you can press Left to go to the first
note of the group.
 Look at the properties of a basket: you can assign a keyboard shortcut
to every baskets, so they are always at hand in a matter of tenths of a
second!
 This application provides global shortcuts. Those are an easy and very
quick way to interact with your baskets. For instance, you can paste the
clipboard by pressing Ctrl+Alt+Shift+V, or copy the selected text of any
application to the current basket with Ctrl+Alt+Shift+S. The most
important is Ctrl+Alt+Shift+W: it allow to raise or to hide the main
window. Press it, work with your basket and press it again: you are then
ready to continue your work without BasKet Note Pads to ennoy you. Even
better: Ctrl+Alt+Shift+T allow to add a text note. An idea pops up in
your mind? Press Ctrl+Alt+Shift+T, write your idea, and then
Ctrl+Alt+Shift+W and you're done. As you can see, this application is
quite unobtrusive.
 You can configure the global shortcuts (change or remove them, and even
discover lot of other ones) by poping up the Settings menu and choosing
"Configure Global Shortcuts".
 When editing a text note or a file name, you can press Escape to close
the editor and go back in "note browsing" mode.
 When the focus is on the filter bar, you can:
 - Press Enter to move the focus to the filtered basket (to browse
throught the matching notes). You still can press Escape from the basket
to reset the filter.
 - Press Escape to reset the filter and go back to the basket when
you're done.
 If the focus is in the basket and you are not editing a note, pressing
Escape unselect everything.
 In the Tag Customization window, you can use Ctrl+Up and Ctrl+Down to
edit the previous and next tag or state.
 You can use Ctrl+Shift+Up and Ctrl+Shift+Down to move the current tag
or state.
 You also can press Suppr while the tag tree is selected to delete the
current state or tag.
 Finally, you can press F2 in the tag tree to move the focus to the tag
or state name field.Advanced Tips
 If you do not use KDE session management and want to start BasKet Note
Pads with the Autostart feature, you can use the command-line parameter
--start-hidden in the command to run. This hides the main window in the
system tray icon on startup.
 Typically, you should run the command "basket --start-hidden".To paste
a photo in basket:
 In firefox:
 right click on image and click copy image, then paste it in a basket
dont open a new note just press paste when nothing is selected)
 In KDE:
 Copy image to clickboard, then paste it in a basket dont open a new
note just press paste when nothing is selected)Move notes from one
basket to another
 The best way is to Drag the note (for group notes drag from top level +
sign) into the new basket..wait a few seconds for the content of the new
basket to appear and then drop
 to position

**** compile through git

install basket 2.0 from git

 git clone git://github.com/kelvie/basket.git
 To compile basket

 mkdir build
 cd build
 cmake .. -DCMAKE INSTALL PREFIX=/opt/basket
 make
 make install
 
 Update with git

 Enter the directory you used to clone basket
 cd /home/zeltak/basket
 issue the following command
 git pull

*** gcstar

**** Installation tips

Installation tips

 To compile install everything from adept/synaptic that has xml libxml
in it first

*** PDF XChange Viewer

**** Instal in linux

Finally, real PDF annotating under Linux! (with help from Wine)
 Finally, a way to annotate PDF files under Linux (provided you can run
Wine)
 I have been looking for years for a solution to annotate PDF files from
my Linux box. I usually do a lot of proof-reading, and these highlight
and post-it features are just gold when you have to transmit your
comments using the internet.
 On the other hand, there is as far as I know NO software that can add
annotations to PDF files in a clean way. Here are the ones I tried:
  PDFEdit did some horrible glitch on my screen when I tried to
change the document. Anyway, it looks good at modifying PDF files, but
could not even figure out whether it supports annotations. Looks pretty
complicated to use.
  Foxit Reader has a Linux binary available. Of course, it
segfaulted as soon as I tried to open a PDF file.
  Xournal and its derivates are often claimed to support that
feature. However, all they do is turning the PDF file into an image that
you can annotate. Not exactly the same thing.
  Okular is the only tool that actually has a real annotation tool
for PDFs. It just looked like the holy grail, until I realized the
annotations were not saved withing the PDF, but written separately...
Which makes them unusable for any other reader.
 One of the reason why PDF annotation support is so poor is no Linux PDF
library supports it. As a consequence, software that uses them cannot
neither. So we will probably we stuck with this situation until GNU PDF
gets mature (which may take a while).
 The solution came from the controversial Wine. I resigned myself to try
a couple of Windows software under it. This is where I realized that the
Windows software world is very different - Foxit requires to try some
shit before you can download it freely, other software is paying, and so
on. Moments like that remind me why I'm not part of this world.
 But, finally, I found an assle-free, doing-the-job software that just
installs and works flawlessly under Wine. It is called PDF-XChange
Viewer and did not ask me to waste my time of my money before I can use
it. Just needed to download the installation binary, gave it to wine,
then run the software through wine without any particular twiddling. It
just worked.
 Sure, this is not free (as in free speech) software, nor is it native
Linux, but waiting for a real free solution this is still a better
compromise than dual-booting or buying software that doesn't work.

*** Zathua
**** blank screen/cant open pdf
install a zathura backend :

zathura-pdf-mupdf or zathura-pdf-poppler

*** keepass
**** keepass plugin directory
***** on arch
file:/usr/share/keepass/
***** on debian

#+BEGIN_EXAMPLE
/usr/lib/keepass2 or /usr/lib/keepass2/plugins
#+END_EXAMPLE

**** debian specific
***** plugin errors (incompatible with the current KeePass version)
Under Debian/Ubuntu/Mint, I installed the keepass2 package. After installing KeeFox, I get the following error:

#+BEGIN_EXAMPLE
The following plugin is incompatible with the current KeePass version:
/usr/lib/keepass2/KeePassRPC.plgx
#+END_EXAMPLE

Have a look at the plugin's website for an appropriate version.

You need to install the mono compiler and a library so that KeePass can compile the plugin.

#+BEGIN_SRC sh
sudo apt-get install mono-dmcs libmono-system-management4.0-cil
#+END_SRC

%Tip-Alternatively, you can install all of the mono packages%

#+BEGIN_SRC sh
sudo apt-get install mono-complete
#+END_SRC
      
**** auto type

you can define a auto type manualy
 {TITLE}Title
 {USERNAME}User name
 {URL}URL
 {PASSWORD}Password
 {NOTES}Notes
 Pasted from
<[[http://keepass.info/help/base/placeholders.html][http://keepass.info/help/base/placeholders.html]]>
 In example:
 {USERNAME}{TAB}{TAB}Some fixed string{TAB}{PASSWORD}{ENTER}
 for gmail in dwb:
 i{USERNAME}{TAB}{PASSWORD}{ENTER}

**** auto type keys

this is for keepass 2.x for older version see:

[[http://keepass.info/help/base/autotype.html][http://keepass.info/help/base/autotype.html]]
 [[~/Dropbox/Org/Tech/linux_files/Image_cyAEDwqIdzNTNSxQKB212w_0001.png]]
 [[~/Dropbox/Org/Tech/linux_files/Image_cyAEDwqIdzNTNSxQKB212w_0002.png]]
 [[~/Dropbox/Org/Tech/linux_files/Image_cyAEDwqIdzNTNSxQKB212w_0003.png]]

**** set delay between storkes

[[~/Dropbox/Org/Tech/linux_files/Image_r6Zz51PyH48U605DeeFILQ_0001.png]]

**** convert lastpass to keepass

Note: Latest version of keepass may have native support for lastpass csv
files
 download python script from:
 https://github.com/anirudhjoshi/lastpass2keepass
 export your last pass to csv (using the firefox button, not from the
site)
 then issue this (make sure its python2):

 python2 lastpass2keepass.py
/home/zeltak/Downloads/\#\#\#lastpass/lastpass.csv
 '/home/zeltak/Downloads/###lastpass/lastpass.csv' has been succesfully
converted to the KeePassXML format.
 Converted data can be found in the
'/home/zeltak/Downloads/###lastpass/lastpass.csv.export.xml' file.

**** keepass mono

***** auto type tips

-in the option menu make sure to match by URL (make sure its checked)
 -override URL to specific browser needed

***** install plugins

to install a plugin
 just move it here:
 /usr/share/keepass

***** select default browser

if you dont want to use the default browser one can use the url override
 Note: the {OEPRA} is a place holder, use your browser/app name without
{}, see below dwb example
 Note: this can done not just for http protocols but ssh etc..
 either configure it in the option
glo[[~/Dropbox/Org/Tech/linux_files/Image_TUpdtItFoqgN94VUTXbMHw_0001.png]]bally:
 or per[[~/Dropbox/Org/Tech/linux_files/Image_TUpdtItFoqgN94VUTXbMHw_0002.png]] entry

**** keepassx
***** autotype setup
[[~/Dropbox/Org/Tech/linux_files/Image_NcsfEhuhPox0tzVTWPpGFQ_0001.png]]
 [[~/Dropbox/Org/Tech/linux_files/Image_NcsfEhuhPox0tzVTWPpGFQ_0002.png]]

**** keefox
***** setup
$Note-under arch linux it may be better to install the RPC plug-in from AUR

https://aur.archlinux.org/packages/keepass-plugin-rpc/

steps:
1)install Mono from repos (make sure its the full mono version)
2) Download KeePass Password Safe 2.19 (or higher) Portable (ZIP
Package) from the website below or try your distribution's package
manager (make sure you get a new enough version though!)
3)Copy the KeePassRPC.plgx file to a subdirectory called plugins in the
directory that contains your KeePass installation

%Tip- on arch the plgxfile that needs to be copied should be here:%
file:/home/zeltak/.mozilla/firefox/44v2x4pe.default/extensions/keefox@chris.tomlinson/deps
and copy to plugin dir:

file:/usr/share/keepass/plugins/
5) Restart FirefoxT
6)go to keefox options>keepass, and fill in the correct apps/plugin/mono paths

***** keefox wont save FF authentication (authorise every time Firefox starts up )

you can fix this by removing the keypairs directory.
file:/home/zeltak/.config/.mono

***** debug keepassRPC

If the above tips dont help, you can run KeePass from the command line / terminal with some extra parameters to enable some debug logging which may be useful to diagnose the problem (if you don't understand the output, you can post it for others to help with).

The following are the most useful:

--debug : This puts KeePass into debug mode. Sometimes this provides useful information but often it just outputs a generic and meaningless message.

--saveplgxcr : This makes KeePass output detailed information about why it was unable to build the plugin. KeePass will tell you where to find the file with the output.

--KPRPCDebug= : Output KeePassRPC plugin debug information to a location of your choosing. E.g.: --KPRPCDebug=c:\temp\kprpc-debug.log

*** Jabref
**** prefrences
***** change look and feel
in advancd enter a java look and feel string
for example in linux to get proper gtk
#+BEGIN_EXAMPLE
com.sun.java.swing.plaf.gtk.GTKLookAndFeel
#+END_EXAMPLE

other avilable options

#+BEGIN_EXAMPLE
com.sun.java.swing.plaf.motif.MotifLookAndFeel
com.sun.java.swing.plaf.windows.WindowsLookAndFeel
com.jgoodies.plaf.plastic.Plastic3DLookAndFeel
#+END_EXAMPLE

***** location of prefrence file
file:/home/zeltak/jabref.xml
***** priorities
enable then in preferances in order to use them
***** Customizing general fields
http://jabref.sourceforge.net/help/GeneralFields.php

You can add an arbitrary number of tabs to the entry editor. These will be present for all entry types. To customize these tabs, go to "Options -> Set up general fields".

You specify one tab on each line. The line should start with the name of the tab, followed by a colon (:), and the fields it should contain, separated by semicolons (;).

E.g.
General:url;keywords;doi;pdf
Abstract:abstract;annote

which would give one tab named "General" containing the fields url, keywords, doi and pdf, and another tab named "Abstract" containing the fields abstract and annote.
**** attach PDF 
***** file vs pdf menu
to attache a pdf you would use the new 'file' system rather the deprecated 'pdf' entry
***** to use auto attach:
In JabRef there are two places where one sets base directory to search the PDF
files. One is under Options-> Preferences. This settings was correct in my
case but at another place it was wrong. Other place for setting the base
directory is under File menu. "File->Date Base Properties". Here
if the base directory is wrong, JabRef is unable to search files based on
bibtex field.
***** if the pdf is accesible through open access or Uni subscriptions:
1)add the ref using internal search
2)use the local copy panel to download the pdf 
***** if no physical PDF is avilable
1)add the ref using internal search
2)manually copy pdf to root pdf folder
3)attach it to the entry
use the cleanup in tools to auto rename 
**** Export filters
***** use a plugin to create the filter via gui
one can use a java based gui (cross platform) to create basic export options via a gui:

http://sourceforge.net/projects/efe/

files are saved as either rtf/html layout files

$Note- the exporter creates several layout files (including end/start etc) all of the files are needed$
***** mark specific author in BOLD/OTHER
you can do that with editing the layout files.
for example for rtf
 
#+BEGIN_EXAMPLE
\begin{author}\format[Authors(LastFirstFirstFirst,FirstInitial,NoPunc,sep=\,,LastSep= & ,EtAl= et al.,inf,9),RTFChars, Replace(Kloog I,{\\\b Kloog I}), Replace(I Kloog,{\\\b I Kloog})]{\author} \end{author}\begin{year}(\format[RTFChars]{\year}): \end{year}\begin{title}"\format[RTFChars]{\title}."\end{title}{\\i \begin{journal}, \format[RTFChars]{\journal}:\end{journal}}{\\b \begin{volume}\format[RTFChars]{\volume}\end{volume}}\begin{pages},\format[RTFChars,FormatPagesForHTML]{\pages}.\end{pages}\\par 
#+END_EXAMPLE

the Replace sections are where the author (Kloog I) gets marked as bold
***** sort criteria 
the sort criteria are a matter of jabref - not the export filter. (preferences->file)
there is an option how exported entries are sorted there


#+DOWNLOADED: /tmp/screenshot.png @ 2014-07-22 11:01:46
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-07-22_11:01:46.png]]

I usually use the option "export in current table sort order". Then I sort them e.g. by year. 
**** citing
***** How can I use BibTeX to cite a web page

A simple way of doing it in BibTeX is with a @misc entry:

#+BEGIN_EXAMPLE
@misc{WinNT,
  title = {{MS Windows NT} Kernel Description},
  howpublished = {\url{http://web.archive.org/web/20080207010024/http://www.808multimedia.com/winnt/kernel.htm}},
  note = {Accessed: 2010-09-30}
}
#+END_EXAMPLE

You should also perhaps include an author if you know it. And remember to load a package such as hyperref or url.

**** dates
***** use month
month
The month in which the work was published or, for an unpublished work, in which it was written. You should use the standard three-letter abbreviation (jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec).

**** editing
***** edit multiple entries
mark needed entries
right click and choose 'set/clear/rename fields'
choose the field to rename and the value 
**** sync config
1.make sure under preferences>general  that 'laod and save preferences.... from memory stick' is chekced
2.this will create a file under file://home/zeltak/jabref.xml
3. use git to 'sync' the xml file

**** groups
***** search by multiple fields

create a dynamic group and use a free-form search expression

In order to search specific fields only and/or include logical operators in the search expression, a special syntax is available in which these can be specified. E.g. to search for entries whose author is "Miller", enter (in any but incremental search mode):

author = miller

Both the field specification and the search term support regular expressions. If the search term contains spaces, enclose it in quotes. Do not use spaces in the field specification! E.g. to search for entries about image processing, type:

title|keywords = "image processing"

You can use "and", "or", "not", and braces as intuitively expected:

(author = miller or title|keywords = "image processing") and not author = brown

The "=" sign is actually a shorthand for "contains". Searching for an exact match is possible using "matches" or "==". Using "!=" tests if the search term is not contained in the field (equivalent to "not ... contains ..."). The selection of field types to search (required, optional, all) is always overruled by the field specification in the search expression. To search for entries of a certain type, a pseudo field called "entrytype" is available:

entrytype = thesis

This finds entries whose type (as displayed in the "Entrytype" column) contains the word "thesis" (which would be "phdthesis" and "mastersthesis"). Another pseudo field "bibtexkey" allows to search for citation keys, e.g.

bibtexkey = miller2005   
**** cleanup
***** find and delete duplicates
go to the search menu> find duplicates
***** clean keywords
select the keywords you want and right click> manage keywords
***** cleanup entries/rename pdf
this tool (under tools>cleanup entries)
**** read (TODO) system
mark in notes with TODO
this will auto move it to the TODO dynamic group 
** System
*** java

**** Run Java apps from CLI

run a java (jar) application

 fron the command line issue
 java -jar XXXXX.jar
 example:
 java -jar mindterm.jar

**** Java Runtime Environment Fonts

Anti-aliasing of fonts is available with Oracle Java 1.6 on Linux. To do
this on a per user basis, add the following line to the user's
~/.bashrc.

export  JAVA OPTIONS='-Dawt.useSystemAAFontSettings=setting'

 TrueType fonts contain a grid-fitting and scan-conversion procedure
(GASP) table with the designer's recommendations for the font's display
at different point sizes. Some sizes are recommended to be fully
anti-aliased, others are to be hinted, and some are to be displayed as
bitmaps. Combinations are sometimes used for certain point sizes.
 Replace setting with one of the following seven values:
 off or false or default -- No anti-aliasing
 on -- Full anti-aliasing
 gasp -- Use the font's built-in hinting instructions
 lcd or lcd hrgb -- Anti-aliasing tuned for many popular LCD
monitors
 lcd hbgr -- Alternative LCD monitor setting
 lcd vrgb -- Alternative LCD monitor setting
 lcd vbgr -- Alternative LCD monitor setting
 The gasp and lcd settings work well in many instances.
 Optionally to use GTK look and feel, add the following line to .bashrc
instead. Note that the Java options described above and this one only
work for applications that draw their GUI in Java, like Jdownloader, and
not for applications which utilize Java as backend only, like
Openoffice.org and Matlab.
 export
 JAVA OPTIONS='-Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'
 For the above change to take effect, ~/.bashrc must be sourced as the
normal user.
 $ source ~/.bashrc
 Open a new instance of a Java application to test the changes made.

*** compiz

**** enable scale for minimized windows

enable scale for minimized windows
Prerequisites
 Make sure you have Scale and Dbus as enabled Compiz plugins (and
optionally Scale Addons as well). One way to do so is through ccsm, the
CompizConfig Settings Manager. Fire up a terminal window and type the
following:
 Code:
 sudo apt-get install compizconfig-settings-manager
 Then start ccsm to see what's enabled (you can use the "Filter" search
box to help locate plugins):
 Code:
 ccsm
 Oh, and make sure Compiz is actually running, not some other window
manager. (This has happened to me more than once.)
 That out of the way, there are some dependencies that need to be met.
Among others, this script is dependent on python-gnome2-extras, which
(as the package name suggests) is Gnome-specific. If you're running KDE,
it may pull in a large number of packages (30+ packages, 50+ MB on a
fresh install). Just a fair warning. Note also that python-wnck is a
requirement as of Ubuntu 9.10 (Karmic Koala) and not previous Ubuntu
versions. To install the dependencies, type the following in a terminal:
 Code:
 sudo apt-get install python-gnome2-extras wmctrl xwit python-wnck
 Setup
 Download the "scale.py" file attached below.
 Make it executable. Make sure to do this! If the script doesn't work,
the most likely cause is that permissions were not set properly. If you
have saved it to your home directory as scale.py, type in a terminal:
 Code:
 chmod 755 scale.py
 Try it out:
 Code:
 Code:
 ./scale.py
 then launch with a keyboard shortcut through compiz or any other prog.

**** Aero snap

[[~/Dropbox/Org/Tech/linux_files/Image_Sqid8-aQpMlxI42CqjTxxg_0001.png]]
 You Will Need Compiz enabled and the following applications installed:
 sudo apt-get install compizconfig-settings-manager wmctrl
 Now you're all set to begin.
 Open the Compiz Config Settings Manager (ALT+F2 ccsm, system >
preferences > CompizConfig..., etc)
 Select the "Commands" option.
 In 'Command Line 0' paste: -
 WIDTH=`xdpyinfo | grep 'dimensions:' | cut -f 2 -d ':' | cut -f 1 -d
'x'` && HALF=$(($WIDTH/2)) && wmctrl -r :ACTIVE: -b add,maximized vert
&& wmctrl -r :ACTIVE: -e 0,0,0,$HALF,-1
 In 'Command Line 1' paste: -
 WIDTH=`xdpyinfo | grep 'dimensions:' | cut -f 2 -d ':' | cut -f 1 -d
'x'` && HALF=$(($WIDTH/2)) && wmctrl -r :ACTIVE: -b add,maximized vert
&& wmctrl -r :ACTIVE: -e 0,$HALF,0,$HALF,-1
 And in 'Command Line 2' paste: -
 wmctrl -r :ACTIVE: -b add,maximized vert,maximized horz
 It should now look something like this:
 [[~/Dropbox/Org/Tech/linux_files/Image_Sqid8-aQpMlxI42CqjTxxg_0002.png]]
 Now choose the 'Edge Bindings' tab at the top and set the following: -
 Run Command 0 - Set To Left
 Run Command 1 - Set To Right
 Run Command 2 - Set To Top
 Click on the back button and go to 'General options'.
 Set the 'Edge Trigger Delay' to something around 400 - 500 by dragging
the slider to the right.
 Now all you have to do is drag a window to one of the specified sides
and your window will automatically resize.

**** Compiz manager

to install issue:

-----------------------------------------------------------------------------------------------------------------------
 sudo apt-get install compizconfig-settings-manager

------------------------------------------------------------------------------------------------------

**** tips


How to: Configuring conditional window transparency in Compiz
 Compiz brings a lot of bling to the Linux desktop, but with such an
extensive selection of configurable features, it can sometimes be
difficult to figure out how to take advantage of specific functionality.
Several readers have asked me how to use Compiz to make menus and
tooltips transparent, so I figured I'd share this trick with the Open
Ended audience.
 In order to set up menu transparency, User/become Root commands will
need the Compiz Config Settings Manager, which can be acquired on Ubuntu
by installing the compizconfig-settings-manager package. User/become
Root commands can launch the utility from the command line or from the
GNOME Preferences menu. The settings manager contains a number of tiles
that provide access to various plugins and features included in Commpiz.
To set menu transparency, select the General Options tile and navigate
to the Opacity Settings tab. Expand the Window Opacities section and
click the Add button. A small dialog window will open and prompt for
window specification and the desired opacity.
 In the Opacity Windows text field, you have to input a pipe-separated
list of window types to which you want to apply the transparency. I use
the following string:
 Tooltip | Menu | PopupMenu | DropdownMenu
 Then I set the Opacity Window Values field to 90 to indicate that
windows of the previously specified types should be 90 percent opaque
and 10 percent transparent.
 You can also use more elaborate window matching strings that use window
class, role, and title. For instance, I like to make all of my Pidgin
conversation windows slightly transparent, but not the buddy list. In
order to do that, I assign 95 percent opacity to all windows that use
the Pidgin class and use the buddy list window title to exclude it from
the match list. This is the string I use in the Opacity Windows text box
for my Pidgin transparency:
 class=Pidgin & !title=Buddy List
 You can also use these window matching strings with the Compiz Window
Rules plugin to automatically make certain windows adhere to certain
behaviors when they are created. For more information about Compiz
window matching rules, check out the documentation at the Compiz wiki.
 For Konsole use this:
 title=Konsole$ & !type=dialog
Compiz Tips
 Try this - go to advanced desktop settings and choose the place windows
plugin. there is a drop down there to select how you would like to have
the windows placed. i chose centered.
 to fix the windows sticking to the sides - select the wobbly windows
plugin and unselect snap inverted.
 to get windows to always maximize:
 in place window plugin> maximizeCompiz Initial setup
 Getting the cube
 Firstly, enable the following plugins (by checking the box next to
them):
  Desktop Cube - to actually use it, we might have to disable some
other plugins (just follow the popup)
  Rotate Cube - that is necessary to spin the cube
  Viewport Switcher (optional) - if you want to change desktops
with the mousewheel
  Cube Caps (optional) - lets you use an images on top and bottom
of the cube
 Secondly, we have to increase the number of the virtual desktops to 4
 at General Options  Desktop Size  Horizontal Virtual Size
 (the other two options have to be left at 1 - it should look like this
then)
 Now we can switch desktops via [Ctrl]+[Alt]+[Left]/[Right] and spin the
cube via [Ctrl]+[Alt]+[Left Mousebutton] (or via middle-click on the
desktop).
 Configuring the Cube
  Set the cube (semi-)transparent
 Set Desktop Cube  Transparent Cube  Opacity During Rotation to
85.0000 (or what suits you best)
 o Additionally you might want to disable Lighing in General
Options  Display Settings
  Cange the cube's color
 Cube Caps  Appearance  Cube Top/Bottom Color - choose a color
for each option, that fits best to your wallpaper
  Cube on a glossy plane
 Enable the Cube Reflection plugin
  Show the cube's engine
 Enable the Cube Gears plugin
 Getting windows to wobble
  First of all you obviously have to enable Wobbly Windows
  Then, if you want your panel menu to be wobbly as well, choose
Shiver in Wobbly Windows  General  Map Effect
  And you might want to disable Wobbly Windows  General  Snap
Inverted to prevent windows from adhering to screen edges.
 Bind useful plugins to screen corners
  Display active windows at once when moving the mouse pointer to
the top right corner of the screen
 Double-click Scale  Actions  General  Initiate Window Picker
For All Windows and choose TopRight
  Display all virtual desktop when moving the mouse pointer to the
top left corner of the screen
 Double-click Expo  Actions  Bindings  Expo and choose TopLeft
 Tips & Tricks for Scale and Expo
  If you enable the Scale Addons and Scale Window Title Filter
plugins, it enhances your Scale mode:
 o Right-clicking a window lets you have a look at the
application
 o You can close a window via [Middle Mouseclick]
 o And if you are looking for a certain application, just type
the first letters of the window title
  While in Expo mode
 o You can change the desktop by right-clicking on a different
one
 o And you can even drag the windows from one desktop to
another
 Nicer window switchers
 While the default [Alt]+[Tab] window switcher that comes with Compiz is
certainly nicer than the one that came with your desktop environment,
Compiz Fusion has much nicer ones, which can be initiated via
[Super]+[Tab] (with "Super" being the win-key).
 1. Cover Switch - if you enable the Shift Switcher this will be the
default mode
 2. Flip 3D - choose Flip in Shift Switcher  Switcher Mode
 3. Or enable the Ring Switcher plugin
 (if this one is enabled, the Shift Switcher won't work anymore,
since it's bound to the same keys)
 
 You can bind those to different key combinations, if you like and have
three different window switchers at a time (the "usual" one, one of the
"Shift Switcher" ones and the "Ring Switcher").
 Additionally you can use them for different needs, like Ring Switcher
for the current workspace and a Shift Switcher for all active windows -
just set them the way you like in the plugin's Key bindings of the
respective Actions tab.
 Reasonable window effects
 There's nothing particularly wrong with the settings provided by Ubuntu
but some of them can get quite annoying and it's always fun to fiddle
with that part of Compiz.
 All of the options are located at the Animations plugin.
  Close Animation
 Double-click on the first entry ("Glide 2" by default) and pick
Zoom in the drop-down menu.
 Additionally, double the Duration to 400 (that's obviously not
the most reasonable thing to do but it's such a nice effect)
  Minimize Animation
 Double-click on the first entry ("Zoom" by default) and pick
Magic Lamp
  Open Animation
 Double-click on the first entry ("Glide 1" by default) and pick
Glide 2
  Focus Animation (optional)
 I don't recommend changing the effect, just increase it's
duration to 300 or 400 to actually see the nice effect. But if you're a
wobbly fanatic you can change the Focus Effect to Wave or choose Dodge
if you want some eye candy.
 Transparency
 One of the main reasons for me, why I wanted to try Compiz, was the
fact that you could have real transparency (and not just the fake one,
where you can't see what's actually going on below your window). It's
still one of the most impressive effects to me, that you are able to
move a transparent window over your desktop and it's like, well, an
actual window, where you can look right through.
  Real transparency in the GNOME-Terminal
 That's the easiest way to enjoy real transparency, since the
GNOME-Terminal already supports it. All we have to do, is open the
terminal and go to Edit  Current Profile  Effects and select
Transparent background. You can change the level of opacity with the
scrollbar, if you like.
  Steplessly adjust window transparency
 That's a basic feature of Compiz. Just press [Alt] and
increase/decrease the level of opacity with the mousewheel while
hovering over any window (even the panel).
  Transparent panels and menus
 Unlike the Xfce panel, the GNOME panel doesn't support real
transparency. Therefore we have to adjust this manually.
 o Go to General Options  Opacity Settings and choose Add.
Then in the popup window type dock and for Opacity Window values type 85
(that means the transparency is set to 15% - you can set it higher or
lower, of course - but I wouldn't recommend something lower than 75,
because icons and the like get transparent too).
 o Now that you have a transparent panel, the opaque menus
doesn't fit too well. Click on Add again, this time type dropdownmenu
and set the transparency the same way as your panel.
 (If you are using the Main Menu, you have to type popupmenu
instead of dropdownmenu - this will make your context menus transparent
too!)
  Transparent windows on the move
 Go to the Move Window plugin and set Opacity to 85. Now the
windows get 15% transparent every time you drag them.
  Getting lower windows to dissolve
 This is a very nice effect, that makes the windows more
transparent the later you last focused them. To achieve this, all you
have to do is enabling the Trailfocus plugin. (The Brightness effect is
also very nice in this one - you can enable it, by lowering the
Brightness Level of Unfocused Windows)

**** shortcuts

Compiz Shortcuts
 Compiz
 Alt-Mbutton middle or Alt-F8 > free re-size
 Alt-F7 > Free Move
 Toggle Negative > Win+n
 Expose > Win+e
 Other:
 show xbind shortcuts:
 Ctrl+shift+Q

*** docks

**** awn

To Force close Awn
 killall avant-window-navigator
 Fix issue with wrong arrow settings in AWN
 There is an option in gconf to set if you want the arrows under the
tasks or under the launchers.
 
 How do I reset AWN's preferences?
 gconftool-2 --recursive-unset /apps/avant-window-navigator
 Avant window manager KDE workrounds
 Why do some launchers make new tasks appear and some reuse the
launcher?
 All of the applications in your menu are in the
/usr/share/applications folder
 to add them as launcher just drag them into the awn bar
 A note, however: this may, in some cases, not work. In that case,
launch gconf-editor & from run (Alt+F2) or from the terminal. Change the
key in
 /apps/avant-window-navigator/window manager/launchers
 to include a reference to your launcher.
 Why do some launchers make new tasks appear and some reuse the
launcher?
 
 How can I launch more than one instance of an application that I have a
launcher for?
 This is because AWN matches precesses to tasks by looking at the task
name. Example: You have a launcher named Terminal in my dock. This
launcher launches a program whose title (the text at the top of the
window is ~ - Terminal; AWN uses launcher as task icon. If you rename
Terminal launcher to Command Line, AWN does not use launcher as task
icon, because Command Line is not part of the program's title. If you
configure the terminal to have the title ~ - Command Line (from its
preferences), AWN uses launcher as task icon. If you rename you Bash
Command Line launcher to Terminal or Konsole or whatever it has in the
title, it will not launch a new instance. If you want the opposite
behaviour, make sure the launcher name is not part of the window's
title. Lastly, you can middle click to launch a new instance of a used
launcher.
 For example change konsole in the first field (name) to zeltak : bash
and it works!
 How can I launch more than one instance of an application that I have
a launcher for?

 Middle-click the launcher. Middle-click is also known as button 3.
Note that creating an additional instance will create a new task in the
task manager section of the dock because grouped tasks have not yet been
implemented, and the icon used will be taken from the application, not
the launcher.
 Install from PPA (https://launchpad.net/~awn-testing/+archive)

 1. Open the PPA page (linked above) and select your Ubuntu version
from the dropdown.
 2. Open the Software Sources configuration dialog, located in System 
Administration  Software Sources.
 3. Click on the Updates tab and enable the Recommended Updates for
your distribution. For example, if you're running Gutsy (7.10), then you
would enable Recommended Updates (gutsy-updates).
 4. Click on the Third-Party Software tab.
 5. For each line from the gray box on the PPA page, copy it, click on
the Add button in Software Sources, paste the line into the new dialog
box, and press OK.
 6. Back in the tab, make sure that both of the new entries are
checked. You can now close the Software Sources dialog.
 7. Open the Synaptic Package Manager, located in System 
Administration  Synaptic Package Manager.
 8. Click the Reload button. This will download the new Awn package
information.
 9. Install the packages named above.

**** cairo

Install cairo-dock on 64bit systems

 Before anything else, you (user) must be in the sudoers list. This
means you must be logged in as user with admin privileges (but not root)
so you can install programs.
 1. Transparency
 Your desktop should be capable of and using transparency (compositing).
 Gnome: This can be achieved by either running Desktop Effects or (if
you do not like the extra system load of Desktop Effects) get xcompmgr
by following the instructions at the end of this paragraph. Without
transparency, Cairo Dock works but doesn't look as good as it should. If
you have a NVidea or ATI graphics card, you might have to take a few
more steps to get Desktop Effects working. There are a lot of threads
and How-to's on that topic on these forums. For good instructions on
installing the latest ATI drivers using AIGLX on Gutsy and Hardy, see
Method 2 on http://wiki.cchtml.com/index.php/Ubu...e#Installation.
 TIP: To get transparency (and window shading!) without Desktop
Effects and the additional system load that CompizFusion brings along,
do the following. Get xcompmgr by entering in a terminal screen the
command
 Code:
 sudo apt-get install xcompmgr
 Then add a new entry to your start-up list containing the command
xcompmgr -c -f -n so transparency will load on each login. Easy!
 XFCE: You can perfectly use the native/built-in composite manager
(instead of installing anything bulky like compiz-fusion) if you are
happy with only transparency and drop shadows. To activate it, open the
Configuration Manager from your Settings menu. Open Window Manager
Tweaks and click the tab Compositor. Activate at least the first option
'Enable Compositing' for transparency to become available. Other options
can be activated at will.
 KDE: To enable KDE's built-in compositor, go to System Settings ->
Desktop -> Window Behavior -> Transparency.
 2. Cairo libs
 Also, the Cairo libraries should be installed. It is not called Cairo
Dock for nothing Simply do
 Code:
 sudo apt-get install libcairo2 librsvg2-2 libglitz1 libglitz-glx1 dbus
libdbus-1-3 libdbus-glib-1-2 libvte9 libxxf86vm1
 in terminal to get it sorted.
 3. Getlibs
 For installation method 1 (below) you will need to have the excellent
32bit library dependency tool that should be on EVERY 64bit system
called Getlibs installed on your system. If you did not do so already,
follow the simple installation instructions on
http://ubuntuforums.org/showthread.php?t=474790 (basically just one
click to download the latest version as a Debian package and install
it). After using it on this installation process, just leave it on your
system. It will be useful for every other 32bit application you will be
installing later!
 If you will be using installation method 2, you might still consider
installing Getlibs on your system. It is useful for many of those
applications that only come in 32bit packages. Just browse through the
getlibs forum thread to see all the success stories.
 INSTALLATION
 You can choose between two methods. The first method will be using the
precompiled 32bit Debain packages (we could call this the 'Ubuntu way')
which might feel more comfortable to you. The second method will involve
compiling from the latest development source. This means that you will
be getting the latest (but possibly/sometimes unstable) version. It
sounds more complicated than it is, because the difficult stuff is
handled by a neat little script provided by one of the CD developers.
 Do you want my suggestion? If you are curious, want the latest
features, not afraid of compiling from source and possibly periodically
running an unstable dock nd you have the time, go for method 2 straight
away.
 Else go for method 1...
 If you feel up to it, you can always try method 2 later (simply
overwriting the first installation) to get the latest development
version with all the shiny new features like the new plugins Stacks,
Netspeed, Mailchecker, Switcher, Slider, CPUsage, Wifi and more...
 METHOD 1, using 32bit Debian packages
 You might call this method "the Ubuntu way" where it not that we are
going to use 32bit packages on a 64bit system. This is not a problem as
long as all dependencies are taken care off manually, because Apt (the
debian package manager) will not be able to do it for us. Lucky for us,
there is user Cappy, who wrote the outstanding tool Getlibs for
precisely this purpose!
 1. Make sure you have met all prerequisites above (most importantly
2 and 3, while 1 can be postponed until you are sure you will be keeping
CD)
 2. Download the latest cairo-dock 32bit deb files: You need two deb
files, one called cairo-dock vX.X.X.X i686-32bits.deb and the other
cairo-dock-plug-ins vX.X.X.X i686-32bits.deb (where the X's represent
the latest version number, 1.5.0.1 at the time of writing this) from
http://developer.berlios.de/project/...?group id=8724. Download them
both to your home folder.
 3. Open a terminal screen and run
 Code:
 sudo dpkg -i --force-all cairo-dock.deb
 Code:
 getlibs /usr/bin/cairo-dock
 (see prerequisite 3 above if this results in an error; see help on
usage of Getlibs on http://ubuntuforums.org/showthread.php?t=474790)
 Code:
 for i in /usr/share/cairo-dock/plug-in/.so; do echo "$i"; getlibs
-b "$i"; done;
 4. Try to fire up Cairo-Dock by giving the command
 Code:
 cairo-dock
 in the same terminal screen and see if there are any dependency
errors left. If so, use the 'manual 32bit libs installation' described
on the getlibs page above to get them:
 Code:
 getlibs -l full library name here
 If no dependencies are left open, cairo-dock should run and present
you it's first-time Theme Manager dialog. See chapter BASIC USAGE for
help.
 5. If all works well and is configured to your liking, add a new
entry with the command cairo-dock to the Sessions list (Ubuntu menu:
System>Preferences>Sessions) to make it start up at login...
 METHOD 2, straight from SVN source
 This method was reported to run successfully on a Hardy installation by
user neymac:
 Quote:
 Originally Posted by neymac View Post
 I used the script cairo-dock svn.sh from M@v (the author) and did
follow the instructions from
 http://www.cairo-dock.org/ww page.ph...om SVN&lang=en
 and got cairo-dock working compiled from SVN without major problems and
quite stable until now.
 When compiling it asked if I wanted "glitz", I said no because I was
not shure if "glitz" would work on my system (8.04).
 I have tested it on my machine and found the following procedure took
quite some time but worked fine in the end. Giving me all the goodies
that are under development straight away!
 1. Make sure you have met all prerequisites above (most importantly
2, while 1 can be postponed until you are sure you will be keeping CD)
 2. We need a location to put the source files. Open a terminal
window and use
 Code:
 mkdir ~/svn
 mkdir ~/svn/cairo-dock
 to make a new directory in your home folder. Here we will be
downloading the source files later.
 3. Now we want the prefab script that will be handling the download
and compilation for us. Download it and make it executable by running
the commands
 Code:
 cd ~/svn/cairo-dock
 wget http://www.cairo-dock.org/cairo-dock svn.sh
 chmod u+x cairo-dock svn.sh
 (leave the terminal screen open)
 4. Let the script do all the downloading and compilation for you by
running in that same terminal screen
 Code:
 ./cairo-dock svn.sh
 You will see that the script gives you dialog in French (this might
change in newer versions), but that should not be a problem. We will be
going through it step-by-step. Enter your password whenever needed so
installation can continue.
 The script will be doing the following on your system:
 A. Check for and download the latest version of itself. If
there is a new version, the script will close and want you to relaunch
it.
 Quote:
 Vrification de la disponibilit d'un nouveau script
 Veuillez relancer le script, une mise  jour a t tlcharge
 Just hit the UP arrow and Enter to do so...
 B. Check for, download from the Ubuntu repo's and install all
debian packages that are needed for compiling cairo-dock from source. If
needed, provide your password to continue the process.
 Quote:
 Vous possdez la dernire version du script de M@v
 Dtection de l'environnement graphique
 Votre environnement est GNOME
 Vrification des paquets ncssaires  la compilation
 If you have not done anything like this before, it might take a
while asking you for confirmation each time a bunch of packages are
about to be installed. After this (possibly LOOOONG) process, it will
report
 Quote:
 Vrification OK
 and continue with the next step.
 C. Recompile the Cairo libraries with Glitz enabled if you want
it to (warning: NOT advisable on slow/average systems, on systems with
ATI graphics card nor on laptops.)
 Quote:
 Voulez-vous installer la librairie Cairo avec l'option GLITZ
d'active ?
 Cette option permet une plus grande ractivit de votre dock en
utilisant votre carte graphique et non votre processeur pour effectuer
les calculs mais peut ralentir votre systme ou occasionner des
dysfonctionnements
 Attention ! Des erreurs semblent apparaitre avec les cartes
ATI, notamment avec les chipsets de portable
 Etes-vous sr de vouloir effectuer cette opration ? (y/n)
 This basically means that Cairo Dock can use an option called
Glitz which could improve performance of CD. But it will be a major drag
on the average or slower system and is best reserved for a speedy
machine with newer graphics card. When on a system with an ATI card or
on a laptop, be sure to NOT go for Cairo with Glitz enabled. Also, when
in doubt about what to do here, just enter 'n' (for NO) and continue.
 D. Download the latest Cairo Dock source files from SVN.
 Quote:
 C'est la premire fois que vous installez le SVN de Cairo-Dock
 Tlchargement des donnes. Ceci peut prendre quelques minutes
 Tlchargement de cairo-dock
 ...
 After which you will see a long list of file downloads being
processed. Just be patient and let it run.
 E. Compile/install Cairo Dock on your system.
 Quote:
 Checked out revision XXX.
 Donnes tlcharges. L'installation va dbuter
 Cette opration peut prendre plusieurs minutes et ralentir
votre systme
 Installation de cairo-dock
 Enter your password again if it asks for it and wait for the
first
 Quote:
 Ralis avec succs
 Now sit back or just go and have some coffee or something
because this might take a long time and make your system somewhat
sluggish during the process.
 F. If all goes well, you will see for each installed plugin
that same success message. Like
 Quote:
 Installation du plug-in alsaMixer
 Ralis avec succs
 Finally closing with
 Quote:
 Vrification de l'intgrit de l'installation
 L'installation s'est termine correctement.
 5. Try to fire up Cairo-Dock by giving the command
 Code:
 cairo-dock
 in the same terminal screen and see if there are any dependency
errors left. If so, install them manually using
 Code:
 sudo apt-get install full package name here
 If you do not know which packages you need, please post a message
on this forum thread.
 If no dependencies are left open, cairo-dock should run and present
you it's first-time Theme Manager dialog. See chapter BASIC USAGE for
help.
 6. If all works well and is configured to your liking, add a new
entry with the command cairo-dock to the Sessions list (Ubuntu menu:
System>Preferences>Sessions) to make it start up at login...
 TIP: To keep CD updated to the latest version you need to re-run
the script again from time to f. It will automatically check for a new
revision and download/install it when needed. To make this as easy as
possible, create a new launcher in CD that will initiate the command
gnome-terminal --working-directory=~/svn/cairo-dock/ -e
"./cairo-dock svn.sh" (note: that command will not work when cairo dock
itself is launched from terminal; change 'gnome-terminal' to 'terminal'
for XFCE/Xubuntu or 'konsole' for KDE/Kubuntu). See chapter NOTES & TIPS
point H for a small how-to.
 TIP 2: If there are problems after first time install or later
after updating you can force the re-installation with
./cairo-dock svn.sh --force-install. Type ./cairo-dock svn.sh --help
for more options (like uninstall!)
 POSSIBLE ERROR MESSAGES
 Installation
 If you run into any error messages during the installation process that
are not related to unfulfilled dependencies (see step 4 above) please go
to the Cairo Dock forum for help. I am not involved with CD development
and have not run into any installation errors myself. Sorry...
 When method 2 ends in the following message
 Quote:
 Vrification de l'intgrit de l'installation
 Des erreurs ont t dtects pendant l'installation mais il est
impossible de les identifier. Veuillez consulter le fichier log.txt pour
plus d'informations et vous rendre sur le forum de cairo-dock pour
reporter l'erreur dans la section "Version SVN"
 it means that there were errors during the process. This does not
necessarily mean CD will not run. Just try with the command cairo-dock
in terminal and see. If you run into serious problems with the dock, you
can use the error output in the ~/svn/cairo-dock/log.txt file to get
help on the Cairo Dock help forum. As soon as the problems are fixed in
the new SVN version, you can force complete re-installation by pasting
the following in terminal
 Code:
 cd ~/svn/cairo-dock
 ./cairo-dock svn.sh --force-install
 and going through all the steps again.
 Usage
 Not liking the systray module, you might find it won't be removed and
make the dock close. For me, it turned out that only after changing some
config options of that applet and using it a few times (making it
capture the systray icons), I finally could remove the icon... Strange,
h?
 For more advanced startup options (e.g. in case of problems) type
cairo-dock --help in terminal. A few basic ones that might get you
further are:
 Code:
 -l, --log log verbosity (debug,message,warning,critical,error)
default is warning
 -a, --keep-above keep the dock above other windows whatever
 -p, --no-skip-pager show the dock in pager
 -b, --no-skip-taskbar show the dock in taskbar
 -t, --toolbar-hint force the window manager to consider cairo-dock as
a toolbar instead of a dock
 -n, --normal-hint force the window manager to consider cairo-dock as
a normal appli instead of a dock
 -m, --maintenance allow to edit the config before the dock is started
and show the config panel on start
 -f, --safe-mode don't load any plug-ins and show the theme manager on
start

*** wine

**** associate a native program with a file type in Wine

There are two ways using which you can associate a native program with a
file type
 NOTE: USE SECOND METHOD SO YOU CAN BACK IT UP!!
 The first method is to use winebrowser and an alternative would be to
write a shell script.
 The example below uses winebrowser to launch the default PDF handler on
your system (on a Unix desktop it uses xdg-open). Save the lines below
to a file pdf.reg.
 [HKEY CLASSES ROOT\.pdf]
 @="PDFfile"
 "Content Type"="application/pdf"
 [HKEY CLASSES ROOT\PDFfile\Shell\Open\command]
 @="winebrowser \"%1\""
 Import the .reg file into the registry using the command

regedit $HOME/pdf.reg

 Another option (BETTER)
 is to use a shell script to call a native application
 create a text file "run linx program" under $HOME/bin and put this in
it:
 #!/bin/sh
 $1 "`wine winepath -u"$2"`"
 run:

chmod a+x $HOME/bin/run linx program

 to make it executable. Also make sure that $HOME/bin directory is in
your $PATH. Otherwise it will not work.
 To associate IE a .pdf files with the acroread Linux program:
 create a file called "$HOME/pdf.reg"
 [HKEY CLASSES ROOT\.pdf]
 @="PDFfile"
 "Content Type"="application/pdf"
 [HKEY CLASSES ROOT\PDFfile\Shell\Open\command]
 @="/bin/sh run linx program acroread \"%1\""
 Where:
 pdf is the extension needed (replace pdf with other extension in every
place)
 acroread is the app (local linux one) you want to associate it with
 then import it with the command

regedit $HOME/pdf.reg

 You can reuse this script and just edit the registry file. For example
to associate .doc documents with OpenOffice (ooffice):
 [HKEY CLASSES ROOT\.doc]
 @="DOCfile"
 "Content Type"="application/msword"
 [HKEY CLASSES ROOT\DOCfile\Shell\Open\command]
 @="/bin/sh run linx program ooffice \"%1\""

** Terminals
*** termite

**** copy terminfo to server for ssh

create on the SERVER the dir ~/.terminfo/x/
 then issue:

 scp /usr/share/terminfo/x/xterm-termite
zeltak.homelinux.com:~/.terminfo/x/

**** insert mode binds

[[~/Dropbox/Org/Tech/linux_files/Image_zlbKdqXwtrZLfrB4aS1Izw_0001.png]]

**** command mode bindings

[[~/Dropbox/Org/Tech/linux_files/Image_6OLAXa4hP73hRAYxlwyFBQ_0001.png]]
 [[~/Dropbox/Org/Tech/linux_files/Image_6OLAXa4hP73hRAYxlwyFBQ_0002.png]]

**** complex commands with -e

For now -e works like a normal one argument switch, so you have to quote
the command you pass if it contains whitespace.
 For that example, termite -e '/bin/bash -c "echo 1 && read"' will work.

*** Roxterm

**** Change default icon

in order to change the default roxterm icon:
 replace the svg icon roxterm.svg in
 /usr/share/icons/hicolor/scalable/apps/roxterm.svg
 restart app

*** terminal (xfce term)

**** Change default icon

in order to change the default icon:
 replace the svg icon roxterm.svg in
 /usr/share/icons/hicolor/scalable/apps/roxterm.svg
 AND
replace the all size png's (16x16, 24x24 etc..) in
 /usr/share/icons/hicolor/
 restart computer for changes to take effect!

*** urxvt

**** Clickable URLs

You can make URLs in the terminal clickable if you have Perl installed.
For example, to open links in Firefox add the following to .Xresources:
 URxvt.perl-ext-common: default,matcher
 URxvt.urlLauncher: /usr/bin/firefox
 URxvt.matcher.button: 1

**** Yankable URLs (No Mouse)

[[https://github.com/muennich/urxvt-perls][https://github.com/muennich/urxvt-perls]]
 In addition, you can select and open URLs in your web browser without
using the mouse.
 Install the urxvt-url-select AUR package and adjust your .Xresources as
necessary. An example is shown below:
 URxvt.perl-ext: default,url-select
 URxvt.keysym.M-u: perl:url-select:select next
 URxvt.urlLauncher: firefox
 URxvt.underlineURLs: true
 [[~/Dropbox/Org/Tech/linux_files/2010-12-12-11-37-12-scrot.jpg]]

**** keyboard select

Use keyboard shortcuts to select and copy text.
 After installing, put the following lines in your .Xdefaults:
 URxvt.perl-ext-common: ...,keyboard-select
 URxvt.keysym.M-Escape: perl:keyboard-select:activate
 The following line overwrites the default Meta-s binding and allows to
activate keyboard-select directly in backward search mode:
 URxvt.keysym:M-s: perl:keyboard-select:search
 Use Meta-Escape to activate selection mode, then use the following
keys:
 h/j/k/l: Move cursor left/down/up/right (also with arrow keys)
 g/G/0/\^/$/H/M/L/f/F/;/,/w/W/b/B/e/E: More vi-like cursor movement keys
 '/'/?: Start forward/backward search
 n/N: Repeat last search, N: in reverse direction
 Ctrl-f/b: Scroll down/up one screen
 Ctrl-d/u: Scroll down/up half a screen
 v/V/Ctrl-v: Toggle normal/linewise/blockwise selection
 y/Return: Copy selection to primary buffer, Return: deactivate
afterwards
 q/Escape: Deactivate keyboard selection mode

**** reload .Xdefaults

reload .Xdefaults

xrdb -load ~/.Xdefaults

**** auto move selection to clipboard



Xyne has also created his own variation of Skottish's script (which is
also [[http://aur.archlinux.org/packages.php?ID=35526][available in the
AUR]]):

#! /usr/bin/perl
 sub on sel grab {
 my $query = $ [0]->selection;
 open (my $pipe,'|-','xsel -ibp') or die;
 print $pipe $query;
 close $pipe;
 }

 It also requires xsel and needs to be enabled in the perl-ext-common
or perl-ext field in .Xresources.
 For example:

URxvt.perl-ext-common: default,clipboard

*** lilyterm
**** disable confirm_to_execute_command 
edit this in config        
#+BEGIN_SRC sh
confirm_to_execute_command = 1        
#+END_SRC

also add to whitelist apps that don't need confirm
#+BEGIN_SRC sh
# separate with <space>.
execute_command_whitelist = su sudo ssh 
#+END_SRC

**** configure web browser
     #+BEGIN_SRC sh
# The web browser using for http(s)://
web_browser = firefox
     #+END_SRC
*** terminator
**** Grouping Terminals
Grouping terminals allows you to perform the same keystrokes on multiple servers at the same time. If terminator has a no.2 feature, this is it. Obviously this can be dangerous and is no substitute for scripting and configuration management, but there are cases where it can be very useful indeed.
The simplest way to group is to click the menu on the top left of a terminal, create a new group and then add other terminals to it

**** Layouts
After setting up your terminals how you want them, right click anywhere, select preferences, then go to the layouts tab. From here click “Add”, and a layout will be created with your current settings

Once you’ve saved a layout it’s not immediately obvious how to open it, but basically you have to launch a new instance of terminator with the “-l mylayout” option. 

** Web 
*** Tinyrss
**** change looks (css mods)
 one can use a css code chunk like this:

#+BEGIN_SRC css
/ fix dijit /
:focus {
   outline: none;
}
input[type="search"] {
   -webkit-appearance: none;
}
.claro .dijitToolbar .dijitButton .dijitButtonNode,
.claro .dijitToolbar .dijitDropDownButton .dijitButtonNode,
.claro .dijitToolbar .dijitComboButton .dijitButtonNode,
.claro .dijitToolbar .dijitToggleButton .dijitButtonNode,
.claro .dijitToolbar .dijitComboBox .dijitButtonNode {
   -moz-transition: background-color, border-color, color;
   -webkit-transition-property: background-color, border-color, color;
   transition: background-color, border-color, color;
}


/ some style /
body#ttrssMain,
a,
.titleWrap .title  {
   color: #444;
}
a:hover,
.Unread .titleWrap .title,
.Selected .titleWrap .title,
html div.cdmContent a {
   color: #15c;
}
#feeds-holder,
#content-wrap,
#headlines-frame {
   border: none;
}
#ttrssMain #headlines-toolbar,
#ttrssMain .dijitToolbar,
#ttrssMain .cdmHeader {
   background: #fff;
   border-color: transparent;
}
#ttrssMain #headlines-toolbar {
   border-color: #ebebeb;
}
#ttrssMain .cdm {
   margin: 5px 25px 10px 5px;
   border: 1px solid #ddd !important;
   box-shadow: 0 0 4px rgba(0,0,0,.1);
   background: #fff !important;
}
#ttrssMain .cdm.Selected {
   border-left-color: #4d90f0 !important;
   background: #fff !important;
}
#ttrssMain .cdmFeedTitle {
   border-color: #ebebeb;
   background: #fff;
   font-size: 1.2em;
   font-weight: bold;
}
#headlines-frame .cdmFooter {
   border-top: 1px solid #ebebeb;
   background: #fafafa;
}

.titleWrap .title {
   font-size: 1.5em;
   font-weight: bold;
}
div.cdmHeader span.hlFeed {
   padding-top: .5em;
}


#+END_SRC

to change the way tinyrss looks

** Utils
*** worker
**** compile worker

download the latest source files both for worker and avfs from
[[http://www.boomerangsworld.de/cms/worker/download?lang=en][HERE]]
 In ubuntu (or other distro) install the xorg dev tools (xorg-dev
package),libmagic-dev and xli package for image view
 for new HAL support install libhal-storage-devandlibdbus-glib-1-dev
 1)compile avfs (see basic compile how to [[javascript:;][here]])
basiclly ./configure, make, sudo make install
 you will only get a yes in the building libraries , its ok continue to
compile worker
 2)compile worker also basiclly ./configure, make, sudo make install
 NOTE: make sure the after the .configure there are no issues

**** keybinds

open dir cahce alt+enter
 Ctrl+s- You can enter a search pattern and press, Ctrl+s again to jump
to the next match.

**** views

If you prefer imagemagick to the default xli for image display mode,
that's quite easy to accomplish:
 Simply right-click on the list view bar, then left-click on the show
image mode button and replace xliwrapper worker with
displaywrapper worker or click on Set to default viewer to select
the prefered viewer.
 Or just edit
 ~/.worker/lvconf
 and replace any xliwrapper worker with displaywrapper worker

**** file manipulations

Can I delete files that haven't been selected but are highlighted?
 Change the behaviour of the delete button:
 Go to Config  Buttons  Delete  Commands  Delete  Configure
 Select option: "Delete active entry when no other is selected"

**** file types
***** How can I set up a double click command for a file type .xyz?
Go to the file type configuration (Config  Filetypes) and create a new type by clicking on New type. In the new window enter the name of the file type and enter the pattern matching expression which matches your file type in the pattern tab.

#+BEGIN_EXAMPLE
Example: .png
#+END_EXAMPLE

Add the command Worker should execute when double clicking this file type.
Select DoubleClick-Action from the actions list and click at Add Command.
Choose the own command from the list of available commands and enter the program name in the corresponding text field.
You need to add a flag in the command string so Worker can replace it with the filename you clicked. In most cases you want to use `{f}` so an example looks like this:

#+BEGIN_EXAMPLE
xedit {f}
#+END_EXAMPLE

Close all dialogs with Ok and you are done.
$Note-make sure the other methods of file type discovery (like by content or libmagic etc) are all unchecked$
***** make sure zipped files like odt,cbr are not opened by zip
go into the zip file setting and uncheck file content or libmagic. make sure only by extension is checked.
**** editing config file

the buttons start and end like this
 }
 button {
 position = 119;
 title = "CGIMP";
 color = 1,0;
 shortkeys {
 }
 commands {
 OwnOp {
 separateeachentry = false;
 recursive = false;
 start = normal;
 com = "gimp -a {a}";
 viewstr = "";
 inbackground = false;
 takedirs = false;
 dontcd = false;
 }
 }

**** buttons

[[utils_files/worker_buttonsF%25202.png]]
***** create a copy structure command
The command structure is a little bit more strict due to security
concerns. You can't use the asterisk, it will be protected by quotes
which will then not be expanded by the shell.

But you can use the following command instead:

#+BEGIN_EXAMPLE
find {a} -type d -exec mkdir {op}/\{\} ';'
#or
find . -type d -exec mkdir {op}/\{\} ';'
#+END_EXAMPLE

The first one uses the selected entries as a basis, the latter one uses
the current directory. 
**** launch programs with start porg command

when a file is not in the filetype defined list you can use the start
prog command:
 [[utils_files/2011-02-03-23-19-29-scrot.jpg]]
 the original file rice.flv is present. add the command you want to it.
 in the above case im opening it with smplayer so the above command is
added

**** use ssh

First of all you need to have avfs installed because ssh is handled by
 this library.
 You can then enter a path like this:
 /#ssh:user@...
 IE:
 /#ssh:zeltak@zeltak.homelinux.com/home/zeltak
 Since Worker and the avfs library don't store the password, the ssh
 command needs to work without asking for a password. This is the case
if
 you use a public key without a password (not recommended) or you use
the
 ssh-agent to handle your public key.
 Otherwise you will be asked for the password again and again by the
 ssh-askpass program or it doesn't work at all (if your system doesn't
 have this command).
**** start program menu
you need to have checked the "global program" option for the file to run,If not, worker will try to start ./APP (₆In example₆./vlc)
**** fonts
a good tiny font for the button bar is ProggyTiny (part of proggy fonts): https://aur.archlinux.org/packages/proggyfonts/ 
**** find version for AUR
check this link

http://www.boomerangsworld.de/cms/worker/downloads/

*** krusader

**** tips

You could configure Krusader to only select the filename for renaming,
so when you press F9 the filename is selected without extension. If you
want to mark the extension too, you press Ctrl-A afterwards.

**** Install from source

Krusader installation (from source) instructions for KDE 4.x

 Krusader-2.0 versions and higher are for KDE 4.x only and will not work
anymore on KDE 3.x
 SVN development download
 ------------------------
 You can download the latest available Krusader-2.x from SVN with the
next command:
 $ svn co
[[https://krusader.svn.sourceforge.net/svnroot/krusader/trunk/krusader_kde4][https://krusader.svn.sourceforge.net/svnroot/krusader/trunk/krusader kde4]]
 Krusader dependencies
 ---------------------
 - c libraries
 - kdelibs5 (KDE4 core libraries and binaries for all KDE4 applications)
 - libkjsembed1 (Embedded JavaScript library)
 (for the the optional Javascripting function in Krusader)
 Suggested packages
 ------------------
 These packages are optional but they will make Krusader much more
powerful and useful.
 The next packages are the names that Debian/Ubuntu uses, other Linux
 distros will probably use similar names.
 - arj archiver for .arj files
 - ark graphical archiving tool for KDE
 - bzip2 high-quality block-sorting file compressor - utilities
 - cpio GNU cpio -- a program to manage archives of files
 - kdebase-bin core binaries for the KDE base module
 - kdebase-kio-plugins core I/O slaves for KDE
 - kdiff3 compares and merges 2 or 3 files or directories
 or kompare a KDE GUI for viewing differences between files
 or xxdiff a graphical file and directories comparison and merge tool
 - kedit basic text editor for KDE
 - khexedit KDE hex editor
 - kmail KDE Email client
 - konsole X terminal emulator for KDE
 - krename Powerful batch renamer for KDE
 - lha lzh archiver
 - md5deep versatile file checksum creator and verifier
 - cfv versatile file checksum creator and verifier
 - p7zip 7zr file archiver with high compression ratio
 - rpm Red Hat package manager
 - unace extract, test and view .ace archives
 - unrar Unarchiver for .rar files (non-free version)
 or unrar-free Unarchiver for .rar files
 or rar Archiver for .rar files
 - unzip De-archiver for .zip files
 - zip Archiver for .zip files
 Compilation requirements
 ------------------------
 The next packages are needed for compiling the Krusader sourcecode,
 if you only run the Krusader binary you don't need to install these
packages.
 - gcc (The GNU C compiler)
 - g++ (The GNU C++ compiler)
 - cmake (A cross-platform, open-source make system)
 - zlib1g-dev (library for implementing the deflate compression method
found in gzip and PKZIP)
 - gettext (contains msgfmt)
 - kdelibs5-dev (installs many development libraries for KDE4)
 - libphonon-dev (libphonon-dev cross-platform multimedia framework
development)
 cmake options
 -------------
 -DQT INCLUDES=/usr/share/qt4/include
 is the location of the QT4 includes
 -DCMAKE INSTALL PREFIX=/usr/
 is the location where Krusader will be installed with the make
command.
 An other example is: -DCMAKE INSTALL PRFIX=/opt/krusader
 to install the compiled Krusader in an other directory to not
overwrite
 the Krusader version installed by your package manager.
 $ tar -xzvf krusader kde4.tar.gz
 $ cd krusader kde4
 $ cmake -DCMAKE INSTALL PREFIX=/opt/krusader
-DQT INCLUDES=/usr/share/qt4/include
 Note:
 We had a problem with cmake-2.4 on Kubuntu 8.04 and probably other
distro's as well.
 ------------
 CMake Error: CPack welcome resource file:
 "/usr/share/cmake/Templates/CPack.GenericWelcome.txt" could not be
found.
 ------------
 To fix the error:
 $ sudo mkdir /usr/share/cmake/
 $ sudo ln -s /usr/share/cmake-2.4/Templates /usr/share/cmake/Templates
 Compilation and installation
 ----------------------------
 Compilation will take about 5 to 10 minutes depending on your CPU
speed.
 $ make
 $ su -c "make install"
 or
 $ sudo make install
 Uninstall
 ---------
 $ su -c "make uninstall"
 or
 $ sudo make uninstall

*** peazip
**** cli commands
***** adding
    -add2archive: add to a new archive and open PeaZip GUI to set archive’s type and options;
          -add2archive-add as -add2archive, but add to existing archive (if found)
          -add2archive-update as previous, but update older files only
    -add27z: add to a new .7z archive;
    -add2separate7z: add each input to a separate new .7z archive;
    -add2zip: add to a new .zip archive;
    -add2separatezip: add each input to a separate new .zip archive;
***** extracting    
    -ext2here: extract archive(s) here;
    -ext2folder: extract archive(s) here, each in a new folder named after the archive;
    -ext2full: extract archive(s), allowing to specify i/o options, password and keyfile;
    -ext2to: extract archive(s) to specified folder;
    -ext2tofolder: extract archive(s) to specified folder, each in a new folder named after the archive;
    -ext2list: list archive(s) content, to quickly look what is in the archive;
    -ext2test: test archive(s) content;
    -ext2main: extract archives from main applications "Archive extraction" interface;
    -ext2commandprompt: open the command prompt in the selected folder (or in its path, if a file is selected)

*** gpaste
**** install on arch with applet support
edit the PKGBuild to add the --enable-aplet option

#+BEGIN_EXAMPLE
build () {
    cd "$srcdir/$pkgname-$pkgver"

    ./configure --sysconfdir=/etc       \
                --libexecdir=/usr/lib \
                --enable-applet
    make
#+END_EXAMPLE
    
**** use rofi to pipe gpaste
     #+BEGIN_SRC sh
menu=$(gpaste | rofi -dmenu -p "clipboard")
selection=$(echo "$menu" | cut -d ':' -f1)
gpaste select $selection     
     #+END_SRC
*** krename

**** TV Operations

TV Operations

 Change to tv format
 S01E0$
 Renumber

 #{1;1}

*** double commander
**** multirename
***** epsiode renamer
use this:

'S01E[C]'
**** TIPS
***** start DC as a background process
#+BEGIN_SRC emacs-lisp :results none
setsid doublecmd &> /dev/null < /dev/null &
#+END_SRC     

**** inital setup (ubuntu)
get the latest stable deb file and install as usuall
 then copy the contents of the the installation (in /opt/ folder) to a
location you like with non-root (i put it in /home/zeltak/programs/dc/)
 then change permissions on these folders from root to USER.
 then create a symlink in /usr/bin/ instead of the original one

**** interface
***** interface configuration

Q: How can I change color settings for the panels?
 A: To change the color, you must do the following:
 Configurations  Options  Colors (but first you must create own
columns style)
 Configurations  Options  Columns, set default style, click "Edit" and
configure :)
 Q: What are buttons R and All at the color's settings?
 A: It's simply:
 R --- restore color by default..
 All --- apply selected color to all colunms.
 Q: Text at some columns overwrites each other!
 A: Configurations  Options  Behaviors, set checkbox "Cut text to
column width".
 Q: How to associate my own icons with some file types?
 A: You can edit the configuration file doublecmd.ext. For example, to
associate a icon with image file types:
 [jpeg|jpg|gif|png]
 Name=images
 Icon=/home/rust/progs/doublecmd/pixmaps/32x32/mimetypes/image.png
 open=gthumb '%p'
 In this case, all of the above extensions will be displayed with
image.png.
 Internal editor have strange font --- horizontal characters overwrites
each other.
 A: You must use monospace fonts as in the viewer or editor.

***** get coloring working

To get the coloring working (for colums,panels, filtypes) you must
define a cutom view
 [[utils_files/image.png]]

**** Button toolbar
***** zeltak examples

to add files for packing in peazip:

[[/home/zeltak/org/attach/images/Image_l4zNJmeJswzlW4AAJ0ou2Q_0001.png]]

***** launch as root from toolbar

[[/home/zeltak/org/attach/images/Image_.png]]
 same as the normal launcher but use gksudo (in kde kdesuo) as command
and the program in the parameters

***** Parameters
look here for latest commands
file:///usr/share/doublecmd/doc/en/index.html

Parameters — sets parameter(s) for the command:

    Functions (without parameters they give output for all selected files):

     %f - only filename

     %d - only path, without trailing delimiter

     %p - path+filename

     %D - current path in active or chosen panel

    Choosing panel (if not given, active panel is used):

      %X[l|r|s|t] - where X is function (l - left, r - right, s - source, t - target)

    Choosing selected files (only for %f, %d, %p):

      %X[ <nr>] - where X is function

        <nr> is 1..n, where n is number of selected files.

        If there are no selected files, currently active file is nr 1.

        If <nr> is invalid or there is no selected file by that number

        the result for the whole function will be empty string.

    Adding prefix, postfix before or after the result string:

      %X[{ }][{}]

        If applied to multiple files, each name is prefixed/postfixed.

        Above parameters can be combined together.

    Order of params:

        %function
        left or right or source or target panel (optional)
        nr of file (optional)
        prefix, postfix (optional)

Examples:

#+BEGIN_EXAMPLE
%f1 - first selected file in active panel
%pr2 - full path of second selected file in right panel
%fl - only filenames from left panel
%pr - full filenames from right panel
%Dl - current path in left panel
%f{-f } - prepend each name with "-f "
    (ex.: -f -f )
%f{"}{"} - enclose each name in quotes
    (ex.: "" "")
%f1{-first }%f2{ -second }
    if only 1 file selected : -first
    if 2 (or more) files selected: -first -second 
#+END_EXAMPLE



***** how to create splitter at the buttons panel

How to create splitter at the buttons panel?
 To get the splitter, you need to specify "-" at the tooltip part
 [[/home/zeltak/org/attach/images/Image_i3xKEQrKxbYXKr7LPucUzw_0001.png]]

***** create a drop-down menu

Set Command to:
 cm ShowButtonMenu
 and specify another .bar file with a suitable menu as Parameters
 See the 'default.bar' file located in: ~/.config/doublecmd/ (Linux) for
details of the menu structure.
 
 [[/home/zeltak/org/attach/images/Pasted.jpg]]

***** create and switch toolbars

add a button with the:
 cm OpenBar
 like this:
 [[/home/zeltak/org/attach/images/Image_GI9w5hbmBxFgcKrFFTtvUA_0001.jpg]]
 and state the bar you want to open

***** launch dc as root from toolbar

[[/home/zeltak/org/attach/images/Image_8KazTVdo4wegubS4s2si0g_0001.png]]
 Just type what should execute instead of command. For example toolbar
button:
 Command: gksu (in kde kdesuo)
 Parameters: doublecmd

 Optional:
 You can try and set a path different from the default DC (remeber to
have the option read config file as portable) in example:
 Start path: /opt/doublecmd
 Start DC with this button, enter password and you have DC as root.

**** colors
***** file type colors
Here you can specify file types that should be given a different color.
In line Category name you may write a description of the file, what
it does or what program it opens.
In line Category maskput a wildcard mask to match file types.
 You may put multiple file types here using a semicolon ";" without
spaces between them.
 Symbol "" means match any number of characters.
In line Category attributes you can put file attributes, and DC will
match any files which have matching attributes. Set attributes this way:
 drwxrwxrwx (Linux)
 drahs (Windows).
 You can also use wildcards in the attributes: ?r- (Linux) or ?r
(Windows) will find all read-only files and folders.

 Do not forget to click "Apply" button after customization.
 [[/home/zeltak/org/attach/images/Image_zSkDoFQu6BptXTUO35ns1g_0001.jpg]]

***** change color for hidden files
To colour both hidden files and folders just enter this in Category mask:

#+BEGIN_SRC sh
.
#+END_SRC

And this in Category attributes:

#+BEGIN_SRC sh

#+END_SRC

***** day-time condition in color - filetype

how to set files modified within today to Red and files modified within
this week to Blue?
 You can do it by using "Search templates".
 Create search template with needed conditions and save it (in find
files dialog). Choose saved template in file color configuration dialog
(press button with "filter" icon).

***** color "category attributes" field

what exactly can I specify in the "Category attributes" field?
 This is a mask for attributes. You can specify which attributes must be
present/not present for this coloring to be applied. The attributes are
represented as a string, for example "-r-xr-xr-x" (like in 'ls' output).
 Code:
 User executable:
 -??x
 Directories:
 d
 Not readable:
 -[!r]??[!r]??[!r]??

**** file associations

***** open any directory/file with root privileges

It's easy to open any directory with root privileges, e.g. with
Nautilus. You can add new type to the "File associations" (e.g. dir),
set folder as extension, set Open as root as action and type command:
gksu nautilus "%p". After this just right click on any folder, choose
Open as root and enter password :)

**** hotkeys

***** set multiple hotkeys

go to "Options" dialog -> "Hot keys" section, choose cm ChangeDir
command, enter hot key and "Param" (path to directory), press "Set
Hotkey". Repeat this for other directory with another hot key.

**** parametrs

***** shell parameters

{!SHELL} parameter must be first:
 Code:
 {!SHELL} mpc add [[../../.notecase/Tech/%p][file://%p]]
 For example command:
 Code:
 {!SHELL} nano '%p'

**** external programs
***** using peazip in DC

i think i have found a temporary open-source solution to my packing
problems which would enable me to continue using awesome DC as my main
file manager
 i have come upon pea zip which has a command line interface.
 So far i have manged to assign the "open"command to the peaszip CLI
command of extract here (-ext2folder: extract archive(s) here, each in a
new folder named after the archive;) by issuing this in the config-file
association menu:
 peazip -ext2folder %p
 i am trying now to mimic the extract to other panel with this peazip
CLI command:
 -ext2tofolder: extract archive(s) to specified folder, each in a new
folder named after the archive;

*** synergy

**** quicksynergy setup

Easy way

 install quicksynergy using apt-get
 sudo apt-get install quicksynergy
 The machine with which you want to use the mouse and keyboard will be
the 'server', enter the hostnames (not ip addresses) of the other
computers in the corresponding text fields, and click start.
 On the 'client' computers, enter the server hostname or ip address
under the 'Use' tab and click start.
 Example:
 use zwind on the share tab and enter the ip adress of the server on the
client in the use tab
 The complete (harder) way

 What is Synergy? Synergy is a program that will let you use one
keyboard and mouse on multiple computers across a network. The computers
can be running Linux, Windows, or MacOS. In this howto I will let you
know how to get Synergy setup and running on your Ubuntu system.
 Warning! Achtung! Synergy is not very secure at all! Consider - you are
setting up something to allow an entirely different computer control the
keyboard and mouse on your own computer! Don't try and use this anywhere
unsecure! There is a way of making it more secure by running it over
OpenSSH, but that is currently beyond the scope of this article. Feel
free to read the documentations at the Synergy website.
 Obtaining Synergy
 There are a few ways to get Synergy, one of the hardest is to actually
get the source code from the Synergy site at
[[http://synergy2.sourceforge.net/index.html][http://synergy2.sourceforge.net/index.html]],
compile it, configure it and run it from the command line. The easy way
is to install an apt package that has already been prepared by Daniel
Lutz. More information about this 'universe' package can be found at
[[http://packages.ubuntu.com/edgy/net/synergy][http://packages.ubuntu.com/edgy/net/synergy]].
This guide will explain how to install and use this package.
 If you need to compile the latest version for compatability reasons,
see the section below on building from source.
 The first thing that needs done is to actually install the package.
There are two ways of doing this, through the command line, or through
Synaptic Package Manager.
 Synaptic Package Manager
 Note: you will need to be connected to the internet for this.
 1. Add the universe package repository to your repository list. If you
have not done this already, you can find out how to do it at:
UniversePackages
 2. Click the icon at the top, and select Search. In the field type
"synergy".
 3. Click the box next to synergy, and select mark for installation. If
your search for synergy comes up blank, check for obvious mistakes
first, such as the spelling of synergy, and then make sure that you have
correctly added the universe repository to your repository list.
 4. Click the Apply icon at the top and watch it install.
 Installing from the Command Line
 Synergy is kept in the universe package list, so you will have to
uncomment the universe repositories in /etc/apt/sources.list. If you
don't know how to do it go here Repositories/Ubuntu (for others
(Kubuntu, etc) go to the bottom of that page for links).
 Next, this will download lists of any new packages/etc and will install
synergy:
 sudo aptitude update && sudo aptitude install synergy
 Building Synergy From Source
 If you've already installed the package for Synergy, this step is not
neccecary, you can proceed to the section on Configuring Synergy below.
 Go to
[[http://synergy2.sourceforge.net/][http://synergy2.sourceforge.net/]]
to download the latest source tarball (stable or experimental) and
extract it to your home directory.
 Open a terminal window and change to the directory you just extracted
(should be found at ~/synergy-x.x.x where x.x.x is the version number).
 First we need to make sure we have all the right tools:
 sudo apt-get install libxtst-dev
 sudo apt-get install build-essential
 Now we can setup the build environment and compile then install:
 sudo ./configure -x-libraries /usr/lib -x-includes /usr/includes
 sudo make install
 These will move the executables to the directory referenced in the
configuration instructions later:
 sudo mv /usr/local/bin/synergyc /usr/bin
 sudo mv /usr/local/bin/synergys /usr/bin
 Once the install is finished, you can remove the Synergy folder you
extracted earlier and continue to Configuring Synergy.
 Configuring Synergy
 Now that Synergy is installed, what you need to do is configure it.
BUT, you have to configure at least two machines because without two
machines using Synergy makes no sense. I will show you the configuration
for a server and a client. I will only show the Ubuntu configuration's,
please refer to the Synergy site for instructions on configuring other
systems.
 Server Configuration
 synergy.conf can be created in your "Home Folder".
 Here is a copy of my server's configuration.
 section: screens
 ubuntu42:
 arthur:
 end
 section: links
 ubuntu42:
 right = arthur
 arthur:
 left = ubuntu42
 end
 The meaning of the names in the configuration are as follows. Ubuntu42
is my main machine which acts as a server for Synergy. Arthur is the
client(another Ubuntu machine(laptop)) that I use my desktop's keyboard
and mouse with. Section is where you lay out different configurations
Screens is where you set the host names of the computers going to be
used. Links is what side the mouse will leave the screen of one computer
to reach the desktop of the other. So Ubuntu42 is set to the left of
Arthur, so when I drag the mouse off the right hand side of Ubuntu42's
screen it appears on Arthur's left hand side of the screen. And vice
versa. You can set the Links to go out the top of the screen and come in
the top of the other screen, you can also set up multiple computers.
Multiple here, of course, meaning more than two.
 Client Configuration
 There is none you just install
 Running Synergy
 From the server you run the command
 bash:~$ synergys -f --config synergy.conf
 and that will start running the server in the foreground. If the
synergy server works without any issue, do the following.
 bash:~$ mv synergy.conf ~/.synergy.conf
 If you do the above, you will be able to start synergy server simply by
doing
 bash:~$ synergys
 From a client(In this howto the client being Ubuntu), you would issue
the command
 bash:~$ synergyc -f <ip address of server>
 and that will start the client looking for the server of said address.
 Note: the -f command tells Synergy to run it in the foreground, so that
you will be able to output for debugging. If everything works fine, and
you are able to move your mouse around, issue the the command
 synergyc <ip.address.of.server>
 and you will be up and running.
 Making it Autostart, Gnome
 You probably don't want to have a synergy terminal window open all of
the time, so your next step will be to set it up to run as a service.
 For those of you who are using a Windows machine as well as Ubuntu, a
little gotcha is that when you set Synergy to run at startup, you will
also have to start the service in Control Panel -> Administrative Tools
-> Services, or by rebooting your computer.
 Adding Synergy as an autostarting feature of Gnome is a bit more
complicated.
 But not too painful if you are familar with how Gnome handles login
scripts.
 The easiest way is probably to pop open a terminal and type the
appropriate line without the '-f' option, then you can safely close the
terminal and Synergy will continue to run.
 If you use some sort of graphical login screen, it is pretty easy to
have it autostart. In Ubuntu you can go to your...
 System Menu->Preferences->Sessions, click the Startup Programs tab,
click "Add" then just enter the Startup Command:
 synergys --config synergy.conf
 then click OK & close. This will start the server on a user session
basis, not globally.
 You can also add a little script in the /etc/X11/Xsession.d folder with
a command that says to run it with the bash shell, and then the bash
command you use to start synergy.
 The name and location of this file is crucial! The file must start with
two digits, to specify the order. It really doesn't matter where it is
or what the rest of the name is though. I named mine 12synergy,
22synergy, 32synergy and 54synergy. Sadly, this does not allow you to
use synergy on the login screen, but there is a way to do this
fortunately for those whom need a way to also use the keyboard prior to
final login. You are going to also edit 2 existing files within the X11
directory pertaining to gdm.
 For a client, your new file should look like this, where
xxx.xxx.xxx.xxx is the ip address of your server:
 #/bin/bash
 /usr/bin/killall synergyc
 sleep 1
 /usr/bin/synergyc xxx.xxx.xxx.xxx
 Warning: if you put the -f into the command, you'll get a script that
doesn't stop and let gnome finish loading!
 We want the client to be running when gdm is running, prior to logging
in. Add the following to /etc/gdm/Init/Default: (just add them to the
top of the file)
 /usr/bin/killall synergyc
 sleep 1
 /usr/bin/synergyc xxx.xxx.xxx.xxx
 (In 7.10 modification of the PreSession script doesn't seem to be
needed) For the client file we must also edit the PreSession script to
kill our synergy process running as root before the Xsession scripts run
it as user. The file is /etc/X11/gdm/PreSession/Default and it should
look like this:
 #
 # Note that any setup should come before the sessreg command as
 # that must be 'exec'ed for the pid to be correct (sessreg uses the
parent
 # pid)
 #
 # Note that output goes into the .xsession-errors file for easy
debugging
 #

PATH="/usr/bin/X11:/usr/X11R6/bin:/opt/X11R6/bin:/usr/lib/kde4/bin:/usr/lib/kde4/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/var/lib/gems/1.8/bin:/bin:/usr/bin"
 gdmwhich () {
 COMMAND=""
 OUTPUT=
 IFS=:
 for dir in
/usr/lib/kde4/bin:/usr/lib/kde4/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/var/lib/gems/1.8/bin
 do
 if test -x "/" ; then
 if test "x" = "x" ; then
 OUTPUT="/"
 fi
 fi
 done
 unset IFS
 echo ""
 }
 # synergyc process, running as root, ends here. This is the last script
in the gdm login sequence before things start running as user.
 /usr/bin/killall synergyc
 sleep 1
 XSETROOT=`gdmwhich xsetroot`
 if [ "x" != "x" ] ; then
 # Try to snarf the BackgroundColor from the config file
 BACKCOLOR=`grep '\^BackgroundColor' /etc/gdm/gdm.conf | sed
's/\^.= \ (. \ )$/ \ 1/'`
 if [ "x" = "x" ]; then
 BACKCOLOR="#76848F"
 fi
 "" -cursor name left ptr -solid ""
 fi
 SESSREG=`gdmwhich sessreg`
 if [ "x" != "x" ] ; then
 # some output for easy debugging
 echo "/bin/bash: Registering your session with wtmp and utmp"
 echo "/bin/bash: running: -a -w /var/log/wtmp -u /var/run/utmp
-x \" \ " -h \ " \ " -l \ ":0.0$
 exec "" -a -w /var/log/wtmp -u /var/run/utmp -x "" -h "" -l
":0.0" "zeltak"
 # this is not reached
 fi
 # some output for easy debugging
 echo "/bin/bash: could not find the sessreg utility, cannot update wtmp
and utmp"
 exit 0
 Warning: if you put the -f into the command, you'll get a script that
doesn't stop and let gnome finish loading!
 For a server, it should look something like this:
 Recap: Name this file 12synergy and place it into the
/etc/X11/Xsession.d directory!
 #/bin/bash
 /usr/bin/killall synergys
 sleep 1
 synergys --config /full/path/to/synergy.conf
 Recap: The server file we must edit, it is contained within
/etc/X11/gdm/PreSession/Default file!
 #
 # Note that any setup should come before the sessreg command as
 # that must be 'exec'ed for the pid to be correct (sessreg uses the
parent
 # pid)
 #
 # Note that output goes into the .xsession-errors file for easy
debugging
 #

PATH="/usr/bin/X11:/usr/X11R6/bin:/opt/X11R6/bin:/usr/lib/kde4/bin:/usr/lib/kde4/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/var/lib/gems/1.8/bin:/bin:/usr/bin"
 gdmwhich () {
 COMMAND=""
 OUTPUT=
 IFS=:
 for dir in
/usr/lib/kde4/bin:/usr/lib/kde4/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/var/lib/gems/1.8/bin
 do
 if test -x "/" ; then
 if test "x" = "x" ; then
 OUTPUT="/"
 fi
 fi
 done
 unset IFS
 echo ""
 }
 #Synergy Server Starts at login and dies at logoff!
 /usr/bin/killall synergys
 sleep 1
 synergys --config /full/path/to/synergy.conf
 XSETROOT=`gdmwhich xsetroot`
 if [ "x" != "x" ] ; then
 # Try to snarf the BackgroundColor from the config file
 BACKCOLOR=`grep '\^BackgroundColor' /etc/gdm/gdm.conf | sed
's/\^.= \ (. \ )$/ \ 1/'`
 if [ "x" = "x" ]; then
 BACKCOLOR="#76848F"
 fi
 "" -cursor name left ptr -solid ""
 fi
 SESSREG=`gdmwhich sessreg`
 if [ "x" != "x" ] ; then
 # some output for easy debugging
 echo "/bin/bash: Registering your session with wtmp and utmp"
 echo "/bin/bash: running: -a -w /var/log/wtmp -u /var/run/utmp
-x \" \ " -h \ " \ " -l \ ":0.0$
 exec "" -a -w /var/log/wtmp -u /var/run/utmp -x "" -h "" -l
":0.0" "zeltak"
 # this is not reached
 fi
 # some output for easy debugging
 echo "/bin/bash: could not find the sessreg utility, cannot update wtmp
and utmp"
 exit 0
 Warning: if you put the -f into the command, you'll get a script that
doesn't stop and let gnome finish loading!
 Making it Autostart, KDE
 This makes synergy start soon after your KDE desktop appears, after you
have logged in.
 Go to ~/.kde/Autostart
 right click > Create New > File > Link to Application
 in the general tab, give it a name like runsynergy.
 application tab: type this in the "Command:" field: synergyc <replace
with the server's IP>
 click OK. A file called runsynergy.desktop is created. if done
correctly this works in KDE 3.5.5
 Creating the .desktop file manually
 [Desktop Entry]
 Comment=
 Comment[en US]=
 Encoding=UTF-8
 Exec=synergyc <replace with the server's IP>
 GenericName=
 GenericName[en US]=
 Icon=
 MimeType=
 Name=
 Name[en US]=
 Path=
 StartupNotify=true
 Terminal=false
 TerminalOptions=
 Type=Application
 X-DCOP-ServiceType=
 X-KDE-SubstituteUID=false
 X-KDE-Username=
 X-Ubuntu-Gettext-Domain=desktop kdebase
 Client Autostart at login screen
 We want the client to be running when kdm is running, prior to logging
in. Add the following to /etc/kde3/kdm/Xsetup: (just add them to the end
of the file)
 /usr/bin/killall synergyc
 sleep 1
 /usr/bin/synergyc xxx.xxx.xxx.xxx
 For the client file we must also edit the Xstartup script to kill our
synergy process running as root before the Xsession scripts run it as
user. The file is /etc/kde3/kdm/Xstartup and it should look like this:
 # Xstartup - run as root before session starts

PATH="/usr/lib/kde4/bin:/usr/lib/kde4/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/var/lib/gems/1.8/bin:/usr/bin/X11"
 if [ -e /etc/nologin ]; then
 # always display the nologin message, if possible
 if [ -s /etc/nologin ] && which xmessage > /dev/null 2>&1; then
 xmessage -file /etc/nologin -geometry 640x480
 fi
 if [ "1000" != "0" ] && \
 ! grep -qs '\^ignore-nologin' /etc/kde3/kdm/kdm.options; then
 exit 1
 fi
 fi
 # synergyc process, running as root, ends here. This is the last script
in the gdm login sequence before things start running as user.
 /usr/bin/killall synergyc
 sleep 1
 if grep -qs '\^use-sessreg' /etc/kde3/kdm/kdm.options && \
 which sessreg > /dev/null 2>&1; then
 exec sessreg -a -l ":0.0" -u /var/run/utmp \
 -h "`echo :0.0 | cut -d: -f1`" "zeltak"
 # NOTREACHED
 fi
 Warning: if you put the -f into the command, you'll get a script that
doesn't stop and let kde finish loading!
 Server Autostart at login screen, GDM
 To make sure synergy is running at all times, the following has to
happen: First, synergy is started when the X server loads (before a user
logs in). Then, synergy is killed and restarted when a user logs in.
When the user logs out, synergy is killed and restarted. To make this
happen under GNOME, the following must happen:
 On the client
 Edit /etc/gdm/Init/Default with the command
 sudo gedit /etc/gdm/Init/Default
 At the end of the file, after the last fi line but before the line that
says exit 0 add the following:
 # ADDED FOR SYNERGY
 /usr/bin/killall synergyc
 sleep 1
 /usr/bin/synergyc <HOST NAME>
 # END SYNERGY
 Be sure to replace <HOST NAME> with the host name or IP address of the
computer running synergys.
 Then, edit /etc/gdm/PostLogin/Default with the command
 sudo gedit /etc/gdm/PostLogin/Default
 This will likely create a new file. Add the following to the file
(placing the code at the end of the file if there's already stuff
there):
 # SYNERGY STUFF
 /usr/bin/killall synergyc
 sleep 1
 # END
 Now, create a session file to run synergyc when someone logs in with
the following command
 sudo gedit /etc/X11/Xsession.d/85synergyc
 This will create a new file, place the following in the file:
 /usr/bin/killall synergyc
 sleep 1
 /usr/bin/synergyc <HOST NAME>
 Be sure to replace <HOST NAME> with the host name or IP address of the
computer running synergys. Lastly, we must make the file executable with
this command:
 sudo chmod a+x /etc/X11/Xsession.d/85synergyc
 We're good to go with synergyc, the setup for synergys is almost
identical:
 For the server
 Edit /etc/gdm/Init/Default with the command
 sudo gedit /etc/gdm/Init/Default
 At the end of the file, after the last fi line but before the line that
says exit 0 add the following:
 # ADDED FOR SYNERGY
 /usr/bin/killall synergys
 sleep 1
 /usr/bin/synergys
 # END SYNERGY
 Then, edit /etc/gdm/PostLogin/Default with the command
 sudo gedit /etc/gdm/PostLogin/Default
 This will likely create a new file. Add the following to the file
(placing the code at the end of the file if there's already stuff
there):
 # SYNERGY STUFF
 /usr/bin/killall synergys
 sleep 1
 # END
 Now, create a session file to run synergyc when someone logs in with
the following command
 sudo gedit /etc/X11/Xsession.d/85synergys
 This will create a new file, place the following in the file:
 /usr/bin/killall synergys
 sleep 1
 /usr/bin/synergys
 Lastly, we must make the file executable with this command:
 sudo chmod a+x /etc/X11/Xsession.d/85synergys
 We're good to go with synergys!
 Wrapup
 Now that you have synergy installed and running, you can copy and paste
between machines and also just have all out fun with the keyboard and
mouse on both/or more machines. I use Synergy all the time, that way I
can write in one window and talk/chat/read mail in another window. It
makes using multiple computers a lot easier and a lot more fun.
 CategoryDocumentation
 SynergyHowto (last edited 2008-07-24 17:11:14 by localhost)
 2007 Canonical Ltd. Ubuntu, Kubuntu, Edubuntu and Canonical are
registered trademarks of Canonical Ltd.
 Feedback Legal Credits
 Creative Commons License

[[https://help.ubuntu.com/community/SynergyHowto][https://help.ubuntu.com/community/SynergyHowto]]

*** thunar

**** upload script

The following is a custom action script for thunar which will allow you
to upload files by right clicking on the file you want to upload.
 This script will upload all file types that I have tested.
 Requirements:
 Ruby - sudo apt-get install ruby
 Curl - sudo apt-get install curl (Should be installed by default on
Crunchbang)
 Zenity - sudo apt-get install zenity (I think this is installed by
default on Crunchbang)
 Thunar - Thunar is a file manager. I use it instead of PCmanFM. You can
find out about it at http://thunar.xfce.org/index.html . To install:
sudo apt-get install thunar
 The [[javascript:;][following]] is the ruby script. Save the file as:
.upload
 Save it in your home directory: ~/ (or another place like ~/scripts but
then change rest of guide accordingly)
 Next, open a terminal and type: chmod +x ~/.upload
 This will allow your file to be executed.
 Now to create the Custom Action in thunar:
 1.) Open: Thunar
 2.) Goto: Edit >> Configure custom actions
 3.) Click the + sign
 4.) Name: Upload
 5.) Description: can be left blank
 6.) Command: terminator --command='ruby ~/.upload %f'
 NOTE: I am using terminator, it is not required but it is default on
Crunchbang. For other terminals you may need to figure out how to run a
command in this fashion.
 7.) Icon: Select Action Icons from the drop down list. Choose one of
the Up Arrows
 8.) Choose the Appearance Conditions tab.
 9.) Be sure that file pattern is a  and that all the checkboxes are
selected EXCEPT directories.
 10.) Hit ok and close
 11.) right click a file, even the script itself, and choose upload. It
should return a screen like this when done correctly:
 http://omploader.org/vMjN4Ng (it is left as a link as to not stretch
the forum)
 12.) Enjoy!
 NOTE: Right now you can only upload one file at a time, and if you
upload too many files in too short of a time frame, it will throttle
you.

*** terminator

**** zeltaks config

# Terminator config, see "man terminator config" for more options #
 #---------------------------------------------------------------
 scrollbar position=right
 maximise=true
 force no bell=true
 background color=#000000
 foreground color=#FFFFFF
 font=Droid Sans Mono bold 10

palette=#2E2E34343636:#CCCC00000000:#4E4E9A9A0606:#C4C4A0A00000:#34346565A4A4:#757550507B7B:#060698209A9A:#D3D3D7D7CFCF:#555557575353:#EFEF29292929:#8A8AE2E23434:#FCFCE9E94F4F:#72729F9FCFCF:#ADAD7F7FA8A8:#3434E2E2E2E2:#EEEEEEEEECEC
 # Uncomment below to enable transparency
 # --------------------------------------
 #background type=transparent
 #enable real transparency=true
 #background darkness=0.8
 [keybindings]
 next tab=<Ctrl>Tab
 new tab=<Ctrl>T
 search=<Ctrl>F

*** clamav

**** install and use on Arch

on arch:
 Installation
 Install with pacman by:
 # pacman -S clamav
 Configuration
 Whether you are going to use clamav as a daemon or use it as a simple
file checker you need to comment out "Example" in the
 /etc/clamav/freshclam.conf file
 and
 /etc/clamav//clamd.conf
 do this by adding a # to the line whith Example in it with your editor
 Update Database
 The daemon needs to be running for the virus update to be updated:
 /etc/rc.d/clamav start
 Then update the virus definitions with:
 freshclam
 then to scan a folder issue for example:
 clamscan -r -i -v /home/zeltak/homeloads/

*** Getmail

**** Using getmail to backup Gmail

Using getmail to backup Gmail

 Install getmail
 sudo apt-get install getmail4
 Step 2: Configure Gmail and getmail
 If using Pop, turn on POP in your Gmail account. Because you want a
copy of all your mail, I recommend that you choose the "Enable POP for
all mail" option. On the "When messages are accessed with POP" option, I
would choose "Keep Gmail's copy in the Inbox" so that Gmail still keeps
your email after you back up your email.
 I have to describe a little about how mail is stored in Unix. There
are a couple well-known methods to store email: mbox and Maildir. When
mail is stored in mbox format, all your mail is concatenated together in
one huge file. In the Maildir format, each email is stored in a separate
file. Needless to say, each method has different strengths and
weaknesses. For the time being, let's assume that you want your email in
one big file (the mbox format) and work through an example.
 Example with mbox format:
 1. Make a directory called ".getmail" in your home directory with the
command
 mkdir ~/.getmail
 This directory will store your configuration data and the debugging
logs that getmail generates.
 Make a directory called gmail-archive with the command
 mkdir ~/gmail-archive
 This directory will store your email.
 3. Make a file a config file
 sudo gedit ~/.getmail/getmail.gmail
 and put the following text in it:
 For POP
 [retriever]
 type = SimplePOP3SSLRetriever
 server = pop.gmail.commail
 username = bob@gmail.com
 password = bobpassword
 [destination]
 type = Mboxrd
 path = ~/gmail-archive/gmail-backup.mbox
 [options]
 verbose = 2
 read all = false
 For Imap
 [retriever]
 type = SimpleIMAPSSLRetriever
 server = imap.gmail.com
 username = boby
 password = pass123
 [destination]
 type = Mboxrd
 path = /home/zeltak/gmail-archive/gmail-backup.mbox
 [options]
 verbose = 2
 read all = false
 Explanations:
 verbose: if you want no details change to 1
 read all: if you want each time to dl all change to fasle
 4. Run the command
 touch ~/gmail-archive/gmail-backup.mbox
 If you change the path in the file above, touch whatever filename you
used. This command creates an empty file that getmail can then append
to.
 Run getmail with a command like
 getmail -r /home/zeltak/.getmail/getmail.gmail
 getmail version 4.6.5
 Copyright (C) 1998-2006 Charles Cazabon. Licensed under the GNU GPL
version 2.
 SimplePOP3SSLRetriever:bob@gmail.com@pop.gmail.com:995:
 msg 1/99 (7619 bytes) from <info@example.com> delivered to Mboxrd
/home/bob/gmail-archive/gmail-backup.mbox
 msg 2/99 (6634 bytes) from <sales@example.com> delivered to Mboxrd
/home/bob/gmail-archive/gmail-backup.mbox
 ...
 99 messages retrieved, 0 skipped
 Summary:
 Retrieved 99 messages from
SimplePOP3SSLRetriever:bob@gmail.com@pop.gmail.com:995
 for pop mails 99 limit at once you can repeat the command (let
getmail finish each time before you run it again) until all of your
email is downloaded.
 Note: the -q option is gor a quite operation (no output)
 Download new email automatically:
 A backup is a snapshot of your email at one point in time, but it's
even better if you download and save new email automatically. (This step
will also come in handy if you have a ton of Gmail and don't want to run
the command from Step 3 over and over again for hours to download all
your mail.)
 We're going to make a simple cron job that runs periodically to
download new email and preserve it. First, make a very short file called
/home/bob/fetch-email.sh and put the following text in the file:
 #!/bin/bash
 # Note: -q means fetch quietly so that this program is silent
 /usr/bin/getmail -q -r /home/bob/.getmail/getmail.gmail
 change permissons on file
 chmod u+rx /home/bob/fetch-email.sh
 If you want to make sure the program works, run the command
"/home/bob/fetch-email.sh". The program should execute without
generating any output, but if there's new email waiting for you it will
be downloaded. This script needs to be silent or else you'll get
warnings when you run the script using cron.
 Now type the command "crontab -e" and add the following entry to your
crontab:
 /!\ Note: This can be done more easly with installing kcronm or gnome
scheduler and using that for runing ther script
 # Every 10 minutes (at 7 minutes past the hour), fetch my email
 7,17,27,37,47,57     /home/bob/fetch-email.sh
 (maybe once an hour), change 7,17,27,37,47,57 to 7 and the cron job
will run at 7 minutes after every hour. That's it --- you're done! Enjoy
the feeling of having a Gmail backup in case your net connection goes
down.
 Bonus info: Back up in both mail formats at once!
 As I mentioned, mbox and Maildir have different advantages. The mbox
format is convenient because you only need to keep tracks for nili of
one file, but editing/deleting email from that huge file is a pain. And
when one program is trying to write new email while another program is
trying to edit the file, things can sometimes go wrong unless both
programs are careful. Maildir is more robust, but it chews through
inodes because each email is a separate file. It also can be harder to
process Maildir files with regular Unix command-line tools, just because
there are so many email files.
 Why not archive your email in both formats just to be safe? The getmail
program can easily support this. Just change your [destination]
information to look like this:
 [destination]
 type = MultiDestination
 destinations = ('[mboxrd-destination]', '[maildir-destination]')
 [mboxrd-destination]
 type = Mboxrd
 path = ~/gmail-archive/gmail-backup.mbox
 [maildir-destination]
 type = Maildir
 path = ~/gmail-archive/
 Note that you'll still have to run all the "mkdir" commands to make the
"gmail-archive" directory, as well as the tmp, new, and cur directories
under the gmail-archive directory.

*** Bittorrent-sync (btsync)
**** Arch Basics
btsync can be installed from the AUR
https://aur.archlinux.org/packages/btsync/
Once installed, you'll first need to create a configuration file at file:~/.config/btsync/btsync.conf
the config file can be copied from here:

#+BEGIN_SRC sh
cp /etc/btsync.conf ~/.config/btsync/btsync.conf
#+END_SRC

in the file edit the following:
device_name
storage_path
webui/login
webui/password
$Note$ The storage_path setting defines where metadata will be saved, not the synced files themselves. Where synced files are saved is configured on a per-folder basis in the WebGUI.
@make sure that no errors are in the config files@

then start/enable BTSync

#+BEGIN_SRC sh
systemctl start btsync@user
systemctl enable btsync@user
#replacing user by the desired username. The service will run as the named user.
#₆In example₆
sudo systemctl start btsync@zeltak  
#+END_SRC

to check the status and if its working use:
#+BEGIN_SRC sh
sudo systemctl status btsync@zeltak  
#+END_SRC

WebGUI can be accessed at http://localhost:8888

**** cant launch service errors
launch like this until fix

#+begin_src sh
/usr/bin/btsync --config /etc/btsync.conf
#+end_src
 
**** Options
*** dropbox

**** dropbox under arch

There are 2 ways of getting dropbox working under arch: the better one
is using the dropbox-cli package from AUR

 DL from aur the 'dropbox-cli' tarball
 edit the PKGBUILDand remove dropbox from the dep list. it should look
like this:
pkgname=dropbox-cli
 pkgver=1
 pkgrel=4
 pkgdesc="Command line interface for dropbox"
 arch=("i686" "x86 64")
 url="http://www.dropbox.com"
 license=('GPL')
 depends=("python2")
 source=("https://www.dropbox.com/download?dl=packages/dropbox.py")
 md5sums=('345daaa86f39d7a830b0ec92670eb541')
 build(){
 sed -e "s/python/python2/g" $srcdir/dropbox.py >
$srcdir/dropbox mod.py
 }
 package() {
 install -D -m 755 "$srcdir/dropbox mod.py"
"$pkgdir/usr/bin/dropbox"
 }
Then install as any package
 start it with
 $ dropbox start
 or get help with
 $ dropbox help
 
 the other less rec way to install dropbox in arch:

 install from aur the 'dropbox' package
 run first time in the cli the command:
 dropboxd
 it will tell you to follow a link to activate the account:
 zeltak@zx200:~$ dropboxd
 This client is not linked to any account...
 Please visit
[[https://www.dropbox.com/cli_link?host_id=5c1e2444d00135dc9915c32287b522de][https://www.dropbox.com/cli link?host id=5c1e2444d00135dc9915c32287b522de]]
to link this machine.
 open the link and dropbox should be ready for use

**** Dropbox without Gnome

Dropbox, the 'it just works' file syncing service, released their Linux
client recently. Unfortunately, it has a heavy Gnome/Nautilus
dependency. If you don't use Gnome, you can get Dropbox to work without
that baggage with these steps:
 Download the closed source Dropbox Linux client from
http://www.getdropbox.com/download?plat=lnx.x86 (x86 64 for 64 bit)
 Extract the contents and you should get a .dropbox-dist folder out
of the archive. Move the folder to $HOME
 Run ~/.dropbox-dist/dropboxd.
 The first time you run the dropboxd daemon, a wizard will prompt you to
configure the client for your machine. By default, Dropbox syncs the
contents of the ~/Dropbox folder and as long as the dropboxd daemon is
running, it will transparently sync that folder with your Dropbox
account. To ensure that the daemon runs whenever you use your computer,
just add a symlink to it in your ~/.kde/Autostart/ folder or equivalent
location.

**** install dropbox on a headless server

***** Basic



Get the latest release tar from the download page:
[[http://www.dropbox.com/download/?plat=lnx.x86][x86]] |
[[http://www.dropbox.com/download/?plat=lnx.x86_64][x86 64]] |
[[http://forums.dropbox.com/forum-build.php][Forum Testing Build]]

Files are extracted to .dropbox-dist

Run dropboxd
 open the authorization link with the browser and authorize (use through
ssh etc)
 Pasted from
<[[http://dropboxwiki.com/Text_Based_Linux_Install][http://dropboxwiki.com/Text Based Linux Install]]>
 Post-installation
 Following on from that, there are a few different options to run the
Dropbox client on an ongoing basis. You could put the above line in your
server startup scripts, e.g. /etc/rc.local, or maybe just a certain
user's login scripts.
 It is recommended to download the official Dropbox CLI to start the
dropbox daemon (as an unprivileged user) and get its status.
 $ mkdir -p ~/bin
 $ wget -O ~/bin/dropbox.py
"http://www.dropbox.com/download?dl=packages/dropbox.py"
 $ chmod 755 ~/bin/dropbox.py
 $ ~/bin/dropbox.py help
 Running on system startup (for Debian/Ubuntu see
[[#cO6tS8sgbgqyOgL1od1ARQ][HERE]])
 

Some nix boxes will let you use "cron" to ensure that dropbox starts up
when the machine boots. I've done this by putting

@reboot $HOME/.dropbox-dist/dropboxd

into my crontab. Do "man 5 crontab" in a console window to see if your
flavor of cron supports that syntax.

***** Start as deamon after boot on ubuntu/debian

Two main steps needed:
 1. Create /etc/init.d/dropbox
 sudo vim /etc/init.d/dropbox
 put this inside the file
 #!/bin/sh
 #dropbox service
 DROPBOX USERS="user1 user2"
 DAEMON=.dropbox-dist/dropbox
 start() {
 echo "Starting dropbox..."
 for dbuser in $DROPBOX USERS; do
 HOMEDIR=`getent passwd $dbuser | cut -d: -f6`
 if [ -x $HOMEDIR/$DAEMON ]; then
 HOME="$HOMEDIR" start-stop-daemon -b -o -c $dbuser -S -u
$dbuser -x $HOMEDIR/$DAEMON
 fi
 done
 }
 stop() {
 echo "Stopping dropbox..."
 for dbuser in $DROPBOX USERS; do
 HOMEDIR=`getent passwd $dbuser | cut -d: -f6`
 if [ -x $HOMEDIR/$DAEMON ]; then
 start-stop-daemon -o -c $dbuser -K -u $dbuser -x
$HOMEDIR/$DAEMON
 fi
 done
 }
 status() {
 for dbuser in $DROPBOX USERS; do
 dbpid=`pgrep -u $dbuser dropbox`
 if [ -z $dbpid ] ; then
 echo "dropboxd for USER $dbuser: not running."
 else
 echo "dropboxd for USER $dbuser: running (pid $dbpid)"
 fi
 done
 }
 case "$1" in
 start)
 start
 ;;
 stop)
 stop
 ;;
 restart|reload|force-reload)
 stop
 start
 ;;
 status)
 status
 ;;
 )
 echo "Usage: /etc/init.d/dropbox
{start|stop|reload|force-reload|restart|status}"
 exit 1
 esac
 exit 0
 Change DROPBOX USERS to include all users that want to run dropboxd
(separated by spaces), and save the file
 2. Make the script executable and add it to the system startup
 sudo chmod +x /etc/init.d/dropbox
 sudo update-rc.d dropbox defaults
 FOR DEBIAN:
 add this in the above script below #!/bin/sh
 ### BEGIN INIT INFO
 # Provides: dropbox
 # Required-Start: $local fs $remote fs $network $syslog $named
 # Required-Stop: $local fs $remote fs $network $syslog $named
 # Default-Start: 2 3 4 5
 # Default-Stop: 0 1 6
 # X-Interactive: false
 # Short-Description: dropbox service
 ### END INIT INFO

*** sparkleshare
**** on linux

1.install from repos

$Note:you may need to delete any keys sparklehsare may have created$ 

2.make sure the relevant key is loaded with ssh-agent [[ssh%20agent][(ssh agent)]]
₆In example₆ if you use github make sure the github specific key (if you created one) is loaded with ssh-add -l:

#+BEGIN_SRC sh 
ssh-add-l                                                                                                                                          
#output
2048 22:1a:4d:66:23:1e:0e:75:db:4f:8d:10:11:10:14:3d /home/zeltak/.ssh/id_rsa_github (RSA)
2048 a4:60:6a:8e:27:b3:cf:74:f9:1c:5f:9f:a8:e3:33:7a /home/zeltak/.ssh/id_rsa (RSA)`
#+END_SRC

3. now that the key is loaded you can add you github repo ₆In example₆ 

'zeltak/zorg'

and then sparkleshare will sync it to the sparklehsare dir
**** on windows

+Step 1+: Download SparkleShare, install and then exit the program (without adding any project as we need to do some bypassing now).

$Note: If you've administrative privileges and can take the risk of working with Windows Registry System, uninstall and remove any traces of SparkeShare from the system registry (Run command: regedit) if it didn't work in the previous cases and do a 'fresh' re-installation. Also you don't need any Git GUI like msysGit, SparkleShare already comes with a build-in Git module and it serve our purpose pretty well here.$

+Step 2+: Git works in the back-end of SparkleShare through a SSH tunnel and unfortunately, Windows does not come with a SSH client (unlike in Linux and Mac) Hence, we need a 3rd party client, which in our case is 'PuTTY', a popular free Open Source terminal emulator. Download the Installer Package.

+Step 3+: Open PuTTYgen, click on Conversions and import your key


[[file:/home/zeltak/Dropbox/Org/Tech/images/img1099-pm.jpg]]

+Step 4+: Now launch pageant (comes with putty) and the add the private key (that you saved in the previous step)


[[file:/home/zeltak/Dropbox/Org/Tech/images/img1099L0s.jpg]]


+Step 5+: Add a path variable name for plink.exe to bypass SSH handling through PuTTY (instead of ssh-agent in Program Files\SparkleShare\msysgit\bin directory). just add a 'user variable' with var name: 'GIT_SSH' and for 'variable value' use the plink.exe path.


[[file:/home/zeltak/Dropbox/Org/Tech/images/img1099Y-y.jpg]]



Step 7: Finally, you can add (i.e. cloning of repository) those project(s) from the remote ₄Server₄/github as you would in linux

Add project SS.png

*** interrobang
**** configure
the config file is locate here
file:/home/zeltak/.interrobangrc

The colors are default foreground and background for each of normal text, completion options, and the selected completion option.
The last four are only relevant (or needed) if you use list=true.

*** Yeganesh

**** Yeganesh - how to make it execute applications

I read about Yeganesh in the Wiki. Unfortunately there's not much
written about it and I've probably read all a google search can give,
but I still can't get it to work.
 I want to use dmenu + yeganesh in Awesome so the keybinding matter is a
piece of cake. What I've done:
 - installed the whole kit dmenu + different haskell packages + yeganesh
 - first I tried plain dmenu and it works perfectly well
 - I ran "dmenu path | yeganesh" which worked well
 - the above created the directory .yeganesh and first run created the
file default within it (so far all good)
 Here starts the trouble, because according to the on-page yeganesh
home-page it's enough to run "echo | yeganesh" the second time. Frankly
I don't understand how this works and it does only produce yeganesh
database of previous commands. Since I didn't get this I added the
following line to my rc.lua for awesome:
 dmenu="dmenu="dmenu path | yeganesh -- -b -fn
'--terminus--r-normal---120-----iso8859-' -nb '#000000' -nf
'#FFFFFF' -sb '#0066ff'"
 which is run by standard procedure:
 table.insert(globalkeys, key({ modkey }, "d", function ()
awful.util.spawn(dmenu) end))
 This executes dmenu + yeganesh without issues, and the database gets
updated and yeganesh shows previously "[not] executed command" but IT
DOESN'T EXECUTE CHOSEN COMMANDS.
 I would appreciate help with this, since this combination is far better
than dmenu by itself.
 .....
 EDIT: I leave my above "mistake" in case someone looks for answers
since there so little to find about yeganesh. I did forget a $ and
brackets. The correct line should have been:
 dmenu= "$(dmenu path | yeganesh -- -b -fn
'--terminus--r-normal---120-----iso8859-' -nb '#000000' -nf
'#FFFFFF' -sb '#0066ff')"

**** clean DB and start fresj

delete the file named default in ~/.local/share/yeganesh

*** notify-send 
**** CLI options

     #+BEGIN_SRC sh
-u, --urgency=LEVEL               Specifies the urgency level (low, normal, critical).
-t, --expire-time=TIME            Specifies the timeout in milliseconds at which to expire the notification.
-a, --app-name=APP_NAME           Specifies the app name for the icon
-i, --icon=ICON[,ICON...]         Specifies an icon filename or stock icon to display.
-c, --category=TYPE[,TYPE...]     Specifies the notification category.
-h, --hint=TYPE:NAME:VALUE        Specifies basic extra data to pass. Valid types are int, double, string and byte.
-v, --version                     Version of the package.
     #+END_SRC

**** define specifc timeout

$Note-time is given in mileseconds, ₆In example₆ 2000 is 2 seconds etc $
 
#+BEGIN_SRC sh
notify-send --expire-time=2000 --hint=int:transient:1  "test" "bla"  
#+END_SRC

**** change color of BK/FG
use the -h option

#+BEGIN_SRC sh
notify-send -h string:bgcolor:"#ffffff" -h string:fgcolor:"#000000" "woot"        
#+END_SRC

*** testdisk/photorec (recover deleted images)

**** photorec

1)install the tesdisk utils
 2)run photorec (as root)

sudo photrec

3)follow instructions to recover

*** metamorphose2

**** launch with a specific folder and specific config file

 metamorphose2 -p=/home/zeltak/media/videos/An\ Idiot\ Abroad/
-c=/home/zeltak/.metamorphose2/configs/EP Rename.cfg

*** xbindkeys

**** main

Configuration
 Create a file named .xbindkeysrc in your home directory:

touch ~/.xbindkeysrc

 Now you can either edit ~/.xbindkeysrc to set keybindings, or you can
do that with the GUI.
 Xbindkeysrc
 To see the format of a configuration file entry, enter the following
command:
 xbindkeys -k
 A blank window will pop up. Press the key(s) to which you wish to
assign a command and xbindkeys will output a handy snippet that can be
entered into ~/.xbindkeysrc. For example, while the blank window is
open, press Alt + o to get the following output (results may vary):
 "(Scheme function)"
 m:0x8 + c:32
 Alt + o
 The first line represents a command. The second contains the state
(0x8) and keycode (32) as reported by xev. The third line contains the
keysyms associated with the given keycodes. To use this output, copy the
three lines to ~/.xbindkeysrc and replace "(Scheme function)" with the
command you wish to perform. Here is an example configuration file that
binds Fn key combos on a laptop to amixer commands that adjust sound
volume. Note that pound (#) symbols can be used to create comments.
 # Increase volume
 "amixer set Master playback 1+"
 m:0x0 + c:123
 XF86AudioRaiseVolume
 # Decrease volume
 "amixer set Master playback 1-"
 m:0x0 + c:122
 XF86AudioLowerVolume
 # Toggle mute
 "amixer set Master toggle"
 m:0x0 + c:121
 XF86AudioMute
 Tip: Use xbindkeys -mk to keep the key prompt open for multiple
keypresses. Press q to quit.
 GUI method
 If you installed the xbindkeys config package, just run:
 xbindkeys config
 Usage
 Once you're done configuring your keys, edit your ~/.xinitrc and place
 xbindkeys
 before the line that starts your window manager or DE.

*** ponymix

**** control sources/sinks

to control sinks:

ponymix --sink=1 increase 5

 or

ponymix --sink=1 decrease 10

 to control a specifc source

ponymix --source=3 increase 20

**** list sources

issue

ponymix list

*** SpaceFM
**** run as deamon

Daemon Mode
 If you want SpaceFM always running in the background, ready to quickly
open windows and automount volumes, but don't want it to manage the
desktop, start a daemon instance of SpaceFM:

spacefm -d

 No window will open in this case, but an instance will be started if
not already running, and it will continue running for the duration of
your X login session. You can also start the daemon from your login
script. For example, if using Openbox, add this line to
~/.config/openbox/autostart.sh:

 (sleep 2 && spacefm -d) &

 One particular use for daemon mode is to make sure leftover folders in
/media are removed. SpaceFM can unmount removable devices on exit to
prevent folders remaining in /media at shutdown (if you check option
Settings|Auto-Mount|Unmount On Exit). If running as a normal instance,
this means devices will be unmounted whenever you close the last SpaceFM
window. When running as a daemon (or as a desktop manager daemon),
devices won't be unmounted until you logoff.
 To stop a daemon mode instance, send SpaceFM a quit signal:

 killall spacefm

**** hide file permenantly

when on a file use edit>hide option
 the files will be stored in a .hidden file. to bring back the
files/change then edit the .hidden file with a text editor or delete
them
 note: you may need to restart spacefm to see the effect

**** steps to make it a traditional dual pane FM

1) You can focus the Bookmarks list (right-click on file list and select
Go|Focus|Bookmarks - no default key but you can assign one to that menu
item). Then use up/down arrow keys to move and Enter to open a bookmark.
Or, if you want to assign a key that takes you to a particular bookmark,
there is no provided way to do this, but you can create a custom command
that runs 'spacefm DIR' or 'spacefm -r DIR', then assign a key to that
new menu item.
 2) Not sure I know what you mean, but you can make a custom command
which sends several keypresses, eg executes 'xdotool key F5' then
'xdotool key F6', etc
 If the bookmarks pane has focus, press a key should activate the search
- eg pressing d will jump to the first bookmark whose name begins with
d. (Up/down arrows or scroll wheel goes to the next/previous). You do
need to press Enter to activate it (change dir).
 View|Go|Next should cycle through the open panels. It's on the menu
bar in this case because it is window-level option (whereas the file
list context menu applies to the current panel).
 On the context menu, Open|Default (F6) is the same as clicking on a
file, except that it can also open multiple files in double-click mode.
So if you set that to right arrow that might give you what you want
(although you'll lose the ability to scroll right with it). And Go|Back
could be set to left arrow.

**** path bar/ location bar

***** run cli command in path bar

TIP: to get to the list of options use $ (press enter after) in the
Pathbar
 [[/home/zeltak/org/attach/images/Image.png]]
 A Path Bar entry is interpreted as a command only if at least one of
the above prefixes preceeds the command. A space after the prefix(es) is
optional. For example, enter in the Path Bar:

$ ls

 When you press Enter, ls will be run for the current directory, and a
dialog will open showing the output.
 When using prefix '$', the command is run as a task (it will be listed
in the task manager if it takes longer than a half second
 to run), and an output dialog will open only if the command produces
output or an error.
 In addition, the substitution variables defined in Command|Line, and
the bash script variables described in Command|Script may also be used
in Path Bar command lines. For example, to open a dialog showing the
path of the current directory:

$ echo Current Directory: %d

 Or to run umount in a terminal (+) as root (!) passing it the currently
selected
 device (%v):

+! umount %v

 When a plus sign (+) prefix is included, the command is run in a
terminal, not as a task. When an exclamation point (!) prefix is
included, the command is run as root.

***** Select By Pattern

Select By Pattern
 If a percent sign (%) prefix is entered in the Path Bar, SpaceFM treats
the
 rest of the text as a file selection pattern. This function is
equivalent to right-
 clicking on the file list and selecting Edit|Select By Pattern. For
example,
 enter in the Path Bar

% .avi

 When you press Enter, all filenames in the file list ending in ".avi"
will be
 selected, and all other files will be unselected. If your pattern
contains any
 uppercase czxharacters, the matching will be case sensitive. For
additional
 wildcard characters and pattern specifics, see IEEE Pattern Matching
 Notation.

**** input commands

Input
 If your command's style is set to Input, it will be displayed as a
normal menu
 item with an optional icon to the left, and a key shortcut to the
right. When
 the item is clicked, the user will be prompted to enter text. If the
user the
 clicks OK, your custom command will then be run. If the user clicks
Cancel,
 the command will not be run. There is also a Help button in this dialog
which
 opens the README file for this command.
 Your custom command can read the text entered by the user using the
 variable "$fm value". The last text entered in the box will be
remembered
 and will be the default entry next time the item is clicked.

**** external commands

% spacefm -s help
 SpaceFM socket commands permit external processes (such as command
scripts)
 to read and set GUI property values and execute methods inside running
SpaceFM
 windows. To handle events see View|Auto Run in the main menu bar.
 Usage:
 spacefm --socket-cmd|-s METHOD [OPTIONS] [ARGUMENT...]
 Example:
 spacefm -s set window size 800x600
 METHODS
 -------
 spacefm -s set PROPERTY [VALUE...]
 Sets a property
 spacefm -s get PROPERTY
 Gets a property
 spacefm -s set-task TASKID TASKPROPERTY [VALUE...]
 Sets a task property
 spacefm -s get-task TASKID TASKPROPERTY
 Gets a task property
 spacefm -s select [FILENAME|DIRNAME...]
 Selects specified filenames and unselects others; or select all if
no spec
 spacefm -s unselect [FILENAME|DIRNAME...]
 Unselects specified filenames; or unselect all if no spec
 spacefm -s emit-key KEYCODE [MODIFIER]
 Activates a menu item by emitting its shortcut key
 spacefm -s show-menu MENUNAME
 Shows custom submenu named MENUNAME as a popup menu
 spacefm -s help|--help
 Shows this help reference. (Also see manual link below.)
 OPTIONS
 -------
 Add options after METHOD to specify a specific window, panel, and/or
tab.
 Otherwise the current tab of the current panel in the last window is
used.
 --window WINDOWID
 Specify window. eg: spacefm -s set --window 0x104ca80 window size
800x600
 --panel PANEL
 Specify panel 1-4. eg: spacefm -s set --panel 2 bookmarks visible
true
 --tab TAB
 Specify tab 1-... eg: spacefm -s select --tab 3 fstab
 PROPERTIES
 ----------
 Set properties with METHOD 'set', or get the value with 'get'.
 window size eg '800x600'
 window position eg '100x50'
 window maximized 1|true|yes|0|false|no
 window fullscreen 1|true|yes|0|false|no
 window vslider top eg '100'
 window vslider bottom eg '100'
 window hslider eg '100'
 window tslider eg '100'
 focused panel 1|2|3|4|prev|next|hide
 focused pane filelist|devices|bookmarks|dirtree|pathbar
 current tab 1|2|...|prev|next|close
 bookmarks visible 1|true|yes|0|false|no
 dirtree visible 1|true|yes|0|false|no
 toolbar visible 1|true|yes|0|false|no
 sidetoolbar visible 1|true|yes|0|false|no
 hidden files visible 1|true|yes|0|false|no
 panel1 visible 1|true|yes|0|false|no
 panel2 visible 1|true|yes|0|false|no
 panel3 visible 1|true|yes|0|false|no
 panel4 visible 1|true|yes|0|false|no
 panel hslider top eg '100'
 panel hslider bottom eg '100'
 panel vslider eg '100'
 column width name|size|type|permission|owner|modified WIDTH
 statusbar text eg 'Current Status: Example'
 pathbar text [TEXT [SELSTART [SELEND]]]
 clipboard text eg 'Some\nlines\nof text'
 clipboard primary text eg 'Some\nlines\nof text'
 clipboard from file eg '~/copy-file-contents-to-clipboard.txt'
 clipboard primary from file eg
'~/copy-file-contents-to-clipboard.txt'
 clipboard copy files FILE ... Files copied to clipboard
 clipboard cut files FILE ... Files cut to clipboard
 TASK PROPERTIES
 ---------------
 status contents of Status task column (read-only)
 icon eg 'gtk-open'
 count text to show in Count task column
 folder text to show in Folder task column
 item text to show in Item task column
 to text to show in To task column
 progress Progress percent (1..100) or '' to pulse
 total text to show in Total task column
 curspeed text to show in Current task column
 curremain text to show in CRemain task column
 avgspeed text to show in Average task column
 avgremain text to show in Remain task column
 elapsed contents of Elapsed task column (read-only)
 started contents of Started task column (read-only)
 queue state run|pause|queue|stop
 Examples:
 window size="$(spacefm -s get window size)"
 spacefm -s set window size 1024x768
 spacefm -s set column width name 100
 spacefm -s set-task $fm my task progress 25
 spacefm -r /etc; sleep 0.3; spacefm -s select fstab hosts
 spacefm -s set clipboard copy files /etc/fstab /etc/hosts
 spacefm -s emit-key 0xffbe 0 # press F1 to show Help
 spacefm -s show-menu --window $fm my window "Custom Menu"
 #!/bin/bash
 eval copied files="$(spacefm -s get clipboard copy files)"
 echo "These files have been copied to the clipboard:"
 i=0
 while [ "${copied files[i]}" != "" ]; do
 echo " ${copied files[i]}"
 (( i++ ))
 done
 if (( i != 0 )); then
 echo "MD5SUMS:"
 md5sum "${copied files[@]}"
 fi
 For full documentation and examples see the SpaceFM User's Manual:

http://ignorantguru.github.com/spacefm/spacefm-manual-en.html#socket

**** rename files/dialog

Keep in mind that the rename dialog, when it first opens, will place the
focus in whichever box you last used to rename/move/copy a file. So for
starters that controls what box will have text selected by default. If
you click the Options button you'll see 'Name' and 'Filename' options.
If Name is checked and Filename is not, the filename is automatically
split into separate boxes. If Filename is selected and Name is not, the
Filename box will have only the name portion selected, not the
extension. If both Name and Filename are checked, and Filename has
focus, the entire filename will be selected. Also note that it won't
always determine which is the filename part correctly, but if you notice
a failure of the algorithm let me know.

**** tabs/panels

***** change dir command

to have the current tab change to a different directory, have your
custom command run:
 spacefm -r DIR
 or, to have a new tab open in the current panel:
 spacefm DIR

***** open group of tabs

use the spacefm -t command for this, IE:
 In Example:

 spacefm -rn --panel=2 /bin /lib /home/zeltak & spacefm -rn --panel=1
/usr /tmp

***** close tabs/panels

via the gui:
 In the menus Go|Tab|Close or right-click on a tab and Close. To hide a
panel, View|Panel N.
 With socket commands:
 spacefm -s set current tab close
 spacefm -s set panel1 visible false
 spacefm -s set --panel 2 current tab 3; spacefm -s set --panel 2
current tab close

***** Command to specify the other panel as output

Command to specify the other panel as output:
 IE if i would like to use a convert command on a png to jpeg and want
the output on the other side? on the same like is there a way to specify
a file without an extension?
 You can use the exported bash variables for this
 "${fm pwd panel[3]}"
 tip: [[#Oj0vpwkf9R7za28fGlEx8w][list of variables]]

***** list of variables

 Example variables available for use: (imported by $fm import)
 These variables represent the state of the file manager when command
is run.
 These variables can also be used in command lines and in the Path
Bar.
 "${fm files[@]}" selected files ( same as %F )
 "$fm file" first selected file ( same as %f )
 "${fm files[2]}" third selected file
 "${fm filenames[@]}" selected filenames ( same as %N )
 "$fm filename" first selected filename ( same as %n )
 "$fm pwd" current directory ( same as %d )
 "${fm pwd tab[4]}" current directory of tab 4
 $fm panel current panel number (1-4)
 $fm tab current tab number
 "${fm panel3 files[@]}" selected files in panel 3
 "${fm pwd panel[3]}" current directory in panel 3
 "${fm pwd panel3 tab[2]}" current directory in panel 3 tab 2
 ${fm tab panel[3]} current tab number in panel 3
 "${fm desktop files[@]}" selected files on desktop (when run from
desktop)
 "$fm desktop pwd" desktop directory (eg '/home/user/Desktop')
 "$fm device" selected device (eg /dev/sr0) ( same as %v )
 "$fm device udi" device ID
 "$fm device mount point" device mount point if mounted (eg
/media/dvd) (%m)
 "$fm device label" device volume label ( same as %l )
 "$fm device fstype" device fs type (eg vfat)
 "$fm device size" device volume size in bytes
 "$fm device display name" device display name
 "$fm device icon" icon currently shown for this device
 $fm device is mounted device is mounted (0=no or 1=yes)
 $fm device is optical device is an optical drive (0 or 1)
 $fm device is table a partition table (usually a whole device)
 $fm device is floppy device is a floppy drive (0 or 1)
 $fm device is removable device appears to be removable (0 or 1)
 $fm device is audiocd optical device contains an audio CD (0 or 1)
 $fm device is dvd optical device contains a DVD (0 or 1)
 $fm device is blank device contains blank media (0 or 1)
 $fm device is mountable device APPEARS to be mountable (0 or 1)
 $fm device nopolicy policy noauto set (no automount) (0 or 1)
 "$fm panel3 device" panel 3 selected device (eg /dev/sdd1)
 "$fm panel3 device udi" panel 3 device ID
 ... (all these are the same as above for each panel)
 "fm bookmark" selected bookmark directory ( same as %b )
 "fm panel3 bookmark" panel 3 selected bookmark directory
 "fm task type" currently SELECTED task type (eg 'run','copy')
 "fm task name" selected task name (custom menu item name)
 "fm task pwd" selected task working directory ( same as %t )
 "fm task pid" selected task pid ( same as %p )
 "fm task command" selected task command
 "$fm command" current command
 "$fm value" menu item value ( same as %a )
 "$fm user" original user who ran this command
 "$fm cmd name" menu name of current command
 "$fm cmd dir" command files directory (for read only)
 "$fm cmd data" command data directory (must create)
 To create: mkdir -p "$fm cmd data"
 "$fm plugin dir" top plugin directory
 tmp="$(fm new tmp)" makes new temp directory (destroy when done)
 To destroy: rm -rf "$tmp"
 $fm import command to import above variables (this
 variable is exported so you can use it in
any
 script run from this script)

**** create symlink

You can also copy the file(s) and use Edit|Paste Link.

**** design mode

***** stytle

Normal
 If your command's style is set to Normal, it will be displayed as a
normal menu item, with an optional icon to the left, and a key shortcut
to the right. When clicked, your custom command will be run immediately.
Normal is the default style for new commands.
 Checkbox
 If your command's style is set to Checkbox, it will be displayed as a
checkbox menu item with a checkbox to the left, and a key shortcut to
the right. No icon will be displayed. The checkbox will contain or not
contain a checkmark. Each time the user clicks the menu item, the
checkbox will be toggled (if checked it will uncheck; if unchecked it
will check), just like the checkbox menu items you are accustomed to.
After the checkbox is toggled, your custom command will be run.
 Your custom command can read the value of the checkbox using the
variable $fm value. This will equal 1 if checked, or 0 if unchecked.
This allows your command to take different actions depending on the
state of the checkbox.
 For example, add a new custom menu item called 'Checker'. Then open the
Design Menu for the new item and select Style|Checkbox. Open the Design
Menu again and select Command|Line. Enter or paste this command line
into the Edit Command Line dialog:
 if [ $fm value -eq 1 ]; then echo "Box is checked"; else echo "Box is
unchecked"; fi
 Now when you click your menu item, you will be told if the box is
checked or unchecked - each time you click the item, it will change.
 Confirmation
 If your command's style is set to Confirmation, it will be displayed as
a normal menu item with an optional icon to the left, and a key shortcut
to the right. When the item is clicked, the user will be presented with
a confirmation dialog with OK and Cancel buttons. If the user the clicks
OK, your custom command will then be run. If the user clicks Cancel, the
command will not be run. There is also a Help button in this dialog
which opens the README file for this command.
 To set or change the message which appears in the dialog, set Message.
 To show a dialog while your script is running, or to create custom
dialogs, see SpaceFM Dialog.
 Input
 If your command's style is set to Input, it will be displayed as a
normal menu item with an optional icon to the left, and a key shortcut
to the right. When the item is clicked, the user will be prompted to
enter text. If the user the clicks OK, your custom command will then be
run. If the user clicks Cancel, the command will not be run. There is
also a Help button in this dialog which opens the README file for this
command.
 Your custom command can read the text entered by the user using the
variable "$fm value". The last text entered in the box will be
remembered and will be the default entry next time the item is clicked.
 For example, add a new custom menu item called 'Your Name'. Then open
the Design Menu for the new item and select Style|Input. A dialog will
open asking you for the message to be displayed for the user. Enter
'Please enter your name:' into this dialog and click OK. Now open the
Design Menu again and select Command|Line. Enter or paste this command
line into the Edit Command Line dialog:
 echo "Your name is $fm value."
 When you click the menu item, you will be asked for your name, and if
you click OK, told your name. To set or change the message which appears
in the dialog, set Message.
 To show a dialog while your script is running, or to create custom
dialogs, see SpaceFM Dialog.
 NOTE: When exporting a command, the last value entered in the input
dialog will be exported with the plugin, even if Input is no longer the
selected style. Before distributing a plugin, be sure to open or extract
the archive and examine all files in your text editor to be clear on
what data you are sharing.
 Message
 The Message item will be enabled only if the style is set to
Confirmation or Input. This is the same dialog you saw when you first
selected Style|Confirmation or Style|Input - it allows you to change the
message seen by the user when the item is clicked.
 Although all the text must be on one line, you can create linebreaks in
the displayed dialog text by inserting \n for a linefeed. Or to insert a
tab, use \t. No other format characters should be used in this dialog.
For example:
 Please enter your value:\n\nA value is required.

***** context

Context
 Tip:In order to open the Design Menu again for this menu item, you must
first select an audio file (you cannot open the Design Menu on a
disabled menu item). Or you can set Ignore Context (see below).
 The context dialog allows you to set rules which determine when and how
a menu item appears in the menu. Context rules can be set for both
built-in and custom items, including plugins and separators. Context
cannot be set for toolbar items.
 Context refers to the state of the entire file browser window when the
menu is shown. For example, the MIME type of the currently selected file
is one subject of the context. Another context subject is the filename
of the selected file. Another is any device that is currently selected
in the Devices list. There are many subjects which can be used in
context rules.
 By default, the top line of the context dialog reads "Show item if
context matches any rule:", and is followed by an empty rule box. When
the rule box is empty, the item will always be shown regardless of
context.
 Rather than using an arcane syntax, context rules are composed using
words and phrases, which make the rules readable sentences. To compose a
new rule, use the Edit Rule box. There are many context subjects
available in the drop-down list, but "MIME Type" and "Filename" are the
most useful for most purposes.
 As an initial example, we will add a rule which shows the current menu
item when the selected file is an audio file. Note that when determining
the context, only the type and name of the first selected file is
considered. If multiple files are selected, this can be determined, but
the type of each selected file cannot be individually tested.
 Set the rule subject to 'MIME Type'. The box to the right of the
subject allows you to choose a verb, or a relationship between the
subject and its value. For this example, set the verb to 'begins with'.
 The box below the subject and verb will contain the value to be used as
a test. You can enter custom text in this box or click the arrow at the
right to select a common value from the drop-down list. Each subject
chosen will have a different list of common values. In this example,
choose 'audio/' from the drop-down list.
 Below the value box containing 'audio/' is a 'Value:' label, which may
or may not show a value. This label shows the subject's value in the
current context. When you opened the Design Menu, the file browser had a
context - perhaps some files or a device were selected, the browser was
in a particular directory, etc. For example, if a file is selected and
the subject is 'MIME Type', then the file's MIME type will currently
appear next to 'Value:'. If no file is selected, then 'Value:' will show
nothing. (Tip: You can quickly copy a value into the value box by
double-clicking it.)
 Now the words in the Edit Rule box should read 'MIME Type... begins
with... audio/'. To add this rule to the rule box above, click the Add
button. 'MIME Type begins with audio/' will be added to the list of
rules. For this rule to be satisfied, the MIME type of the first
selected file must begin with the text "audio/". Thus a file of type
"audio/mpeg" (an MP3 file), or of type "audio/x-wav" (a WAV file) would
match this rule, but a file of type "video/x-msvideo" (an AVI video
file) would not. (You can see the MIME type of any file by
right-clicking on it in the file list and selecting Properties|Info.) In
this way, our rule will only match the context if the first selected
file is an audio file.
 The context dialog will let you know the result of the current set of
rules. Below the rules box to the right, you will see "Current: Show" or
"Current: Hide", depending on the current context. If the first selected
file is an audio file, it will read "Current: Show", meaning that with
the current context, this menu item will be shown in the menu. If
instead it reads "Current: Hide", then the menu item will be hidden from
view for the current context - it will not appear in the menu.
 The top line of the context dialog is also now enabled. For example, we
can change 'Show item if context matches any rule:' to 'Enable item if
context matches any rule:'. If the action is to 'Show', its opposite is
to hide. If the action is to 'Enable', then its opposite to disable.
Thus if we change the top line to read 'Enable item if context matches
any rule:', then the menu item will be enabled or disabled depending on
context, but will never be completely hidden from view in the menu. Or,
to reverse the logic, action can be set to 'Hide' or 'Disable' when any
rule is matched.
 The 'matches any rules:' box can also be changed so that it requires
all rules to be matched instead of just one. This is like putting an AND
between the rules, instead of OR. Or you can reverse the matching logic
by choosing one of the 'doesn't match' options.
 For this example, set the top line to read 'Enable item if context
matches any rule:'. We now have a context rule set which reads 'Enable
item if context matches any rule: MIME Type begins with audio/'.
 Click OK to accept this rule set. Then select an audio file in the file
browser's file list. Open the menu where your item appears, and it will
be enabled for use. Next select another kind of file, such as a text or
video file. Open the menu again, and the menu item will be disabled.
 In order to open the Design Menu again for this menu item, you must
first select an audio file (you cannot open the Design Menu on a
disabled menu item). Or you can set Ignore Context (see below).
 The context dialog includes a few more features for editing rules. To
remove a rule, click the rule, then click the Remove button. If all
rules are removed and you click OK, the item will be shown regardless of
context.
 To change a rule in the list, click the rule, then edit the rule using
the Edit Rule box. When the rule is how you want it to appear, click the
Apply button to update the rule in the list.
 The best way to learn to use the context rules is to practice with a
file selected. In this way you can use the 'Value:' and 'Current:'
labels to see context values and observe the result of changing the
rules.
 Some context subjects are boolean - they will equal 'true' or 'false'
(these words must be in english even if the rest of the rule is
translated). For example, the rule subject 'Multiple Selected' will
always equal 'true' or 'false', depending on whether more than one file
is selected in the file list of the current panel. Thus if your custom
command is designed to work with only one selected file, you might set a
context rule to disable it if the user has selected multiple files.
 Other context subjects, such as 'Panel Count', contain a number, and
you can test whether they are equal to, less than, or greater than a
value. For example, the rule 'Panel Count is greater than 1' will only
match if the user has multiple panels shown.
 As a more advanced use, it's also possible to use || (or) or && (and)
in the test value to provide a list of possibilities (use || or &&, but
not both in the same rule). For example, this rule: MIME Type begins
with audio/ || video/
 causes two tests to be performed. If the MIME Type begins with 'audio/'
OR the MIME Type begins with 'video/', then the rule matches. Likewise,
the rule: Device Properties contains dvd && blank
 also causes two tests to be performed. If the Device Properties value
(which provides information about the currently selected device)
contains the word 'dvd', AND it contains the word 'blank', then the rule
matches. This context rule would tell you if the currently selected
device contains a blank DVD.
 It is important to note that built-in menu items sometimes have a
built-in context, which is evaluated before any rules you add. For
example, the file list's Paste menu item is disabled if the clipboard is
empty. No rule you add will cause it to be enabled in this case,
although you can still add a rule to hide it.
 Impossible Context
 Note that it IS possible to set an impossible context for an item - a
set of rules which will never match. In this case the item will never be
shown. This can be used to permanently hide an item you don't use. This
can also happen accidently, which is one reason why Ignore Context is
provided. For example, the rule Directory equals "" will never match
(Directory is always set).
 You can also open the context dialog for a menu item using a design
mode shortcut instead of the Design Menu. Highlight the menu item and
press F3, or use the mouse shortcut Ctrl + Alt + Middle-Click.
 Ignore Context
 The 'Ignore Context (global)' item in the Style submenu, if checked,
causes all context rules to be ignored, and all menu items shown. This
is a global setting - it disables context rules in all windows of the
current instance.
 If you need to change the context of an item you have disabled or
hidden, you can either create the appropriate context so that the item
is shown and enabled, or you can open the Design Menu for any other item
and check 'Ignore Context (global)'. This will allow you to then access
the Design Menu of the item and change its context. When you are
finished, you can uncheck 'Ignore Context (global)'.
 Note that Ignore Context does not affect the built-in context of
built-in items - for example, even with Ignore Context checked, the file
list's Paste menu item will still be disabled if the clipboard is empty.

***** context example

this shows an example for a context that will only appear in the right
click menu for multimedia files
 1.create a new menu item in the right click menu
 2.add a command (IE vlc %f)
 3.edit the context menu:
 [[/home/zeltak/org/attach/images/Image_JKp0i4TeDEzn9WFbkU1JyQ_0001.png]]
 5.now the menu will only appear when you are on audio and video files

**** use ssh

use this at the command bar:
 [[ssh://root@192.168.0.120][ssh://root@192.168.0.120]]
 note: make sure udevil is configured to handle ssh:

 sudo gvim /etc/udevil/udevil.conf

 and have this line:
 allowed types = $KNOWN FILESYSTEMS, file, cifs, smbfs, nfs,
curlftpfs, ftpfs, sshfs, tmpfs, ramfs

**** Select by
***** Select by specific names

#+BEGIN_SRC sh
# Select files named 'fstab' and 'hosts', unselect others:
spacefm -s set selected_files 'fstab' 'hosts'
#+END_SRC

***** select  by filename

spacefm -s set selected_pattern '.jpg'
**** Menus 
***** use keyboard to select item menus

append a ' ' before the item name to make it keyboard accessible
 IE:
 [[/home/zeltak/org/attach/images/Image_8Xs6hbyyo4DRhLWdZsES7g_0001.png]]
***** Pop up a menu
spacefm -s show-menu 'Gizmos'
*** telescope
**** config

General configuration is done on /etc/telescope.conf, with the following
options:
 hotkey = <hotkey name (default=F5)>
 background.filename = <path to wallpaper>
 background.mode = <stretched|centered|scaled|cropped>
 background.color = <color in #ffffff notation>
 border.width = <border width in px>
 text.font.size = <caption font size (default=24)>
 test.yOffset = <caption Y-axis offset (default=-7)>
 show.desktop.thumbnail = <on|off --- show desktop as one of thumbnails.
Switching to it doesn't work on Ubuntu but worked on KDE. Needs to be
fixed>
 show.desktop.iconify = <on|off --- show desktop by minimizing all
windows. Ugly but useful if default  NET SHOW DESKTOP method doesn't
work for particular WM>
 In example:
 background.filename = /home/zeltak/MLT/wallpapers/black tiles.jpeg
 hotkey = F12
 Further keybindings (after the task switcher is invoked) can be changed
on /etc/telescope.keys.
 In example:
 press(F12): internal(selectNext)
 press(Escape): internal(switchToSelected)
 press(F4): internal(switchToSelected)
 press(Right): internal(selectRight)
 press(Left): internal(selectLeft)
 press(Up): internal(selectUp)
 press(Down): internal(selectDown)
 press(Return): internal(switchToSelected)
*** Git annex
**** annex assistant
***** start up git annex and webapp
starting on boot

The git-annex assistant will automatically be started when you log in to desktop environments like Mac OS X, Gnome, XFCE, and KDE, and the menu item shown above can be used to open the webapp. On other systems, you may need to start it by hand.

To start the webapp, run

#+BEGIN_SRC sh
git annex webapp
#+END_SRC
at the command line.
To start the assistant without opening the webapp, you can run the command "git annex assistant --autostart". This is a good thing to configure your system to run automatically when you log in.

*** syncthing
**** basic sync
For two nodes two sync a repository, the following must be true on each node:

1.The other node has been added to the config (+add device):

#+DOWNLOADED: /tmp/screenshot.png @ 2014-10-21 17:24:02
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-10-21_17:24:02.png]]

$Note- you need the KEY from the other machine you are trying to pair$

2.after you add a device you need to add each repo you want to sync seperatly:

click add folder :


#+DOWNLOADED: /tmp/screenshot.png @ 2014-10-21 17:23:42
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-10-21_17:23:42.png]]

'FolderID' and 'Folder Path' need to be identical to the partner machine you are trying to sync

then make sure the other node (machines) you want to share have been checked under "Share With Nodes" in the repository configuration

#+DOWNLOADED: /tmp/screenshot.png @ 2014-10-21 17:27:16
#+attr_html: :width 300px

 [[/home/zeltak/org/attach/images_2014/screenshot_2014-10-21_17:27:16.png]]

finally `restart`

in example: 

#+BEGIN_EXAMPLE
Folder ID: sync
Repository Path:/home/zeltak/Sync
#+END_EXAMPLE


**** install on arch linux
install through community or git (on aur)
then use regular systemd syntax to operate

#+NAME: 
#+BEGIN_SRC sh
sudo systemctl enable syncthing@zeltak    
sudo systemctl start syncthing@zeltak    
sudo systemctl stop syncthing@zeltak    
#+END_SRC

then use the webgui to use at:

http://localhost:8080/

*** unsion
**** Synchronizing org files with Unison
This describes how to synchronize org files using the 
[[http://www.cis.upenn.edu/~bcpierce/unison/][Unisonfile synchronizer]],
as well as how to configure it to use an external tool to merge conflicting
edits.

also see:
http://orgmode.org/worg/org-tutorials/unison-sync.html

***** Prerequisites

You should have Unison up and running. Binaries can be found 
[[http://www.cis.upenn.edu/~bcpierce/unison/download.html][here]] and the
documentation is 
[[http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html][here]].

***** Synchronization

Unison is a file synchronizer, thus it may be used to synchronize org files. To
configure Unison, on uses a /profile/ which states where the things to
synchronize are as well as some options. Assuming I want to synchronize the
files in ~/Users/schmitta/dir1~ and ~/Users/schmitta/dir2~, the profile would
look like this

#+BEGIN_EXAMPLE
root = /Users/schmitta/dir1
root = /Users/schmitta/dir2
#+END_EXAMPLE

In most cases Unison will be used with a remote machine. The local machine is
called the /client/ and the remote one the /server/. For such remote
synchronization, the ~unison~ binary must be installed in the server as
well. The simplest way to connect to the machine is using ssh. One should check
that unison can be found there by doing ~ssh address@hidden unison -version~. If
~unison~ cannot be found in the path, one may set the ~servercmd~ option as
indicated in the next example.

(Please see the 
[[http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#roots][manual
 section on roots]] for further details.)

#+BEGIN_EXAMPLE
root = /Users/schmitta/dir1
root = ssh://address@hidden/relative/path/to/dir2

servercmd = /usr/bin/unison
#+END_EXAMPLE

***** Merging

As Unison works on the level of files, it will trigger a /conflict/ if both
files have changed since the last synchronization. In that case one can only
choose which file to keep, which is not satisfying. Unison offers the
possibility to use external tools to merge the files. There is an 
[[http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html#merge][extensive
manual section]] regarding this, we'll just describe how to use emacs and ediff 
to
do it.

For better merging, we will ask unison to keep the last synchronized version of
every org file on the client; this way we can use ediff with ancestor. These
~currentbackup~ files may live alongside the synchronized files (with names of
the form ~.bak.version.name~, which is configurable) or in a central location.

Here is the modified configuration file.

#+BEGIN_EXAMPLE
root = /Users/schmitta/dir1
root = ssh://address@hidden/relative/path/to/dir2

servercmd = /usr/bin/unison

backupcurrent = Name .org
backuplocation = local
maxbackups = 0

merge = Name .org -> emacsclient -c --eval '(ediff-merge-files-with-ancestor 
"CURRENT1" "CURRENT2" "CURRENTARCH" nil "NEW")'

#+END_EXAMPLE

The ~backupcurrent~ option tells unison to keep a backup of the last
synchronized version of ever file with an ~org~ extension. The location of the
backup should be local (alongside the file). Finally, no other backup should be
created.

Next follows the merge command. For every org file in conflict, use the command
that launches a new emacs frame calling the ediff with ancestor function. The
~CURRENT1~, ~CURRENT2~, and ~CURRENTARCH~ strings are  replaced with the file
from the first root, the file from the second root, and the last synchronized
version. The ~NEW~ file is where Unison expects the file to be saved (which will
be done by the ediff session).

Thus, when an org file has been modified on both hosts, an ediff session will be
launched in a new frame. Closing the frame will make Unison commit the merge (it
waits until the command has finished).

If one does not want to use backups, it's possible to use the simpler ediff
(without ancestor) command as follows.

#+BEGIN_EXAMPLE
root = /Users/schmitta/dir1
root = ssh://address@hidden/relative/path/to/dir2

servercmd = /usr/bin/unison

merge = Name .org -> emacsclient -c --eval '(ediff-merge-files "CURRENT1" 
"CURRENT2" nil "NEW")'

#+END_EXAMPLE

***** virtualizations
****** virtualbox
******* vbox on arch
******** install
install from community repo

#+begin_src sh
pacman -S virtualbox
#+end_src


then load the module

#+BEGIN_SRC sh
modprobe vboxdrv
#+END_SRC

******* virtual machine cloning

Virtual Machine Cloning

 I once spent a lot of time setting up one of my virtual machine guest
environments to the exact specifications that I needed. I downloaded
tons of software, added bash aliases, and tweaked various configurations
to suit my needs. Then an interesting thing happened. I ended up needing
another VM with the exact same specifications. Taking the time to
manually configure another VM wasn't really an option. Fortunately
VirtualBox has built in VM cloning support. All I had to do was run the
following command:
 VBoxManage clonehd /path/source.vdi> </path/target.vdi> -format VDI
 This saves a lot of time by reducing the effort needed to reproduce the
guest virtual machines that you have previously set up using VirtualBox.
This also allows you to share your environment with other people by
simply giving them access to your .vdi file (VirtualBox VM instance) and
configuration settings. In addition, once you set up a pristine
environment you can clone it and always have it stored as a backup
incase you mess something up with the VM you are currently working with.
******* move a virtual machine

`VirtualBox v4.0.0 and later`

The basic procedure for moving VMs created by VirtualBox v4.0.0 or later is to copy the VM folder (with contents) to your preferred location, then use the GUI's Machine|Add menu item to register the .vbox file (found in the VM folder) from its new location.

Of course, if the copy is on the same host as the original VM then VirtualBox will object to your attempt to register the same UUID twice. You must remove the original VM from the manager before the copy can be added ().

() There was a bug in VirtualBox versions prior to v4.3.0 in which the background VBoxSVC process retains a memory of media filenames and UUIDs even after the front end has apparantly removed them. If using an affected version then to work around this then you must shut down VirtualBox entirely, wait several seconds or until VBoxSVC unloads, then you can run the GUI again. At this point you should be able to add the VM back without complaint.

If you want the original and the copy to be registered at the same time on the same host then you actually need to make a clone rather than a simple copy. To clone a VM you right click it in the GUI and select "Clone". [ VirtualBox v4.1.0 and later ].

If you are running on a Windows host then be wary of moving VMs to removable storage. Windows has a nasty habit of changing the drive letters of removable drives, which will invalidate the VM path stored when you used Machine|Add.
 
******* launch vm from cli

Launch a VirtualBox virtual machine from the command line
VBoxManage startvm "name"
 foe example
 VBoxManage startvm "Xp Stable"

******* install-upgrade

Reinstalling virtual box after kernel upgrade

 sudo /etc/init.d/vboxdrv setup
 Allow for usb devices to work:

you are having trouble accessing USB devices in a guest, make sure that
you are a member of the vboxusers system group.

******* errors

The VirtualBox kernel driver is not accessible to the current user
error

 go to system -->Administration---->User/become Root commands and Groups
 click on 'manage groups'
 Scan down the list, there should be a group called 'vboxusers'. If
there is, double click on it and make sure that your username is ticked
so that you are a member of the group. If there is no group, create one
by clicking on 'Add Group', typing vboxusers in the group name field and
making sure that your user name is ticked so that you are a member.
Then, log out and log back in again. When you a start your virtual
machine, everything should work!
 Fix screen resolution in Ubuntu Virtualbox Host

 Start up your Ubuntu 8.04 guest. In VirtualBox, click Devices->Install
Guest Additions and your virtual Ubuntu should recognize a new CD. Open
a terminal and run this command:
 sudo /media/cdrom/VBoxLinuxAdditions.run
 The installer should prompt you that it's time to restart the virtual
machine once it's done. Just logging out and back in should work.
 This is where things get sticky. For Ubuntu 8.04 guests, the VirtualBox
video driver will not be enabled because of the minimalistic xorg.conf
file.
 Open your guest machine's xorg.conf file:
 gksu gedit /etc/X11/xorg.conf
 Find the device section, which should look like this:
 Section "Device"
 Identifier"Configured Video Device"
 EndSection
 And replace it with this to enable the VirtualBox driver:
 Section "Device"
 Identifier"Configured Video Device"
 Driver"vboxvideo"
 EndSection
 Changing screen resolutions in Ubuntu 8.04 is done with RandR, which is
not supported by VirtualBox. So you'll also need to set a resolution
manually. Find the screen section, which should look like this:
 Section "Screen"
 Identifier"Default Screen"
 Monitor"Configured Monitor"
 Device"Configured Video Device"
 EndSection
 And replace it with this, but change 1024768 to your preferred
resolution:
 Section "Screen"
 Identifier"Default Screen"
 Device"VirtualBox graphics card"
 Monitor"Generic Monitor"
 DefaultDepth24
 SubSection "Display"
 Depth24
 Modes"1024x768"
 EndSubSection
 EndSection
 Save, exit the editor, and log out. You should now have a large virtual
machine

******** virtualbox cant operate in vmx root mode

 Failed to start the virtual machine Xp Testing ATD (about to die
Edition).
 VirtualBox can't operate in VMX root mode. Please disable the KVM
kernel extension, recompile your kernel and reboot
(VERR VMX IN VMX ROOT MODE)
 The workaround:

 sudo modprobe -r kvm-intel
 or
 sudo apt-get remove qemu-kvm

******* Virtualbox on windowz

******** mount a windows share drive in a linux guest

You should remove the spaces between mount, ., and vboxsf. If that still
doesn't work, this should work:
 mount -t vboxsf win share /mnt/share
 Make sure the name of the folder and the share are not equal, otherwise
you get a protocol error
******* expand a virtualbox hardrive
in the CLI issue the following:

#+BEGIN_SRC sh
VBoxManage modifyhd /home/zeltak/VirtualBox\ VMs/Windowz/Windowz.vdi --resize 121920
#+END_SRC

note: the new size is in MB

then use gparted live to enlarge the drive for the OS to see it

****** vmware

******* tips

Installing vmware from scratch or after Linux Kernel Upgrade

 1) If not installed yet, download and install VMware workstartion
 
 2) In terminal:
 Sudo apt-get install linux-headers-2.6.17-XX-386 g++
 where XX is the Kernel version.
 if not sure about kernel version type
 
 uname -a
 3) Enter in terminal:
 sudo /usr/bin/vmware-config.pl
 
 and press enter to all Questions, that's it!

******* import from virtualbox

issue this :
 VBoxManage clonehd /home/zeltak/.VirtualBox/VDI/Xp Uni.vdi
/home/zeltak/ -format VMDK
 copy a .vmx file from an existing vm machine (create an empty one if
needed) to the vmdk folder
 edit with editor to fit new machine
 open the vmx file from vm workstation

******* Vmware7 on arch

******** VMware Workstation or VMware Player

To install Workstation or Player on a Linux host using a bundle:
 1. Download
VMware-Workstation-<version>.<release>.<architecture>.bundle or
VMware-Player-<version>-<release>.<architecture>.bundle from the VMware
site.
 2. In a terminal cd to the directory where you downloaded the file.
 3. Become root and create a fake System V init style directory for
VMware and start the installation
 (the --console flag uses terminal instead of the GUI and the --custom
asks all the unnecessary questions that nobody cares about):

------------------------------------------------------------------------------------------------------------------
 # mkdir -p /etc/rc.d/vmware.d/{rc{0..6},init}.d

------------------------------------------------------------------------------------------------------------------
 then

------------------------------------------------------------------------------------------------------------------
 # sh VMware-<edition>-<version>.<release>.<architecture>.bundle
--console --custom

------------------------------------------------------------------------------------------------------------------
 4. (Read &) accept the EULA to continue.
 5. Accept the default settings until it prompts for System service run
levels then set to:
 /etc/rc.d/vmware.d/
 6. For System service scripts set to:
 /etc/rc.d
 Press enter to install.
 Note that if nothing happens at this point and you are returned to
the prompt, try re-running the installation without the --console
option.
 8. At this point you would want to install the modules.
 First you need to either:
 create a symlink from /bin/lsmod to /sbin/lsmod with:

------------------------------------------------------------------------------------------------------------------
 # ln -s /bin/lsmod /sbin/lsmod

------------------------------------------------------------------------------------------------------------------
 or (try above first)
 change the lsmod binary path in
 /etc/rc.d/vmware
 at the lines 88 and 108 from:
 /sbin/lsmod
 to:
 /bin/lsmod
 9. Now you can install the modules:

------------------------------------------------------------------------------------------------------------------
 # vmware-modconfig --console --install-all

------------------------------------------------------------------------------------------------------------------
 10. (Optional) Add vmware to the DAEMONS array in /etc/rc.conf so that
the service is started automatically on boot.
 11. Now, open your VMware Workstation (vmware in the console) to
configure & use!

******** uninstall

Uninstallation
 Check the product name
 # vmware-installer -l
 uninstall product
 # vmware-installer -u <vmware-product>
 Manually included parts in /etc/rc.d have to be deleted manually. Don't
forget to remove vmware from the /etc/rc.conf DAEMONS array.

******** recompile after kernel change arch

issue this after every kernel change:
 sudo vmware-modconfig --console --install-all

****** Android

******* Enable market place

[[http://tech-droid.blogspot.com/2009/11/android-market-on-emulator.html][download]]
or use your already dl copy (see zeltak backup files) the new Android
Virtual Machine that has the Android Market installed
 Extract the files, and Copy the files and folder you just extracted to
 /home/zeltak/.android/avd
 In your .android/avd folder, open the new AndEmu.ini file in Notepad.
We need to change the path to our Android folder
 (Zeltak edit: the only way i got it runing was to change android-3 to 8
for some resaon)
 target=android-8
 path=/home/zeltak/.android/avd/AndEmu.avd
 You're now ready to start the new virtual Android. Open the Android SDK
Manager, and you should see your new AndEmu listed along with your other
Android virtual machines. Click Start to run it.
 [[~/Dropbox/Org/Tech/linux_files/image186.png]]
****** Teamviewer
******* Bugs
******** fix wierd issues on debian with VPN in BGU

@note-on arch make aure latest version of `snx` package is installed thorugh AUR@

https://aur.archlinux.org/packages/snx/


1)log in with VPN in browser

https://vpn.bgu.ac.il/extender.html

U:ikloog@vpn
Pass:4862

2)log into machine with ssh

#+BEGIN_SRC sh :term t
ssh -X -C zeltak@132.72.155.204
#+END_SRC

#+RESULTS:

3)stop the TV processes and deamon (with htop,init or systemd)

#+BEGIN_SRC sh :term t
sudo teamviewer --daemon stop
#+END_SRC

4)use 'htop' to kill all non deamon TV processes

5)and start the TV deamon again:
#+NAME: 
#+BEGIN_SRC sh
sudo teamviewer --daemon start
#+END_SRC
$Note- this maybe done with systemd in future debian releases when systemd takes over$

$Note$ you can skip VNC and try this if it works:


#+NAME: 
#+BEGIN_SRC sh
DISPLAY=:0 teamviwer
#+END_SRC

with VNC connect to debian machine:
issue:
#+NAME: 
#+BEGIN_SRC sh
x11vnc -display :0
#+END_SRC
then connect with vinagre or any VNC viwer and start TV through GUI

** Editors
*** 'Emacs'
       :PROPERTIES:
       :ID:       38a15adf-f505-4a54-b1d9-f76b22ce1147
       :END:
******* 0.BASICS
******** help
********* describe Variables
use C-h v to descrive variables like auto-mode-alist 
********* describe key
C-h k
********* describe Functions
to get info on a specific function

c-h f FUNCTIONNAME

you will get info on the function and how to set it IE:

#+BEGIN_EXAMPLE
With a prefix argument ARG, enable Tool Bar mode if ARG is
positive, and disable it otherwise.  If called from Lisp, enable
Tool Bar mode if ARG is omitted or nil.

#+END_EXAMPLE

so here if its 1 (positive) it works and if -1 (negative) its disabled

******** Using Emacs In A Text Terminal

Emacs in a Text Terminal.
 to start Emacs

 emacs -nw filename

 The "-nw" launches emacs without graphical window system.I
 n a text terminal, you can invoke the textual menu by pressing
Alt+`. (or, pressing the Esc key followed by the backtick ` key.)

******** WINDOWS

[[macsen_files/Image_zDZxTWFufFIlOlbuHLNYuw_0001.png]]
  WINDOWS
 ---------
 Emacs can have several "windows", each displaying its own text. We
 will explain later on how to use multiple windows. Right now we want
 to explain how to get rid of extra windows and go back to basic
 one-window editing. It is simple:
 C-x 1One window (i.e., kill all other windows).
 That is CONTROL-x followed by the digit 1. C-x 1 expands the window
 which contains the cursor, to occupy the full screen. It deletes all
 other windows.
 >> Move the cursor to this line and type C-u 0 C-l.
 >> Type C-h k C-f.
 See how this window shrinks, while a new one appears
 to display documentation on the C-f command.
 >> Type C-x 1 and see the documentation listing window disappear.
 This command is unlike the other commands you have learned in that it
 consists of two characters. It starts with the character CONTROL-x.
 There is a whole series of commands that start with CONTROL-x; many of
 them have to do with windows, files, buffers, and related things.
 These commands are two, three or four characters long.

******** change window Size
use the enlarge-window and shrink-window command
you may want to bind these 
******** movment
********* keybinds
********** 1. Emacs Line Navigation

Following four navigation can be done line by line.

-  C-p : go to previous line
-  C-n : go to next line
-  C-f : go forward one character
-  C-b : go backward one character

Repeat factor

By using the repeat factor in EMACS we can do this operation for N
times. For example, when you want to go down by 10 lines, then type C-u
10 C-p

Within a line if you want to navigate to different position, you have
following two options.

-  C-a : go to the starting of the current line.
-  C-e : go to the end of the current line.


********** 2. Emacs Screen Navigation

Following three navigation can be done in relation to text shown in the
screen.

-  C-v : Jump forward one full screen.
-  M-v : Jump backwards one full screen. ( If you dont have Meta key,
   use ESC key )
-  C-l : Make the current line as center line of window.

You can also use Page Up, Page Down for screen navigation.

********** 3. Emacs Special Navigation

Following are couple of special navigation that are used to go to the
start or end of buffer.

-  M-< : Go to the start of file
-  M-> : Go to the end of file

********** 4. Emacs Word Navigation

Following are two word navigation keys.

-  M-f : navigate a word forward.
-  M-b : navigate a word backward.

********** 5. Emacs Paragraph Navigation

-  M-a : Go to the beginning of the current paragraph. By pressing M-a
   again and again move to the previous paragraph beginnings.
-  M-e : Go to the end of the current paragraph. By pressing M-e again
   and again move to the next paragraph end, and again.

********** 6. Emacs Search Navigation

When you want to search by giving the plain text,

-  C-s : Type Ctrl+s followed by the word to Search. Press Ctrl+s
   continuously to move to the next occurrences. Press enter to
   terminate search.
-  C-r : Do a reverse search. All other explanation are like Ctrl+s

When you want to search using regular expression,

-  C-M-s : Type Ctrl+s followed by the regex to Search. Press Ctrl+s
   continuously to move to the next occurrences. Press enter to
   terminate search.
-  C-M-r : Do a reverse search. All other explanation are like
   Ctrl+Meta+s

********** 7. Emacs Navigation from Command Line

Emacs +N filename: Go to the Nth line of the file after opening it.

******** important binds

kill the buffer (C-x k)
 open file (C-x C-f)
******** launching emacs 
********* launching emacs as a SHell
#+BEGIN_SRC sh
emacs -f eshell
#+END_SRC

******** mouse
********* mouse support in terminal
Some terminal emulators under X support mouse clicks in the terminal window. In a terminal emulator which is compatible with xterm, you can use:

~M-x xterm-mouse-mode ~

to enable simple use of the mouse--only single clicks are supported. The normal xterm mouse functionality is still available by holding down the SHIFT key when you press the mouse button. The Linux console supports this mode if it has support for the mouse enabled, e.g. using the gpm daemon.

******* saving/closing emacs
******** base 
Save To save file: press Ctrl+x, then Ctrl+s.
Quit Emacs Type: Ctrl+x then Ctrl+c.
Quit without Saving:To quit without saving, just do quit and emacs will ask if you want to
save.
If the keys you press seem to do weird things, then, hold down Ctrl then press g. This will cancel the sequence of keys you may have pressed
by mistake.
******** desktop-save-mode auto Save/Restore
With desktop-save-mode on, now it automatically save/restore opened files, windows config (number of windows, size, position), when quit ＆ restart emacs.
******* Debug
******** How to startup emacs without loading any customization

How to startup emacs without loading any customization?
To run emacs without loading your personal init file, start emacs like this:
#+BEGIN_SRC sh
emacs -q
#+END_SRC
To not load any site-wide startup file, start emacs with emacs -Q. The site-wide startup file is usually part of your emacs
distribution, such as from Carbon emacs, Aquamacs, ErgoEmacs. Starting
emacs with "-Q" is like running a bare bone GNU Emacs.

******** debugging your config file
********* Binary search
The secret to finding a problem in your init file is not a secret: binary search.
Use comment-region to comment out half your init file, then 3/4, 7/8,... It is very quick to identify the problem. comment-region also uncomments: C-h f comment-region RET.
********* show a stack trace
You'll need to provide more information to be sure. Try setting

#+BEGIN_SRC emacs-lisp :results none
(setq debug-on-error t)
#+END_SRC

which will give you a stack trace showing what function is complaining about the string being nil.
My guess is that buffer-file-name is returning nil, and that's where the problem lies (not all buffers have file names). Check out the debugging section of An Introduction To Programming in Emacs Lisp, or the debugging section of the Emacs Lisp manual.

********* Check parens
to see whats wrong in your start up files and if emacs give you startup error messages, go over all your init files (base init.el and all
sourced files) and issue this command:

#+BEGIN_EXAMPLE
M-x check-parens
#+END_EXAMPLE

it will check extra parenthesis and quotes and let you know where andwhat is wrong

********* debug erros in code
type ~M-x toggle-debug-on-error RET~, reproduce the problem/error you have to get the debug info 

you can then M-x goto-char RET to get to the to-the-charachter-of-the-invalid-read 

******* .emacs
******** Org mode file as a emacs config

For a simple example of usage, follow these 5 steps:

create a directory named .emacs.d in the base of your home directory
$Note-this usually is already created with most configs$ 

#+BEGIN_SRC sh
mkdir ~/.emacs.d
#+END_SRC

checkout the latest version of Org-mode into the src subdirectory of this new directory;

  #+BEGIN_SRC sh
cd ~/.emacs.d
mkdir src
cd src
git clone git://orgmode.org/org-mode.git
#+END_SRC

place the following code block in a file called init.el in your Emacs initialization directory (~/.emacs.d).

#+BEGIN_SRC emacs-lisp :results none
;;; init.el --- Where all the magic begins
;;
;; This file loads Org-mode and then loads the rest of our Emacs initialization from Emacs lisp
;; embedded in literate Org-mode files.

;; Load up Org Mode and (now included) Org Babel for elisp embedded in Org Mode files

;; this line below tells Emacs where the orgmode file are
(add-to-list 'load-path "~/.emacs.d/src/org-mode/lisp")
;; load org
(require 'org-install)
(require 'org)
;; location of the setting.org file (all Emacs configs to be evaluted by org babel)
(org-babel-load-file
 (expand-file-name "settings.org"
                   user-emacs-directory))

;; init.el ends here


#+END_SRC

The curent config can be found here:
[[file:~/.emacs.d/settings.org]]

Re-start Emacs to load the customizations.
 
******** reload a orgmode emacs config

use:

~M-: (org-babel-load-file "/path/to/file.org")~

to re-evaluate the whole thing 
 
******** define system defaults
********* default web browser
#+BEGIN_SRC emacs-lisp
(setq browse-url-browser-function (quote browse-url-generic))
(setq browse-url-generic-program "dwb")
#+END_SRC

******** Where is emacs's init file located?
Where is emacs's init file located?
 That depends on whether if you have the environment variable named
"HOME". ("HOME" should not be confused with a default Windows
environment variable named "HOMEPATH".) If you do have "HOME", then
emacs will look for it there. If you don't have "HOME", emacs will look
for init file at:
 On Windows Vista and Windows 7: %HOMEPATH%\AppData\Roaming\
 on Windows XP: %HOMEPATH%\Application Data\
 See: Windows Environment Variables Basic Tutorial.
 What's emacs's init file name?
 By default, it is %HOME%/.emacs, or %HOME%/.emacs.el, or
%HOME%/.emacs.d/init.el. The file can be byte-compiled, ending in
".elc".
 (info "(emacs) Find Init")
 How to find out if my emacs's init is loaded?
 Type some garbage in your init file, then restart emacs. If emacs
starts with error, then you know it's loaded.
 Or, you can put the following code in your init file:
 (set-background-color "pink"

******** Split Your .emacs into Multiple Files

Split Your .emacs into Multiple Files
 Go to your ".emacs". If the file has more than 2 hundred lines, then
just go to the middle and split the file into 2 files. Name it
.emacs.d/emacs init 1.el and .emacs.d/emacs init 2.el. The exact
file name doesn't matter. Then, in your ".emacs", change it to like
this:
 (load "~/.emacs.d/emacs init 1")
 (load "~/.emacs.d/emacs init 2")
 That's it.
 When next time you have more code you want to add, just pick a file and
add there. Each time, spend no more than 5 minutes doing it.
 Within that 5 min, you can shuffle the file content a bit. Moving
keybindings to init keybinding.el, move loading packages to a
separate file init load package.el, move misc settings (such as
dired, highlighting, line numbering, cursor, font, etc) to another file
misc settings.el.
 The init file categories i have are roughly this: {settings,
keybinding, load packages, elisp functions, ms windows, misc}.
Usually, new things i add to "misc.el". Once in a while, i clean up that
file, move things to proper places.
 This way, you have your customization under manageable condition,
without much effort. You may edit your init files once a month.
Gradually over the years, you may have multiple emacs init files, all
manageable and reasonably organized.

******** Aliases
In emacs, you can use alias to shorten commands. For example, make frequently used commands just 1 or 2 letters.

For example, here's my aliases:

(defalias 'yes-or-no-p 'y-or-n-p) ; y or n is enough
(defalias 'list-buffers 'ibuffer) ; always use ibuffer
(defalias 'perl-mode 'cperl-mode) ; always use cperl-mode

;; make frequently used commands short
(defalias 'g 'grep)
(defalias 'gf 'grep-find)
(defalias 'fd 'find-dired)

; elisp
(defalias 'eb 'eval-buffer)
(defalias 'er 'eval-region)
(defalias 'ed 'eval-defun)
(defalias 'eis 'elisp-index-search)
(defalias 'lf 'load-file)

******** Basic (emacs init file)

Your init file contains personal EmacsLisp code that you want to execute
when you start Emacs.
 For GnuEmacs, it is ~/.emacs or  emacs or ~/.emacs.d/init.el.
 For XEmacs, it is ~/.xemacs or ~/.xemacs/init.el.
 For AquamacsEmacs, it is ~/.emacs or ~/Library/Preferences/Aquamacs
Emacs/Preferences.el
 In Emacs, if you do not know where your InitFile is located or you do
not have one and want to create it, then just open it for editing in
Emacs:
 C-x C-f ~/.emacs RET

******** backups

********* How to disable emacs's automatic backup



How to disable emacs's automatic backup?

Use this code:

 (setq make-backup-files nil) ; stop creating those backup~ files
 (setq auto-save-default nil) ; stop creating those #auto-save# files

How to stop emacs's backup changing the file's creation date of the
original file
 (relevant for non linux only)

Put this code in your emacs init file:

 (setq backup-by-copying t)

Explanation: when emacs does a backup, by default it renames the
original file into the backup file name, then create a new file and
insert the current data into it. This effectively destroys the creation
date of your file. (If a file is created in 2001, and you modified it
today, the file's creation date will become today. Note: unixes
(including Linux and bsd) do not record file creation date, so this
doesn't matter. (ctime is not creation date.) Windows and OS X do record
file creation date.).

********* How to set emacs so that all backups are placed into one backup
folder

How to set emacs so that all backups are placed into one backup folder
 add this code to your init file:
 ;; make backup to a designated dir, mirroring the full path
 (defun my-backup-file-name (fpath)
 "Return a new file path of a given file path.
 If the new path's directories does not exist, create them."
 (let (
 (backupRootDir "~/.emacs.d/emacs-backup/")
 (filePath (replace-regexp-in-string "[A-Za-z]:" "" fpath )) ;
remove Windows driver letter in path,  "C:"
 (backupFilePath (replace-regexp-in-string "//" "/" (concat
backupRootDir filePath "~") ))
 )
 (make-directory (file-name-directory backupFilePath)
(file-name-directory backupFilePath))
 backupFilePath
 )
 )
 (setq make-backup-file-name-function 'my-backup-file-name)
 The above will mirror all directories at the given backup dir. For
example, if you are editing a file /Users/j/web/xyz/myfile.txt, and
your backup root is /Users/j/.emacs.d/emacs-backup/, then the backup
will be at
/Users/j/.emacs.d/emacs-backup/Users/j/web/xyz/myfile.txt~.
 If you want all backup to be flat in a dir, use the following:
 (setq backup-directory-alist '(("" . "~/.emacs.d/emacs-backup")))
 This will create backup files flat in the given dir, and the backup
file names will have "!" characters in place of the directory separator.
For example, if you are editing a file at
/Users/j/web/xyz/myfile.txt, and your backup dir is set at
/Users/j/.emacs.d/emacs-backup, then the backup file will be at:
/Users/j/.emacs.d/emacs-backup/Users!j!web!emacs!myfile.txt~. If you
use long file names or many nested dirs, this scheme will reach file
name length limit quickly. (Mac and Windows allow 255 chars for file
name.)

******** How to disable emacs's automatic backup
How to disable emacs's automatic backup?

Use this code:

 (setq make-backup-files nil) ; stop creating those backup~ files
 (setq auto-save-default nil) ; stop creating those #auto-save# files

How to stop emacs's backup changing the file's creation date of the
original file
 (relevant for non linux only)

Put this code in your emacs init file:

 (setq backup-by-copying t)

Explanation: when emacs does a backup, by default it renames the
original file into the backup file name, then create a new file and
insert the current data into it. This effectively destroys the creation
date of your file. (If a file is created in 2001, and you modified it
today, the file's creation date will become today. Note: unixes
(including Linux and bsd) do not record file creation date, so this
doesn't matter. (ctime is not creation date.) Windows and OS X do record
file creation date.).

******** How to avoid restarting emacs when adding code to emacs init file

How to avoid restarting emacs when adding code to emacs init file?
 Many ways.
 1.Just select the new code and call eval-region.
 2.Call eval-buffer to evaluate all code.
 3.Call load-file. Or, in dired, press L on the file name.

******** turn on CUA mode by default

Turn on the CUA mode. Put the following in your emacs init file:
 (cua-mode 1)
 The CUA mode will do 4 things:
 {Cut Copy Paste Undo} have {X C V Z} keys.
 Typing while a region is selected will delete it or over-ride it.
 Text selection will be highlighted.
 Text selection can be done by holding down the  Shift key and
press a arrow key.

******** Defining Alias to Increase Productivity

In emacs, you can define your own keyboard shortcuts such as F6 for
frequently used commands. But if you use emacs extensively, you may have
all easy keys used up. A alternative to keyboard shortcuts is to make
command names 1 or 2 letters short.
 For example, here's my aliases:
 (defalias 'yes-or-no-p 'y-or-n-p) ; y or n is enough
 (defalias 'list-buffers 'ibuffer) ; always use ibuffer
 (defalias 'perl-mode 'cperl-mode) ; always use cperl-mode
 (defalias 'man 'woman)
 ; major modes, easy naming
 (defalias 'ahk-mode 'xahk-mode)
 (defalias 'bbcode-mode 'xbbcode-mode)
 (defalias 'cmd-mode 'dos-mode)
 (defalias 'lsl-mode 'xlsl-mode)
 (defalias 'ocaml-mode 'tuareg-mode)
 (defalias 'math-symbol-input-mode 'xmsi-mode)

******** Turn a Minor Mode on/off/toggle

When setting a variable that takes {true, false}, use {t, nil}, like
this:
 (setq make-backup-files nil)
 When calling a mode function, use {1, 0}, like this:
 (global-linum-mode 1)
 If you want to turn on/off a mode, call the function, not set the
variable. For example:
 (global-linum-mode 1) ; GOOD
 wrong examples:
 (setq global-linum-mode t) ; BAD
 (setq global-linum-mode 1) ; TOTALLY WRONG!
 Also, some minor mode have a command for setting it globally, while
others do not. For example, there's linum-mode and global-linum-mode.
But there's auto-fill-mode but no "global-auto-fill-mode". The best
thing is to call describe-function and or describe-variable to see their
inline docs.

******** save history between sessions

With savehist-mode, you can save your minibuffer history (ie. the
commands you gave). It's the simple alternative to more complex
session-saving mechanisms like desktop-save-mode and (many!) friends.
 save-hist-mode lets you can customize quite a few things, so my setup
now looks like this:
 (setq savehist-additional-variables ;; also save...
 '(search-ring regexp-search-ring) ;; ... my search entries
 savehist-file "~/.emacs.d/savehist") ;; keep my home clean
 (savehist-mode t) ;; do customization before activate
 As shown, you should do the customizations before enabling
savehist-mode, or they will be ignored.
 The savehist-additional-variables customization particularly
interesting; you can put any (printable) variable in the list, ie. you
could put kill-ring in there, to retrieve your old kill ring (the
clipboard) when you restart emacs again.
 Note: if you want emacs to remember your recently-used files between
sessions, you can take a look at recentf.
 Also, note that I am setting savehist-file to ~/.emacs.d/savehist. In
general, I'll try to put all my emacs files there, instead of in my
home-directory. This makes it a bit easier to back up things and keep my
~/ clean. For historical reasons, I still have my ~/.emacs, but I could
use ~/.emacs.d/init.el instead

******** configure minor modes

As a rule, minor-modes can be enabled given positive argument or
disabled with a negative argument. Should the argument be omitted, the
minor-mode will be toggled on/off.
 Here are some more examples of minor-modes. The following will disable
the scroll bars, menu-bar and tool-bar, respectively.
 (scroll-bar-mode -1)
 (menu-bar-mode -1)
 (tool-bar-mode -1)

******** debug slowdowns

this only workd for emacs >=24
 M-x profile-start
 before loading the file, it will also ask you which method you want, it
defaults to CPU info
 then
 M-x profile-report
 this will show you which modes/functions etc take the most CPU

******** library loading
********* require
allows the authors of addons to write sevral files , chain them togheter into one packge. the use requires only to use 1 files to get all the sub files.
If you look in a package documentation there will be a line that says (provide 'PACKAGENAME).
that's the counterpart to:

(require 'PACKAGENAME)                                          

you put in the config

and example would be the org-mode plugin. there are hundreds of sub packages but all the user needs to stick in the config is:

(require 'org)                                          

$note$ there isnt usually a mode inside the name so it wont be org-mode but rather 'org in the require command

********* autoload
as opposed to require autoload only loads the needed packages on-demand and thus speeds up the emacs inital loading

******** OS/Host name based configuring 
********* Get system type and system name 

Get system type and system namey

To detect different systems, you can use the system-type variable, and to detect different computers (with different hostnames, of course), you can use the system-name variable.

The following defuns show how you can know wich system type and name you have in each machine:
#+BEGIN_SRC emacs-lisp
  
;; Get current system's name
(defun insert-system-name()
(interactive)
"Get current system's name"
(insert (format "%s" system-name))
)

;; Get current system type
(defun insert-system-type()
(interactive)
"Get current system type"
(insert (format "%s" system-type))
)
#+END_SRC

Those previous commands are interactive, so you can just type M-x insert-system-name or M-x insert-system-type to test them.
********* Single dot emacs file and per-computer configuration

Configuration depending on the system type

In order to include system-type based configurations, you can define functions to check if the current system is the one you are looking for. Check these two functions to check if system is Mac OS X (darwin) or GNU (gnu/linux).


#+BEGIN_SRC emacs-lisp

; Check if system is windows
(defun system-type-is-win ()
(interactive)
"Return true if system is windows"
(string-equal system-type "windows-nt")
)

;; Check if system is GNU/Linux
(defun system-type-is-gnu ()
(interactive)
"Return true if system is GNU/Linux-based"
(string-equal system-type "gnu/linux")
)

;; fonts in linux
(if (system-type-is-gnu)
(add-to-list 'default-frame-alist '(font . "Inconsolata-16"))
)

;; fonts in Win
(if (system-type-is-win)
(add-to-list 'default-frame-alist '(font . "Consolas-14"))
)


#+END_SRC

Once you have these functions, you can put the system-dependent configuration:

********* Configuration depending on the system name
 
Now, you also want to put machine-dependent configuration, so you can define functions like this to detect in which machine you are currently located:

;; Check if the system is my Kubuntu GNU/Linux at work
(defun system-is-my-workpc ()
(interactive)
"Return true if the system we are running on is my PC at work"
(string-equal system-name "dev002.workplace.com")
)

And then you just need to use the previous function in the specific configurations (note that Im using the hostname of my PC at work. Use your own hostname for you functions, dude).

;; For my machine in my worplace, setup my work email address
(if (system-is-my-workpc)
(setq user-mail-address "my.name@workplace.com")
)

******** Remove welcome screen/splash from emacs
add to init.el/.emcas file:

#+BEGIN_SRC emacs-lisp
;; Remove splash screen
(setq inhibit-splash-screen t)
#+END_SRC

******** Define default apps
********* Browser
Emacs 23.2 doesn't directly support chrome, but it does support a "generic" browser, and something like this should work:
#+BEGIN_SRC 
(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "chromium-browser")
#+END_SRC
if it's Windows or Mac, you can try:
#+BEGIN_SRC 
(setq browse-url-browser-function 'browse-url-default-windows-browser)
(setq browse-url-browser-function 'browse-url-default-macosx-browser)
#+END_SRC

******** autoload lisp files from a folder
Any elisp files dropped into ~/.emacs.local.d/ will be automatically loaded.

I usually use this is a testing ground for new configuration before adding it here, and also for any personal / sensitive configuration.

#+BEGIN_SRC emacs-lisp :results none
(defun my/load-elisp-directory (path)
  (let ((file-pattern "\\.elc?$"))
    (when (file-directory-p path)
      (mapcar (lambda (lisp-file)
                (load-file lisp-file))
              (directory-files (expand-file-name path) t file-pattern)))))

(my/load-elisp-directory "~/.emacs.local.d")
#+END_SRC

******* backup,saving etc
******** 'save as'							:Fav:
use:
?C-x? write-file 
@Warning:ido may interfere with this@


******** backup
********* how to backup
By default, Emacs auto-saves a buffer with changes in it to the same directory as the file opened in the buffer, but adds a character such as # or ~ to the beginning or end.
This auto-savin can be turned off with:

(setq make-backup-files nil)

But today I turned it back on, and decided, since I use SVN anyway for versioning, that I will auto-save into the same file. This is achieved with the following:

(setq auto-save-visited-file-name t)

Also, I turned up the rate at which Emacs auto-saves the files.

(setq auto-save-interval 20) ; twenty keystrokes
(setq auto-save-timeout 10) ; ten idle seconds

******** recents
********* How to open recently opened file in emacs

Call recentf-mode to turn it on. Then, call recentf-open-files to list
and open recently opened file. You can give it a single key keyboard
shortcut
 To turn it on for future sessions, put this in your emacs init file:
 (recentf-mode 1) ; keep a list of recently opened files
******* bookmarks
******** intro

Bookmark Basics
 Bookmark+ builds on vanilla Emacs bookmarks. If you are familiar with
the latter, then you can skip this section, which mostly reviews the
former. However, this section also introduces some Bookmark+ concepts
and features that are detailed in other sections.
 In Emacs bookmarking these three things are different but related:
 1. the bookmark list
 2. the bookmark file
 3. the bookmark-list display (buffer `Bookmark List', aka the
bookmark "menu list", a misnomer)
 It is important to keep these three straight and understand their
differences in practice, in particular, when they do and do not
represent the same set of bookmarks.
 #1 is in memory. It is the current set of bookmarks. When you add,
rename, delete, etc. a bookmark, this list is updated.
 #2 is on disk. It is a persistent record of a set of bookmarks.
 The bookmark list (#1) is the current value of internal variable
'bookmark-alist'. The bookmark file (#2)can be anywhere. Its default
filename is the value of user option 'bookmark-default-file'.
 The bookmark list is typically initialized from the bookmark file ---
referred to as loading your bookmarks, but you can also create bookmarks
(adding them to the list) without ever saving them to disk.
 The bookmark list can be saved to the bookmark file --- referred to as
saving your bookmarks --- either automatically or on demand. But it is
not necessarily saved. Even if it has been saved in the past, that does
not mean that at any given time the bookmark list corresponds exactly to
the bookmark file.
 The list and the file can often become out of sync. In an Emacs
session, the bookmark list rules. After an Emacs session, the bookmark
file rules (it is all there is). You can use 'C-x p L'
(bmkp-switch-bookmark-file-create') to sync (revert) the list to
reflect the file --- just accept the default value, "switching" to the
same file.
 The bookmark-list display (#3) is a snapshot view of the bookmarks in
the bookmark list. As such, what you see there reflects the state of the
bookmark list at some point in time. So here again, the two, list and
display, can be out of sync. Hitting 'g' in the bookmark-list display
refreshes it to accurately reflect the current bookmark list (#1). Some
other operations in the display also keep it synced with the list.
 Using a prefix argument (C-u g') syncs the display (#3) and the list
(#1) to the file (#2). This can be useful when some other process (e.g.,
another Emacs session) updates the bookmark file or when you want to
abandon changes to the current bookmark list and any of the current
bookmarks. Outside the bookmark-list display, you can use command
'bmkp-revert-bookmark-file' to do this.
 You can load different bookmark files, either adding their bookmarks to
those already in the current bookmark list or replacing them.
 The most important takeaway from this section is that #1 (list), #2
(file), and #3 (display) can be out of sync, and they often are. And
that can be useful.
 Until now, everything said in this section is true of vanilla Emacs as
well as Bookmark+. Bookmark+ adds some flexibility regarding the use of
multiple bookmark files, and it can save the last state of the
bookmark-list display for later reuse.
 The saved state of the display is restored when you show the display
after quitting it (q') in the same session or quitting Emacs, but only
if the bookmark file whose location it recorded is the same as the
current bookmark file.
 It would not make sense to display a completely different set of
bookmarks from those that are currently loaded. The display must always
reflect the current bookmark list (even if it sometimes reflects it
imperfectly, because it is a snapshot). So if the bookmark file that is
loaded is different from the one that was recorded for the display
state, the recorded state is ignored.
 Automatic Saving
 Before getting into the topic of automatic saving, let me say this
clearly once: Back up your bookmark file(s)!
 I recommend that you set option 'bookmark-version-control' to 't', so
that you get numbered backups. See also nodes `Backup Names' and `Backup
Deletion' in the Emacs manual. (Bookmark+ creates backups when your
bookmark file is saved. Until bug #12507 is fixed, vanilla Emacs does
not.)
 User option 'bookmark-save-flag' controls whether and how often to
automatically save the bookmark list to the bookmark file. You can
toggle this option using `M-~' in the bookmark-list display.
 In the bookmark-list display, you can tell whether individual bookmarks
have been modified since the last save: they are marked with `'. I
believe that this indication is robust and accurate (if not, please
report a bug), but a word of caution: do not depend on it. The only way
to be sure that your bookmarks have been saved is to save them. ;-)
 Is there a way to unmodify a single bookmark that you have changed? No,
not unless it is the only one you modified. If you revert to the
bookmarks as last saved, then all changes to all bookmarks (including
addition and removal of bookmarks) are lost. If you want to work
carefully when making multiple changes, then save any modifications you
are sure of before you move on to others. If only one bookmark is
modified then reverting to the bookmark file effectively unmodifies that
bookmark.
 When you consult the doc for option 'bookmark-save-flag' you see that
besides values of 'nil' and 't', meaning off and on, it can have a value
that is the number of bookmark modifications to allow before
automatically saving. If the value is 10, for instance, then the 11th
modification triggers automatic saving.
 But a modification means any change to any bookmark. Typically, you are
more interested in considering all of the changes caused by a given
command as one modification. Why? Suppose you use a command such as `T >
+' (bmkp-bmenu-add-tags-to-marked'), which adds a set of tags to each
of the marked bookmarks. Even if there have been no other modifications
since you last saved bookmarks, if there are more marked bookmarks than
your setting of 'bookmark-save-flag' then automatic saving will kick in
in the middle of the command. Some of the bookmarks with the added tags
will be automatically saved. And that does not give you an opportunity
to cancel the changes (e.g., by quitting without saving).
 This is the reason for option 'bmkp-count-multi-mods-as-one-flag',
whose default value is 't', which means count all of a sequence of
modifications together as one modification, as far as
'bookmark-save-flag' is concerned.

******** basics

Emacs can remember a list of visited files.
 C-x r m Add current buffer to bookmarks.
 C-x r b Open a buffer from bookmarks.
 C-x r l List bookmarks.

******** bookmark a remote folder

connect to a remote file:
 To connect to 'myhost' as 'myuser' via SSH and open the file
~/example.txt:

 C-x C-f /ssh:myuser@myhost:~/example.txt

 after that just add it as a normal bookmark

******** bookmak a folder

if you set a bookmark while you're in a dired buffer it saves the
directory location

******** BKM+ commands

When you jump to a bookmark, you can use completion to specify the
bookmark name. 'bookmark-jump' and 'bookmark-jump-other-window', bound
to
 'C-x j j'
 and
 'C-x 4 j j',

******** sort in +

You can use `s s'... (repeat hitting the 's' key) to cycle among the
various sort orders possible, updating the display accordingly. By
default, you cycle among all available sort orders, but you can shorten
the cycling list by customizing option
'bmkp-sort-orders-for-cycling-alist'.
 You can also change directly to one of the main sort orders (without
cycling) using `s >', `s n', `s f n', etc. There are many such
predefined sort orders bound to keys with the prefix 's' --- use 'C-h m'
or `?' for more info.
 `s >' -- Sort marked (`>') before unmarked
 `s ' -- Sort modified (`') before unmodified
 `s 0' -- Sort by bookmark creation date/time
 `s b' -- Sort by last buffer or file access
 `s d' -- Sort by last bookmark access date/time
 `s D' -- Sort flagged (`D') before unflagged
 `s f d' -- Sort by last local file access date/time
 `s f k' -- Sort by local file kind: file, symlink, dir
 `s f n' -- Sort by file name
 `s f s' -- Sort by local file size
 `s f u' -- Sort by last local file update (edit) date/time
 `s g' -- Sort by Gnus thread: group, article, message.
 `s i' -- Sort by Info manual, node, position
 `s k' -- Sort by bookmark type (kind)
 `s n' -- Sort by bookmark name
 `s t' -- Sort tagged (`t') before untagged
 `s v' -- Sort by visit frequency

******** bookmark tagging

Bookmark Tags
 -------------
 T +- Add some tags to a bookmark

 to add tag enter T followed by +
 then enter bk name to be tagged (or press esc for the one cursor is on)
 then enter the tag. each time you press enter you can add another tag
 Pressing enter with no tag saves the tags! 

 T -- Remove some tags from a bookmark (`C-u': from all bookmarks)
 T 0- Remove all tags from a bookmark
 T d- Remove some tags from all bookmarks
 T r- Rename a tag in all bookmarks
 T l- List all tags used in any bookmarks (`C-u': show tag values)
 T e- Edit bookmark's tags
 T v- Set the value of a tag (as attribute)
 T > v- Set value of a tag, for each marked bookmark (`C-u': all)
 T > C-y- Add tags copied from a bookmark to those marked (`C-u':
all)
 T > q- Replace tags of marked with copied tags (`C-u': all)
 T > +- Add some tags to the marked bookmarks (`C-u': all)
 T > -- Remove some tags from the marked bookmarks (`C-u': all)
 T m %- Mark bookmarks having at least one tag that matches a regexp
 T m +- Mark bookmarks having at least one tag in a set (OR)
 T m - Mark bookmarks having all of the tags in a set (AND)
 T m ~ +- Mark bookmarks not having any of the tags in a set (NOT OR)
 T m ~ - Mark bookmarks not having all of the tags in a set (NOT
AND)
 T u %- Unmark bookmarks having a tag that matches a regexp
 T u +- Unmark bookmarks having at least one tag in a set (OR)
 T u - Unmark bookmarks having all of the tags in a set (AND)
 T u ~ +- Unmark bookmarks not having any tags in a set (NOT OR)
 T u ~ - Unmark bookmarks not having all tags in a set (NOT AND)

******* buffers,windows,frames

******** what is a window and a frame?

Windows and frames
 Emacs is designed for convenient editing of many files at a time. This
is achieved by dividing the Emacs interface into three levels. Namely,
buffers, which have already been introduced, as well as windows and
frames.
 A window is a viewport used for displaying a buffer. A window can
display only one buffer at a time, however one buffer can be displayed
in many windows. Beneath each window exists a mode-line, which displays
information for that buffer.
 A frame is an Emacs "window" (in standard terminology. i.e., 'window'
in the sense of the modern desktop paradigm) which contains a title bar,
menu bar and one or more 'windows' (in Emacs terminology. i.e., the
above definition of 'window').

******** ibuffer

In ibuffer, the key sequence  u S D will save all unsaved files and
close them. This is particularly useful after you've done a
findreplace on hundreds of files with dired-do-query-replace-regexp.
 Alias list-buffer to ibuffer
 Because ibuffer completely replaces the functionality of list-buffers
command, you can alias the command name list-buffers to ibuffer. Like
this:
 (defalias 'list-buffers 'ibuffer)
 With the above, the key for list-buffers Ctrl+x Ctrl+b will also be
set to ibuffer.

******** switch between 2 last buffers

The function to toggle between the two most recently used buffers is
easy enough:
 (defun my-bs-toggle ()
 "Toggle buffers, ignoring certain ones."
 (interactive)
 (catch 'done
 (dolist (buf (buffer-list))
 (unless (or (equal (current-buffer) buf)
 (my-bs-ignore-buffer (buffer-name buf)))
 (switch-to-buffer buf)
 (throw 'done t)))))

******** completion frame

press ESC 3 times:
 ESC ESC ESC

******* !Bugs/errors!
******** `get rid of unreadable characters (unicode etc)`		:Fav:

How do I search for, delete, or replace unprintable (eight-bit or control) characters
(see also http://www.gnu.org/software/emacs/emacs-faq.text)

issue this in a problematic buffer with ?M-:? and paste the code below or just highlight below code and use 'eval-region'

#+BEGIN_SRC emacs-lisp
 (let ((buffer-invisibility-spec)) (query-replace-regexp "[^\t\n\r\f -~]" ""))
#+END_SRC

then enter y or ! (!no return!) to clear place/all

%Tip%:

-Regexp for the printable chars: `[\t\n\r\f -~]'

-Regexp for the unprintable chars: `[^\t\n\r\f -~]'

******** emacs ignores the org config file at startup (econf.org for me)
close all emacs session and delete the .el file (including # and links) corresponding to your conf.org
In example in my case its econf.el which corresponds to my org config file econf.org
restart emacs and things should be back to normal

******* commands
******** basics

To run a command by name, type Alt+x followed by the command name.
 ShortcutCommand NameDescription
 Ctrl+gkeyboard-quitCancel a command in progress, or cancel
unfinished keyboard keystroke sequence
 Alt+xexecute-extended-commandexecute a command by name
 Finding a Command's Name or Keyboard Shortcut
 If you know a command's name, you can find out its keyboard shortcut
(if there is one).
 If you know a keyboard shortcut, you can find out what command it
calls.
 The commands for these are describe-key and describe-function.
 ShortcutCommand NameDescription
 F1 kdescribe-keyFind the command name of a key
 F1 fdescribe-functionFind the key of a command

******** basic examples
Example of Useful Commands
 In emacs, a selection of text is called "region". Many commands acts on
the selected text. Here are some examples of commands that act on the
region.
 sort-lines
 upcase-initials-region
 upcase-region
 downcase-region
 Not all commands acts on region. Here are some commands that do not
necessary need a region:
 list-matching-lines (acts on whole file)
 delete-matching-lines (acts on region if exist, else work from cursor
point to end of file.)
 delete-non-matching-lines (acts on region if exist, else work from
cursor point to end of file.)
 highlight-phrase (color a word you want. Acts on the whole file)
 The above are just some examples. There are 2.5k commands in emacs by
default.

********* editing text

********** deleting

<DEL> Delete the character just before the cursor
 C-d  Delete the next character after the cursor
 M-<DEL> Kill the word immediately before the cursor
 M-d Kill the next word after the cursor
 C-k Kill from the cursor position to end of line
 M-k Kill to the end of the current sentence

********** Enriched Mode

Enriched mode is a buffer-local minor mode (see Minor Modes). When you
visit a file that has been saved in the 'text/enriched' format, Emacs
automatically enables Enriched mode, and applies the formatting
information in the file to the buffer text. When you save a buffer with
Enriched mode enabled, it is saved using the 'text/enriched' format,
including the formatting information.
 To create a new file of formatted text, visit the nonexistent file and
type
 M-x enriched-mode
 This command actually toggles Enriched mode. With a prefix argument,
it enables Enriched mode if the argument is positive, and disables
Enriched mode
 otherwise. If you disable Enriched mode, Emacs no longer saves the
buffer using the 'text/enriched' format; any formatting properties that
have been added to the buffer remain in the buffer, but they are not
saved to disk.

********** Align text

Align Text
 Emacs has several commands that's helpful for alignment. One of the
most useful is align-regexp. For example, suppose you have:
 tom = 5
 jenny = 8
 mary = 7
 and you want to align them by the equal sign. Just select the text,
then call align-regexp then give "=". Then you get:
 tom = 5
 jenny = 8
 mary = 7

******** deleting

<DEL> Delete the character just before the cursor
C-d  Delete the next character after the cursor
 M-<DEL> Kill the word immediately before the cursor
 M-d Kill the next word after the cursor
 C-k Kill from the cursor position to end of line
 M-k Kill to the end of the current sentence

******** Enriched Mode

Enriched mode is a buffer-local minor mode (see Minor Modes). When you
visit a file that has been saved in the text/enriched format,
Emacs automatically enables Enriched mode, and applies the formatting
information in the file to the buffer text. When you save a buffer with
Enriched mode enabled, it is saved using the text/enriched format,
including the formatting information.
 To create a new file of formatted text, visit the nonexistent file and
type
 M-x enriched-mode
This command actually toggles Enriched mode. With a prefix argument,
it enables Enriched mode if the argument is positive, and disables
Enriched mode
 otherwise. If you disable Enriched mode, Emacs no longer saves the
buffer using the text/enriched format; any formatting properties
that have been added to the buffer remain in the buffer, but they are
not saved to disk.

******** Align text

Align Text
 Emacs has several commands that's helpful for alignment. One of the
most useful is align-regexp. For example, suppose you have:
 tom = 5
 jenny = 8
 mary = 7
 and you want to align them by the equal sign. Just select the text,
then call align-regexp  you get:
 tom = 5
 jenny = 8
 mary = 7
******* Console emacs
******** How do I met to the menu in Emacs in console mode
M-x menu-bar-open, which is usually bound to ?F10? (or ?C-F10?). This works with and without menu-bar-mode (which just shows the names of the menus at the top of the screen).
******* config/Elisp
******** issue commands based on hostname in emacs config
you can config emacs so that some specific commands (such as paths, themes anything really) run on a specific machine while others run on another machine. this can be done based on hostname. 
here is an example of defining a path for a org-mode plugin based on which machine emacs is run

#+BEGIN_SRC emacs-lisp :results none
(if (string= system-name "voices") (setq-default org-download-image-dir "/home/zeltak/org/attach/images_2014/") (setq-default org-download-image-dir "/media/NAS/Uni/org/attach/images_2013/"))                                                           
#+END_SRC

'if' takes a condition, (string= system-name "server") which is 't' if the host name happens to be "server", otherwise 'nil'  
if the condition evaluates to 't', it does the first command (setq...) otherwise the second one (second setq statement)                                          

you can also add more then one command with the 'progn' command, ₆In example₆ 

#+BEGIN_SRC elisp
(if (string= system-name "voices") 
(progn
(setq initial-scratch-message "Don't use emacs on your server")
(add-to-list 'custom-theme-load-path "~/.emacs.d/nonelpa/flatland-emacs/")
(load-theme 'leuven t)
)

(progn
(setq initial-scratch-message "your not on voices")                                                           
(load-theme 'solarized t)
)
)
#+END_SRC

******** True and False
In elisp, the symbol nil is false, anything else is considered true. So, 0 is true, and empty string "" is also true. Also, nil is equivalent to the empty list (), so () is also false.

; all the following are false. They all evaluate to nil
(if nil "yes" "no") ;  "no"
(if () "yes" "no") ;  "no"
(if '() "yes" "no") ;  "no"
(if (list) "yes" "no") ;  "no", because (list) eval to a empty list, same as ()
******** setq
Setq - '/setq means the variable is not evaluated

setq is just like set with a quoted first arg:

(set 'foo '(bar baz))

is just like

(setq foo '(bar baz))
******** load path/add to list
to manually load functions/plugins to the emacs load path so you can require them use the add to list command
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/evil")
#+END_SRC

******** Require
when you need to load feautres that are not in stock emacs installion default you need to require it
so as opposed to lets say !winner-mode! which is stock emacs !evil! is a plugin so you need to require it on startup:
(require 'evil)

after you require the feature you can define options (make use of the c-h f to describe the specific option) as you would for other emacs native commands:

(setq evil-want-fine-undo t)
******** describe Functions
to get info on a specific function

c-h f FUNCTIONNAME

you will get info on the function and how to set it IE:

#+BEGIN_EXAMPLE
With a prefix argument ARG, enable Tool Bar mode if ARG is
positive, and disable it otherwise.  If called from Lisp, enable
Tool Bar mode if ARG is omitted or nil.

#+END_EXAMPLE

so here if its 1 (positive) it works and if -1 (negative) its disabled

#+BEGIN_SRC emacs-lisp
(add-to-list 'auto-mode-alist '("\\.\\(org\\|org_archive\\|txt\\)$" . org-mode))
#+END_SRC
       
******** printing
to print something in the botom bar use the message command
#+BEGIN_SRC emacs-lisp
; printing
(message "hi")
#+END_SRC

will preint the word hi in bottom bar

******** functions

Basic function definition is of the form:

#+BEGIN_SRC emacs-lisp
(defun function name (param1 param2 ) "doc string" body)

;IE

(defun myFunction () "testing" (message "Yay!") )
#+END_SRC

When a function is called, the last expression in the function's definition body is returned. (You do not have to write Return .)
This function can be called in other places in a elisp program but the function won't be available when user types Alt+x unless you make it interactive. To make a function available for interactive use, add the (interactive) right after the doc string. this makes the function a !command!.

The following is a basic function definition for interactive use. The function takes no argument. Evaluate the following code. Then, you can call it by Alt+x yay
#+BEGIN_SRC emacs-lisp
(defun yay ()
  "Insert Yay! at cursor position."
  (interactive)
  (insert "Yay!"))
#+END_SRC
this function now appears in your M-x commands

In summary:

The (interactive ) clause is a way to make your function interactively callable, and a way to fill out your function's parameters when used interactively.
A function with the (interactive ) clause is called a command, and can be called by execute-extended-command Alt+x.
The (interactive "x") form takes a single-letter code to indicate how the command gets its arguments from user. There are about 30 codes for interactive, but the most useful are the following:

(interactive), for commands that takes no argument.
(interactive "n"), prompt user for a number as argument. (prompt string can follow right after "n" as part of the string, like this: (interactive "nWhat is your age?").)
(interactive "s"), prompt user for a string as argument.
(interactive "r"), for commands that takes 2 arguments, the beginning and ending positions of the current region. This form is typically used for commands that act on a text selection.

******** auto mode list
#+BEGIN_SRC emacs-lisp
(add-to-list 'auto-mode-alist '("\\.\\(org\\|org_archive\\|txt\\)$" . org-mode))
#+END_SRC
to open specific file types in specific modes use auto-mode-alist, Ie to open all .org files in org
You can use C-h v to descrive auto-mode-alist fully

******** Hooks

%Tip most major modes will have a hook name Ie markdown-mode-hool, which can be used to assign hooks%
#+BEGIN_SRC emacs-lisp
;enable flyspell
(add-hook 'org-mode-hook  
          (lambda ()      
            (flyspell-mode)))
#+END_SRC
******** check what the variable is set to
it's easy to check whether local variables were actually set the way you expected,just use

?C-h v? `VAR`

for the `VAR` in question, and Emacs tells you if it has a buffer-local value.

₆In example₆ C-h org-use-tag-inheritance will tell you if its set to t or nili

******** describe key and get the key functions name
use ?C-h k? , followed by the keybind
******** add a speicifc orgmode TODO state
#+BEGIN_SRC emacs-lisp :results none
(org-todo "COOK") 
#+END_SRC
******* Functions
******** simple food template Function
here is an anotated version
#+BEGIN_SRC emacs-lisp :results none
;name of the functiom
(defun recipe-template ()
;make it interactive
        (interactive)
;       this will move the cursor to a 0 poistion so the "search forward from point" command below will work
         (goto-line 0)
;       search for a specific keyword/header to place the sub entries
         (search-forward " Inbox")
;move via org command 
         (org-meta-return)
         (org-metaright)
; define a variable called recipe-name and use read-string to give it a user entered string`
         (setq recipe-name (read-string "Title: "))
;insert the string recipe-name
         (insert recipe-name)
;ask for org tags to be entered
         (org-set-tags)
         
;create 2 sub headers: "ingridients" and "Preperation" by using the org mode meta-enter and meta right and then entering strings
         (org-meta-return)
         (org-metaright)
         (insert "Ingridients")
         (org-meta-return)
         (insert "Preperation")
; go back to main header by matcing on the recipe-name string from above
         (search-backward recipe-name)
; in the below property drawer example we will define a variable use the read-string to give it a user entered string
;src1 src2 etc will be the individual var names where the read-string will be the user entered names
         (setq src1 (read-string "Time: "))
;then we use the src1 etc to set the relevant org property value
         (org-set-property "Time" src1)
         (setq src2 (read-string "Rating: "))
         (org-set-property "Rating" src2)
         (setq source (read-string "Sources: "))
         (org-set-property "Source" source)
         (setq amount (read-string "Ammount: "))
         (org-set-property "Ammount" amount)
         (setq src5 (read-string "Fav: "))
         (org-set-property "Fav" src5)
         ;move to the ingridients section and start a yasnippet expansion
         (search-forward "Ingridients")
         (yas-insert-snippet)
)

#+END_SRC
******* Dired
******** basic keys
【Enter ↵】	Open the file
【q】	Close the dir
【C】	Copy file
【R】	Rename/move file
【D】	Delete file
【+】	create a new dir
【g】	Update the entire contents of the Dired buffer (revert-buffer). 

******** use dired to find and replace multiple files at once 
Call dired to list files in dir, or call find-dired if you need all subdirectories.
$Note$ if using ido use ?Ctrl-j? to open the dired mode after you choose a location with ido
Mark the files you want. You can mark with ?m? or regex by typing ?% m?
Type Q to call dired-do-query-replace-regexp.
Type your find regex and replace string $Note- you don't have to use regex here you can just type normally$ 
For each occurrence, type y to replace, n to skip (Type ?Ctrl+g? to abort the whole operation.
Type ! to replace all occurrences in current file without asking, N to skip all possible replacement for rest of the current file
To do the replacement on all files without further asking, type Y
Call ibuffer to list all opened files.
Type ?* u? to mark all unsaved files, type S to save all marked files, type D to close them all.	

******** travel through dirs without openning new buffer
Use ?a? (dired-find-alternate-file) instead of Enter
******* copy,cut,paste

******** kill-rectangle  replace-rectangle

kill-rectangleCtrl+xrkDelete selected column of text.
 replace-rectangleCtrl+xrtReplace text in a selected
column. (This is alias to string-rectangle)

put your cursor on mark Ctrl+Space, then move it to position needed
then call kill-rectangle A+x+kill-rectangle

 yank-rectangle Ctrl+xryPaste a column of text (after you
used kill-rectangle).

The yank-rectangle is useful when you want to move a column of text. Try
to swap the "x" and "o" blocks in the above sample text.

******** CUA mode select block



Call cua-mode to turn it on.

Ctrl+Enter to start selecting rectangle.

you can start typing to insert text to the whole column, or press
Backspace to delete to the left every char on the left boundary,
or press Delete to delete the whole rectangle, or use any of {Cut
Ctrl+x, Copy Ctrl+c, Paste Ctrl+v}.

To cancel selection, press Ctrl+Enter again.

******* Editing
******** commenting
*********  comment region

Comment Region :
 M-x comment-region,
 to uncomment:
 uncomment-region
 one can bind these keys
********* comment/uncomment SECTION
use
M-; (comment-dwim)
******** Copy Filename to the Clipboard
Sometimes I need to copy the name of the currently visited file to the clipboard. Emacs does not have a built-in command for that, but cooking one is pretty straightforward:

#+BEGIN_SRC emacs-lisp  
(defun copy-file-name-to-clipboard ()
  "Copy the current buffer file name to the clipboard."
  (interactive)
  (let ((filename (if (equal major-mode 'dired-mode)
                      default-directory
                    (buffer-file-name))))
    (when filename
      (kill-new filename)
      (message "Copied buffer file name '%s' to the clipboard." filename))))
#+END_SRC

Evaluate the new bit of code in Emacs (maybe by using C-M-x somewhere in the body of the function definition) and invoke the command with M-x copy-file-name-to-clipboard.

******** Single Key to Delete Whole Line

To delete a whole line, call kill-whole-line Ctrl+ Shift+ Backspace. You can give it the same key as kill-line, to replace it. ( Emacs Keybinding Syntax Examples) You can also set the Cut command (kill-ring-save Alt+w) to cut the whole line when there's no selection. See: Emacs: How to Copy/Cut Current Line.

******** repeat last command
Sometimes youll want to quickly repeat an Emacs command several times and more often than not it wont have a convenient keybinding you can use to do this. Enter C-x z (repeat) - it simply repeats the most recently executed command. And the best part? After youve pressed C-x z once you can continue repeating the last command simply by pressing z. Vi(m) users will probably note that this is quite similar to the . command there.

******** manipulate cases
One operation that we have to do fairly often when editing text is manipulating the case of words. The most popular case manipulations are probably capitalize, convert to lowercase and convert to uppercase. Emacs naturally has built-in commands for all of those.

Pressing M-c runs the command capitalize-word, which will capitalize the next word and move the cursor after it. Pressing M-- M-c will capitalize the previous word without moving the cursor.

Pressing M-l runs the command downcase-word, which will lowercase the next word and move the cursor after it. Pressing M-- M-l will lowercase the previous word without moving the cursor.

Pressing M-u runs the command upcase-word, which will uppercase the next word and move the cursor after it. Pressing M-- M-u will uppercase the previous word without moving the cursor.

******** White space
********* start whitespace mode
to visually see all whitespaces in emacs issue the command:

'whitespace-mode'
********* Deleting Whitespace
********* Just one space-make sure there is only 1 space between words
To make sure two words are separated by just one space, 

use M-SPC ('just-one-space' command)

********* Remove whitespace at the end of the document
To remove whitespace at the end of a document, use any of the following:

C-x C-o (delete-blank-lines) at the end of the buffer (`M->).

However, be aware that if require-final-newline is non-nil, then a (single) newline will be added automatically at the end of the file. (The particular non-nil value determines when it is added  see C-h v require-final-newline.) This code:

#+BEGIN_SRC sh
    (defun my-delete-trailing-blank-lines ()
      "Deletes all blank lines at the end of the file."
      (interactive)
      (save-excursion
        (save-restriction
          (widen)
          (goto-char (point-max))
          (delete-blank-lines))))

#+END_SRC
********* Delete extra blank lines between paragraphs
C-x C-o (delete-blank-lines) also deletes any extra blank lines between two paragraphs, leaving just one blank line.
 
********* Delete white space in web formatted pages
to solve your problem, first select the text in question and do M-x delete-blank-lines 
then select it again and do :s/^ //                                                           
this leaves both empty lines and leading whitespace are gone                                          

******** Edit Files as Root

One area where Emacs traditionally falls short by default is editing
files that require =root= permissions. Since most Emacs users just use a
single Emacs frame they never leave, they have the problem of having
started it with their current user's privileges(and it's unlikely this
user is =root=). In this post I'll describe two ways to alleviate that
particular problem (note that =emacsclient= users have other options to
pick from as well - one is mentioned at the very end of the post).

Here's Option A - a simple command that allows you to reopen the
currently visited file with root permissions(obtained via =tramp= and
=sudo=) and prompts you for a file name if you're not currently visiting
a file or supply a prefix argument:


#+BEGIN_EXAMPLE lisp
    (defun sudo-edit (&optional arg)
      "Edit currently visited file as root.

    With a prefix ARG prompt for a file to visit.
    Will also prompt for a file to visit if current
    buffer is not visiting a file."
      (interactive "P")
      (if (or arg (not buffer-file-name))
          (find-file (concat "/sudo:root@localhost:"
                             (ido-read-file-name "Find file(as root): ")))
        (find-alternate-file (concat "/sudo:root@localhost:" buffer-file-name))))
#+END_EXAMPLE

I came across a similar command a few years back and it's been pretty
useful to me ever since. If you like it, I'd suggest binding it to
=C-x C-r= (kind of like =find-file='s binding =C-x C-f=).


#+BEGIN_EXAMPLE
    (global-set-key (kbd "C-x C-r") 'sudo-edit)
#+END_EXAMPLE

Option B

Lately I've decided that such a command is a bit of an overhead, since
we can check the file permissions automatically anyways. While I'm not
quite fond of advising commands (debugging advised commands is no fun)
this was an excellent opportunity to exploit them (for great good):


#+BEGIN_EXAMPLE lisp
    (defadvice ido-find-file (after find-file-sudo activate)
      "Find file as root if necessary."
      (unless (and buffer-file-name
                   (file-writable-p buffer-file-name))
        (find-alternate-file (concat "/sudo:root@localhost:" buffer-file-name))))
#+END_EXAMPLE

This advises =ido-find-file=(you might want to advise =find-file=
instead if you're not using =ido=) to reopen the selected file as
root(you'll be prompted for your =sudo= password) if you don't have
write permissions for it. Extremely cool!

The first command has been part of
[[https://github.com/bbatsov/prelude][Prelude]] since forever. As of
late, the =ido-find-file= advice is also present there and it generally
voids the need for =sudo-edit=.

P.S.

=emacsclient= users have it easy. They just need the following shell
alias(I generally alias =e= to =emacsclient -t=):


#+BEGIN_EXAMPLE lisp
    alias E="SUDO_EDITOR=\"emacsclient -t -a emacs\" sudoedit"
#+END_EXAMPLE

******** copy/cut/paste the current line

at i often find the need to copy the current line too. Usually, this
meas moving the cursor to beginning of line, mark, move to end of line,
then copy. This is 4 operations. The following code will make it just a
single operation:
 (defadvice kill-ring-save (before slick-copy activate compile)
 "When called interactively with no active region, copy the current
line."
 (interactive
 (if mark-active
 (list (region-beginning) (region-end))
 (progn
 (message "Current line is copied.")
 (list (line-beginning-position) (line-beginning-position 2)) ) )
))
 (defadvice kill-region (before slick-copy activate compile)
 "When called interactively with no active region, cut the current
line."
 (interactive
 (if mark-active
 (list (region-beginning) (region-end))
 (progn
 (list (line-beginning-position) (line-beginning-position 2)) ) )
))
 Put the code in your emacs init file. Then, select the text and call
eval-region. Now, when you do not have a text selection, copy will just
copy the current line. Similar for cut. Super!
 This is now part of ErgoEmacs Keybinding.
 A great time saver is to bind them to single keys. Like this:
 (global-set-key (kbd "<f2>") 'kill-region) ; cut.
 (global-set-key (kbd "<f3>") 'kill-ring-save) ; copy.
 (global-set-key (kbd "<f4>") 'yank) ; paste.
 I've been using this for a few years. For deletting or cutting a few
lines, this is more convenient than having to set mark first.
******** Abbreviating Text
********* start 
Emacs can abbreviate text for you to be expanded automatically. To setup abbreviations, do this:
place the following into your "~/.emacs" file:
Also, if you want abbreviations to be saved whenever you save files (C-x s) or quit emacs, add the following to your .emacs:

#+BEGIN_SRC emacs-lisp :results none
(setq save-abbrevs t)              ;; save abbrevs when files are saved
                                     ;; you will be asked before the abbreviations are saved
#+END_SRC

Restoring Abbrevs- Turning on abbrev mode will read your abbrev file. To turn on abbrev-mode globally in your init file:

#+BEGIN_SRC emacs-lisp :results none
(setq-default abbrev-mode t)
#+END_SRC


********* set abbriv location and name
this can be done in the init file or if defined your custom file:/home/zeltak/.emacs.d/custom.el

#+BEGIN_SRC emacs-lisp :results none
(setq abbrev-file-name "/home/zeltak/.emacs.d/abbrv/personal_abbrv.txt")
#+END_SRC

********* list current abbriviations
To display a list of the current abbreviations Emacs uses, enter the command
`list-abbrevs`       

******** Delete all lines starting with common letter (flush lines)
'flush-lines'             delete lines containing matches

In Example

m-x
flush-lines
m: 

will delete all lines starting with 'm:'
******** Change/edit Case
********* Case Conversion
Emacs has commands for converting either a single word or any arbitrary range of text to upper case or to lower case.

M-l Convert following word to lower case (downcase-word). 

M-u Convert following word to upper case (upcase-word). 

M-c Capitalize the following word (capitalize-word). 

C-x C-l Convert region to lower case (downcase-region). 

C-x C-u Convert region to upper case (upcase-region). 

********* Capitalizing words and regions

In Emacs, to capitalize a word, position your cursor directly before the
word and type  M-c  .

Note: If you or your system administrators have changed the standard
Emacs key bindings, the command above might not work. If it doesn't,
try:

M-x capitalize-word

(If you aren't sure how to enter these commands in Emacs, see
[[data/aghb.html][In Emacs, how are keystrokes denoted?]])

To capitalize all the words in a region, position your cursor before the
region you wish to capitalize and set a mark. (For information about how
to set a mark in Emacs, see [[data/afhh.html][In Emacs, how do I set the
mark?]]) Once you have set the mark, position the cursor at the end of
the region you want to capitalize and enter:

M-x capitalize-region

********* Making words and regions all uppercase

To make all the letters in a word uppercase, position your cursor before
the word and type  M-u .

If that doesn't work, try:

M-x upcase-word

To make all the words in a region uppercase, position your cursor before
the region and set a mark. Then move your cursor below the region and
type  C-x C-u .

If that doesn't work, try:

M-x upcase-region

Note: By default, this command is disabled, but when you try to use
it, Emacs will give you the option of turning it on.

********* Making words and regions all lowercase

To make all the letters in a word lowercase, position your cursor before
the word and type  M-l  (the letter l).

If that doesn't work, try:

M-x downcase-word

To make all the words in a region lowercase, position your cursor before
the region and set a mark. Then move your cursor below the region and
type  C-x C-l  (the letter l).

If that doesn't work, try:

M-x downcase-region

Note: By default, this command is disabled, but when you try to use
it, Emacs will give you the option of turning it on.

******** Delete Duplicate Lines

'delete-duplicate-lines' will delete duplicated lines in current text selection.

******* Regex in emacs
******** Regular Expression Syntax

Here is the syntax used by Emacs for regular expressions. Any character
matches itself, except for the list below.

The following characters are special

#+BEGIN_SRC elsip
.  + ? ^ $ \ [ 
#+END_SRC

Between brackets [], the following are special

#+BEGIN_SRC elisp
] - ^ 
#+END_SRC

Many characters are special when they follow a backslash -- see below.

#+BEGIN_EXAMPLE
      .        any character (but newline)
              previous character or group, repeated 0 or more time
      +        previous character or group, repeated 1 or more time
      ?        previous character or group, repeated 0 or 1 time  
      ^        start of line
      $        end of line
      [...]    any character between brackets
      [^..]    any character not in the brackets
      [a-z]    any character between a and z
      \        prevents interpretation of following special char
      \|       or
      \w       word constituent
      \b       word boundary
      \sc      character with c syntax (e.g. \s- for whitespace char)
      \( \)    start\end of group
      \< \>    start\end of word
      \` \'    start\end of buffer
      \1       string matched by the first group
      \n       string matched by the nth group
      \{3\}    previous character or group, repeated 3 times
      \{3,\}   previous character or group, repeated 3 or more times
      \{3,6\}  previous character or group, repeated 3 to 6 times
#+END_EXAMPLE

.?, +?, and ?? are non-greedy versions of ., +, and ? -- see
[[http://www.emacswiki.org/emacs/NonGreedyRegexp][NonGreedyRegexp]].
Also, \W, \B, and \Sc match any character that does not match
\w, \b, and \sc.

Characters are organized by category. Use C-u C-x  to display the
category of the character under the cursor.

#+BEGIN_EXAMPLE
      \ca      ascii character
      \Ca      non-ascii character (newline included)
      \cl      latin character
      \cg      greek character
#+END_EXAMPLE

Here are some
[[syntax\_classes[[http://www.emacswiki.org/emacs?actionedit;idsyntax_classes][?]]]]
that can be used between brackets, [].

#+BEGIN_EXAMPLE
      [:digit:]  a digit, same as [0-9]
      [:upper:]  a letter in uppercase
      [:space:]  a whitespace character, as defined by the syntax table
      [:xdigit:] an hexadecimal digit
      [:cntrl:]  a control character
      [:ascii:]  an ascii character
#+END_EXAMPLE

Syntax classes:

#+BEGIN_EXAMPLE
      \s-   whitespace character        \s/   character quote character
      \sw   word constituent            \s$   paired delimiter         
      \s_   symbol constituent          \s'   expression prefix        
      \s.   punctuation character       \s<   comment starter          
      \s(   open delimiter character    \s>   comment ender            
      \s)   close delimiter character   \s!   generic comment delimiter
      \s"   string quote character      \s|   generic string delimiter 
      \s\   escape character            
#+END_EXAMPLE

You can see the current
[[syntax\_table[[http://www.emacswiki.org/emacs?actionedit;idsyntax_table][?]]]]
by typing C-h s. The syntax table depends on the current mode. As
expected, letters a..z are listed as word constituents in text-mode.
Other word constituents in this mode include A..Z, 0..9, $, %, currency
units, accented letters, kanjis. See
[[http://www.emacswiki.org/emacs/EmacsSyntaxTable][EmacsSyntaxTable]]
for details.

******** Idiosyncrasies of Emacs Regular Expressions

-  In a interactive search involving a regexp, a space character stands
   for one or more whitespace characters (tabs are whitespace
   characters). Enter C-q SPC to get a single space character. Or put
   the following in your
   [[http://www.emacswiki.org/emacs/InitFile][InitFile]] to override
   this behaviour.

#+BEGIN_EXAMPLE
                     (setq search-whitespace-regexp nil)
#+END_EXAMPLE

-  [^ ... ] matches all characters not in the list, even newlines.
   Put a newline in the list if you want it not to be matched. You can
   enter a newline character using C-o, C-q C-j, or
   C-q 012 RET. Note also that \s- matches space, tab, newline and
   carriage return. This can be handy in a [^ ... ] construct.
-  Default case handling for replacing commands executes case
   conversion. This means that both upper and lower case match in the
   regexp, whereas the case in the replacement string is chosen
   according to the match syntax. Try for example replacing john by
   harry below. Case conversion can be toggled on/off by typing
   M-c in the minibuffer during search. You can also set the
   variable case-fold-search to nil to disable case conversion; see
   [[http://www.emacswiki.org/emacs/CaseFoldSearch][CaseFoldSearch]] for
   more details. In the following example, only the last line would then
   be replaced.

#+BEGIN_EXAMPLE
                               John  >  Harry
                               JOHN  >  HARRY
                               john  >  harry
     
#+END_EXAMPLE

-  Backslashes must be double-quoted when used in Lisp code. Regular
   expressions are often specified using strings in
   [[http://www.emacswiki.org/emacs/EmacsLisp][EmacsLisp]]. Some
   abbreviations are available: \n for newline, \t for tab, \b for
   backspace, \u3501 for character with unicode value 3501, and so on.
   Backslashes must be entered as \\. Here are two ways to replace the
   decimal point by a comma (e.g. 1.5 -> 1,5), first by an interactive
   command, second by executing Lisp code (type C-x C-e after the
   expression to get it executed).

#+BEGIN_EXAMPLE
               M-x replace-regexp RET \([0-9]+\)\. RET \1, RET
              (while (re-search-forward "\\([0-9]+\\)\\." nil t)
                            (replace-match "\\1,"))
#+END_EXAMPLE

******** Some Regexp Examples

#+BEGIN_EXAMPLE
     [-+[:digit:]]                     digit or + or - sign
     \(\+\|-\)?[0-9]+\(\.[0-9]+\)?     decimal number (-2 or 1.5 but not .2 or 1.)
     \(\w+\) +\1\>                     two consecutive, identical words
     \<[[:upper:]]\w                  word starting with an uppercase letter
      +$                               trailing whitespaces (note the starting SPC)
     \w\{20,\}                         word with 20 letters or more
     \w+phony\>                        word ending by phony
     \(19\|20\)[0-9]\{2\}              year 1900-2099
     ^.\{6,\}                          at least 6 symbols
     ^[a-zA-Z0-9_]\{3,16\}$            decent string for a user name
     <tag[^> C-q C-j ]>\(.?\)</tag>  html tag
#+END_EXAMPLE

******** Some Emacs Commands that Use Regular Expressions

#+BEGIN_EXAMPLE
     C-M-s                   incremental forward search matching regexp
     C-M-r                   incremental backward search matching regexp 
     replace-regexp          replace string matching regexp
     query-replace-regexp    same, but query before each replacement
     align-regexp            align, using strings matching regexp as delimiters
     highlight-regexp        highlight strings matching regexp
     occur                   show lines containing a match
     multi-occur             show lines in all buffers containing a match
     how-many                count the number of strings matching regexp
     keep-lines              delete all lines except those containing matches
     flush-lines             delete lines containing matches
     grep                    call unix grep command and put result in a buffer
     lgrep                   user-friendly interface to the grep command
     rgrep                   recursive grep
     dired-do-copy-regexp    copy files with names matching regexp
     dired-do-rename-regexp  rename files matching regexp 
     find-grep-dired         display files containing matches for regexp with Dired
#+END_EXAMPLE

Note that list-matching-lines is an alias for occur and
delete-matching-lines is an alias for flush-lines. The command
highlight-regexp is bound to C-x w h. Also query-replace-regexp is
bound by default to C-M-%, although some people prefer using an alias,
like M-x qrr. Put the following in your
[[http://www.emacswiki.org/emacs/InitFile][InitFile]] to create such
alias.

#+BEGIN_EXAMPLE
       (defalias 'qrr 'query-replace-regexp)
#+END_EXAMPLE

See also:
[[http://www.emacswiki.org/emacs/IncrementalSearch][IncrementalSearch]],
[[http://www.emacswiki.org/emacs/ReplaceRegexp][ReplaceRegexp]],
[[http://www.emacswiki.org/emacs/AlignCommands][AlignCommands]],
[[http://www.emacswiki.org/emacs/OccurBuffer][OccurBuffer]],
[[http://www.emacswiki.org/emacs/DiredPower][DiredPower]]
******** using regex for fontlock
for normal regex
#+BEGIN_SRC emacs-lisp :results none
(font-lock-add-keywords
 'org-mode
'(("\\(%[^%\n]+%\\)" (0 '(:weight ultra-bold :background "#DDFFDD" :foreground "#000000") t))))


#+END_SRC

for special characters (₆In Example₆ ? etc) use this:
#+BEGIN_SRC emacs-lisp :results none
(font-lock-add-keywords
 'org-mode
'(("\\(\\?[^?\n]+\\?\\)" (0 '(:foreground "#000000" :weight ultra-bold :background "#FBFF00") t))))

#+END_SRC
for more details look below:
 #+BEGIN_EXAMPLE
fledermaus | ok, let's break it down to a few basics                                                                              
 fledermaus | a regular expression consists of atoms and modifiers.                                                                
 fledermaus | an atom is a "thing" which matches something, the simplest atom being a non-special character                        
 fledermaus | a modifier changes the number of times that thing matches.                                                           
 fledermaus | so "a" matches a (an expression containing just one atom)
ledermaus | "a?" is an atom plus a modifier. "a" matches a and ? means "the previous atom, 0 or 1 times"                        
ledermaus | so "aa?" means a followed by a or nothing                                                                           
ledermaus | ok. so next up is grouping constructs. they allow you to take a sequence of atoms and modfiers, and say "everythng  
          | _outside_ this group should treat the wholee group as an atom"                                                      
ledermaus | the grouping construct inh this dialect of regexps is \( \)                                                         
ledermaus | so, up at the top there, yo have a !, which is not special in regexps. it's just an atom                            
ledermaus | you want to replace it with ?, but ? is a modifier, so you need to make it non-special, ehich you do with the       
          | character \                                                                                                         
ledermaus | so the regexp is \? instead of !                                                                                    
ledermaus | but it's in a string, so you get \\?                                                                                
ledermaus | zeltak: next up, we have a kind of atom we haven't discussed yet: []                                                
ledermaus | [] denotes a "character class", which means "any of the characters inside the [ ]"                                  
ledermaus | or a negated character class, [^ ]                                                                                  
ledermaus | which means anything _except_ the listed characters                                                                 
ledermaus | zeltak: so, as you can see, modifiers don't make any sense inside a [] because [] or [^] is an atom. things can't   
          | repeat inside [], so ?, +,  etc are not special there and do not need to be escaled.                               
ledermaus | the final ! is once again a simple atom, so is replaced the same way as the first one.                              
   zeltak | fledermaus: gotcha. so im gussing the last instance of the ! should be like the first.                              
ledermaus | exactly.                                                                                                            
#+END_EXAMPLE

******* ELISP
******** hooks
********* add a hook
a simple hook EXAMPLE

#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook  
          (lambda ()      
            (auto-complete-mode)))

#+END_SRC

where the hook executes one org mode starts and the exe is turning on auto-complete-mode

******** require, load, load-file, autoload
Emacs lisp's module system is a primitive system, centered on loading file, with some slightly high level things such as its features, autoload, require. However, nothing is strict or enforced by elisp.

| Function Name   | Purpose                   | Tech Detail                         | Comment                             |
| <15>            | <25>                      | <35>                                | <35>                                |
|-----------------+---------------------------+-------------------------------------+-------------------------------------|
| load-file       | Load a file               | Load one specific file              | Use this if you have one SPECIFIC file at one particular file path |
|-----------------+---------------------------+-------------------------------------+-------------------------------------|
| load            | Load a file.              | load a file by searching thru var load-path. Also, tries to load a compiled version (.elc) if exists. | Use this if the path for the file is not known in advance, and you are using a file name without full path, such as undo or undo.el, and you want to load the compiled version if it exists (undo.elc). |
|                 |                           |                                     |                                     |
|                 |                           |                                     |                                     |
|                 |                           |                                     |                                     |
|                 |                           |                                     |                                     |
|-----------------+---------------------------+-------------------------------------+-------------------------------------|
| require         | Load a package if it has not already been loaded | Checks the var features, if symbol is not there, then call load to load it. | Checks the var features, if symbol is not there, then call load to load it. |
|-----------------+---------------------------+-------------------------------------+-------------------------------------|
| autoload        | Load a file only when a function is called. | Associate a function name with a file path. When the function is called, load the file, and execute the function. | If you are writing a major mode, it's good to have your package installation go by autoload (if possible). It saves startup time. |
|                 |                           |                                     |                                     |
|-----------------+---------------------------+-------------------------------------+-------------------------------------|

******* Emacs on MS windows
******** how to launch emacs in windows (with no command prompt)
Note that GNU Emacs for Windows comes with two executables to start Emacs:
"emacs.exe" and "runemacs.exe"
The former keeps a DOS-Prompt window in the background, while the latter does not, so when if you choose that distribution and want to create a shortcut, be sure to launch "runemacs.exe".

******** how to install and use custom config
the best way i found was to install the emacs speaks statistics
http://ess.r-project.org/

!note! this will not install org-mode, but is ok if you use latest orgmode from MELPA/Git etc

then in windows simple clone your git repo with your emacs config to 

~/.emacs.d (full path on windows is file:/c:\Users\ekloog\.emacs.d

******* emacs Server (deamon mode)
******** Emacs as systemd service					:Fav:

Its simple enough to run the emacs daemon with systemd, create the following file

[[file:]]/etc/systemd/system/emacs@.service

and put this inside:

#+BEGIN_SRC sh
[Unit]
Description=Emacs: the extensible, self-documenting text editor

[Service]
Type=forking
ExecStart=/usr/bin/emacs --daemon
ExecStop=/usr/bin/emacsclient --eval "(progn (setq kill-emacs-hook 'nil) (kill-emacs))"
Restart=always
User=%i
WorkingDirectory=%h

[Install]
WantedBy=multi-user.target
Enable the unit for your user

#+END_SRC

then you can enable/strat/stop the deamon with usual systemd syntax:

#+BEGIN_SRC sh
systemctl enable emacs@USER
systemctl start emacs@USER

#In example 
systemctl start emacs@zeltak
#+END_SRC

******** start server (daemon mode)
simply start emacs as:

#+BEGIN_SRC sh
emacs --daemon
#+END_SRC

and it starts running in the background. After that, you can start emacs client frames (windows) using:

#+BEGIN_SRC sh
emacsclient 
#or for terminal only
emacsclient -t
#+END_SRC

******** kill server

In example  

#+BEGIN_SRC sh
emacsclient -e "(kill-emacs)
#+END_SRC
 
******** different window name per emacs client				:Fav:

#+BEGIN_SRC sh
emacsclient -c -e '(x-change-window-property "WM_CLASS" "Client_NAME_NEEDED" nil nil nil t)' 
#+END_SRC

$Note-you only need to change the Client_NAME_NEEDED part$:

******* Ess
******** install ESS through git
#+BEGIN_SRC sh
git clone https://github.com/emacs-ess/ESS.git  	 
#+END_SRC

then add this to Emacs config:

#+BEGIN_SRC emacs-lisp :results none
(add-to-list 'load-path "/home/zeltak/.emacs.d/src/ESS/lisp/")
(load "ess-site")
#+END_SRC

******** connect to a remote server and run r scripts there 
ESS works with processes on remote computers as easily as with processes on the local machine. The recommended way to access a statistical program on remote computer is to start it with tramp. Require tramp in your .emacs file:
(require 'tramp)
%note- not needed with emacs 24 onwards%

Now start an ssh session with

?C-x f? /ssh:user@host: RET

Tramp should open a dired buffer in your remote home directory. Now call your favorite ESS process (R, Julia, stata etc) as you would usually do on local machine: M-x R.

Alternatively you can start your process normally (M-x R). After you are asked for starting directory, simply type ‘/ssh:user@host: RET’. R process will be started on the remote machine.
******** 'connect via ssh' to a remote server and run local ESS there
this is my prefferd way of doing this:

you connect to the server you want to run R on via SSH on your local machine (client)
$Note- you need to make sure Emacs daemon is runnig on that server$

#+BEGIN_SRC sh
ssh -X user@hostipaddress 
#+END_SRC
$Note$ the -X for X11 forwarding. once connected issuse 

#+BEGIN_SRC sh
emacs -nw
#+END_SRC 

to start a terminal Emacs client.
open your R script as usual (this should bring up ESS) and start working,that is evaluating lines/sections of code
this will prompt you to choose a folder as your work dir and will create a *R* buffer which will act as the console

%Tip-since this is an Emacs client window which is connected to the server you can close your ssh session and the R proccess will still keep running , very much like in tmux. you can simply exit EMACS (C-x C-c) and open a new Emacs and it will still be there. also you can connect to that session from Emacs gui when you get back to the office% 

%Tip- if tab isn't working in terminal for some org related stuff (if using org with R) just use 0rg-cycle% 

********* alternaive approach @not tested by me@

Here is how to use ESS with R running in a remote screen session:

ssh to the remote host (outside of emacs)

start screen session

detach it

open shell in emacs (M-x shell)

ssh to the remote host again in the emacs shell

resume the screen session (screen -r)

start R

finally attach ESS to the R process using M-x ess-remote in the shell buffer where you started R


******** a handy function to clear shell
use the function below and bind it to a key of your liking

 #+BEGIN_SRC emacs-lisp :results none
 (defun clear-shell ()
    (interactive)
    (let ((old-max comint-buffer-maximum-size))
      (setq comint-buffer-maximum-size 0)
      (comint-truncate-buffer)
      (setq comint-buffer-maximum-size old-max))) 
 #+END_SRC 

******* gnus
******** terms
article-one information piece-email,article etc terms
backend-a way to get article, mailbox , rss, news backends
gnus has its own .el file but you can use an org mode config file and stick the config there

******** keybinds
|---------+------------------------|
| keybind | Info                   |
|---------+------------------------|
| '^'     | show news sources      |
| M-`     | show menu              |
| U       | subscribe to newsgroup |
|         |                        |
|         |                        |
|         |                        |
******** Setup
********* base setup
first thing you would config in gnus is your main source

#+BEGIN_SRC emacs-lisp
(setq gnus-select-method '(nntp "news.gmane.org"))
#+END_SRC

this shows the gmane mailing list gateway as main source
********* Subscribe to a group
issue U and then enter gmane.TAB to use completion
******** Errors 
********* gnus hangs at startup
if gnus hanges, one possibility is this: if you just commented out a previous setup for Gmail and replaced it with one for  
an NNTP server, Gnus will now be confused and stuck trying to get those previously-subscribed Gmail IMAP folders. just delete .newsrc and try again
******* images
******** turn on image mode

M-x iimage-mode

******** images in org-mode

Depending on exactly what you want to achieve, you might try one the the
following ideas:
1. use org-mode as your buffer's major mode. You then have access to
all the power of org-mode formatting, which includes linking to image
files and displaying them:
an image without description

 [[file:/tmp/image.png]]

 an image with description

 [[file:/tmp/image.png][my description]]

 then you can call
 org-toggle-inline-images (C-c C-x C-v)
 to display images in the buffer (without a prefix argument, it will
display only images without description; if you give a prefix argument,
it will display all images)
 2. write your own elisp code to insert images where you want them, and
put it in an eval local pseudo-variable so that it is called when
opening the file. For example:
 foo
 <HERE>
 bar
 # Local Variables:
 # eval: (progn (beginning-of-buffer)(search-forward
"<HERE>")(insert-image (create-image "/tmp/image.png")))
 # End:
 You can of course wrap the elisp code into a neat function and simply
call it from the eval local variable (which is cleaner, but forces you
to have the function definition somewhere else, away from your file)

******** image mode
Open a image in your photos folder. (call dired to open a dir, then Enter ↵ on a image file to open in image mode. 〔➤ dired tutorial〕)
Press 'n' (image-next-file) to view next image.
Press 'p' (image-previous-file) to view previous image. 
******* keybinds
******** What keys can be defined
What type of keys can i define?
Single Key.  F8,  Menu,  Page , Keypad 1
Single Key Sequence.  F9 8, F9  Page 
Key Combination.  Ctrl+8, Ctrl+Alt+8
Sequence of single/combo keys.  Alt+7 8, Alt+7 Ctrl+i
******** Emacs Keybinding Syntax Examples

This page shows sample syntax for defining keys in emacs. (For general
guide on defining keys, see: Emacs: How to Define Keyboard Shortcuts.)
 In the following, the beep is a example command. Replace it with the
command name you want. Meta is Alt by default.
Single Modifier Key
(global-set-key (kbd "M-a") 'beep) ; Meta+a
(global-set-key (kbd "C-a") 'beep) ; Ctrl+a
Function keys and Special keys
(global-set-key (kbd "<f2>") 'beep) ; F2 key
(global-set-key (kbd "<kp-2>") 'beep) ; the "2" key on the number keypad
(global-set-key (kbd "<insert>") 'beep) ; the Ins key
(global-set-key (kbd "<delete>") 'beep) ; the Del key
(global-set-key (kbd "<home>") 'beep)
(global-set-key (kbd "<end>") 'beep)
(global-set-key (kbd "<next>") 'beep) ; page down key
(global-set-key (kbd "<prior>") 'beep) ; page up key
(global-set-key (kbd "<left>") 'beep) ; 
(global-set-key (kbd "<right>") 'beep) ; 
(global-set-key (kbd "<up>") 'beep) ; 
(global-set-key (kbd "<down>") 'beep) ; 
(global-set-key (kbd "<return>") 'beep) ; the Enter/Return key
(global-set-key (kbd "SPC") 'beep) ; the Space bar key
(info "(elisp) Function Keys")
Modifier + Special Key
(global-set-key (kbd "M-<f2>") 'beep) ; Meta+F2
(global-set-key (kbd "C-<f2>") 'beep) ; Ctrl+F2
(global-set-key (kbd "S-<f2>") 'beep) ; Shift+F2
(global-set-key (kbd "M-<up>") 'beep) ; Meta+
(global-set-key (kbd "C-<up>") 'beep) ; Ctrl+
(global-set-key (kbd "S-<up>") 'beep) ; Shift+
Two Modifier Keys
2 modifier keys pressed simultaneously, plus a letter key:
(global-set-key (kbd "M-A") 'beep) ; Meta+Shift+a
(global-set-key (kbd "C-A") 'beep) ; Ctrl+Shift+a
(global-set-key (kbd "C-M-a") 'beep) ; Ctrl+Meta+a
Example of 2 modifier keys with a digit key:
(global-set-key (kbd "M-@") 'beep) ; Meta+Shift+2 or Meta+@
(global-set-key (kbd "C-@") 'beep) ; Ctrl+Shift+2 or Ctrl+@
(global-set-key (kbd "C-M-2") 'beep) ; Ctrl+Meta+2
(global-set-key (kbd "C-S-<kp-2>") 'beep); Ctrl+Shift+"numberic pad 2"
Three Modifier Keys
3 modifier keys pressed simultaneously:

(global-set-key (kbd "C-M-S-a") 'beep) ; Ctrl+Meta+Shift+a
(global-set-key (kbd "C-M-!") 'beep) ; Ctrl+Meta+Shift+1 or Ctrl+Meta+!
(global-set-key (kbd "C-M-\"") 'beep) ; Ctrl+Meta+Shift+' or Ctrl+Meta+"
(global-set-key (kbd "C-M-S-<up>") 'beep); Ctrl+Meta+Shift+
Key Sequence
Example of sequence of key combinations:
(global-set-key (kbd "C-, a") 'beep) ; Ctrl+, a
(global-set-key (kbd "C-, SPC") 'beep) ; Ctrl+, Space
(global-set-key (kbd "C-, C-a") 'beep); Ctrl+, Ctrl+a
(global-set-key (kbd "<f7> <f8>") 'beep); F7 F8
No Modifiers
A shortcut can be created without any modifier keys.
(global-set-key (kbd "2") 'beep)
(global-set-key (kbd "a") 'beep)
(global-set-key (kbd "") 'beep)
(global-set-key (kbd "") 'beep)
(global-set-key (kbd "") 'beep)
(global-set-key (kbd "(") 'beep)
(global-set-key (kbd "") 'beep)

******** intro

What type of keys can i define?
 Single Key. ( F8,  Menu,  Page , Keypad 1 )
 Single Key Sequence. ( F9 8, F9  Page )
 Key Combination. ( Ctrl+8, Alt+8)
 Sequence of combo key. ( Alt+7 8, Alt+7 Ctrl+i)
How to find key syntax?
Call describe-key F1 k, then press the key combination. Emacs will
then display its syntax. For example, suppose you want to know the
syntax for the key press of Ctrl+Alt+F8. Call describe-key, then
press Ctrl+Alt+F8, then emacs will print "<C-M-f8> is undefined".
That means, you can use (kbd "<C-M-f8>") to represent that key
combination in lisp code.
 For examples, see: Emacs Keybinding Syntax Examples.
 Note: There is a lot syntax variations, but the one printed by
describe-key is guaranteed to work. For details of emacs's keystroke
syntax variation, see: Emacs's Key Notations Explained (/r, \^M, C-m,
RET, <return>, M-, meta).
 How to find out the current keybinding to a key?
 Call describe-key F1 k, then type the key combination. Emacs will
then show the command that key press is bound to.
 To see a list of ALL current keybindings, call describe-bindings F1
b.

******** simple chain command example

use this
 global-set-key (kbd "C-c a") (lambda () (interactive) (cmd-1 ...) (cmd2
...) ))
 In example:
 (global-set-key (kbd "S-<f8>") (lambda () (interactive) (save-buffer)
(kill-buffer) ))

******** How to change/add keys to a major mode

How to change/add keys to a major mode?
 Use a hook for the mode. A hook will load your code whenever that mode
is activated. Here's a usable example:
 ; define some keys only when the major mode html-mode is active
 (add-hook 'html-mode-hook
 (lambda ()
 (local-set-key (kbd "C-c w") 'bold-word)
 (local-set-key (kbd "C-c b") 'blue-word)
 (local-set-key (kbd "C-c p") 'insert-p)
 (local-set-key (kbd "M-4") 'tag-image)
 (local-set-key (kbd "M-5") 'wrap-url)
 )
 )

******** Rebinding Key Choices

Keys to Avoid
 Emacs has its quirks. The following keys you should not redefine:
 The question mark ? or any combination with it. (due to emacs technical
implementation quirk)
 The Esc key or Ctrl+[. (The Esc key is tied to Ctrl+[ and
Meta. Esc by itself has complicated meanings depending when it is
pressed and how many times it is pressed.)
 F1 or Ctrl+h. (This key combo is used for emacs help system
and have a special status in emacs's key system. For example, type
Ctrl+x, then type Ctrl+h, it'll list what valid keys can follow
and the associated command.)
 Ctrl+m or Enter  (These are tied together. On Apple Keyboards
the main Enter is labeled Return.)
 Ctrl+i or Tab  (These are tied together)
 Ctrl+ Shift+letter. In text terminals, it cannot distinguish
shifted and unshifted versions of such combination. Works fine if you
always use emacs in a GUI environment.
 Good Key Choices
 Emacs has some 7 thousand commands. By default, 800 of them have key
shortcuts. All the common key spots are used. If you define your own
keys without care, you may find that many major mode or minor mode
override your keys, because they have priority.
 By official emacs documentation (info "Key Binding Conventions") , the
key space for users are the function keys F5 to F9, and Ctrl+c
letter. This is very restrictive.
 The following keys are good spots for your own definitions, and does
not cause any problems in practice.
 [[macsen_files/Image_doxwkfAoBnX8ORryMxAxrw_0001.png]]
 Super  Hyper Keys

Emacs supports extra modifier keys called Super  Hyper. On a PC
keyboard, you can set the Win key or Menu key to them, or Apple
keyboard's Opt or Cmd key.
See:[[http://ergoemacs.org/emacs/emacs_hyper_super_keys.html][Emacs: How
to define Super  Hyper Keys]].

******** map move windows

(global-set-key [M-left] 'windmove-left) ; move to left windnow
 (global-set-key [M-right] 'windmove-right) ; move to right window
 (global-set-key [M-up] 'windmove-up) ; move to upper window
 (global-set-key [M-down] 'windmove-down) ; move to downer window

******** Smart window switch

Smart window switch
 The traditional window switch with C-x o can be cumbersome to use in
the long run. The windmove commands provide a more convenient way to do
this. All you have to do is to hold down Shift while pointing at a
window with the arrow keys.
 To activate the windmove keys, use the following in your configuration
fille
 (when (fboundp 'windmove-default-keybindings)
 (windmove-default-keybindings)

******** Standard Copy Paste Keys (CUA)

Standard Copy Paste Keys

First, turn on the CUA mode, under the menu Options  C-x/C-c/C-v Cut
and Paste (CUA). The CUA mode will activate the following shortcuts:

-  Ctrl+x for cut
-  Ctrl+c for copy
-  Ctrl+v for paste
-  Ctrl+z for undo

Also, it will highlight when a region of a text is selected. And, when a
text is selected, typing any text will automatically replace the current
selection. Pressing the Backspace key will also delete the selection.
 the emacs's Options menu. You can turn on standard copy and paste
shortcuts called CUA mode:

 [[macsen_files/emacs_cua_mode_menu.png]]

******** CUA mode keys

Basic Keyboard Shortcuts
 Open, Save, Close
 Ctrl+x Ctrl+fOpen a new file
 Ctrl+x Ctrl+sSave file
 Ctrl+x kClose the current file
 Moving Cursor
 Use the arrow keys    , and  Home,  End,  Page ,  Page  keys.
 Ctrl+Move cursor left by word.
 Ctrl+Move cursor right by word.
 Ctrl+ HomeBeginning of document.
 Ctrl+ EndEnd of document.
 Deleting Text
 Alt+dDelete the next word
 Alt+ BackspaceDelete the previous word
 Ctrl+kDelete all characters from cursor to end of line
 Copy Paste Undo
 First pull the menu Options  C-x/C-c/C-v Cut and Paste (CUA), then
pull the menu Options  Save Options.
 Ctrl+zUndo. (To redo, type any character then do undo twice.)
 Ctrl+cCopy
 Ctrl+xCut
 Ctrl+vPaste
 Ctrl+x hSelect All
 Ctrl+SpaceMark the starting point for copy/cut a text
 Split Window
 Ctrl+x 2Split window into 2 panes
 Ctrl+x 1Make the cursor pane fill window
 Ctrl+x oMove cursor to the other pane
 Searching Text
 To search a word, press Ctrl+s, then type your search text, emacs
will move the cursor to the location of the matched text as you type.
Press Ctrl+s again to jump to the next occurrence, press Ctrl+r
to jump to the previous occurrence.
 Once you found what you are looking for, press a arrow key to exit.
 To exit search and leave the cursor at the place before search started,
press Ctrl+g.

******** How to unset a keybinding
How to unset a keybinding?
To unset a keybinding, use global-unset-key. For example, you have
defined a keystroke for undo, and wants to kick the habit of the hitting
the default shortcut for undo:

#+BEGIN_SRC sh
(global-unset-key (kbd "C- "))
#+END_SRC

******** Use function keys for custom keyboard shortcuts
You can define keyboard shortcuts that are sequences of keys. 

This is how Emacs can have keyboard shortcuts like C-c C-c. The function keys are great for this, because (a) they often dont have assigned functions (or have ones that you dont mind losing), and (b) you dont have to press two or more keys to start your shortcut sequence, like you would do with C-c.

I like using F8 or F9 because Im right-handed and my keyboard groups function keys together. On my keyboard, theres a slight gap separating F5-F8 and F9-F12, which means its easy to distinguish F8 from F9 by feel if I happen to land on the edge.
Define those keyboard shortcuts as sequences so that you can add more shortcuts easily without having to rejig your muscle memory.

#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "<f9> <f9>") 'org-agenda-list)
(global-set-key (kbd "<f9> <f8>") (lambda () (interactive) (org-capture nil "r")))
#+END_SRC

If you want to rebind something that was previously bound to a non-prefix map, you can unbind it first:

(global-unset-key (kbd "<f9>"))

******** add a mode specific keybind
you use this code:
#+BEGIN_SRC emacs-lisp
(define-key text-mode-map (kbd "<f8>") 'delete-trailing-whitespace)
#+END_SRC

%Tip usually the naming will be mode + a map at the end like text-mode-map%

or you can also use hooks:

#+BEGIN_SRC emacs-lisp
; define some keys only when the major mode html-mode is active
(add-hook 'html-mode-hook
 (lambda ()
 (local-set-key (kbd "C-c w") 'bold-word)
 (local-set-key (kbd "C-c b") 'blue-word)
 (local-set-key (kbd "C-c p") 'insert-p)
 (local-set-key (kbd "M-4") 'tag-image)
 (local-set-key (kbd "M-5") 'wrap-url)
 )
)
#+END_SRC

******** define a function to toggle on/off and bindkey

use this function (stick it in your config file)

#+BEGIN_SRC emacs-lisp :results none
 (defun minimap-toggle ()
 "Toggle minimap for current buffer."
 (interactive)
 (if (not (boundp 'minimap-bufname))
 (setf minimap-bufname nil))
 (if (null minimap-bufname)
 (progn (minimap-create)
 (set-frame-width (selected-frame) 100))
 (progn (minimap-kill)
 (set-frame-width (selected-frame) 80))))
#+END_SRC
 
 I have this set to <f7>:
 (global-set-key (kbd "<f7>") 'minimap-toggle)

******** TODO Toggle-Map
The following keymap toggles some options which tend to be useful throughout a session.

#+BEGIN_SRC emacs-lisp :results none
(define-prefix-command 'endless/toggle-map)
;; The manual recommends C-c for user keys, but C-x t is
;; always free, whereas C-c t is used by some modes.
(define-key ctl-x-map "t" 'endless/toggle-map)
(define-key endless/toggle-map "c" 'column-number-mode)
(define-key endless/toggle-map "d" 'toggle-debug-on-error)
(define-key endless/toggle-map "e" 'toggle-debug-on-error)
(define-key endless/toggle-map "f" 'auto-fill-mode)
(define-key endless/toggle-map "l" 'toggle-truncate-lines)
(define-key endless/toggle-map "q" 'toggle-debug-on-quit)
(define-key endless/toggle-map "t" 'endless/toggle-theme)
;;; Generalized version of `read-only-mode'.
(define-key endless/toggle-map "r" 'dired-toggle-read-only)
(autoload 'dired-toggle-read-only "dired" nil t)
#+END_SRC

There are eight keys being defined there, most of which aren't even used every day, but I know I'll never forget a single one. That is the beauty of mnemonics.

Doesnt "Emacs, toggle column" just roll off your tongue as you're typing C-x t c? I feel like I'm commanding the strands of reality, but that could just be my D&D past taking the better of me.

******* look and feel
******** fonts
******** faces 	 
********* find out colors/fonts etc for a specific package/mode

there are 2 ways to do it:

you may use  ~M-x list-faces-display~ and look there in all available faces

!Or!

use the ~apropos~ command and search for a key word ₆In example₆ 

#+BEGIN_SRC emacs-lisp :results none
~apropos~  >>> helm.*face actually
#+END_SRC

********* Face Attributes

 [[file:/home/zeltak/Dropbox/Org/Tech/images/img23472PYP.jpg]]


 Face attributes determine the visual appearance of a face. The following table lists all the face attributes, their possible values, and their effects.

 Apart from the values given below, each face attribute can have the value unspecified. This special value means that the face doesn't specify that attribute directly. An unspecified attribute tells Emacs to refer instead to a parent face (see the description :inherit attribute below); or, failing that, to an underlying face (see Displaying Faces). The default face must specify all attributes.

 Some of these attributes are meaningful only on certain kinds of displays. If your display cannot handle a certain attribute, the attribute is ignored.

 :family
 Font family or fontset (a string). See Fonts, for more information about font families. The function font-family-list (see below) returns a list of available family names. See Fontsets, for information about fontsets. 
 :foundry
 The name of the font foundry for the font family specified by the :family attribute (a string). See Fonts. 
 :width
 Relative character width. This should be one of the symbols ultra-condensed, extra-condensed, condensed, semi-condensed, normal, semi-expanded, expanded, extra-expanded, or ultra-expanded. 
 :height
 The height of the font. In the simplest case, this is an integer in units of 1/10 point.
 The value can also be a floating point number or a function, which specifies the height relative to an underlying face (see Displaying Faces). If the value is a floating point number, that specifies the amount by which to scale the height of the underlying face. If the value is a function, that function is called with one argument, the height of the underlying face, and returns the height of the new face. If the function is passed an integer argument, it must return an integer.

 The height of the default face must be specified using an integer; floating point and function values are not allowed. 

 :weight
 Font weightone of the symbols (from densest to faintest) ultra-bold, extra-bold, bold, semi-bold, normal, semi-light, light, extra-light, or ultra-light. On text terminals which support variable-brightness text, any weight greater than normal is displayed as extra bright, and any weight less than normal is displayed as half-bright.


 :slant
 Font slantone of the symbols italic, oblique, normal, reverse-italic, or reverse-oblique. On text terminals that support variable-brightness text, slanted text is displayed as half-bright. 
 :foreground
 Foreground color, a string. The value can be a system-defined color name, or a hexadecimal color specification. See Color Names. On black-and-white displays, certain shades of gray are implemented by stipple patterns. 
 :background
 Background color, a string. The value can be a system-defined color name, or a hexadecimal color specification. See Color Names.


 :underline
 Whether or not characters should be underlined, and in what way. The possible values of the :underline attribute are:
 nil
 Don't underline. 
 t
 Underline with the foreground color of the face. 
 color
 Underline in color color, a string specifying a color. 
 (:color color :style style)
 color is either a string, or the symbol foreground-color, meaning the foreground color of the face. Omitting the attribute :color means to use the foreground color of the face. style should be a symbol line or wave, meaning to use a straight or wavy line. Omitting the attribute :style means to use a straight line.


 :overline
 Whether or not characters should be overlined, and in what color. If the value is t, overlining uses the foreground color of the face. If the value is a string, overlining uses that color. The value nil means do not overline.


 :strike-through
 Whether or not characters should be strike-through, and in what color. The value is used like that of :overline. 
 :box
 Whether or not a box should be drawn around characters, its color, the width of the box lines, and 3D appearance. Here are the possible values of the :box attribute, and what they mean:
 nil
 Don't draw a box. 
 t
 Draw a box with lines of width 1, in the foreground color. 
 color
 Draw a box with lines of width 1, in color color. 
 (:line-width width :color color :style style)
 This way you can explicitly specify all aspects of the box. The value width specifies the width of the lines to draw; it defaults to 1. A negative width -n means to draw a line of width n that occupies the space of the underlying text, thus avoiding any increase in the character height or width.
 The value color specifies the color to draw with. The default is the foreground color of the face for simple boxes, and the background color of the face for 3D boxes.

 The value style specifies whether to draw a 3D box. If it is released-button, the box looks like a 3D button that is not being pressed. If it is pressed-button, the box looks like a 3D button that is being pressed. If it is nil or omitted, a plain 2D box is used.


 :inverse-video
 Whether or not characters should be displayed in inverse video. The value should be t (yes) or nil (no). 
 :stipple
 The background stipple, a bitmap.
 The value can be a string; that should be the name of a file containing external-format X bitmap data. The file is found in the directories listed in the variable x-bitmap-file-path.

 Alternatively, the value can specify the bitmap directly, with a list of the form (width height data). Here, width and height specify the size in pixels, and data is a string containing the raw bits of the bitmap, row by row. Each row occupies (width + 7) / 8 consecutive bytes in the string (which should be a unibyte string for best results). This means that each row always occupies at least one whole byte.

 If the value is nil, that means use no stipple pattern.

 Normally you do not need to set the stipple attribute, because it is used automatically to handle certain shades of gray. 

 :font
 The font used to display the face. Its value should be a font object. See Font Selection, for information about font objects.
 When specifying this attribute using set-face-attribute (see Attribute Functions), you may also supply a font spec, a font entity, or a string. Emacs converts such values to an appropriate font object, and stores that font object as the actual attribute value. If you specify a string, the contents of the string should be a font name (see Fonts); if the font name is an XLFD containing wildcards, Emacs chooses the first font matching those wildcards. Specifying this attribute also changes the values of the :family, :foundry, :width, :height, :weight, and :slant attributes. 

 :inherit
 The name of a face from which to inherit attributes, or a list of face names. Attributes from inherited faces are merged into the face like an underlying face would be, with higher priority than underlying faces (see Displaying Faces). If a list of faces is used, attributes from faces earlier in the list override those from later faces.
  Function: font-family-list &optional frame
 This function returns a list of available font family names. The optional argument frame specifies the frame on which the text is to be displayed; if it is nil, the selected frame is used.

  User Option: underline-minimum-offset
 This variable specifies the minimum distance between the baseline and the underline, in pixels, when displaying underlined text.

  User Option: x-bitmap-file-path
 This variable specifies a list of directories for searching for bitmap files, for the :stipple attribute.

  Function: bitmap-spec-p object
 This returns t if object is a valid bitmap specification, suitable for use with :stipple (see above). It returns nil otherwise.

 Face attributes determine the visual appearance of a face. The following
 table lists all the face attributes, their possible values, and their`
 effects.

******** themes
********* change theme
use:

#+BEGIN_EXAMPLE
M-x load-theme
#+END_EXAMPLE

choose theme (you can use tab to list all available themes)

********* load a theme at startup 

#+BEGIN_SRC emacs-lisp :results none
;;;add custom themes to list
(add-to-list 'custom-theme-load-path "/home/zeltak/.emacs.d/themes")
;to load a specifc theme 
(load-file "~/.emacs.d/themes/zprime-theme.el")
;load the choosen theme at startup 
(load-theme 'zprime t)
#+END_SRC

If you'd like to return to the default-theme just do a M-x disable-theme.
********* create a custom theme file 
Theme files !must be named *-theme.e! in your defined `custom-theme-load-path`
********* Emacs intenral theme editing/info commands
you can use the `customize-themes` command to select a theme interactively and edit it
	Type M-x custom-describe-theme to describe the theme at point.  
********* How to Set a Theme Depending on Mode
Here's how you can set background color depending on the file name extension.

#+BEGIN_SRC sh
;; sample code for setting a background color depending on file name extension

(defun my-set-theme-on-mode ()
  "set background color depending on file suffix"
  (interactive)
  (let ((fileNameSuffix (file-name-extension (buffer-file-name) ) ))
    (cond
     ((string= fileNameSuffix "el" ) (set-background-color "honeydew"))
     ((string= fileNameSuffix "txt" ) (set-background-color "cornsilk"))
     (t (message "%s" "no match found"))
     )
    ))

(add-hook 'find-file-hook 'my-set-theme-on-mode)
#+END_SRC
You can modify the code to set themes instead of just background
 
for more info look here:

http://ergoemacs.org/emacs/emacs_set_theme_on_mode.html
********* change a face in a theme 
1.find out the specific face you want to change using list-faces-display
then in your theme change the relevant section. ₆In example₆ using the leuven based theme to change the helm selection use

#+BEGIN_SRC emacs-lisp :results none
`(helm-selection ((,class (:foregrounf "black" :background "#2AA198")))) 
#+END_SRC

$Note$- you can change font,color, weight etc..

also $Note$ that the above is relevant to leuven but other theme configs may be differently configed

******** menus
********* create custom menus
the best way is to use easy menu:

http://www.emacswiki.org/emacs/EasyMenu
and
http://emacs-fu.blogspot.co.il/2009/04/adding-custom-menus.html

Here is a basic example showing how to use EasyMenu. ‘my-menu’ is the symbol used to identify your menu, and ‘my-mode-map’ identifies the keymap for the mode where you want the menu to be visible.

%Tip- you can create specific menus that would appear in specific mode , ₆In Example₆ instead of global-map use org-mode-map% 

#+BEGIN_SRC emacs-lisp :results none
    (easy-menu-define my-menu my-mode-map "z1"
		      '("zmenu"
			["One entry" my-function t]
			("Sub Menu"
			 ["My subentry" my-obscure-function t])))
#+END_SRC
where
`my-menu` is the emacs identifier
`my-mode-map` is in which mode to have it appear (`global-map` for everywhere and `org-map-mode` for orgmode)
`z1` is the name of the menu
`zmenu` is the actual name you see
You can also add menus and menu items to the global menu bar. Here is an example that adds an entry to the Tools menu. Watch out, the name of the menu where you want to add the item (the PATH parameter) is case sensitive.

#+BEGIN_SRC lisp
    (require 'easymenu)
    (easy-menu-add-item nil '("tools") ["IRC" erc-select t])

#+END_SRC

One way to determine PATH is to use C-h k and click on a menu item close to where you want your entry to appear. The ‘Help’ buffer then says something like:

#+BEGIN_SRC lisp
<menu-bar> <tools> <games> <tetris> runs the command tetris
which is an interactive autoloaded Lisp function in `tetris'.
#+END_SRC

******* movment
******** basic 
The following commands are useful for viewing screenfuls:
 C-vMove forward one screenful
 M-vMove backward one screenful
 C-lClear screen and redisplay all the text,
 moving the text around the cursor
 to the center of the screen.
 (That's CONTROL-L, not CONTROL-1.)
 C-fMove forward a character
 C-bMove backward a character
 M-fMove forward a word
 M-bMove backward a word
 C-nMove to next line
 C-pMove to previous line
 C-aMove to beginning of line
 C-eMove to end of line
 M-aMove back to beginning of sentence
 M-eMove forward to end of sentence
 
 
 move to popup buffer window > pgup
 quit popup window > q
******** jump to last posiiton						:Fav:

use ?C-x C-space? to jump to last position

%Tip% if using Evil one can use also ?C-o?

******** go to specific column
use 'M-g Tab' and then column number to switch to that column

******* macros
********* Naming and Saving Keyboard Macros
?C-x C-k n?

Give a command name (for the duration of the Emacs session) to the most recently defined keyboard macro (kmacro-name-last-macro). 

?C-x C-k b?

Bind the most recently defined keyboard macro to a key sequence (for the duration of the session) (kmacro-bind-to-key). 

?M-x insert-kbd-macro?

Insert in the buffer a keyboard macro's definition, as Lisp code.      

********* basic macro recording
The key strokes can include calling emacs commands or commands that execute any emacs lisp functions.
To record keystrokes use:
********** to start recording a macro and 

?M-x start-kbd-macro?

to end. If you made a mistake, you can cancel  ?Ctrl+g? (keyboard-quit) and start over.

********** to stop the macro

?M-x end-kbd-macro?

********** To run the keystrokes you've just recorded, call call-last-kbd-macro or
?C-x e?

********** to repeat the macro `X` times, you first press
?C-u? `X` and then ?C-x e? 

********* Saving Your Keyboard Macro for Future Use			:Fav:

If you want to use your keyboard macro for future use, you can save it. To save the macro: Call

?M-x name-last-kbd-macro?

and give it a name.

then issue

?M-x insert-kbd-macro?

look for the name you just gave and select it.This will insert the lisp code for the named macro at the cursor position.
₆In example₆ 


#+BEGIN_EXAMPLE
(fset 'z-wrap-line-bash
   [?V f4 ?b ?\M-x right])
#+END_EXAMPLE

Copy and Paste the code into your emacs init file.
In any future emacs session, you can call your kmacro by name just like any emacs command. Once you've saved your macro with a name, you can also give it a keyboard shortcut, such as F8.

********* edit a macro while its running
when your recored a macro press ~c-x q~ while its running to specify a stop in the macro
when you run that macro and it stops emacs will present a menu and you can enter 'recursive editing' to enter text 
******* minor modes

********* define in .emacs

minor mode examples are blink-cursor-mode and column-number-mode
 As a rule, minor-modes can be enabled given positive argument or
disabled with a negative argument.
 Should the argument be omitted, the minor-mode will be toggled on/off.
 Here are some more examples of minor-modes. The following will disable
the scroll bars, menu-bar and tool-bar, respectively.
 (scroll-bar-mode -1)
 (menu-bar-mode -1)
 (tool-bar-mode -1)

******* opening local/remote/root files

********* open as root

To prompt for the root password before opening /etc/hosts with root
permissions:
 C-x C-f /su::/etc/hosts
 In example:
 C-x C-f
 /su::
 (or /sudo::)
 enter password and then continue with PATH
 /etc/hosts

********* open a remote file

To connect to 'myhost' as 'myuser' via SSH and open the file
~/example.txt:

 C-x C-f /ssh:myuser@myhost:~/example.txt
******* !packages/plugins!
******** load .el files manually
use the `load-file` option 

in detail:
if you downloaded a simple emacs package on the web named xyz.el: To use the package, all you have to do is to make emacs load the file.

use |M-x| load-file then give the file path.

Now, emacs is aware of the package. To activate, call the command in the package. For example, if the file name is 'xyz.el', then the command to activate it is typically xyz or xyz-mode.
******** El-get
********* install it
just add this in your config:
#+BEGIN_SRC emacs-lisp :results none
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil 'noerror)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://raw.github.com/dimitri/el-get/master/el-get-install.el")
    (goto-char (point-max))
    (eval-print-last-sexp)))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
(el-get 'sync)

#+END_SRC
That is technically all you need in order to get things up and running.

********* add non elpa packages from git
If I find a new package I want, whether it's on github, elpa, or otherwise, I first check if the package info already exists in el-get's huge list of recipes, or I write it up myself. As an example, install an elpa package is as simple as:

#+BEGIN_SRC emacs-lisp
(:name rainbow-mode :type elpa)
#+END_SRC

How about a git repository? In that case it's just:

#+BEGIN_SRC emacs-lisp
(:name scala-mode :type git :url "http://github.com/scala/scala-dist.git")

;Or a shortened github version:

(:name scala-mode :type github :pkgname "scala/scala-dist.git")

#+END_SRC


#+BEGIN_SRC emacs-lisp :results none

#+END_SRC
******** general
********* Emacs 24 Package System



Emacs package system lets you auto-update and manage emacs packages. It
lets you easily see packages available, update to latest version,
install/remove packages. So you don't have to manually track what's
installed, each package's home page, whether there's new version, etc.
It is bundled with emacs 24.
([[http://ergoemacs.org/emacs/emacs24_features.html][New Features in
Emacs 24]])

 Listing Available Packages

Call
 package-list-packages.
 It'll list available packages, like this:

 [[macsen_files/emacs_packages_elpa_screenshot.png]]
 Install Packages

This list is shown in package-menu-mode. In this mode, here's the most
useful keys:

-  Enter Describe the package under cursor. (describe-package)
-  i mark for installation. (package-menu-mark-install)
-  u unmark. (package-menu-mark-unmark)
-  d mark for deletion (removal of a installed package).
   (package-menu-mark-delete)
-  x for "execute" (start install/uninstall of marked items).
   (package-menu-execute)
-  r refresh the list from server. (package-menu-refresh)

(For complete list of keys, call describe-mode Ctrl+hm)

So, for example, i want to install the clojure-mode. I type i to mark
it, x to run install. Then, i got the following files in my dir, all
automatically byte-compiled and loaded.

 ~/.emacs.d/elpa/clojure-mode-1.7.1:
 clojure-mode-autoloads.el
 clojure-mode-pkg.el
 clojure-mode-pkg.elc
 clojure-mode.el
 clojure-mode.elc

and now i can call clojure-mode, and it works right there! (no need to
restart, but for some packages, you may need to turn it on.)

 Installed Packages Location

New packages are installed at ~/.emacs.d/elpa/.

 Packages Repositories

The source of the packages are from package servers. There are several.

-  [[http://elpa.gnu.org/][http://elpa.gnu.org/]] Default. Official GNU
   Emacs package repository. This repository contains the minimal set,
   and are FSF signed.
-  [[http://tromey.com/elpa/][http://tromey.com/elpa/]] ELPA (being
   phased out as of 2012-07-03).
-  [[http://marmalade-repo.org/][http://marmalade-repo.org/]] Marmalade.
   More extensive number of packages. But has some maintenance problems.
-  [[http://melpa.milkbox.net/][http://melpa.milkbox.net/]] MELPA. As of
   2012-10-18, MELPA has most packages, and updated daily.

To add it, put the following in your emacs init file:

 (when (>= emacs-major-version 24) (require 'package)
(package-initialize) (add-to-list 'package-archives'("melpa" .
"http://melpa.milkbox.net/packages/") t) )

Note: the emacs package system, called ELPA (aka package.el), is started
and written by
[[https://plus.google.com/118038589019918324505/posts][Tom Tromey]].
Marmalade is written by
[[https://plus.google.com/116776358422263344346/posts][Nathan
Weizenbaum]]. MELPA is written by [[http://milkbox.net/][Donald Ephraim
Curtis]] (aka milkypostman) Thank you guys.

 Helpful Commands and Variables

New variable "package-enable-at-startup". By default, this is t (true).

New variable "package-load-list". This determines which packages should
be loaded at start-up.

Call describe-function or describe-variable for details.

********* update ELPA packages						:Fav:
every time you do a elpa install (list packages) it checks for undated plugins
you can manually update with 'U'  followed by 'x' to update all
********* Automatically Loading Files from within emacs

If you want emacs to load the file when it starts, put the file in the dir ~/.emacs.d/, then put the following in your emacs init file:
#+BEGIN_SRC emacs-lisp
;; Tell emacs where is your personal elisp lib dir
;; this is default dir for extra packages
(add-to-list 'load-path "~/.emacs.d/")

;; load the packaged named xyz.
(load "xyz") ;; best not to include the ending .el or .elc

#+END_SRC

Auto-Activation of Mode When Opening File
This is usually setup by the package, but not always. Here's the basics:
 ;; setup files ending in ".js" to open in js2-mode
 (add-to-list 'auto-mode-alist'("\\.js\\'" . js2-mode))c
********* disable elpa check on startup
add this to config
#+BEGIN_SRC emacs-lisp :results none
;; package init not needed, since it is done anyway in emacs 24 after reading the init
;; but we have to load the list of available packages

(setq package-enable-at-startup nil)
#+END_SRC 
******** plugins
********* Elpa
********** to uprade all packages
issue this:
M-x package-list-packages <RET> U x y <RET>
********* Company
********** intro

Once installed, enable company-mode with M-x company-mode

To use company-mode in all buffers, add the following line to your init file:

#+BEGIN_SRC sh
(add-hook 'after-init-hook 'global-company-mode)
#+END_SRC


Completion will start automatically after you type a few letters.

Use M-n, M-p, <tab> and <return> to complete.

Search through the completions with:

C-s, C-r and C-o.

Type M-x company-complete to initiate completion manually. Bind this command to a key combination of your choice.

When the completion candidates are shown, press <f1> to display the documentation for the selected candidate, or C-w to see its source. Not all back-ends support this.

For more information, type M-x describe-function RET company-mode.

To customize other aspects of its behavior, type M-x customize-group RET company.
	
********** add/remove backnends

To see or change the list of enabled back-ends, type M-x customize-variable RET company-backends. Also see its description for information on writing a back-end.
For information on specific back-ends, also check out the comments inside the respective files.

********* stripe-buffer mode
Use different background colors for even and odd lines. With the help of library hl-line-mode yet another color can be used for the current line.

add this to your .emacs:

#+BEGIN_SRC emacs-lisp
;;stripe-buffer

(require 'stripe-buffer)
(add-hook 'dired-mode-hook 'turn-on-stripe-buffer-mode)
;get a horizontal line instead of a cursor. It uses the stripe-hl-line face, which you might wish to customize.
(add-hook 'dired-mode-hook 'stripe-listify-buffer)
;add to org mode tables
(add-hook 'org-mode-hook 'turn-on-stripe-table-mode)
#+END_SRC iDO mode
********** jump to dired from ido
use C-j to jump into dired mode when within ido
********* Projectile
********** ignore file
Currently git, mercurial and bazaar repos are considered projects by default. If you want to mark a folder manually as a project just create an empty .projectile file in it

add this to relevant .el file:
;projectile
(projectile-global-mode)

ignoring files

If you'd like to instruct Projectile to ignore certain files in a project, when indexing it you can do so in the .projectile file. Here's an example for a typical Rails application:

/log
/tmp
/vendor
/public/uploads

This would ignore the folders only at the root of the project. Projectile also supports relative pathname ignores:
tmp
.rb
.yml

********** helm integration
Projectile can be integrated with Helm via helm-c-source-projectile source (available in helm-projectile.el). There is also an example function for calling Helm with the Projectile file source. You can call it like this:

M-x helm-projectile

or even better - bind it to a keybinding like this:

(global-set-key (kbd "C-c h") 'helm-projectile)
********** model
********* workgroups
create and save a winodws state (not buffers/session)
-first issue wg-create-workgroup, give it a name (not sure why this step is needed)
-then when you have you buffers etc setup issue wg-save

********* minimap

********** define a function to toggle on/off and bindkey

use this function (stick it in your config file)
 (defun minimap-toggle ()
 "Toggle minimap for current buffer."
 (interactive)
 (if (not (boundp 'minimap-bufname))
 (setf minimap-bufname nil))
 (if (null minimap-bufname)
 (progn (minimap-create)
 (set-frame-width (selected-frame) 100))
 (progn (minimap-kill)
 (set-frame-width (selected-frame) 80))))
 
 I have this set to <f7>:
 (global-set-key (kbd "<f7>") 'minimap-toggle)

********* YASnippet
********** install and configure Yasnippet
The best way to install is through the emacs package manager, if not you need to initialize yas/root-directory. 

#+BEGIN_SRC emacs-lisp
(require 'yasnippet)
(setq yas-snippet-dirs
      '("~/.emacs.d/snippets/"            ;; personal snippets
	"~/.emacs.d/elpa/yasnippet-20130218.2229/snippets"
        ))
(yas-global-mode 1)
#+END_SRC

!note!-the yas-snippet-dirs option is used to specify where the directories are located.

********** Quickly finding snippets

There are some ways you can quickly find a snippet file:

#+BEGIN_SRC emacs-lisp :results none
M-x yas-new-snippet
#+END_SRC
Prompts you for a snippet name, then tries to guess a suitable directory to store it, prompting you for creation if it does not exist. Finally, places you in a new buffer set to snippet-mode so you can write your snippet.

#+BEGIN_SRC emacs-lisp :results none
M-x yas-visit-snippet-file
#+END_SRC

Prompts you for possible snippet expansions like yas-insert-snippet, but instead of expanding it, takes you directly to the snippet definition's file, if it exists.

********** Define custom Templates

make sure the in you yas config ([[install%20and%20configure%20Yasnippet][config]])  the local location for the user snippets are correct (inlcuding top folder)
then create files like these there

#+BEGIN_SRC emacs-lisp
# -- mode: snippet --
# name:cb_bsh
# key: cbb
# --

test$1
test$2
etc
#+END_SRC

********** Expand Whole hyphenated-word as Input

in YASNippet, you can define your own templates. For example:
 bsnp
 
 (buffer-substring-no-properties START END)
 But sometimes your word contains a hyphen, but upon expansion, it uses
only part of the word as input. For example, you want:
 buffer-substring
 
 (buffer-substring START END)
 But you get:
 buffer-substring
 
 buffer-(substring STRING FROM &optional TO)
 How to fix this?
 Put the following in your init file:
 ;; 2011-07-29 yasnippet. Make the "yas/minor-mode"'s expansion behavior
to take input word including hyphen.
 (setq yas/key-syntaxes '("w " "w ." "\^")) ; default is'("w" "w "
"w ." "\^") as of 2011-07-29
********** escape special characters
Arbitrary text can be included as the content of a template. They are usually interpreted as plain text, except

#+BEGIN_EXAMPLE
$ and ==. 

You need to use \` to escape them: \$ and \.  
#+END_EXAMPLE
The \` itself may also needed to be escaped as \\ sometimes.
********** Tab stop fields
for more info look here:
http://capitaomorte.github.io/yasnippet/snippet-development.html

Tab stops are fields that you can navigate back and forth by TAB and S-TAB. They are written by `$` followed with a number.
`$0` has the special meaning of the exit point of a snippet. That is the last place to go when youve traveled all the fields.
Here is a typical example:

#+BEGIN_SRC emacs-lisp :results none
<div$1>
    $0
</div>
#+END_SRC

********** using yasnippets with R

since R uses $ in syntax, You need to use backslash to escape the $:
₆In example₆ 

#+BEGIN_SRC R
$1\$$2
#+END_SRC

or

#+BEGIN_SRC sh
${1:DATA}\$${2:VAR}
#+END_SRC

********* evil
********* undotree
********** save undo history and persist between session
make sure you have latest emacs/undotree plugin and then add this to your rc

#+BEGIN_SRC emacs-lisp :results none
;automatically save and restore undo-tree history along with buffer (disabled by default)
(global-undo-tree-mode 1)

(setq undo-tree-auto-save-history t)
(setq undo-tree-history-directory-alist
      `(("." . ,(concat user-emacs-directory "undo"))))
#+END_SRC

********* bm.el

BM.EL
 bm.el provides a visible, buffer local bookmark, and the ability to
jump forward and backward between the bookmarks. The author's reason for
creating this package was:
 I missed the bookmarks from M$ Visual Studio in GNU Emacs. I think they
provide an easy way to navigate in a buffer.
 This package supports persistent bookmarks (both across buffer kills
and emacs sessions), annotations, and viewing a list of bookmarks for
the current buffer. A snippet from my .emacs file is below. My settings
are based on the description provided within the package.
 (setq bm-restore-repository-on-load t)
 (require 'bm)
 (global-set-key (kbd "<M-f2>") 'bm-toggle)
 (global-set-key (kbd "<f2>") 'bm-next)
 (global-set-key (kbd "<S-f2>") 'bm-previous)
 
 ;; make bookmarks persistent as default
 (setq-default bm-buffer-persistence t)
 
 ;; Loading the repository from file when on start up.
 (add-hook' after-init-hook 'bm-repository-load)
 
 ;; Restoring bookmarks when on file find.
 (add-hook 'find-file-hooks 'bm-buffer-restore)
 
 ;; Saving bookmark data on killing a buffer
 (add-hook 'kill-buffer-hook 'bm-buffer-save)
 
 ;; Saving the repository to file when on exit.
 ;; kill-buffer-hook is not called when emacs is killed, so we
 ;; must save all bookmarks first.
 (add-hook 'kill-emacs-hook'(lambda nil
 (bm-buffer-save-all)
 (bm-repository-save)))
 You can customise the colours by using M-x customize-group bm and
changeing the defaults.
 One other function that should be useful is M-x bm-show and M-x
bm-show-all; both show all the bookmarks set in the current buffer and
in all buffers respectively. If you read the commentary of the elisp
package, you'd see options to make the bookmarks persistent, annotate
them, controlling the size of the bookmarks file etc.

********* auto Complete
********** add dictnionary per mode/file type

You can use other dictionaries for every major-modes and extensions. A dictionary will be loaded from a directory specified with ac-dictionary-directories which is !where the dict folder of AC is installed!, IE

#+BEGIN_SRC emacs-lisp
(add-to-list 'ac-dictionary-directories "/home/zeltak/.emacs.d/elpa/auto-complete-20130330.1836/dict")
#+END_SRC

A dictionary named 'org-mode' for specific major-mode and a dictionary named 'txt' for specific extension will be stored in the directory.

For instance, you complete in a buffer named ~a.cpp~ with dictionary completion, following the setting above

~/.emacs.d/ac-dict/c++-mode

and

~/.emacs.d/ac-dict/cpp will be loaded as dictionary file.

You can edit the dictionary files and make a new one. In addition, you can add a new dictionary file to a directory that has same configuration.

As same as user defined dictionary, after editing and adding dictionary, you should do M-x ac-clear-dictionary-cache to apply changes.
********** add dictnionary for all modes
you can add words into a config file to appear in all buffer/files in the autocomplete suggestions with code like this in your .emacs file
#+BEGIN_SRC emacs-lisp
(setq ac-user-dictionary '(
"ITEM1"
"ITEM2"
))
#+END_SRC

where each word is in a seperate line within ""
********* ido
********** TIPS
to avoid deleting folders from the path one by one you can use C-e to edit the path ido-find-file is currently in.
********** use ido for own completions
you can use ido-completing-read for your own cmds. It's bundled with emacs 24 at least:

`(ido-completing-read "Replace this:" youList )`

In example 

#+BEGIN_SRC emacs-lisp
(defun z-open-file-fast (openCode)
  "Prompt to open a file from a pre-defined set."
  (interactive
   (list (ido-completing-read "Open:" (mapcar (lambda (x) (car x)) xah-filelist)))
   )
  (find-file (cdr (assoc openCode xah-filelist)) ) )

(global-set-key (kbd "M-[") 'z-open-file-fast)

#+END_SRC

********* multiple-cursors
When you have an active region that spans multiple lines, the following will add a cursor to each line:

(global-set-key (kbd "C-S-c C-S-c") 'mc/edit-lines)

When you want to add multiple cursors not based on continuous lines, but based on keywords in the buffer, use:

(global-set-key (kbd "C->") 'mc/mark-next-like-this)
(global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
(global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this) 

********* Bookmark+
********** bookmark to a specifc position in a file
stand in the line/position in the file you want to bookmark and then issue 
?C-x p m? and enter the name desired 
********** important keys
mark file  ?m?
rename  ?r? (will prompt for name followd by location, press ENTER to ignore changed location)
sort by name ?s-n?
********** create a sequence bookmark (multiple bookmarks launched from 1)
mark current bookmarks in bk+ with 'm' then use the menu item 'new sequence bookmark from marked' to create a special bookmark that launches all marked bookmakred in succsion. give it a name and your finished
********** higlighting
to higlight a bookmark first bookmark the position you want (C-x pm)
then issue ( C-x p h ) to bring the higlight menu
 
********** bookmark a Region
You can bookmark a region of text, not just a position.When you jump to a bookmark that records a region, the region is
activated. to do this select a region and them add the bookmark as ususal.
********** bookmark multiple files at once (using dired)
start a dired+ session
mark the files you want with 'm'
add then as bookmarks with M-b
********** tags
*********** ask for tag each time you save a bookmark
add this to your config
#+BEGIN_SRC emacs-lisp :results none
;ask for tags when saving a bookmark
(setq bmkp-prompt-for-tags-flag t)
#+END_SRC
*********** tagging in list view
see the hotkeys in config for personal tagging keys
$Note-when tagging one needs to enter tag> ENTER then ENTER again with an empty prompt to save the tag$ 
********* Hippie
********** add own expansion
If hippie-expand fails to find any satisfactory expansion, you may want to add a new one by using function `inverse-add-global-abbrev. The following should probably be the last function in `hippie-expand-try-functions-list:
#+BEGIN_SRC sh

    (defun my-try-add-expansion (old)
      "Add a new global abbrev"
      (he-init-string (he-dabbrev-beg) (point))
      (or (inverse-add-global-abbrev 1)
	  (he-reset-string)))

#+END_SRC
********* Auctex
********** make auctex load on startup when installed through elmpa
Instead of loading nonexistent auctex.el do
#+BEGIN_SRC emacs-lisp :results none
(require 'tex)
#+END_SRC
********* Helm
********** intro 
*********** $start here$ 
!IMPORTANT! Please remember that, when you use Helm, @you never TAB to complete prefixes@
like vanilla or other packages like Ido and its related packages. In Helm, when you type something, candidates get updated automatically. In vanilla Emacs, you have to TAB to get a list of candidate. This is a great feature from Helm, not a miss of feature. You have to forget the mentally of TABBING to get candidates. If you want quick completion of search patterns in Helm prompt, you always have hippie-expand to replace the TAB behaviour,

When you execute a Helm command, you enter a Helm session. A Helm session is a dedicated state to working with Helm features; while in a Helm session, a dedicated Helm buffer is always opened. When you quit a Helm session, a Helm buffer is closed. In Helm, you basically need to remember the 3 commands:

Access to action menu with TAB. An action is a command to run on marked candidates (one or more) and quit current Helm session; an action menu is a text-based menu that lists actions you can take. For example, Find File (open file), Find File in Dired, Grep File…
C-z executes helm-execute-persistent-action; a persistent action is an action that you use in a Helm session without quitting the session.
In some Helm session, such as helm-find-files or helm-mini, you can select more than one candidates and execute actions on them, such as grep or open.

*********** base completion
Completion with Helm is very different with the usual Emacs completion:
You type something:

Instead of TAB to expand the common part until you find your candidates, in Helm, you type a parts of the candidate you want to search, separated by spaces. In Helm, these strings are called patterns. Patterns can also be regexps.
Helm will try to search and sort according to highest match, from top to bottom. The best match is at the top, so you can press RET and select it.
You can navigate the buffer with C-n and C-p or <up> and <down> to move up/down, C-v and M-v to move to next/previous pages, and M-< and M-> to move to top and bottom of the Helm buffer.
You can mark candidates with C-SPC; this is useful when you need to perform an action on many candidates of your choice. M-a to select all.
You can insert marked candidates into current buffer with C-c C-i. This is useful when you narrow to a list of candidates, i.e. files, then you want to save such candidates.
If you find the current horizontal Helm window is small, you can always switch it to vertical window with C-t. Running C-t again returns the Helm window back to horizontal and so on.
	   
*********** base keys 	   
~TAB~ shows menu of launch options
select up/donn etc with common ~up/down/enter~ 
~C-z~ same as tab for select action (but this is persistant, that is helm wont close)
~C-SPACE~ mark canidadtes 
~Alt-a~ mark all
You can insert marked candidates into current buffer with ~C-c C-I~
~C-t~ cycle through helm view modes
~C-C ?~ get help on helm  	    
~left/righ~ move between helm groups in helm view 
********** config  
********** find in files (C-x f)
use:
`helm-for-files`
********** helm org integration
*********** searh only org headers (top level) with helm
use:

'Helm-org-headline'
********** helm colors
used to see colors and faces currently in system, use:

#+BEGIN_EXAMPLE
helm-colors
#+END_EXAMPLE

Key binding: n <prefix> c (prefix is C-x c by default, or C-c h if set).

If you want to quickly view and copy hexadecimal values of colors, helm-color provides such features. But, helm-color is beyond a mere color picker. The real usage for helm-color is for face customization: the command list ALL available faces, with a preview of each face in the same row. This makes theme customization really quick because you can quickly view a face with its color. Because the way Helm work, you can look at a group of faces together to have a global view if the colors work well with each other.

helm-color contains two groups, with actions in each:

Colors:
Key	Action
[f1] or C-c N	Copy Name
 	Copy color name into kill-ring
[f2] or C-c R	Copy RGB
 	Copy hex value into kill-ring
[f3] or C-c n	Insert Name
 	Insert color name into current buffer
[f4] or C-c r	Insert RGB
 	Insert hex value into current buffer

Customize Face:
Key	Action
[f1]	Customize
 	Open Customization window
[f2]	Copy Name
 	Copy face name

********** searching/mathcing
*********** search with 2 search terms    
helm has out of order matching, with regular expression. That's right, you can enter every search pattern as regexp!
First, I enter main.c, and I got lots of candidates. Then, I only want the main.c inside x86 directory, so I type x86. The whole pattern is:
#+BEGIN_EXAMPLE
main.c x86 
#+END_EXAMPLE
and Helm returns the correct candidate: arch/x86/boot/main.c.
********** helm mini
*********** helm-mini comprises of multiple sources:

`Current opened` buffers, under the header Buffers.
`Recently opened` files, under the header Recentf.
`create a new buffer` by pressing RET, under the header Create Buffer.

You can move back and forth between the groups by using ~<left> // <right>~ arrow keys. Or you can just scroll down/up with C-v and M-v.

*********** filter out buffers by major mode using the pattern *<major-mode>.
For example,

#+BEGIN_EXAMPLE
*dired
#+END_EXAMPLE

*********** narrows to only Dired buffers.

You can also `filter out` buffers that belong to a major mode by adding `!` to the pattern. For example,
#+BEGIN_EXAMPLE
*!dired
#+END_EXAMPLE
select all buffers that are not in Dired mode.

*********** You can also select buffers in a specific directory by using the pattern `/directory`.
For example,
#+BEGIN_EXAMPLE
/.emacs.d/
#+END_EXAMPLE

narrows to buffers that are only inside .emacs.d. Add ! before the pattern for reverse version. For example, !/.emacs.d/ narrows to buffers not in .emacs.d.

*********** narrow to buffers that contains a regexp in their contents
by appending `@` before the search pattern. For example, you can select buffers that only contain the string "test":

#+BEGIN_EXAMPLE
@test
#+END_EXAMPLE

*********** meaning of colors and prefixes for buffers:
Remote buffers are prefixed with '@'.
Red => Buffer have its file modified on disk by an external process.
Indianred2 => Buffer exists but its file have been deleted.
Orange => Buffer is modified and its file not saved to disk.
Italic => A non-file buffer.
$Note$-Some Emacs themes change the colors. You should check the corresponding colour in your color themes.

*********** Example mini helm narrow searches

If I enter in pattern prompt: *lisp ^helm @moc, Helm will narrow down the list by selecting only buffers that are in lisp mode, start by helm and match "moc" in their contents.
If I want to specify more than one major-mode, separate them with ,, e.g *!lisp,!sh,!fun will list all buffers but the ones in lisp-mode, sh-mode and fundamental-mode.
If I enter in pattern prompt: *lisp ^helm moc. Notice there is no @ this time helm will look for lisp mode buffers starting by "helm" and have "moc" in their name.
If I enter in pattern prompt: *!lisp !helm Helm will narrow down to buffers that are not in "lisp" mode and that do not match "helm".
If I enter in pattern prompt: /helm/ w3 Helm will narrow down buffers that are in any "helm" sub-directory and matching w3.
	    
********** helm find files 
*********** base 
helm-find-files is file navigation on steroid:

helm-find-files can fuzzy match candidates in current directory. e.g "fob" or "fbr" will complete "foobar".

You can also execute persistent action, which is bound to C-z (by default) or TAB if you changed the default configuration (to have TAB be persistant) to narrow the current highlighting candidate

pressing  C-z or TAB again allows to  view content of the buffer (preview)

You can scroll the other buffer up/down by M-<next> and M-<prior>.

you can ~C-j~  to narrow to the highlighting candidate
and ~C-j~ again to view the content of other buffer. C-l to go back.

*********** quick nav 
left take you back
right enters a folder 
Enter-opens the file or the folder in dired

Enter ~/ at end of pattern to quickly reach home directory.
Enter / at end of pattern to quickly reach root of your file system.
Enter ./ at end of pattern to quickly reach `default-directory' (initial start of session). If you are in `default-directory' move cursor on top.
*********** go up one directory level with ~C-l~
You can also go up one directory level with ~C-l~

$Note$ if you use C-l, Helm goes up one level and the cursor is on the directory you've just got out. If you want to go up and have the cursors on the parent directory, in Helm prompt, enter ../.

*********** File and directory histories
With prefix argument before running helm-find-files, Helm displays a list of visited directories. Select one at point transfer helm-find-files to that directory and you can start navigating there.

During a helm-find-files session, you can get a list of visited files and directories with

~C-c h~

From there, the default action is RET to open the file/directory at point, or continue with helm-find-files starting at that file/directory.

You can use M-p and M-n to move back and forth between previously visited directory.	    
*********** create a directory/file
enter a new name that does not exist in the current directory and append / at the end. After you created a directory, Helm continues in that directory.

To create a new file, enter a name and select the top row that has the symbol [?] next to it. By default, Helm always selects the first match in the directory.

*********** invoke grep on the current highlighting entry 
You can invoke grep on the current highlighting entry by C-s. C-u C-s to perform recursive grep.
*********** find file on point
helm-find-files can be used to find file paths on point : all you need to do is moving your point on a proper filepath, and Helm will reach the correct path for you, similar to the screenshot. Now, you have no longer to use a separate command for open file at point, but using the same C-x C-f. It's really convenient.

********** helm-man-woman (read manuals with org)
    Key binding:

    <prefix> m (prefix is C-x c by default, or C-c h if set).

    Description:

    With helm-man-woman, you can quickly jump to any man entry using Helm interface, either by typing in Helm prompt or if point is on a symbol, get a man page at point. To enable man page at point, add the following code:

    (add-to-list 'helm-sources-using-default-as-input 'helm-source-man-pages)
********** helm locate    
Key binding:

<prefix> l (prefix is C-x c by default, or C-c h if set).

Description:

Similar to helm-find, but use locate command and accepts search patterns according to locate input. Use helm-man-woman to read locate man page.

To use local database, execute helm-locate with prefix argument C-u. You can also customize Helm to use locate with arguments of your choice:

#+BEGIN_SRC emacs-lisp :results none
(setq helm-locate-command "locate %s -e -A --regex %s")
#+END_SRC

If you use helm-locate on a large directory and feel the update is too sluggish, you can always suspend the live updating with C-! and resume the live updating with C-! later.

To enable fuzzy matching in helm-locate, add this setting:

#+BEGIN_SRC emacs-lisp :results none
(setq helm-locate-fuzzy-match t)	    
#+END_SRC
********** helm-occur
Command: helm-occur

Key binding:

<prefix> M-s o (prefix is C-x c by default, or C-c h if set). Since this is a rather long binding, we should bind a more convenient key sequence:

(global-set-key (kbd "C-c h o") 'helm-occur)

Similar to occur, but using Helm interface. As you type, matching lines are updated immediately. This is convenient when you want to have a list of matches in the current buffer to jump back and forth. TAB to temporary move point to the location of current highlighting match. C-g cancels current Helm session and returns to the original location where helm-occur is invoked. RET on a match jumps to that match.

********** helm-apropos
<prefix> a (prefix is C-x c by default, or C-c h if set).

Pre-configured helm to describe commands, functions, variables and faces - all in one command!. It is similar to C-h a which runs apropos-command, but interactive includes more than just commands. helm-apropos comprises of 5 sources:

Commands: Lists all available commands.
Fucntion: Lists all available functions.
Classes: Lists all classes created by defclass. See Building Classes.
Generic Functions: Lists all functions created by defmethod. See Writing Methods
Variables: Lists all available variables.
Faces: Lists all available faces.
Helm attributes: Lists all attributes that you can use to build a Helm source. Useful if you want to write extension with Helm.
To enable fuzzy matching, add this setting:

(setq helm-apropos-function-list t)
********** helm-info-*

Key binding:

<prefix> h <key> (prefix is C-x c by default, or C-c h if set); <key>, by defaults, is one of g, i or r:

So, the prefix for info commands is <prefix> h. You can think of h as stands for help and <key> is one of the info topic to make it easier to remember and recall.

helm offers a wide ranges of info commands for various topics. M-x helm info to see these commands, i.e. helm-info-as, helm-info-gdb… You can search for info nodes easily with Helm interface and TAB on an entry to view. M-<next> moves to the next page, M-<prior> moves to the previous page in the other buffer.

You can have more helm-info- commands, such as:

helm-info-gdb.
helm-info-find.
helm-info-elisp.

Use M-x helm-info to see the list of helm-info- commands using the default info prefix: <prefix> h or key bindings of your choice.

********** helm-resume

Key binding:

<prefix> b (prefix is C-x c by default, or C-c h if set).

Description:

This command allows you to resume the previous Helm session, along with your previous patterns in the prompt. For example, if your last helm session was helm-ff-run-grep and you entered patterns in Helm prompt, helm-resume resumes that session along with your previous input.

With prefix argument, helm-resume allows you to choose among all existing Helm buffers. helm-mini or helm-buffer-list does not show existing Helm buffers; they ignore it by default; but if you run ibuffer, you will see a list of Helm buffers visible there. Don't kill them or you won't be able to resume.

This is really convenient when you have complex input ,and preparation steps. For example, if you have multiple regexp patterns in your previous Helm session, then you don't have to type it again. Or in your previous Helm session, you have to travel to a deep directory, and helm-resume helps you to reuse your previous session without going through all the troubles again.
********** TODO helm-all-mark-rings

!check what is a mark ring//also check helm registers!

Key binding:

<prefix> C-c SPC (prefix is C-x c by default, or C-c h if set). This is a rather long key sequence, this command deserves a better binding, for example:

(global-set-key (kbd "C-h SPC") 'helm-all-mark-rings)
Description:

One handy command. It allows you to view the content of the both the local and global mark rings in a friendly interface, so you can always jump back to where you were. Without this command, if you want to view the mark rings, you have to run M-: and enter mark-ring or global-mark-ring to view their contents. And even so, Emacs only displays the bare content of the mark-ring and global-mark-ring lists, which is the line number and its buffer like this:

********** helm-top

  Key binding:

  <prefix> t (prefix is C-x c by default, or C-c h if set).

  Description:

  This command provides Helm interface for top program. You can interact with each process with the following actions:

  Key	Binding
  [f1]	kill (SIGTERM)
  [f2]	kill (SIGKILL)
  [f3]	kill (SIGINT)
  [f4]	kill (Choose signal)
  helm-top specific commands:

  Key	Binding
  C-c C-u	Refresh helm-top
  M-C	Sort by shell commands
  M-P	Sort by CPU usage
  M-U	Sort by user
  M-M	Sort by memory
  user and shell commands are sorted alphabetically.

********** helm-calcul-expression

Key binding:

<prefix> C-, (prefix is C-x c by default, or C-c h if set).

Description:

This commands provides a Helm interface for calc command

********* google-contacts

http://julien.danjou.info/projects/emacs-packages#google-contacts


Manual

The easiest way to use it is to load it from your .emacs:

#+BEGIN_SRC emacs-lisp :results none
(require 'google-contacts)
#+END_SRC


You can then use M-x google-contacts and type a query string.

Various key bindings are available. Here's a few:

#+BEGIN_EXAMPLE
    n or p to go the next or previous record;
    g to refresh the result, bypassing the cache;
    m to send an e-mail to a contact;
    s to make a new search;
    q to quit.
#+END_EXAMPLE

You can integrate directly Google Contacts into Gnus:

#+BEGIN_SRC emacs-lisp :results none
(require 'google-contacts-gnus)
#+END_SRC


Then you can use ; to go to a contact information while reading an e-mail.

You can integrate directly Google Contacts into message-mode;

#+BEGIN_SRC emacs-lisp :results none
(require 'google-contacts-message)
#+END_SRC
Then you can use TAB to go to complete e-mail addresses in the header fields.

********* edit sever 
in the config add config options
then in chrome in editable areas launch with edit with Emacs 
******* registers
******** basics

In emacs, we have a special clipboard with multiple places to store
things, each named by a single number or letter. We call these places
registers. Thus, you can save some text to register A, some other text
to register B, and later paste the contents of register A or B. The key
bindings (shortcuts) for this are good to remember:
 C-x r s R save region (selection) into register R
 C-x r i R insert the contents of register R
 So, to save the current region/selection in register 2, you would type:
C-x r s 2, and to insert the contents of that register later, you'd do
C-x r i 2. It's a really useful thing to add to your emacs muscle
memory.

******** launch a file through registers (vim like marks)

use emacs registers to store files which I use often. I would store
'~/.emacs' in a register:
 (set-register ?e (cons 'file "~/.emacs"))
 and open it with C-x r j e

******** viewing register contents

viewing register contents
 One obvious problem with registers is that for most people it's very
hard to remember what went into which register, if you use more than two
or three registers. There is M-x view-register, but that's only
marginally useful. It would be much nicer if we could get a list of all
registers in use and a preview of their contents.
 To do that, we can use the list-register command
 I use a key binding C-x r v for that, which somewhat logically follows
the other ones:
 C-x r vview registers
 in config:
 (require 'list-register)
 (global-set-key (kbd "C-x r v") 'list-register)

******** set marks in registry

Save current mark to register "l":
 C-x r <space> l
 Move to mark saved in register "l":
 C-x r j l

******* review/spelling
******** Spelling
********* How to have spell-checker turned on all the time (flyspell)
How to have spell-checker turned on?

Call flyspell-mode or flyspell-buffer. To have it always on, put the
following in your emacs init file:

(defun turn-spell-checking-on () "Turn flyspell-mode on."
(flyspell-mode 1) ) (add-hook 'text-mode-hook 'turn-spell-checking-on)

This is under the menu --Tools --Spell Checking---.

********* spell check word/buffer
To check a single work use M-$.

You can start checking the whole buffer with

'M-x ispell-buffer'
********* Spell check word/buffer/selection

to spell check a word use 'ispell-word' default is 'M-$' (> Meta-Shift-4)

to spell check a selection use a 

********* ispell keybinds when checking

'SPC'- Skip this word--continue to consider it incorrect, but don't change it here.

'i' - Insert this word in your private dictionary file so that Ispell will consider it correct from now on, even in future sessions.

'x'-Quit interactive spell checking and move point back to where it was when you started spell checking.
r new RET
    Replace the word (just this time) with new.

R new RET
    Replace the word with new, and do a query-replace so you can replace it elsewhere in the buffer if you wish.

digit- Replace the word (just this time) with one of the displayed near-misses. Each near-miss is listed with a digit; type that digit to select it.

a-Accept the incorrect word--treat it as correct, but only in this editing session.

A-Accept the incorrect word--treat it as correct, but only in this editing session and for this buffer.


u-Insert the lower-case version of this word in your private dictionary file.

m- Like i, but you can also specify dictionary completion information.

l word RET- Look in the dictionary for words that match word. These words become the new list of "near-misses"; you can select one of them as the replacement by typing a digit. You can use `' in word as a wildcard.

C-g
    Quit interactive spell checking. You can restart it again afterward with C-u M-$.

X
    Same as C-g.


q
    Quit interactive spell checking and kill the Ispell sub process.

C-l
    Refresh the screen.

C-z
    This key has its normal command meaning (suspend Emacs or iconify this frame).
    
******** convert html to org using pandoc

Org-mode:
 pandoc -s -S README -o example27.org
 pandoc -s -S FILE.html -o FILE.org

[[http://johnmacfarlane.net/pandoc/demo/example27.org][http://johnmacfarlane.net/pandoc/demo/example27.org]]
 Warning if you get an error open the html file in an editor and
save it with utf-8 encoding

******* save
******** save as 
use:
| bind | Actiopn |
| C-x  | C-w     |
|      |         |

as the gui save may have issues
******** save marked region
'write-region' 
will save the current marked region start end filename &optional append visit lockname mustbenew
This function writes the region delimited by start and end in the current buffer into the file specified by filename.  
******* sync
******** sync Emacs between laptop and work	
********* Main Emacs config is laptop.
 I sync between laptop and work this way:
I only pull (after first clone) Emacs config from github (using my work file:/~/bin/ugs.sh script)
in addition to that every big update I need to manually zip and upload the nested .git directories (₆In example₆ org,ESS etc) to the NAS (under software >> emacs_sync folder
********* tips
you may have to create a hist file if you get this warrning
#+BEGIN_SRC sh
mkdir -p  /home/zeltak/.cache/emacs/hist/
zeltak@zuni:~$ touch  /home/zeltak/.cache/emacs/hist/hist.txt
#+END_SRC
 	 
******* Search Text, FindReplace Text
******** regex
********* escape characters

Escape Regex Chars
 All these commands uses regex to search. So, if you simply want to
search plain words or phrases, and if your phrase contains any of regex
characters, you need to escape them. Here some commonly used regex
characters that you'll need to replace:
 [[macsen_files/Image_uAzmRVDZTNs1blt9dZ9E2g_0001.png]]

******** search
How to search text?

Press Ctrl+s (isearch-forward), then type your text. Emacs will
search as you type. To advance to the next occurrence, press Ctrl+s
again. To go to previous occurrence, type Ctrl+r. To stop, press
Enter or arrow key to leave the cursor there. Or type Ctrl+g to
return to the spot before search was started.

This command is also under the menu Edit  Search.

To search for the word that is under cursor, type Ctrl+sCtrl+w.
This can save you some typing. Also, Ctrl+s twice will search your
last searched word.

******** search for current word
typing C-s (for isearch) followed by C-w which searches for the current word

******** search and replace
How to findreplace?

Press Alt+% (`query-replace`). Then, emacs will prompt you for the find string and replace string. Once emacs found a match, you can press
y to replace, n to skip, or ! to do all replacement without asking. To cancel further finding, press Ctrl+g.

If you made a mistake, you can cancel by pressing Ctrl+g. If you
want to revert the findreplace you did, you can call undo by pressing
Ctrl+ .

%Tip% to search and replace in all doc either go to start of doc or press ?C-x h? (will select all doc) and the issue replace

For regex replace and detail on issues of letter cases, see:
[[http://ergoemacs.org/emacs/emacs_find_replace.html][FindReplace with
Emacs]].

 [[macsen_files/emacs_menu_replace.png]]
 Replace commands are under the menu Edit  Replace

******** append a character at end/start of each line			:Fav:
Use 'replace-regexp' for this purpose, with the '$' regexp metacharacter that matches end-of-line or '^' for start of line.

IE: Go to the start of the buffer, and then do M-x replace-regexp, and answer $ then ~yourtext~ to the two prompts.

Or, in emacs-speak:
M-x replace-regexp RET $ RET ~yourtext~ RET
 
******** insert text at specific column position
      you can write a macro that use M-g TAB 

M-g TAB allows you to go to a specific column. You could write a macro using C-x ( then type all the keysequence you want using a tool like M-g TAB, even a regexp search, then stop recording the macro by pressing C-x ) then execute your macro by C-x e repeat your macro by C-x z zzzzz
 
******** How to findreplace for all files in a dir



How to findreplace for all files in a dir?

 1.

Type Ctrl+x
 and type
 dired
 2. type dir path (there is completion with tab)
 3. mark the files you want to work on (m to mark, u to unmark) in the
popup window
 4. then press Q or from the menu choose the "operate" menu and search
typeface
 5. it will ask the string to find and then ask for the string to
replace

For a detailed step-by-step tutorial,
see[[http://ergoemacs.org/emacs/find_replace_inter.html][Interactive
FindReplace String Patterns on Multiple Files]].

******** How to search the last searched string

How to search the last searched string?
 Type Ctrl+s Ctrl+s to search the same word searched last time.

******** How to search the string under cursor without typing it

How to search the string under cursor without typing it?
 Type Ctrl+s Ctrl+w to search the word under the cursor. You can
type Ctrl+w multiple times to expand the word selection.

******** How to highlight all occurrences of word in a files



How to highlight all occurrences of word in a file?

Call highlight-phrase, highlight-regexp,
highlight-lines-matching-regexp.

******* setting (lisp)
******** setting common variables at once (setq)

setq can set multiple variables at once. For example, in my .emacs file
on OS X I have:
 (setq mac-command-modifier 'meta
 mac-option-modifier 'super)
 
******* text tricks
******** How to add a prefix to every line? (such as # or //

How to add a prefix to every line? (such as # or //)
 Mark Ctrl+Space the beginning of first line and move cursor to the
beginning of the last line, then type Ctrl+x r t (string-rectangle),
then type what you want to insert. This command can be used to insert a
vertical column of string across mulitple lines at any column position,
not just at the beginning of lines.

******** How to delete the first few n chars of every line

Mark Ctrl+Space the beginning of first line and move cursor to the
last line, and move it to the right n chars. Then type Ctrl+x r k
(kill-rectangle). This command can be used to delete any rectangular
block of text, not just at the beginning of lines.

******** Working with Lines



Emacs has a very useful command list-matching-lines. Try it. Call it
Alt+x, then, give a word. Emacs will list all lines of current file
containing that word.

You can click on any matched line in the output, then emacs will put
cursor at the position of the occurrence in your file.

There are also several other line processing commands for the current
buffer that i use often:

-  list-matching-lines (this is a alias to occur)
-  delete-matching-lines (this is a alias to flush-lines)
-  delete-non-matching-lines (this is a alias to keep-lines)
-  sort-lines
-  sort-numeric-fields
-  reverse-region
-  highlight-lines-matching-regexp

If you use them often, you can give them a key such as F8, or alias such
as "sl" for sort-lines. See:
[[http://ergoemacs.org/emacs/keyboard_shortcuts.html][How to Define
Keyboard Shortcuts]] 
[[http://ergoemacs.org/emacs/emacs_alias.html][Defining Alias to
Increase Productivity]].

 Delete Starts at Cursor Position or Text Selection

delete-matching-lines and delete-non-matching-lines starts at the line
your cursor is on.

Also, if you have a text selection, the deletion happens in the text
selection only.

 
 Letter Case Sensitivity

In all these commands, if your search word contains upper case letters,
then the search is automatically case sensitive. Otherwise, it is not
case sensitive.

If you want the cases to be case sensitive (what you typed exactly),
call toggle-case-fold-search.



How to sort lines?
 Call sort-lines. Call reverse-region to reverse order in region by
lines.
 To sort lines by a specific column, use sort-fields or
sort-numeric-fields. (fields? are separated by space or tabs. First
field is 1, not 0.)
 For example: Type ?Ctrl+u, then 2, then ?Alt+x sort-field .
This will sort the line by the 2nd column, and the fields are compared
as strings.

******** sorting
********* sorting lines
How to sort lines?
mark (V in evil mode) the region you want and issue sort-lines

?C-x? `Sort-lines`
you can call reverse-region to reverse order in region by lines.
To sort lines by a specific column, use 'sort-fields' or sort-numeric-fields. ("fields" are separated by space or tabs. First
field is 1, not 0.)

******** How to delete trailing white spaces in source code?

How to delete trailing white spaces in source code?
Call delete-trailing-whitespace does it to the whole buffer.
******** year increment

1. Eval the snippet below or if you have it in your config file (like I do) just call on it 

2. it will ask you which buffer the code you want to copy and change is: name the buffer at this stage

3. it will ask for a year in 2 digits (yy) for the max year from 2000
%Tip-you can change 2000 in the snippet if needed)%

3.The resulting process will open a all-code buffer with the results

#+BEGIN_SRC emacs-lisp
(defun take-code-in-a-buffer-and-change-the-year-and-magic-happens (buffer max-year)
  (interactive "b\nsMax year (yy): ")
  (setq max-year (string-to-number max-year))
  (let ((year 2000)
        (newbuf (get-buffer-create "all code")))
    (let ((s (with-current-buffer buffer
               (buffer-substring (point-min) (point-max)))))
      (dotimes (n (1+ max-year))
        (with-current-buffer newbuf
          (goto-char (point-max))
          (insert "\n")
          (insert (replace-regexp-in-string (int-to-string year)
                                            (int-to-string (+ year n))
                                            s)))))
    (switch-to-buffer newbuf)))
#+END_SRC

also one can try sed:
 for i in $(seq 2000 2015); do sed 
 s/2000/$i/g myinput > userinput_$i ; done                                                    


******** create a horizonatl/vertical list
Press and hold Enter to create several empty lines.
Now, select those empty lines.
Call ~rectangle-number-line~
it'll insert verticak numbers.
Now to create horizontal numbers, just select the region, and call ~fill-region~, to compact them.
******** replace all  signs with empty space but EXCLUDE org headlines
paste the elisp code on the first line and eval it.

#+BEGIN_SRC emacs-lisp :results none
(while (search-forward "*" nil t) (when (save-match-data (not(org-at-heading-p))) (replace-match "")))
#+END_SRC

#+END_EXAMPLE
******* view
******** How to make spaces and tabs visible?

Call whitespace-mode, available in emacs 23.

******** colors

Colors
 To view the many colors and their hexadecimal values in RGB model, type
Alt+x list-colors-display. This is very useful when you work in
HTML.
 emacs showing colors
 [[macsen_files/Image_smb9wkhN26y70CiVCOfIXQ_0001.png]]

******** Displaying Line Numbers and Column Number

How to show line numbers?
 You can have line numbers displayed in the left vertical margin. To
turn it on, call linum-mode. To have it on by default, put the following
in your emacs init file:
 (global-linum-mode 1) ; display line numbers in margin. Emacs 23 only.
 How to show the cursor's column position?
 Call column-number-mode. After you turned it on, the cursor's line
position and column position will show in the status bar, like this:
(166,3). The first is line number, the second is position from the
beginning of line.
 To always have it on, put the following code in your emacs init file.
 (column-number-mode 1)

******** How to have lines soft wrapped at word boundary



How to have lines soft wrapped at word boundary?

Pull the menu Options  Line Wrapping in this Buffer, or call
visual-line-mode.

 [[macsen_files/emacs23_word_wrap.png]]

To toggle globally, call global-visual-line-mode. To set it on or off
permanently, use:

 (global-visual-line-mode 1) ; 1 for on, 0 for off.

******** How to set the spacing between lines

How to set the spacing between lines?
 Put the following elisp code in your emacs init file for easy toggle.
 (defun toggle-line-spacing ()
 "Toggle line spacing between no extra space to extra half line
height."
 (interactive)
 (if (eq line-spacing nil)
 (setq-default line-spacing 0.5) ; add 0.5 height between lines
 (setq-default line-spacing nil) ; no extra heigh between lines
 )
 (redraw-display))
 This is useful for switching between reading source code and reading
novels.
 Note that the spacing height between lines also depends on font

******** wrap
********* disable wrap

How to make lines NOT wrap?
 Use the menu Options  Truncate Long Lines in this Buffer.
 Or
 call toggle-truncate-lines.

********* How to have lines soft wrapped at word boundary



How to have lines soft wrapped at word boundary?

Pull the menu --Options -- Line Wrapping in this Buffer---, or
call visual-line-mode.

 [[./distros_files/img/emacs23_word_wrap.png]]

To toggle globally, call global-visual-line-mode. To set it on or off
permanently, use:

 (global-visual-line-mode 1) ; 1 for on, 0 for off.

******* Read Only 
******** to make current file 'read only'
issue:
?C-x C-q?

M-x `read-only-mode`

or

M-x `toggle-read-only`
******** to mark a file permanently 'read only'
add this as the 'last' line of the file!

#+BEGIN_SRC emacs-lisp :results none
Local variables:
buffer-read-only: t
End:
#+END_SRC

******** read only by filename extension
another way is to set emacs to open some file read only by filename extension

₆In example₆:

#+BEGIN_SRC sh
add-to-list 'auto-mode-alist '("\\.txt\\'" . read-only-mode))﻿ 
#+END_SRC
******** Read only hook for orgmode (using viewer-mode)
add this to your config
#+BEGIN_SRC emacs-lisp :results none
(add-hook 'org-mode-hook (lambda () (view-mode 1)))
#+END_SRC
******** make portion of buffer readonly
you can make a portion of a buffer read-only using text properties. The code below defines two new commands make-region-read-only and make-region-read-write that affect the region between point and mark. Put the code in your .emacs file to make the commands available via Meta-x

#+BEGIN_SRC emacs-lisp :results none
(defun make-region-read-only (start end)
  (interactive "r")
  (let ((inhibit-read-only t))
    (put-text-property start end 'read-only t)))

(defun make-region-read-write (start end)
  (interactive "r")
  (let ((inhibit-read-only t))
    (put-text-property start end 'read-only nil)))
#+END_SRC 

******** `orgmode read only`
to make some org-sections read-only

$Note- you !MUST! tag the header :read_only: other wise it wont work$ 
use the following functions on the header (again after you tag it as read only)

#+BEGIN_SRC emacs-lisp :results none
(defun org-mark-readonly ()
(interactive)
(org-map-entries
(lambda ()
(let ((element (org-element-at-point))
(begin (org-element-property :begin element))
(end (org-element-property :end element)))
(add-text-properties begin (- end 1) '(read-only t
font-lock-face '(:background "#FFE3E3")))))
"read_only")
(message "Made readonly!"))
(defun org-remove-readonly ()
(interactive)
(org-map-entries
(lambda ()
(let ((element (org-element-at-point))
(begin (org-element-property :begin element))
(end (org-element-property :end element))
(inhibit-read-only t))
(remove-text-properties begin (- end 1) '(read-only t font-lock-face '(:background "yellow")))))
"read_only"))
(add-hook 'org-mode-hook 'org-mark-readonly)
#+END_SRC

******* Emacs web browser
To start the web browser, call 'eww'

How to open a new url: Just call eww again.

How to open a local HTML file: Call eww-open-file.

How to switch to a real browser: Call eww-browse-with-external-browser.

*** 'org-mode'
       :PROPERTIES:
       :ID:       be4759e1-2951-4c91-a155-056bc2a16d9f
       :END:
******* `Mobile org`
******** Setup in emacs
********* Setting up the staging area on the PC (Server)
The easiest way to create that directory is to use a free Dropbox.com account. When MobileOrg first connects to your Dropbox, it will create a directory MobileOrg inside the Dropbox. After the directory has been created, tell Emacs about it:

#+BEGIN_SRC emacs-lisp 
(setq org-mobile-directory "~/Dropbox/MobileOrg")
#+END_SRC

the mobile-org android app will put all the captured syncs in that folder under this file:

file:/home/zeltak/Dropbox/MobileOrg/mobileorg.org
!Note! above file may be empty ^^^^
!Note2! the captures disappears from the mobile app after sync and are transferred to the above file

the second step involves telling org-mode where to transfer the 'pulled' files to (after issues a org-mobile-pull) ,that is from the mobileorg.org file to the file defined here:

#+BEGIN_SRC sh
;; Set to file where pulled files will be stored
(setq org-mobile-inbox-for-pull "~/org/files/from-mobile.org")
#+END_SRC

the third thing to check is that the file(s) are defined (and put in the dir) as agenda files which would also be synced
in your emacs config check the relevant agenda section, In Example

#+BEGIN_SRC emacs-lisp :results none
;;For agenda files locations, each location you add within " "
(setq org-agenda-files '("~/org/files/agenda/"))
#+END_SRC

********* Pushing to MobileOrg

This operation:

'org-mobile-push'

(can be launched through gui menu as well) copies all files currently listed in either/or `org-agenda-files`  and `org-mobile-files`
!thats is! you can use one of them or both in your org-mobile config. 

#+BEGIN_SRC emacs-lisp :results none
;;For agenda files locations, each location you add within " "
(setq org-agenda-files '("~/org/files/agenda/"))

;;For mobile org files locations, each location you add within " "
(setq org-mobile-files '("~/org/files/mobileorg/"))
#+END_SRC

to the directory

`org-mobile-directory`.

By default this list contains all agenda files (as listed in `org-agenda-files`), but additional files can be included by customizing `org-mobile-files`.

File names will be staged with paths relative to org-directory, so all files should be inside this directory.
The push operation also creates a special Org file file:agendas.org with all custom agenda view defined by the user.
Finally, Org writes the file file:index.org, containing links to all other files.
MobileOrg first reads this file from the server, and then downloads all agendas and Org files listed in it. To speed up the download, MobileOrg will only read files whose checksums have changed.

********* Pulling from MobileOrg

When MobileOrg synchronizes with the server, it not only pulls the Org files for viewing. It also appends captured entries and pointers to flagged and changed entries to the file mobileorg.org on the server. Org has a pull operation that integrates this information into an inbox file and operates on the pointers to flagged entries. Here is how it works:

1. Org moves all entries found in `mobileorg.org`

file:/home/zeltak/Dropbox/MobileOrg/mobileorg.org

and appends them to the file pointed to by the variable `org-mobile-inbox-for-pull` Each captured entry and each editing event will be a top-level entry in the inbox file.

2.After moving the entries, Org will attempt to implement the changes made in MobileOrg. Some changes are applied directly and without user interaction. Examples are all changes to tags, TODO state, headline and body text that can be cleanly applied. Entries that have been flagged for further action will receive a tag :FLAGGED:, so that they can be easily found again. When there is a problem finding an entry or applying the change, the pointer entry will remain in the inbox and will be marked with an error message. You need to later resolve these issues by hand.

3.Org will then generate an agenda view with all flagged entries. The user should then go through these entries and do whatever actions are necessary. If a note has been stored while flagging an entry in MobileOrg, that note will be displayed in the echo area when the cursor is on the corresponding agenda line.

Pressing ? in that special agenda will display the full flagging note in another window and also push it onto the kill ring. So you could use ? z C-y C-c C-c to store that flagging note as a normal note in the entry. Pressing ? twice in succession will offer to remove the :FLAGGED: tag along with the recorded flagging note (which is stored in a property). In this way you indicate that the intended processing for this flagged entry is finished. 

If you are not able to process all flagged entries directly, you can always return to this agenda view2 using C-c a ?.
********* Automated push/pull
use this in your init file:

The code below will check if an org file that was saved is in the mobile agenda list and if it is the case it will set an idle timer to schedule a sync 30 seconds in the future. This will make it possible to do a chain of edits in several file, resulting in Emacs running push only once after it has been idle for the specified number of seconds.

#+BEGIN_SRC emacs-lisp :results none
(defvar org-mobile-push-timer nil
  "Timer that `org-mobile-push-timer' used to reschedule itself, or nil.")

(defun org-mobile-push-with-delay (secs)
  (when org-mobile-push-timer
    (cancel-timer org-mobile-push-timer))
  (setq org-mobile-push-timer
        (run-with-idle-timer
         ( 1 secs) nil 'org-mobile-push)))

(add-hook 'after-save-hook 
 (lambda () 
   (when (eq major-mode 'org-mode)
     (dolist (file (org-mobile-files-alist))
      (if (string= (file-truename (expand-file-name (car file)))
		   (file-truename (buffer-file-name)))
           (org-mobile-push-with-delay 30)))
   )))

(run-at-time "00:05" 86400 '(lambda () (org-mobile-push-with-delay 1))) ;; refreshes agenda file each day

#+END_SRC

******** Setup android
********* Initial Setup
1.make sure you finished the previous emacs setup on the pc
!Important NOTE If you are a Windows user, you will need to have md5sum.exe or sha1sum.exe in your system path before org-mobile-push will succeed!
%TIP:you can use MobileOrg from Locale or Tasker by looking under their Plugins sections. These will be available immediately after MobileOrg is installed%
%If this file does not exist when you try to sync, MobileOrg will attempt to create it%

********* setup backend and initial sync
When you first start MobileOrg you will be presented with a setup Wizard. You can use this wizard to set up any of the basic Synchronizer, but dropbox works best and is easy to setup.
@WARNING:make sure you have the dropbox app installed on your android system before this@

after you setup the backend configure the folder (Mobileorg, may be created if missing by app) and then sync for first time:
the files that were pushed form emacs-orgmode should appear on the phone.

%Tip-Notes are appended to the end of the mobileorg.org file%

********* Setting up Android Calendar Integration
MobileOrg can synchronize your TODO items that have a DEADLINE or SCHEDULE element to your Android calendar. This also allows you to synchronize your org tasks into your Google Calendar.
Set up

First, create a calendar in Google calendar that will hold these entries. You can do this at: Google Calendar
Visit the calendar settings section of the MobileOrg preferences

Choose the calendar you want to sync with. It is recommended you clear your database after setting this to make sure all of your org files are pulled to the device. MobileOrg will examine org files as they are synced to the device and any new or updated items will be added to the Calendar
******** Using Mobileorg
********* Where do captures go after a sync?
Notes are appended to the end of the file:mobileorg.org file on your 'dropbox/WebDAV/etc' server. 

If this file does not exist when you try to sync, MobileOrg will attempt to create it.

It is generally NOT recommended to reference mobileorg.org as a link from your index.org file.

When you get back to your desktop computer, you can refile your captured notes into your primary Org-mode files by following these steps:

1.In Emacs, initiate a pull by typing 'M-x org-mobile-pull' RET

2.The notes you captured in the 'MobileOrg' app will be appended to a file:

[[file:~/org/files/from-mobile.org]]

in your default org directory (variable org-directory). You may specify a different file and location by explicitly setting the variable 

#+BEGIN_EXAMPLE
org-mobile-inbox-for-pull
#+END_EXAMPLE

3.Refile your notes by switching to the from-mobile.org buffer, and using C-c C-w

4.!Note! that the changes you made to existing outline nodes will simply be automatically applied by the org-mobile-pull function. Those changes will only appear in from-mobile.org if they could not be applied (e.g., if the target Org-file changed so much that the context can no longer be located)

********* 'sync notes'
just add the notes you want to be synced to your agenda folder (copy manually)
the agenda folder is defined in the org config:
#+BEGIN_SRC sh
;;For agenda files locations, each location you add within " "
(setq org-agenda-files '("~/org/files/agenda/"))
#+END_SRC

******* startup
******** startup options
********* Initial visibility
Initial visibility

When Emacs first visits an Org file, the global state is set to OVERVIEW, i.e., only the top level headlines are visible1. This can be configured through the variable org-startup-folded, or on a per-file basis by adding one of the following lines anywhere in the buffer:

#+BEGIN_EXAMPLE
     #+STARTUP: overview
     #+STARTUP: content
     #+STARTUP: showall
     #+STARTUP: showeverything
#+END_EXAMPLE

The startup visibility options are ignored when the file is open for the first time during the agenda generation: if you want the agenda to honor the startup visibility, set org-agenda-inhibit-startup to nil.

Furthermore, any entries with a ‘VISIBILITY’ property (see Properties and Columns) will get their visibility adapted accordingly. Allowed values for this property are folded, children, content, and all.

C-u C-u <TAB>     (org-set-startup-visibility)
Switch back to the startup visibility of the buffer, i.e., whatever is requested by startup options and ‘VISIBILITY’ properties in individual entries.

******* BASE
******** Manual
To read the on-line documentation try:
?M-x org-info ?
******** Install
********* Downloading Org as an archive					:Fav:

You can download Org latest release from [[http://orgmode.org/][Org's website]] and simply extract them to where you want, in my case

file:/home/zeltak/.emacs.d/nonelpa/org

Also in first install make sure you set the load-path correctly in your .emacs:

#+BEGIN_SRC lisp
(add-to-list 'load-path "~/path/to/orgdir/lisp")
#+END_SRC

The downloaded archive contains contributed libraries that are not included in Emacs. If you want to use them, add the contrib directory to
your load-path:

#+BEGIN_SRC lisp
(add-to-list 'load-path "~/path/to/orgdir/contrib/lisp" t)
#+END_SRC

********* Using Emacs packaging system

Recent Emacs distributions include a packaging system which lets you
install Elisp libraries. You can install Org with M-x package-install
RET org. You need to do this in a session where no =.org= file has been
visited. Then, to make sure your Org configuration is taken into
account, initialize the package system with =(package-initialize)= in
your .emacs before setting any Org option. If you want to use Org's
package repository, check out the [[http://orgmode.org/elpa.html][Org ELPA page]].

********* Using Org's git repository
       

You can clone Org's repository and install Org like this:

#+BEGIN_EXAMPLE
cd ~/src/
git clone git://orgmode.org/org-mode.git
make autoloads
#+END_EXAMPLE

Note that in this case, =make autoloads= is mandatory: it defines Org's
version in org-version.el and Org's autoloads in org-loaddefs.el.

Remember to add the correct load-path as described in the method above.

You can also compile with =make=, generate the documentation with
=make doc=, create a local configuration with =make config= and install
Org with =make install=. Please run =make help= to get the list of
compilation/installation options.

For more detailed explanations on Org's build system, please check the
Org Build System page on
[[http://orgmode.org/worg/dev/org-build-system.html][Worg]].
******** `Update org from Git`

#+BEGIN_EXAMPLE 
cd ~/.emacs.d/src/org-mode/
git pull 
make autoloads
#+END_EXAMPLE

******** Basic setup
Here are a few things about basic setup that many people change.

org-directory
Where are my Org files typically located? Org acutally uses this variable only under rare circumstances, like when filing remember notes in an interactive way and prompting you for an Org file to put the note into.
org-agenda-files
Which files do I want to be checked for entries when compiling my agenda? Many people do not customize this one, but just use C-c [ and C-c ] to add or remove the current file, respectively.
org-startup-folded
When visiting an Org file, in what folding state do I first want to see it? Many use #+STARTUP options to set this on a per-file basis.
org-archive-location
When archiving an entry, where will it go?

******* archiving
******** base
use the following lines in your config to define where the archives go
#+BEGIN_SRC sh
(setq org-archive-location (concat org-directory "archive/%s_archive::"))
#+END_SRC

then to archive issue:
C-c C-x C-a     (org-archive-subtree-default)

Archive the current entry using the command specified in the variable org-archive-default-command
******* agenda and TODO
******** Agenda
********* sample custom agenda command
#+BEGIN_SRC emacs-lisp :results none
(setq org-agenda-custom-commands 
      '(("c" "Desk Work" tags-todo "computer" ;; (1) (2) (3) (4)
         ((org-agenda-files '("~/org/widgets.org" "~/org/clients.org")) ;; (5)
          (org-agenda-sorting-strategy '(priority-up effort-down))) ;; (6)
         ("~/computer.html")) ;; (7)
        ;; ...other commands here
        ))
#+END_SRC
where:

#+BEGIN_EXAMPLE
The first line in this custom command contains:
(1) the key to trigger the search ("c")
(2) a description of the search for the agenda dispatcher ("Desk Work")
(3) the type of search (todo items matching a tag)
(4) the tag to search for ("computer")
(5) set local options for this agenda command only. Any options you set here will not interfere with your global agenda settings. In this particular command, the files widgets.org and clients.org will be searched
(6) the agenda display will sort the todos first by priority (highest priority last), then by estimated effort (highest effort first)—regardless or your global org-agenda-sorting-strategy.
(7) specifies that this agenda view should be exported as HTML to "~/computer.html" when the agenda export function is called (C-c a e)        
#+END_EXAMPLE
********* comprehensive options
#+BEGIN_SRC emacs-lisp :results none
(setq org-agenda-custom-commands
           '(("x" agenda)
             ("y" agenda)
             ("w" todo "WAITING")
             ("W" todo-tree "WAITING")
             ("u" tags "+boss-urgent")
             ("v" tags-todo "+boss-urgent")
             ("U" tags-tree "+boss-urgent")
             ("f" occur-tree "\\<FIXME\\>")
             ("h" . "HOME+Name tags searches") ; description for "h" prefix
             ("hl" tags "+home+Lisa")
             ("hp" tags "+home+Peter")
             ("hk" tags "+home+Kim")))
#+END_SRC

The initial string in each entry defines the keys you have to press after the dispatcher command C-c a in order to access the command. Usually this will be just a single character, but if you have many similar commands, you can also define two-letter combinations where the first character is the same in several combinations and serves as a prefix key1. The second parameter is the search type, followed by the string or regular expression to be used for the matching. The example above will therefore define:

#+BEGIN_EXAMPLE
C-c a x
    as a global search for agenda entries planned2 this week/day.
C-c a y
    as a global search for agenda entries planned this week/day, but only those with an hour specification like [h]h:mm—think of them as appointments.
C-c a w
    as a global search for TODO entries with ‘WAITING’ as the TODO keyword
C-c a W
    as the same search, but only in the current buffer and displaying the results as a sparse tree
C-c a u
    as a global tags search for headlines marked ‘:boss:’ but not ‘:urgent:’
C-c a v
    as the same search as C-c a u, but limiting the search to headlines that are also TODO items
C-c a U
    as the same search as C-c a u, but only in the current buffer and displaying the result as a sparse tree
C-c a f
    to create a sparse tree (again: current buffer only) with all entries containing the word ‘FIXME’
C-c a h
    as a prefix command for a HOME tags search where you have to press an additional key (l, p or k) to select a name (Lisa, Peter, or Kim) as additional tag to match. 

Note that the -tree agenda views need to be called from an Org buffer as they operate on the current buffer only.

#+END_EXAMPLE

********* block

Another possibility is the construction of agenda views that comprise the results of several commands, each of which creates a block in the agenda buffer. The available commands include agenda for the daily or weekly agenda (as created with C-c a a), alltodo for the global TODO list (as constructed with C-c a t), and the matching commands discussed above: todo, tags, and tags-todo. Here are two examples:

#+BEGIN_SRC emacs-lisp :results none
     (setq org-agenda-custom-commands
           '(("h" "Agenda and Home-related tasks"
              ((agenda "")
               (tags-todo "home")
               (tags "garden")))
             ("o" "Agenda and Office-related tasks"
              ((agenda "")
               (tags-todo "work")
               (tags "office")))))
#+END_SRC

This will define C-c a h to create a multi-block view for stuff you need to attend to at home. The resulting agenda buffer will contain your agenda for the current week, all TODO items that carry the tag ‘home’, and also all lines tagged with ‘garden’. Finally the command C-c a o provides a similar view for office tasks. 

another example

#+BEGIN_SRC emacs-lisp :results none
(setq org-agenda-custom-commands
      '(("O" "Office block agenda"
         ((agenda "" ((org-agenda-ndays 1))) 
                      ;; limits the agenda display to a single day
          (tags-todo "+PRIORITY=\"A\"")
          (tags-todo "computer|office|phone")
          (tags "project+CATEGORY=\"elephants\"")
          (tags "review" ((org-agenda-files '("~/org/circuspeanuts.org"))))
                          ;; limits the tag search to the file circuspeanuts.org
          (todo "WAITING"))
         ((org-agenda-compact-blocks t))) ;; options set here apply to the entire block
        ;; ...other commands here
        ))
#+END_SRC
********* define multiple critera (₆In example₆ todos)
use a pipe between the items:
#+BEGIN_SRC emacs-lisp :results none
("r" "research" todo "TODO|NEXT" 
         (
         (org-agenda-files '("~/org/files/agenda/Research.org")) 
          (org-agenda-sorting-strategy 
          '(priority-down effort-down)
#+END_SRC
********* sorting methods
#+BEGIN_SRC emacs-lisp :results none
(priority-down effort-down todo-state-down) 
#+END_SRC 
******** Todo
********* PULL TODO from a set of files/ALL
you can define where to pull TODO to the agenda view

For agenda files locations, add each location within " " to the org-agenda-file config:

#+BEGIN_SRC emacs-lisp
(setq org-agenda-files '("~/Dropbox/Org/" "~/Dropbox/Org/agenda" "~/Dropbox/Org/Uni_agenda" ))
#+END_SRC

To do a recursive todo search in ALL org file you can use the following code
@NOTE@ this will also bring and load ALL .orh files in your org dir as a by-product!!!


#+BEGIN_SRC emacs-lisp
(load-library "find-lisp")
(add-hook 'org-agenda-mode-hook (lambda () 
(setq org-agenda-files 
      (find-lisp-find-files "~/Dropbox/Org/" "\.org$"))
))
#+END_SRC

********* adding custom TODO states in org per file/buffer
you can do this globally in your config:

#+BEGIN_SRC emacs-lisp :results none
   (setq org-todo-keywords
       '((sequence "TODO(t)" "WAIT(w@/!)" "|" "DONE(d!)" "CANCELED(c@)")))
#+END_SRC

To record a timestamp without a note for TODO keywords configured with `@', just type `C-c C-c' to enter a blank note when prompted.

and you can do this locally per file/buffer:

#+BEGIN_SRC emacs-lisp :results none
#+TODO: TODO(t) STARTED(s) WAITING(w) | DONE(d) CANCELED(c)
#+END_SRC

Define the TODO states you find useful and single letters for fast selection. Customize the variable org-todo-keywords or simply do this right in the file with putting this on the top part of the file

********* Repeated tasks

Some tasks need to be repeated again and again. Org mode helps to organize such tasks using a so-called repeater in a DEADLINE, SCHEDULED, or plain timestamp. In the following example

#+BEGIN_EXAMPLE
      TODO Pay the rent
        DEADLINE: <2005-10-01 Sat +1m>
#+END_EXAMPLE

the +1m is a repeater; the intended interpretation is that the task has a deadline on <2005-10-01> and repeats itself every (one) month starting from that time. You can use yearly, monthly, weekly, daily and hourly repeat cookies by using the y/w/m/d/h letters. If you need both a repeater and a special warning period in a deadline entry, the repeater should come first and the warning period last:i

#+BEGIN_EXAMPLE
DEADLINE: <2005-10-01 Sat +1m -3d>.  
#+END_EXAMPLE

******* Babel (code blocks)
******** run ssh with command inside org
use something like this
#+begin_src sh :dir /ssh:zeltak@192.168.0.2:
ls -la
    #+end_src
******** "tangling"
'tangling' is the proccess of creating pure source code files by extracting code from source blocks in the current buffer. 
During “tangling” of code blocks their bodies are expanded using org-babel-expand-src-block which can expand both variable and “noweb” style references. In order to tangle a code block it must have a :tangle header argument (see [[header%20arguments][header arguments]] )
******** disable confirmation checks for certain languages
for example for lisp
#+BEGIN_SRC emacs-lisp :results none
(defun my-org-confirm-babel-evaluate (lang body)
    (not (string= lang "emacs-lisp")))  ; don't ask for lisp
(setq org-confirm-babel-evaluate 'my-org-confirm-babel-evaluate)
#+END_SRC
******** header arguments
********* intro
http://orgmode.org/manual/Specific-header-arguments.html#Specific-header-arguments

Many aspects of the evaluation and export of code blocks are controlled through header arguments. These can be specified globally, at the file level, at the outline subtree level, and at the individual code block level. The following describes some of the header arguments. 

`Structure of Code Blocks`

The structure of code blocks is as follows:

     #+NAME: <name>
     #+BEGIN_SRC <language> <switches> <header arguments>
       <body>
     #+END_SRC

Where <name> is a string used to name the code block, <language> specifies the language of the code block (e.g. emacs-lisp, shell, R, python, etc...), <switches> can be used to control export of the code block, <header arguments> can be used to control many aspects of code block behavior as demonstrated below, and <body> contains the actual source code. 

********* 'Common examples'

`silence results` (no output)
#+BEGIN_EXAMPLE
:results none
#+END_EXAMPLE

`overwrite results` 
#+BEGIN_EXAMPLE
:results output replace
#+END_EXAMPLE

`verbatim results` (not formatting)

#+BEGIN_EXAMPLE
:results verbatim 
#+END_EXAMPLE

********* :results 
********** info
There are four classes of `:results` header argument. Only one option per class may be supplied per code block.

v `collection` header arguments specify how the results should be collected from the code block

`type` header arguments specify what type of result the code block will return—which has implications for how they will be processed before insertion into the Org mode buffer

`format` header arguments specify what type of result the code block will return—which has implications for how they will be inserted into the Org mode buffer

`handling` header arguments specify how the results of evaluating the code block should be handled. 

********** Collection
The following options are mutually exclusive, and specify how the results should be collected from the code block.

`value` This is the default. The result is the value of the last statement in the code block. This header argument places the evaluation in functional mode. Note that in some languages, e.g., Python, use of this result type requires that a return statement be included in the body of the source code block. E.g., :results value.

`output` The result is the collection of everything printed to STDOUT during the execution of the code block. This header argument places the evaluation in scripting mode. E.g., :results output. 

********** Type

The following options are mutually exclusive and specify what type of results the code block will return. By default, results are inserted as either a table or scalar depending on their value.

`table, vector` The results should be interpreted as an Org mode table. If a single value is returned, it will be converted into a table with one row and one column. E.g., :results value table.

`list` The results should be interpreted as an Org mode list. If a single scalar value is returned it will be converted into a list with only one element.

`scalar, verbatim` The results should be interpreted literally—they will not be converted into a table. The results will be inserted into the Org mode buffer as quoted text. E.g., :results value verbatim.

`file` The results will be interpreted as the path to a file, and will be inserted into the Org mode buffer as a file link. E.g., :results value file. 

********** Format
The following options are mutually exclusive and specify what type of results the code block will return. By default, results are inserted according to the type as specified above.

`raw` The results are interpreted as raw Org mode code and are inserted directly into the buffer. If the results look like a table they will be aligned as such by Org mode. E.g., :results value raw.

`org` The results are will be enclosed in a BEGIN_SRC org block. They are not comma-escaped by default but they will be if you hit TAB in the block and/or if you export the file. E.g., :results value org.

`html` Results are assumed to be HTML and will be enclosed in a BEGIN_HTML block. E.g., :results value html.

`latex` Results assumed to be LaTeX and are enclosed in a BEGIN_LaTeX block. E.g., :results value latex.

`code` Result are assumed to be parsable code and are enclosed in a code block. E.g., :results value code.

`pp` The result is converted to pretty-printed code and is enclosed in a code block. This option currently supports Emacs Lisp, Python, and Ruby. E.g., :results value pp.

`drawer` The result is wrapped in a RESULTS drawer. This can be useful for inserting raw or org syntax results in such a way that their extent is known and they can be automatically removed or replaced. 

********** Handling

The following results options indicate what happens with the results once they are collected.

`silent` The results will be echoed in the minibuffer but will not be inserted into the Org mode buffer. E.g., :results output silent.

`replace` The default value. Any existing results will be removed, and the new results will be inserted into the Org mode buffer in their place. E.g., :results output replace.

`append` If there are pre-existing results of the code block then the new results will be appended to the existing results. Otherwise the 

`new` results will be inserted as with replace.

`prepend` If there are pre-existing results of the code block then the new results will be prepended to the existing results. Otherwise the new results will be inserted as with replace

********* :Session

#+BEGIN_EXAMPLE
:session
#+END_EXAMPLE

The `:session` header argument starts a session for an interpreted language where state is preserved.

By default, a session is not started.

A string passed to the :session header argument will give the 'session a name'.

This makes it possible to run concurrent sessions for each interpreted language.

********* :shebang
Setting the :shebang header argument to a string value (e.g., :shebang "#!/bin/bash") causes the string to be inserted as the first line of any tangled file holding the code block, and the file permissions of the tangled file are set to make it executable.
********* :eval
The :eval header argument can be used to limit the evaluation of specific code blocks. The :eval header argument can be useful for protecting against the evaluation of dangerous code blocks or to ensure that evaluation will require a query regardless of the value of the org-confirm-babel-evaluate variable. The possible values of :eval and their effects are shown below.

never or no
    The code block will not be evaluated under any circumstances.
query
    Evaluation of the code block will require a query.
never-export or no-export
    The code block will not be evaluated during export but may still be called interactively.
query-export
    Evaluation of the code block during export will require a query. 

If this header argument is not set then evaluation is determined by the value of the org-confirm-babel-evaluate variable see Code evaluation security.
********* :file
The header argument :file is used to specify an external file in which to save code block results. After code block evaluation an Org mode style [[file:]] link (see Link format) to the file will be inserted into the Org mode buffer. Some languages including R, gnuplot, dot, and ditaa provide special handling of the :file header argument automatically wrapping the code block body in the boilerplate code required to save output to the specified file. This is often useful for saving graphical output of a code block to the specified file.

The argument to :file should be either a string specifying the path to a file, or a list of two strings in which case the first element of the list should be the path to a file and the second a description for the link.
********* :dir and remote execution
While the :file header argument can be used to specify the path to the output file, :dir specifies the default directory during code block execution. If it is absent, then the directory associated with the current buffer is used. In other words, supplying :dir path temporarily has the same effect as changing the current directory with M-x cd path RET, and then not supplying :dir. Under the surface, :dir simply sets the value of the Emacs variable default-directory.

When using :dir, you should supply a relative path for file output (e.g., :file myfile.jpg or :file results/myfile.jpg) in which case that path will be interpreted relative to the default directory.
In other words, if you want your plot to go into a folder called Work in your home directory, you could use

     #+BEGIN_SRC R :file myplot.png :dir ~/Work
     matplot(matrix(rnorm(100), 10), type="l")
     #+END_SRC

`Remote execution`

A directory on a remote machine can be specified using tramp file syntax, in which case the code will be evaluated on the remote machine. An example is:

     #+BEGIN_SRC R :file plot.png :dir /dand@yakuba.princeton.edu:
     plot(1:10, main=system("hostname", intern=TRUE))
     #+END_SRC

Text results will be returned to the local Org mode buffer as usual, and file output will be created on the remote machine with relative paths interpreted relative to the remote directory. An Org mode link to the remote file will be created.

Most of this functionality follows immediately from the fact that :dir sets the value of the Emacs variable default-directory, thanks to tramp. Those using XEmacs, or GNU Emacs prior to version 23 may need to install tramp separately in order for these features to work correctly.

`Further points`
If :dir is used in conjunction with :session, although it will determine the starting directory for a new session as expected, no attempt is currently made to alter the directory associated with an existing session.
:dir should typically not be used to create files during export with :exports results or :exports both. The reason is that, in order to retain portability of exported material between machines, during export links inserted into the buffer will not be expanded against default directory. Therefore, if default-directory is altered using :dir, it is probable that the file will be created in a location to which the link does not point.
********* :exports
The :exports header argument specifies what should be included in HTML or LaTeX exports of the Org mode file.

    code The default. The body of code is included into the exported file. E.g., :exports code.
    results The result of evaluating the code is included in the exported file. E.g., :exports results.
    both Both the code and results are included in the exported file. E.g., :exports both.
    none Nothing is included in the exported file. E.g., :exports none.
********* :comments

By default code blocks are tangled to source-code files without any insertion of comments beyond those which may already exist in the body of the code block. The :comments header argument can be set as follows to control the insertion of extra comments into the tangled code file.

no The default. No extra comments are inserted during tangling.
link The code block is wrapped in comments which contain pointers back to the original Org file from which the code was tangled.
yes A synonym for “link” to maintain backwards compatibility.
org Include text from the Org mode file as a comment. The text is picked from the leading context of the tangled code and is limited by the nearest headline or source block as the case may be.
both Turns on both the “link” and “org” comment options.
noweb Turns on the “link” comment option, and additionally wraps expanded noweb references in the code block body in link comments.
********* :cache

The :cache header argument controls the use of in-buffer caching of the results of evaluating code blocks. It can be used to avoid re-evaluating unchanged code blocks. Note that the :cache header argument will not attempt to cache results when the :session header argument is used, because the results of the code block execution may be stored in the session outside of the Org mode buffer. The :cache header argument can have one of two values: yes or no.

    no The default. No caching takes place, and the code block will be evaluated every time it is called.
    yes Every time the code block is run a SHA1 hash of the code and arguments passed to the block will be generated. This hash is packed into the #+RESULTS: line and will be checked on subsequent executions of the code block. If the code block has not changed since the last time it was evaluated, it will not be re-evaluated. 

Code block caches notice if the value of a variable argument to the code block has changed. If this is the case, the cache is invalidated and the code block is re-run. In the following example, caller will not be re-run unless the results of random have changed since it was last run.
******** batch proccess code blokcs
for a subtree/buffer
#+BEGIN_SRC emacs-lisp :results none
org-babel-execute-buffer
;and for subtrees 
org-babel-execute-subtree
#+END_SRC
******** auto display images after eval
Try (org-redisplay-inline-images). Note "re".

#+BEGIN_SRC <lang> :post (org-redisplay-inline-images)

#+END_SRC
#+RESULTS:
 
******* bugs
******** files opend are slow- disable line mode

line modes cause org mode to get really slow
 I disable linum for some or all .org files only
 ;;disable linemode on org
 (defun my-org-mode-hook ()
 (linum-mode 0))
 (add-hook 'org-mode-hook 'my-org-mode-hook)
******* Bugs/fixes
******** error in mobile-org-push: org-id-add-location: Wrong type argument: hash-table-p
if you get this error:
org-id-add-location: Wrong type argument: hash-table-p

remove

file:~/.emacs.d/.org-id-locations

and restart emacs
******** !capture mode wipes target!
this was casued by aggresive saving behivour:
#+BEGIN_SRC emacs-lisp :results none
(setq auto-save-visited-file-name t)
(setq auto-save-interval 20) ; twenty keystrokes
(setq auto-save-timeout 10) ; ten idle seconds

#+END_SRC 
@ make sure that all above commands are commented@. you can leave autosave to something more sane like 120 seconds


#+BEGIN_SRC emacs-lisp :results none
(setq auto-save-timeout 120) ; ten idle seconds
#+END_SRC


******** org mode very slow on large file
if Org is very slow on big file (even 100k) the casue may linium-mode (show line modes)
to fix this disable linium mode in org with the following hook


#+BEGIN_SRC emacs-lisp  "disable linum mode only in Org"
;;disable linemode on org
(defun my-org-mode-hook () 
  (linum-mode 0)) 
(add-hook 'org-mode-hook 'my-org-mode-hook)


#+END_SRC
******* capture
******** launch org capture from command line (for quick WM binds)
1.add this code in your .emacs

#+BEGIN_SRC emacs-lisp
(defadvice org-capture-finalize (after delete-capture-frame activate)
  "Advise capture-finalize to close the frame if it is the capture
frame"
  (if (equal "capture" (frame-parameter nil 'name))
      (delete-frame)))

(defadvice org-capture-destroy (after delete-capture-frame activate)
  "Advise capture-destroy to close the frame if it is the capture frame"
  (if (equal "capture" (frame-parameter nil 'name))
      (delete-frame)))

(defun make-capture-frame ()
  "Create a new frame and run org-capture."
  (interactive)
  (make-frame '((name . "capture")))
  (select-frame-by-name "capture")
  (delete-other-windows)
  (org-capture)
  )
#+END_SRC

2) then add a shortcut/hotkey with this command
/usr/bin/emacsclient -n -e '(make-capture-frame)'

#+begin_src sh
/usr/bin/emacsclient -n -e '(make-capture-frame)'
#+end_src
 
******** default keybinds

C-c c     (org-capture)
Call the command org-capture. Note that this keybinding is global and not active by default: you need to install it. If you have templates defined see Capture templates, it will offer these templates for selection or use a new Org outline node as the default template. It will insert the template into the target file and switch to an indirect buffer narrowed to this new node. You may then insert the information you want.


C-c C-c     (org-capture-finalize)
Once you have finished entering information into the capture buffer, C-c C-c will return you to the window configuration before the capture process, so that you can resume your work without further distraction. When called with a prefix arg, finalize and then jump to the captured item.


C-c C-w     (org-capture-refile)
Finalize the capture process by refiling (see Refile and copy) the note to a different place. Please realize that this is a normal refiling command that will be executedso the cursor position at the moment you run this command is important. If you have inserted a tree with a parent and children, first move the cursor back to the parent. Any prefix argument given to this command will be passed on to the org-refile command.


C-c C-k     (org-capture-kill)
Abort the capture process and return to the previous state.
You can also call org-capture in a special way from the agenda, using the k c key combination. With this access, any timestamps inserted by the selected capture template will default to the cursor date in the agenda, rather than to the current date.

To find the locations of the last stored capture, use org-capture with prefix commands:

C-u C-c c
Visit the target location of a capture template. You get to select the template in the usual way. 
C-u C-u C-c c
Visit the last stored capture item in its buffer.
You can also jump to the bookmark org-capture-last-stored, which will automatically be created unless you set org-capture-bookmark to nil.

To insert the capture at point in an Org buffer, call org-capture with a C-0 prefix argument.
******** Templates
********* base
see the help file below for full details. in short:

#+BEGIN_SRC emacs-lisp
              ("SHORT KEY (keys)" "description" TYPE (LOCATION "PATH TO FILE" "PATH TO HEADER")
               "TEXT1 TEXT Template expansion" )
;IE:
              ("x" "todo_nix" entry (file+headline "~/Dropbox/Org/agenda/nixTODO.org" "Linux")
               " TODO %t" )

#+END_SRC

********* Detailed info on Capture templates
********** BASE example
#+BEGIN_EXAMPLE
("KEYS" "DISCRIPTION" TYPE (TARGET)
"  %^{Description} %^g Added: %U" )
#+END_EXAMPLE

example:

#+BEGIN_SRC emacs-lisp :results none
("x" "todo_nix" entry (file+headline "~/org/files/agenda/TODO.org" "Linux")
#+END_SRC

********** keys 
that willselect the template, as a string, characters only, for example "a" for a template to be selected with a single key, or "bt" for selection with two keys. When using several keys, keys using the same prefix key must be sequential in the list and preceded by a 2-element entry explaining the prefix key, for example

#+BEGIN_EAMPLE
("b" "Temlates for marking stuff to buy")
#+END_EXAPLE
If you donot define a template for the C key, this key will be used to open the customize buffer for this complex variable.

********** description

A short sring describing the template, which will be shown during selection.

********** type

The type f entry, a symbol. Valid values are:

`entry`
An Org moe node, with a headline. Will be filed as the child of the target entry or as a top-level entry. The target file should be an Org mode file.

`item`
A plain lst item, placed in the first plain list at the target location. Again the target file should be an Org file.

`checkite`
A checkbo item. This only differs from the plain list item by the default template.

`table-lie`
a new lin in the first table at the target location. Where exactly the line will be inserted depends on the properties :prepend and :table-line-pos (see below).

`plain`
Text to b inserted as it is. 

********** Target

Specification of where the captured item should be placed. In Org mode files, targets usually define a node. $Entries will become children of this node$. Other types will be added to the table or list in the body of this node. Most target specifications contain a file name. If that file name is the empty string, it defaults to org-default-notes-file. A file can also be given as a variable, function, or Emacs Lisp form.

Valid values are:

(file "path/to/file")
    Text will be placed at the beginning or end of that file.

(id "id of existing org entry")
    Filing as child of this entry, or in the body of the entry.

(file+headline "path/to/file" "node headline")
    Fast configuration if the target heading is unique in the file.

(file+olp "path/to/file" "Level 1 heading" "Level 2" ...)
    For non-unique headings, the full path is safer.

(file+regexp "path/to/file" "regexp to find location")
    Use a regular expression to position the cursor.

(file+datetree "path/to/file")
    Will create a heading in a date tree for today's date1.

(file+datetree+prompt "path/to/file")
    Will create a heading in a date tree, but will prompt for the date.

(file+function "path/to/file" function-finding-location)
    A function to find the right location in the file.

(clock)
    File to the entry that is currently being clocked.

(function function-finding-location)
    Most general way, write your own function to find both file and location. 

********** template
The template for creating the capture item. If you leave this empty, an appropriate default template will be used. Otherwise this is a string with escape codes, which will be replaced depending on time and context of the capture call. The string with escapes may be loaded from a template file, using the special syntax (file "path/to/template"). See below for more details. 
********** Template expansion 

In the template itself, special '%-escapes'
allow dynamic insertion of content.If you need one of these sequences literally, escape the '%' with a backslash. The templates are expanded in the order given here:

#+BEGIN_EXAMPLE
%[file]     Insert the contents of the file given by file.

%(sexp)     Evaluate Elisp sexp and replace with the result.
            For convenience, %:keyword (see below) placeholders
            within the expression will be expanded prior to this.
            The sexp must return a string.

%<...>      The result of format-time-string on the ... format specification.

%t          Timestamp, date only.

%T          Timestamp, with date and time.

%u, %U      Like the above, but inactive timestamps.

%i          Initial content, the region when capture is called while the
            region is active.
            The entire text will be indented like %i itself.

%a          Annotation, normally the link created with org-store-link.

%A          Like %a, but prompt for the description part.

%l          Like %a, but only insert the literal link.

%c          Current kill ring head.

%x          Content of the X clipboard.

%k          Title of the currently clocked task.

%K          Link to the currently clocked task.

%n          User name (taken from user-full-name).

%f          File visited by current buffer when org-capture was called.

%F          Full path of the file or directory visited by current buffer.

%:keyword   Specific information for certain link types, see below.

%^g         Prompt for tags, with completion on tags in target file.

%^G         Prompt for tags, with completion all tags in all agenda files.

%^t         Like %t, but prompt for date.  Similarly %^T, %^u, %^U.
            You may define a prompt like %^{Birthday}t.

%^C         Interactive selection of which kill or clip to use.

%^L         Like %^C, but insert as link.

%^{prop}p   Prompt the user for a value for property prop.

%^{prompt}  prompt the user for a string and replace this sequence with it.
            You may specify a default value and a completion table with
            %^{prompt|default|completion2|completion3...}.
            The arrow keys access a prompt-specific history.

%\n         Insert the text entered at the nth %^{prompt}, where n is
            a number, starting from 1.

%?          After completing the template, position cursor here.

#+END_EXAMPLE

For specific link types, the following keywords can be used

| Link type                       | Available keywords                                     |
| bbdb                            | %:name %:company                                       |
| irc                             | %:server %:port %:nick                                 |
| vm, vm-imap, wl, mh, mew, rmail | %:type %:subject %:message-id                          |
|                                 | %:from %:fromname %:fromaddress                        |
|                                 | %:to   %:toname   %:toaddress                          |
|                                 | %:date (message date header field)                     |
|                                 | %:date-timestamp (date as active timestamp)            |
|                                 | %:date-timestamp-inactive (date as inactive timestamp) |
|                                 | %:fromto (either "to NAME" or "from NAME")3            |
| gnus                            | %:group, for messages also all email fields            |
| w3, w3m                         | %:url                                                  |
| info                            | %:file %:node                                          |
| calendar                        | %:date                                                 |

********** properties 

The rest of the entry is a property list of additional options. Recognized properties are:

:prepend
Normally new captured information will be appended at the target location (last child, last table line, last list item...). Setting this property will change that.

:immediate-finish
When set, do not offer to edit the information, just file it away immediately. This makes sense if the template only needs information that can be added automatically.

₆In example₆ 

#+BEGIN_EXAMPLE
("O" "dl_movie_prerelease" entry (file+headline "~/org/files/agenda/dl.org" "Movies")
"  %x :Pre_Release: " :immediate-finish t)
#+END_EXAMPLE


:empty-lines
    Set this to the number of lines to insert before and after the new item. Default 0, only common other value is 1.

:clock-in
    Start the clock in this item.

:clock-keep
    Keep the clock running when filing the captured entry.

:clock-resume
    If starting the capture interrupted a clock, restart that clock when finished with the capture. Note that :clock-keep has precedence over :clock-resume. When setting both to t, the current clock will run and the previous one will not be resumed.

:unnarrowed
Do not narrow the target buffer, simply show the full buffer. Default is to narrow it so that you only see the new material.

:table-line-pos
Specification of the location in the table where the new line should be inserted. It should be a string like "II-3" meaning that the new line should become the third line before the second horizontal separator line.

:kill-buffer
If the target file was not yet visited when capture was invoked, kill the buffer again after capture is completed.
********** add tags
add as text between 2 :, ₆In example₆ 

#+BEGIN_EXAMPLE
("O" "dl_movie_prerelease" entry (file+headline "~/org/files/agenda/dl.org" "Movies")
 "  %x :Pre_Release: " )
#+END_EXAMPLE

******** capture from gmail

    :PROPERTIES:
    :ID:       b3621ce9-0ea5-4d5b-8016-9fcf837b72f5
    :END:
http://comments.gmane.org/gmane.emacs.orgmode/48056

1. Open your gmail account (log-in)
2. Open the mail you like to refer too.
3. Copy the URL
4. Add the URL as a link (C-c C-l) to your org-file

After that, clicking on the link will open the mail directly in your 
standard webbrowser. If you logged out from google mail in between, you 
are ask to log-in first, after that select the link again.

But it is getting even better. You are not only able to link to 
particular mails within org-mode, but also to google mail labels 
(folders) or search results.

To make it even more org-mode friendly one can set-up org-capture in 
your webbrowser [1].

I added the following to the org-capture-templates list

#+BEGIN_SRC sh
("g" "Gmail-link" entry (file+headline "~/org/work.org" "Gmail-links") "%A")
#+END_SRC

------------------------------------------

Ok. This one seems to do the trick to show the original of a single
message:

https://mail.google.com/mail/h/?&v=om&th=MESSAGE-ID

And this one can be used for conversation view:

https://mail.google.com/mail/h/?&v=c&s=l&th=MESSAGE-ID

It seems v=c means view=conversation. But this is not enough by and of
itself, s=l is necessary too, whatever that means. Left out, your Inbox
will be presented.

Summing up, if you want to visit gmails articles without using
JavaScript, you may use this:

#+LINK: gmail https://mail.google.com/mail/h/?&v=c&s=l&th=
for HTML-only browsers/settings or
#+LINK: gmail https://mail.google.com/mail/?shva=1#all/
for JS-enabled browsers

or something like

#+begin_src emacs-lisp
  (org-add-link-type
   "gmail"
   (lambda (link)
     (browse-url
      (concat "https://mail.google.com/mail/?shva=1#all/" link))))
#+end_src




to have the link type globally.

Then use this in an Org file:

[[gmail:1331f3490dff1205][conversation about gmail links]]

This way, if Google decides to change it's url structure, all you have
to do is redefine your link type, instead of all email links.

******* column view
******** base keys 
see the cheat sheet id:a093cf5d-e70e-4127-b605-047bfbcee113                                        
******* export
******** export in file options
The table of contents is normally inserted directly before the first headline of the file. The depth of the table is by default the same as the number of headline levels, but you can choose a smaller number, or turn off the table of contents entirely, by configuring the variable org-export-with-toc, or on a per-file basis with a line like
#+BEGIN_EXAMPLE
#+OPTIONS: toc:2          (only to two levels in TOC)
#+OPTIONS: toc:nil        (no default TOC at all)
#+END_EXAMPLE
******** Publishing
********* publish to text 
choose:
#+BEGIN_EXAMPLE
org-ascii-publish-to-ascii
org-ascii-publish-to-utf8
#+END_EXAMPLE

********* example config file for 2 different publishing options:
#+BEGIN_SRC emacs-lisp :results none
     (setq org-publish-project-alist
           '(
              ("Help_files"
              :base-directory "~/org/files/help/"
              :publishing-directory "~/org/files/export/"
              :section-numbers nil
              :table-of-contents nil
              :publishing-function org-ascii-publish-to-ascii
                     )
              ("econf"
              :base-directory "~/org/files/help/"
              :publishing-directory "~/org/files/export/"
              :section-numbers nil
              :table-of-contents nil
              :publishing-function org-html-publish-to-html
                     )
))
#+END_SRC
******** HTML export options
A few other are used exclusively by the html exporter:

#+BEGIN_EXAMPLE
#+LANGUAGE:  en
#+INFOJS_OPT: view:showall toc:t ltoc:t mouse:underline path:http://orgmode.org/org-info.js
#+LINK_HOME: http://home.fnal.gov/~neilsen
#+LINK_UP: http://home.fnal.gov/~neilsen/notebook
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/notebook.css" />
#+END_EXAMPLE
******* refile
********* base 
To refile tasks in org you need to tell it where you want to refile things.

you can define which files are used for refiling, IE any file in org-agenda-files,the current file etc that contribute to the list of valid refile targets.

I've recently moved to using IDO to complete targets directly. I find this to be faster than my previous complete in steps setup. At first I didn't like IDO but after reviewing the documentation again and learning about C-SPC to limit target searches I find it is much better than my previous complete-in-steps setup. Now when I want to refile something I do C-c C-w to start the refile process, then type something to get some matching targets, then C-SPC to restrict the matches to the current list, then continue searching with some other text to find the target I need. C-j also selects the current completion as the final target. I like this a lot. I show full outline paths in the targets so I can have the same heading in multiple subtrees or projects and still tell them apart while refiling.
********* Refile with iDO
When I want to refile something I do
?C-c C-w?
to start the refile process, then type something to get some matching targets, then
?C-SPC? 
to restrict the matches to the current list, then continue searching with some other text to find the target I need.
?C-j? also selects the current completion as the final target. I like this a lot. I show full outline paths in the targets so I can have the same heading in multiple subtrees or projects and still tell them apart while refiling.

******* Code blocks 
******** higlighted code blocks inside org-mode
make sure you have this in your config:

(setq org-src-fontify-natively t)

also if you want the colors to transfer to html take a look at this:

http://fly.srk.fer.hr/~hniksic/emacs/htmlize.el.cgi

Then in your block specify the specific language to highlight , IE for emacs

#+BEGIN_SRC emacs-lisp

#+END_SRC

one can use any language such as R,sh (for bash) etc..

******** run code in org file

#+BEGIN_SRC sh

ls /home/zeltak/.ncmpcpp/

#+END_SRC

stand and the code an issue C-c C-c

#+RESULTS:
| alt_config  |
| bindings    |
| BK          |
| config      |
| config.save |
| error.log   |
******** run code with no results (silence code)
to eval code in org with no output (silent) use ':results none' in your code block In example 

#+BEGIN_SRC emacs-lisp :results none
(global-set-key (kbd "M-p M-y") 'helm-show-kill-ring)
#+END_SRC

******** ORG choose template

you can use 

| C-c C-v d |

'OR'

The following function prompts for a language (defaulting to the closest one it finds), also acts smartly about line breaks. 

#+BEGIN_SRC emacs-lisp
(defun org/source-insert ()
"Insert a header line."
(interactive)
(unless (looking-at "^ $")
(end-of-line)
(newline))
(let ((def (save-excursion
(if (search-backward-regexp "^#\\+BEGIN_SRC +\\([^ \n]+\\)" nil t)
(match-string-no-properties 1)
(if (search-forward "^#\\+BEGIN_SRC +\\([^ \n]+\\)" nil t)
(match-string-no-properties 1)
"xml"))))
(lang (completing-read (concat "Language [" def "]: ") org/headers nil nil nil nil def)))
(insert (concat "#+BEGIN_SRC " lang "\n\n#+END_SRC"))
(previous-line 1)))
#+END_SRC

******* completions

Completion
Emacs would not be Emacs without completion, and Org mode uses it whenever it makes sense. If you prefer an iswitchb- or ido-like interface for some of the completion prompts, you can specify your preference by setting at most one of the variables org-completion-use-iswitchb org-completion-use-ido.

Org supports in-buffer completion. This type of completion does not make use of the minibuffer. You simply type a few letters into the buffer and use the key to complete text right there.

M-<TAB>

Complete word at point

At the beginning of a headline, complete TODO keywords.
After , complete TeX symbols supported by the exporter.
After , complete headlines in the current buffer so that they can be used in search links like [[find this headline]].
After : in a headline, complete tags. The list of tags is taken from the variable org-tag-alist (possibly set through the #+TAGS in-buffer option, see Setting tags), or it is created dynamically from all tags used in the current buffer.
After : and not in a headline, complete property keys. The list of keys is constructed dynamically from all keys used in the current buffer.
After [, complete link abbreviations (see Link abbreviations).
After #+, complete the special keywords like TYP_TODO or OPTIONS which set file-specific options for Org mode. When the option 
keyword is already complete, pressing M-<TAB> again will insert example settings for this keyword.
In the line after #+STARTUP: , complete startup keywords, i.e., valid keys for this line.
Elsewhere, complete dictionary words using Ispell.

******* contrib/extensions
******** org-download
********* configuring
********** Installing
you can get org-download from:
https://github.com/abo-abo/org-download

and then add it  to your init file:

#+BEGIN_SRC emacs-lisp :results none
(load-file "~/.emacs.d/src/extra/org-download/org-download.el")
#+END_SRC
********** configure download directory 
the location of where org-download stores your files is set as a buffer-local variable that defaults to nil.

You can set it either with customize-group>org-download

or in the file header:

#+BEGIN_SRC emacs-lisp
# -- mode: Org; org-download-image-dir: "~/org/attach/2014/org/"; org-download-heading-lvl: nil; --
#+END_SRC

Or in the org-mode hook:

#+BEGIN_SRC emacs-lisp
(setq-default org-download-image-dir "/home/zeltak/org/attach/images_2014")
#+END_SRC
$Note dont have a trailing / at the end$ 

********** configure level of folders images are stored
the level of folders for saved images is set as a buffer-local variable that defaults to nil.

'org-download-heading-lvl'

nil means no subdirs
1 means create subdirs with name of level 1 heading
2 - level 2 heading etc.


You can set it either with customize-group>org-download
o
r can also set it on a per file basis:
#+BEGIN_SRC sh
# -- mode: Org; org-download-heading-lvl: nil; --
#+END_SRC
********** configure weather to add image size attributes alongside info
You can set it either with customize-group>org-download
and configure the
org-download-image-width
********* org-download commands
********** org-download-image
This will ask you for an URL and will downlaod the image into the current buffer-local
********** org-download-delete
********** org-download-yank (add images from dired)
org-download-yank is used to add images from local files.

Now you can just issue
?0 w? 
On an image in a dired buffer and issue 
'org-download-yank' 
in an Org buffer to paste that imagee
******* conversions 
******** nc2org

1. export to html from NC using following options:

[[./linux_files/img/Image_0HYuA15AZn5hBUI3c25K9Q_0001.png]]


2)open a term in that folder where the exported html file is and issue
the following:

iconv -f utf-8//TRANSLIT -t utf-8 NCLINUX.html > nix.html

where :
 NCLINUX.html is the nc input html (-f is for that)
 nix.html is the output file (-t reffers to that)
 //TRANSLIT - tellsiconvtotransliterate characters, or convert
characters in the origin encoding to the closest possible matching
character in the target encoding. This may be necessary when converting
from something like UTF-8
 NOTE you may still get errors/crashes. look in the crash log, it will
tell you the text it crashed on and you can manually delete that.

3)then issue this with pandoc:
 pandoc -s -S nix.html -o nix.org
 to get a valid org file
 make sure the folder with images and attachments is located where the
org file will land. then issue a 'replace' in emacs while the org file
is open:
 FOLDERNAME/
 to:
 ./FOLDERNAME/
 this should enable image support

******** convert html to Org using pandoc
Org-mode:
 pandoc -s -S FILE.html -o FILE.org
 
******** convert formats to .org
********* convert using calibre to org

 Basically, Calibre -> htmlz -> unzip -> pandoc:

 #+BEGIN_EXAMPLE
 $ cp ~/Calibre\ Library/Metz/Practi/.htmlz ./book.htmlz
 $ unzip -q book.htmlz 
 $ pandoc ./index.html -o book.org       
 #+END_EXAMPLE

 After that I usually have to global convert [[image/foo.png]] to
 [[file:image/foo.png]] and add inlineimages to a start-up option on the
 file.
 
******** convert html to Org using pandoc

 Org-mode:
  pandoc -s -S README -o example27.org
  pandoc -s -S FILE.html -o FILE.org

 [[http://johnmacfarlane.net/pandoc/demo/example27.org][http://johnmacfarlane.net/pandoc/demo/example27.org]]
  Warning if you get an error open the html file in an editor and
 save it with utf-8 encoding

******* dates
******** keybinds

C-c .
 org-time-stamp
 Prompt for a date and insert a corresponding timestamp. When the cursor
is
 at an existing timestamp in the buffer, the command is used to modify
this
 timestamp instead of inserting a new one. When this command is used
twice
 in succession, a time range is inserted.
 C-c !
 org-time-stamp-inactive
 Like C-c ., but insert an inactive timestamp that will not cause an
agenda
 entry.

******* Functions
******** get rid of blank Lines

#+BEGIN_SRC emacs-lisp :results none
(defun flush-blank-lines ()
    "Removes all blank lines from buffer or region"
     (interactive)
     (save-excursion
       (let (min max)
         (if (equal (region-active-p) nil)
             (mark-whole-buffer))
         (setq min (region-beginning) max (region-end))
         (flush-lines "^ $" min max t))))
#+END_SRC 

******** Archived functions
********* Recursive find text
#+BEGIN_SRC emacs-lisp
;; recursively find txt in .org files in provided directory
;; to use press C-a s and type in search term (can use regex as well)
;; modified from an Emacs Lisp Intro example
(defun find-org-file-recursively (directory &optional filext)
  "Return .org and .org_archive files recursively from DIRECTORY.
If FILEXT is provided, return files with extension FILEXT instead."
  (interactive "DDirectory name: ")
  ;; Bind variables
  ;; (if (not (boundp 'directory))
  ;;     (setq directory (read-directory-name "Directory to search: ")))
  (let (org-file-list
	 (case-fold-search t)		; filesystems are case sensitive
	 (fileregex (if filext (format "^[^.#].\\.\\(%s$\\)" filext)
		      "^[^.#].\\.\\(org$\\|org_archive$\\)"))
	 (cur-dir-list (directory-files directory t "^[^.#]."))) ; exclude .
    ;; loop over directory listing
    (dolist (file-or-dir cur-dir-list org-file-list) ; returns org-file-list
      (cond
       ((file-regular-p file-or-dir) ; regular files
	(if (string-match fileregex file-or-dir) ; org files
	    (add-to-list 'org-file-list file-or-dir)))
       ((file-directory-p file-or-dir)
	(dolist (org-file (find-org-file-recursively file-or-dir filext)
			  org-file-list) ; add files found to result
	  (add-to-list 'org-file-list org-file)))))))

;;the above code snippet then is used in the native org mode org-agenda-text-search-extra-file setting set below
(setq org-agenda-text-search-extra-files
      (append (find-org-file-recursively "~/Dropbox/Org/" "org")
              (find-org-file-recursively "~/Dropbox/Org/" "tex")))


#+END_SRC
******* images
******** functions to insert images
********** Automatic screenshot insertion- Suggested by Russell Adams
Automatic screenshot insertion- Suggested by Russell Adams
#+BEGIN_SRC emacs-lisp
(defun my-org-screenshot ()
  "Take a screenshot into a time stamped unique-named file in the
same directory as the org-buffer and insert a link to this file."
  (interactive)
  (setq filename
        (concat
         (make-temp-name
          (concat (buffer-file-name)
                  "_"
                  (format-time-string "%Y%m%d_%H%M%S_")) ) ".png"))
  (call-process "import" nil nil nil filename)
  (insert (concat "[[" filename "]]"))
  (org-display-inline-images))
#+END_SRC

********** Automatic screen shot- BETTER method
#+BEGIN_SRC emacs-lisp 
   (defun paste-clipboard-to-file (&optional filename temp-dir)
     "Take a screenshot using the crosshairs and saveit to FILENAME,if it is given or to a temp file in the TEMP-DIR
     directory. Then add an orgmode style link at point."
     (interactive)
     (let ((temporary-file-directory (or temp-dir "images"))
            (fname (or filename (make-temp-file "img" nil ".jpg"))))
       (call-process-shell-command (concat 
                                     "/usr/bin/scrot -s -d 2 " fname))
       (insert "\n[[file:" fname "]]")
       (org-display-inline-images)))  
   ;;
   (global-set-key (kbd "C-c p") 'paste-clipboard-to-file)
#+END_SRC

******** get images to appear inline
make sure you have this in your config:

#+BEGIN_SRC emacs-lisp :results none
;;iimage in org (display images in org files)
(setq org-startup-with-inline-images t)
#+END_SRC

also you can manually toggle with:

?org-toggle-inline-images?

finally you can have this code:

#+BEGIN_SRC 
#+STARTUP: inlineimages
#+END_SRC

at the start of your org file

******** toggle inline inmage refresh 
use :

?M-x org-redisplay-inline-images?

to redisplay images
******** use attribut to specify size per image
use this on the line on top of your image

#+BEGIN_EXAMPLE
#+attr_org: :width 300
[IMAGE]
#+END_EXAMPLE

******** scale inline images in orgmode
You can use `org-image-actual-width' in your org config
choose one of the below 4 options:

`option 1`
#+BEGIN_SRC emacs-lisp
(setq org-image-actual-width 300)
#+END_SRC
always resize inline images to 300 pixels

`option 2`
#+BEGIN_SRC sh
setq org-image-actual-width '(400))
#+END_SRC
=> if there is a attribute associated with the image In example  
#+attr_html: :width 200px
Resize to 200,otherwise resize to 400

`option 3`
#+BEGIN_SRC sh
(setq org-image-actual-width nil)
#+END_SRC
=> if there is a attribute associated with the image In example  
#+attr_html: :width 200px
resize to 200, otherwise don't resize

`option 4`
#+BEGIN_SRC sh
(setq org-image-actual-width t)
#+END_SRC
=> Never resize and use original width ('the default')

$note: and example for an image inline with attributes$
#+attr_html: :width 500px
[[file:~/org/attach/images/gno_4_8722104799_04354338b1_z.jpg]]

******** define exported image size
add this in the line before the image link

#+ATTR_HTML: width="10px"
 
******** Replace previous PATHS to show as org

to replace exported html files with image linked to them do the following

using find and replace (C-S-5) add the ~file:~ prefix to the relative file path IE

#+BEGIN_SRC emacs-lisp
#From
[[/IMAGES/IMAGE.png]]
#to

[[file:/IMAGES/IMAGE.png]]
#+END_SRC

IE: from

1.images/

to 

file:1.images/gis10052003p2.png

******* Latex
******** writing
********* super/sub script
Just like in LaTeX, ‘^’ and ‘_’ are used to indicate super- and subscripts.
If you write a text where the underscore is often used in a different context, Org's convention to always interpret these as subscripts can get in your way.
Configure the variable 'org-use-sub-superscripts' to change this convention ₆In example₆ 
#+BEGIN_SRC emacs-lisp :results none
org-use-sub-superscripts nil        ;; don't use `_' for subscript
#+END_SRC 

When setting this variable to {}, ‘a_b’ will not be interpreted as a subscript, but ‘a_{b}’ will.
********* Special symbols
You can use LaTeX-like syntax to insert special symbols like ‘\alpha’ to indicate the Greek letter, or ‘\to’ to indicate an arrow. Completion for these symbols is available, just type ‘\’ and maybe a few letters, and press M-<TAB> to see possible completions. Unlike LaTeX code, Org mode allows these symbols to be present without surrounding math delimiters, for example:

'Angles are written as Greek letters \alpha, \beta and \gamma '
*********  LaTeX fragments
LaTeX fragments don't need any special marking at all. The following snippets will be identified as LaTeX source code:

Environments of any kind. The only requirement is that the \begin and \end statements appear on a new line, at the beginning of the line or after whitespaces only.

Text within the usual LaTeX math delimiters. To avoid conflicts with currency specifications, single ‘$’ characters are only recognized as math delimiters if the enclosed text contains at most two line breaks, is directly attached to the ‘$’ characters with no whitespace in between, and if the closing ‘$’ is followed by whitespace, punctuation or a dash. For the other delimiters, there is no such restriction, so when in doubt, use ‘\(...\)’ as inline math delimiters.
For example:
#+BEGIN_EXAMPLE

     \begin{equation}
     x=\sqrt{b}
     \end{equation}
     
     If $a^2=b$ and \( b=2 \), then the solution must be
     either $$ a=+\sqrt{2} $$ or \[ a=-\sqrt{2} \].
#+END_EXAMPLE

******** bibtex
********* org bibtex commands
http://orgmode.org/worg/org-api/org-bibtex-api.html

'org-bibtex-export-to-kill-ring' Export current headline to kill ring as bibtex entry.

'org-bibtex-yank' If kill ring holds a bibtex entry yank it as an Org-mode headline.

'org-bibtex' (&optional filename) Export each headline in the current file to a bibtex entry. Headlines are exported using org-bibtex-export-headline.

'org-bibtex-create' (&optional arg nonew) Create a new entry at the given level. With a prefix arg, query for optional fields as well. If nonew is t, add data to the headline of the entry at point.

'org-bibtex-create-in-current-entry' (&optional arg) Add bibliographical data to the current entry. With a prefix arg, query for optional fields.
******* links
******** Base
Org will recognize plain URL-like links and activate them as clickable links. The general link format, however, looks like this:
#+BEGIN_SRC 
[[link][description]]       or alternatively           [[link]]
#+END_SRC
If you place the cursor at the beginning or just behind the end of the displayed text and press <BACKSPACE>, you will remove the (invisible) bracket at that location. This makes the link incomplete and the internals are again displayed as plain text.
******** keybinds
http://orgmode.org/manual/Handling-links.html

| C-u C-c C-o | open link in EMACS         |
| C-c %       | mark position on org       |
| C-C &       | go back to marked position |
******** External Links
external linksstart with a short identifying string followed by a colon. There can be no space after the colon. The following list shows some examples for each link type.

#+BEGIN_EXAMPLE
     http://www.astro.uva.nl/~dominik          on the web
     doi:10.1000/182                           DOI for an electronic resource
     file:/home/dominik/images/jupiter.jpg     file, absolute path
     /home/dominik/images/jupiter.jpg          same as above
     file:papers/last.pdf                      file, relative path
     ./papers/last.pdf                         same as above
     file:/myself@some.where:papers/last.pdf   file, path on remote machine
     /myself@some.where:papers/last.pdf        same as above
     file:sometextfile::NNN                    file, jump to line number
     file:projects.org                         another Org file
     file:projects.org::some words             text search in Org file1
     file:projects.org::task title            heading search in Org file
     file+sys:/path/to/file                    open via OS, like double-click
     file+emacs:/path/to/file                  force opening by Emacs
     docview:papers/last.pdf::NNN              open in doc-view mode at page
     id:B7423F4D-2E8A-471B-8810-C40F074717E9   Link to heading by ID
     mailto:adent@galaxy.net                   Mail link
     gnus:group                                Gnus group link
     gnus:group#id                             Gnus article link
     bbdb:R.Stallman                          BBDB link (with regexp)
     irc:/irc.com/#emacs/bob                   IRC link
     info:org#External links                   Info node link
     shell:ls .org                            A shell command
     elisp:org-agenda                          Interactive Elisp command
     elisp:(find-file-other-frame "Elisp.org") Elisp form to evaluate
#+END_EXAMPLE

******** Links to org files (Internal) 
********* link to org mode Headline
-stand on the section you want to link to and press C-c l to store its location
then use C-c C-l to insert that save link (location when needed) 

-you can also specify it by file name::header name like this

[[file:/home/zeltak/Dropbox/Org/Tech/linux.org::Term color theme (.colors)]]

********* link to org mode Line Number
one can use line numbers in file using ::n where 'n' is the line number but thats not recommend
insert a link that looks like this:
[[file:/PATH/TO/ORGFILE::25]]
where the ::25 means line 25 in that file
[[black%20ice][black ice]]
******** Configure tab key or Enter key to follow links
;use RET or TAB to follow a link?
 (setq org-return-follows-link t)
 ;(setq org-tab-follows-link t)
******** Custom links
	 
********* Tag Searches
For another use case, the following code defines links which search your headlines for specific tags.
#+BEGIN_SRC emacs-lisp :results none
(org-add-link-type
 "tag"
 (defun endless/follow-tag-link (tag)
   "Display a list of TODO headlines with tag TAG.
With prefix argument, also display headlines without a TODO keyword."
   (org-tags-view (null current-prefix-arg) tag)))
#+END_SRC

Then, merely write your links as

#+BEGIN_EXAMPLE
[[tag:work+phonenumber-boss][NAMEOFLINK]]
#+END_EXAMPLE

The syntax allowed, described here:

http://orgmode.org/manual/Matching-tags-and-properties.html#Match-syntax

is the same used for the org-tags-view command.

********* Grep links
try this code

#+BEGIN_SRC emacs-lisp :results none
org-add-link-type
 "grep"
 (defun endless/follow-grep-link (regexp)
   "Run `rgrep' with REGEXP as argument."
   (grep-compute-defaults)
   (rgrep regexp "" (expand-file-name "./"))))
#+END_SRC

Then, when you click on something like the following link in an org-mode buffer, you'll be taken to a list of results.
#+BEGIN_EXAMPLE
TODO Refactor [[grep:OldClassName][OldClassName]] into NewClassName
#+END_EXAMPLE

[[Bittorrent-sync%20(btsync)][Bittorrent-sync (btsync)]] CLI Admin
******** org-id 
********* base commands
org-id-get-create
       Create an ID for the entry at point if it does not yet have one.
       Returns the ID (old or new).  This function can be used
       interactively, with prefix argument the creation of a new ID is
       forced, even if there was an old one.

org-id-get
       Get the ID property of an entry.  Using appropriate arguments
       to the function, it can also create the ID for this entry.

org-id-goto
       Command to go to a specific ID, this command can be used
       interactively.

org-id-get-with-outline-path-completion
       Retrieve the ID of an entry, using outline path completion.
       This function can work for multiple files.

org-id-get-with-outline-drilling
       Retrieve the ID of an entry, using outline path completion.
       This function only works for the current file.

org-id-find
       Find the location of an entry with specific id.
********* copy and id and linking to an id in orgmode
to copy an id `use org-id-copy` (also creates one if missing on header for you)

to link to it use in org the internal `id` command:
id:B7423F4D-2E8A-471B-8810-C40F074717E9  >>> Link to heading by ID

so you would go:
#+BEGIN_EXAMPLE
id: PASTE ID FROM KILL RING
#+END_EXAMPLE

$Note$ you can also use this in the config and then the copied id's will appear in the normal insert link menu (default bound to C-c C-l

#+BEGIN_SRC emacs-lisp :results none
(setq org-id-link-to-org-use-id t)
 #+END_SRC

******** force open links in Emacs 
********* for documents (docview)
docview:papers/last.pdf::NNN              open in doc-view mode at page 
********* general open by Emacs
 file+emacs:/path/to/file                  force opening by Emacs
******* view
******** TODO make subfolders folded(hidden) by default
use this

#+BEGIN_EXAMPLE
:PROPERTIES:
:VISIBILITY: folded
:END:
#+END_EXAMPLE

*** sublime text

**** search and replace

***** keyboard shortcuts

- ctrl+enter: replace all
 - alt+enter: find all
 - enter: find next
 - shift+enter: find prev

***** replace on mulitple documents

To open the search panel for multiple files, press Ctrl + Shift + F.
 You can use the keyboard to control the search panel and some search
actions:
 Toggle Regular Expressions Alt + R
 Toggle Case Sensitivity Alt + C
 Toggle Exact matches Alt + W
 Find Next Enter

*** vim
    
**** $intro/help

***** help

you can use the :help command anytime to take a look at any vim/plugin
function
 also use
 :h
 for shorter access
 to navigate in help
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-23-08-11-scrot.png]]

***** config file locations

[[~/Dropbox/Org/Tech/linux_files/2011-05-13-22-03-53-scrot.png]]

***** show history of commands

to show the history of commands issue:
 q:
 (in normal mode)

***** vim cheatsheet p2

\-BK-q > close doc (:bufferdelete)
 \-BK-d > close doc with no save(:bufferdelete!)
 \-BK-d-d-d > close ALL docs no save
 \-p > MRU
 \-\-w > easy motion
 c-J > ulti snips move forward
 c- c-  > TComment
 \-\-u > gundo
 \-y > yankring
 """" Exit insert mode methods.
 :imap ` <Esc>
 :imap jj <Esc>
 """" Copy & Paste etc
 "paste from system clip (both normal and visual)
 nmap ggp "+p
 vmap ggy "+p
 vmap ggy "+yy
 nmap ggy "+yy
 vmap ggw "+yw
 nmap ggw "+yw
 ggd duplicate a word
 ggb duplicate a section below
 \-\-/ > clear higlight search
 w!! > write file as sudo if forgot ti use sudo

***** create personal help file

[[~/Dropbox/Org/Tech/linux_files/attach/template.help.txt][Attachment #21
(template.help.txt)]]
 create personal help file
 User help files should have extension .txt . That first line should
start with the name of the file itself, with the .txt extension, and
between stars.
 see attached for a template file
 1.create a simple help file and append the name of the file between 2
'' in the first line IE:
 MYHELPFILE
 2.then put inside the help file all the text needed
 3.save the text file in ~/.vim/doc/
 4.then issue in vim:

 :helptags ~/.vim/doc

 and then to access that file issue:

 :help MYHELPFILE

 example file:
 shorts.txt
 \-BK-q > close doc (:bufferdelete)
 \-BK-d > close doc with no save(:bufferdelete!)
 \-BK-d-d-d > close ALL docs no save
 TIPS:
 Use stars to create a point to which the user can jump, then bars
used like |stars| will jump to it. Or if you define options, have a
header like 'option' just above the definition, then 'option' will
jump to it (but you would of course need to patch the C code to create a
new option). You can jump to tags in existing helpfiles the same way,
 e.g. |help.txt|, |bars|, 'compatible'.

***** current vimrc

[[~/Dropbox/Org/Tech/linux_files/attach/.vimrc][Attachment #22 (.vimrc)]]
 updated 1/8/2012

**** .Vimrc

***** options and set (see what option defer from default values)

typing the command options will bring the vim options screen
 :options
 to set see what option defer from default values use the set command:
 :set
 [[~/Dropbox/Org/Tech/linux_files/2011-05-13-22-14-37-scrot.png]]

***** verbose mode (check which option was set and from where)

if you issue a command in verbose mode:
 :verbose set wildmode
 it will let you know who used it last
 [[~/Dropbox/Org/Tech/linux_files/2011-05-13-22-11-00-scrot.png]]

***** wild menu

When 'wildmenu' is on, command-line completion operates in an enhanced
mode. On pressing 'wildchar' (usually <Tab>) to invoke completion, the
possible matches are shown just above the command line, with the first
match highlighted (overwriting the status line, if there is one).
 to use it add this to vimrc:
 wildmenu-on
 NOTE: When 'wildmode' is used, "wildmenu" mode is used where "full"
is specified. "longest" and "list" do not start "wildmenu" mode.

***** ctrl-c/v copy/paste

STRING) = "doublecmd"
  OB APP ROLE(UTF8 STRadd this part to your vimrc to get normal
copy/paste
 source $VIMRUNTIME/mswin.vim
 also issue this to retain y for yanking:

:set selectmode=

 'selectmode' 'slm'string(default "")
 global
 {not in Vi}
 This is a comma separated list of words, which specifies when to
start
 Select mode instead of Visual mode, when a selection is started.
 Possible values:
 mousewhen using the mouse
 keywhen using shifted special keys
 cmdwhen using "v", "V" or CTRL-V
 See |Select-mode|.
 The 'selectmode' option is set by the |:behave| command.

***** location of vimrc file

its called  vimrc and its in the user home folder (root)
 IE:
 c:\Users\ekloog\ vimrc
 There is no ~/.vim directory on Windows: there, it's ~/vimfiles (and,
 just like ~/.vim on Unix, it does not exist by default). its also under
the home dir
 IE:
 c:\Users\ekloog\vimfiles\

***** Disable backups

disable the backup for vim by adding this to .vimrc
 :set nobackup
 The other, and better, option is to set a dedicated backup directory
 :set backupdir=~/.backup,.,/tmp
 Now all of the backup files get created in a single .backup directory.
This isn't a perfect solution. Files with identical names (index.html)
will get overwritten, but I've never once used a vim backup file, so
this is still better than nothing.
 best solution:
 Tip: Its also neat to state all backup location for all system (see
below) vim will go one by one until it finds one that exists and use
that
 set backupdir=~/.vim-tmp,~/tmp,/var/tmp,$HOME/Local\ Settings/Temp
 Warning make sure no other backup lines are in you vimrc when using
above options

***** disable swap file

Try :set noswapfile, or without the ":" in your vimrc file

***** debug vimrc

use the :finish command. the command will end vim reading from the rc at
the finish placment
 so one could go section by section and see when the error goes away
 """zeltak vim config 1.2013
 """""""""""""""""""""""""""""""""STARTUP COMMANDS
 "For patogen
 execute pathogen#infect()
 call pathogen#helptags()
 syntax on "syntax higlighting .
 filetype plugin indent on " Automatically detect file types
 set nocompatible
 :finish
 set mouse=a " automatically enable mouse usage
 set history=1000 " Store a ton of history (default is 20)
 set hidden " allow buffer switching without saving
 let MRU Max Entries = 40
 vim will read only until set noncompatible in this case
 Warning dont put the :finish command inside a code block!!! (if
then etc areas)

**** buffers

***** show all buffers

issue the ball command

:ball

***** close a buffer

This deletes the buffer (which translates to close the file)

:bd

 Force close a buffer (no save)

:bd!

**** cut/paste

***** cut from here to end of line

cut from here to end of line:
 d$

***** keys

Cutting and copying from visual selections

 Once you have a highlighted selection, you probably want to do
something with it. Some of the more useful commands you can give when an
area of text is highlighted:
 d Cut (delete) the highlighted text and put it into the clipboard.
 y Copy (or yank, which is vim-ese for "copy") the highlighted text
into the clipboard.
 c Cut the highlighted text into the clipboard. This is just like d,
except it leaves the editor in insert mode.
 Cutting and copying from non-visual selections
 If you know exactly what you want to copy or cut, you can do it without
entering visual mode. This saves time.
 d{motion} Cut the text moved over by {motion} to the clipboard. For
instance, dw would cut a word and dfS would cut from the cursor up to
and including the next capital S on the current line of text.
 y{motion} Copy the text moved over by {motion}.
 c{motion} Cut the text moved over by {motion} and leave the editor
in insert mode.
 dd Cut the current line.
 yy Copy the current line.
 cc Cut the current line and leave the editor in insert mode.
 D Cut from the cursor to the end of the current line.
 Y Yank the whole line, just like yy. (Yes, it's inconsistent! You
can use y$ to do what you would expect Y to do.)
 C Cut from the cursor to the end of the current line and leave the
editor in insert mode.
 x Cut the current character. (This is sort of like a command-mode
backspace.)
 s Cut the current character and leave the editor in insert mode.
 Pasting

 Pasting is easy. Put the cursor where you want the pasted text and type
p

***** Pasting large amounts of text into Vim

Every Vim user likes to enable auto-indenting of source code, so Vim can
intelligently position you cursor on the next line as you type. This has
one big ugly consequence however: when you paste text into your
terminal-based Vim with a right mouse click, Vim cannot know it is
coming from a paste. To Vim, it looks like text entered by someone who
can type incredibly fast :) Since Vim thinks this is regular key
strokes, it applies all auto-indenting and auto-expansion of defined
abbreviations to the input, resulting in often cascading indents of
paragraphs.
 There is an easy option to prevent this, however. You can temporarily
switch to "paste mode", simply by setting the following option:
 set pastetoggle=<F2>
 Then, when in insert mode, ready to paste, if you press <F2>, Vim will
switch to paste mode, disabling all kinds of smartness and just pasting
a whole buffer of text. Then, you can disable paste mode again with
another press of <F2>. Nice and simple. Compare paste mode disabled vs
enabled:

***** yank words not the whole line

do that:
 either with a count (y4e, for example)
 or
 using visual mode (press v, move the cursor around, y to yank

***** disallow 1 character to move to registers

put this in .vimrc
 "make cut,yank etc only work for more than 1 character
 nnoremap x " x
 and
 create this file:
/home/zeltak/Dropbox/multisync/vim/.vim/after/plugin/x not single.vim
 and out the same line there
 nnoremap x " x

**** gui

***** colors

***** cursor under terminals

First make sure your terminal is configured to show a blining cursor.
 then add these lines to the vimrc:
 "color of cursor in terminals
 if &term =~ "xterm\\|rxvt"
 :silent !echo -ne "\033]12;green\007"
 let &t SI = "\033]12;red\007"
 let &t EI = "\033]12;green\007"
 autocmd VimLeave  :!echo -ne "\033]12;green\007"
 endif
 you can change colors to what is needed

***** cursor under X11 (Gvim)

Using gvim with the defaults, the cursor shape is a block when in n-v-c
modes (normal mode, or visual selection mode, or command mode while
entering a colon command), and the shape changes to a vertical bar when
in i (insert) mode. The color and blink rates do not change.
 Here is an example for gvim showing how to customize the cursor
properties:
 highlight Cursor guifg=white guibg=black
 highlight iCursor guifg=white guibg=steelblue
 set guicursor=n-v-c:block-Cursor
 set guicursor+=i:ver100-iCursor
 set guicursor+=n-v-c:blinkon0
 set guicursor+=i:blinkwait10
 Line 1 defines the color highlighting used for n-v-c modes (set in line
3),
 and line 2 defines a different color for insert mode (set in line 4).
 Line 4 also sets the cursor shape to a 100% sized vertical bar for
insert mode (the default is ver25, a 25% vertical bar).
 Line 5 disables blinking (blinkon value 0) for n-v-c modes
 line 6 increases the default blink rate for insert mode.

***** status bar

color of status line
 hi StatusLine
 color of speller
 hiSpellBad

**** editing

***** basic text insertion

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-11-33-12-scrot.png]]

***** quick edits

r+letter replace letter
 IE:
 rs will replace letterx tos
 R-Does that for multiple characters
 cw- chnage word
 IE:
 cw will delete word x
for multiple words use:
 c3w

***** join line

use J to join lines
 J will join following line x to current line Y
J2 will join following2 lines x to current line Y
 you can also use gJ to append line with spaces

***** append prefix text to lines/blocks

prefix
 Go to the first foo, press Ctrl-V to enter visual block mode and press
"down" (usually j key) until all the lines with "foo" are marked.
 Then press I to insert at the beginning (of the block).
 after you press ESC The inserted characters will be inserted in each
line at the left of the marked block.
 Append
 To insert at the end, press again Ctrl-V, move up/down to mark all
affected lines and then press "end" to extend the selection until the
end of the lines.
 Now you can press A to append at the end of all the lines, just like
previously with I.
 The visual selection can also be done with normal movement commands. So
to comment a whole block in C you could move to the opening brace and
type <Ctrl-V>%I//<Esc>.
 
 notes:
 ust an addition: if Ctrl-V does not start visual block mode in Vim on
Windows, one should use Ctrl-Q instead.
 
 
 A variation of then answer is to mark visual block with shift+V
thenalter the block in ex mode: :'<,'>s/\^/prexix text/
:'<,'>s/$/suffix text/ Note than "'<,'>" is printed automatically by
vim when you press ":" 
 
 To uncomments use visual block (mark with Ctrl+V). One the column with
comment sign "//" is marked press "d" to remove the comments. dont
forget about C++ comments (//) too :)

***** raise number by 1

stand and a number and press:
 ctrl+a
 the number should increase by 1
 it is good to combine that with a macro

***** Remove empty lines

issue this to remove all empty lines from a document:

:g/\^$/d

***** delete all lines containing a pattern
The ex command g is very useful for acting on lines that match a pattern. You can use it with the d command, to delete all lines that contain a particular pattern, or all lines that do not contain a pattern.

For example, to delete all lines containing "profile" (remove the /d to show the lines that the command will delete):

#+BEGIN_EXAMPLE
:g/profile/d
#+END_EXAMPLE

More complex patterns can be used, such as deleting all lines that are empty or that contain only whitespace:

:g/^\s*$/d

To delete all lines that do not contain a pattern, use g!, like this command to delete all lines that are not comment lines in a Vim script:

:g!/^\s*"/d

Note that g! is equivalent to v, so you could also do the above with:

:v/^\s*"/d

The next example shows use of \| ("or") to delete all lines except those that contain "error" or "warn" or "fail" (:help pattern):

:v/error\|warn\|fail/d

***** text aligment

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-21-08-13-scrot.png]]

***** Breaking lines

25.1Breaking lines
 Vim has a number of functions that make dealing with text easier. By
default,
 the editor does not perform automatic line breaks. In other words, you
have
 to press <Enter> yourself. This is useful when you are writing programs
where
 you want to decide where the line ends. It is not so good when you are
 creating documentation and want the text to be at most 70 character
wide.
 If you set the 'textwidth' option, Vim automatically inserts line
breaks.
 Suppose, for example, that you want a very narrow column of only 30
 characters. You need to execute the following command:

:set textwidth=30

 
 
 Note:
 The 'wrap' option makes Vim display lines with a line break, but
this
 doesn't insert a line break in the file.
 
 usually you want the text width to be at least 100 or more

**** erros

***** marks and other menus disapper quickly

make sure this line is commented out or missing from your vimrc:
 set lazyredraw

***** E21: Cannot make changes, 'Modifiable' is off

if you get this error:
 E21: Cannot make changes, 'Modifiable' is off
 :set modifiable
 Pasted from
<[[https://mail.google.com/mail/u/0/?ui=2&view=bsp&ver=ohhl4rw8mbn4][https://mail.google.com/mail/u/0/?ui=2&view=bsp&ver=ohhl4rw8mbn4]]>

**** folding

***** basic

in visual mode: select a few lines of text using the movement keys, and
type zf
 if you wanted to create a fold from lines 20 through 101, you could
just use :20,101 fold and press Enter
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-20-31-01-scrot.png]]
 [[~/Dropbox/Org/Tech/linux_files/2011-01-04-21-00-03-scrot.jpg]]

***** make folds stick between sessions

to see to it that Vim saves and restores folds when a file is closed and
re-opened, add these two lines to your ~/.vimrc:
 au BufWinLeave ? mkview 1
 au BufWinEnter ? silent loadview 1
 Now, each time you close a file, its fold state will be saved and
reloaded when you reopen the file in Vim.

***** use markers to signal fold inside text

MARKERfold-marker
 Vim also offers a marker method, where folds are set by visible text
markers rather than invisible manual marks. To set this mode, run :set
foldmethod=marker. Then, when you set a fold, you'll see a marker with
three braces at the beginning and end of the fold, like this:
 
 #{{{Folded section name
 Folded text goes here...
 #}}}
 The braces are set off by comment characters, depending on the type of
file. So, if you're working with an HTML file, you'll see <!--{{{-->,
and if you're editing a Python script, you'll see #{{{. You can also
insert fold markers manually if you want, and Vim will recognize them as
well. Vim will also delete the markers with the zd command, whether they
were set manually or not.

**** gvim

***** set gui options (.gvimrc)

There's usually nothing of vital importance in gvimrc; it's mainly used
for configuring user preferences and whatnot.
 example:
 set guioptions=emrT
 where:
 e shoes the tab line
 m indicates the menu bar is present
 t-shows the tearoff menu
 T-shos the toolbar
 If you want either the menu or the toolbar to be hidden all the time,
add one of the following lines to your vimrc file. To remove the menu
completely:
 :set guioptions-=m
 To remove the toolbar completely:
 :set guioptions-=T
 Other parts of the GUI can be modified with the setguioptions command.
To find out what you can modify, look in :help 'guioptions'.

***** Toggle menu and toolbar

Toggle menu and toolbar
 If you are used to working with Vim in the console mode, you are used
to having no menus and toolbars at the top of the window. Gvim, however,
provides both a menu and toolbar by default in the GUI.
 Many users believe that extra room for text is more important than the
menu and the toolbar. However, some scripts add useful functionality in
the menu, and it is therefore important to have the menus. The solution
for this could be toggling whether the menu and toolbar is shown.
 The following code maps the key combination Ctrl-F2 to toggle the menu
and toolbar in Gvim. You can add it to your vimrc file if you want this
functionality.
 map <silent> <C-F2> :if &guioptions =~# 'T' <Bar>
 \set guioptions-=T <Bar>
 \set guioptions-=m <bar>
 \else <Bar>
 \set guioptions+=T <Bar>
 \set guioptions+=m <Bar>
 \endif<CR>
 Now, whenever you don't need the menu and toolbar, you can just press
Ctrl-F2 and you will get the full space for your text.

***** Creating Menus and Toolbar Buttons

Creating Menus and Toolbar Buttons
 You want to add your own commands to Gvim's menus, or toolbar, for
quick access.
 For example, you've written a function that automatically writes
bestselling novels for you, but you're not willing to use it if you have
to type its name every time; you want to invoke it by selecting a menu
option.
 Solution
 Use :set amenu menu command to map a menu item to a command. This is
the GUI equivalent of :map.
 For example,
 :amenu Help.Op&ions :help options<cr> adds a new item called Options to
the Help menu, which invokes :help options. The ampersand (&) signifies
that the character it prefixes can be used as a keyboard shortcut, so in
this case <Alt>+h+t selects this command.
 Discussion
 You're not restricted to adding items to existing menus; you can create
a new top-level menu simply by specifying a name not currently in use.
For example:

:amenu <silent>&Vim.vim\.org :!xdg-open http://www.vim.org/<cr>

 will create a new top-level menu called Vim with the shortcut key V. It
will contain one entry named vim.org (we escape the . because otherwise
it would create a vim entry which in turn contain an org item). When
invoked it will open the Vim website on systems adhering to the Free
Desktop Specification. The <silent> prefix prevents the command from
being echoed on the command-line.
 If you want to add a dashed separator line between menu items use a
menu item named -SEP- and an empty command, e.g. :amenu Help.-SEP- :.
 To control where a top-level menu appears relative to its neighbours
you need to prefix amenu with a numeric priority: the lower the number
the further right the menu's position. For example, :5amenu First.first
:echo 'first'<cr> creates a top-level menu named First that appears
before all of the others.
 The same approach can be used to position menu items. For example,
:amenu 9999.1 Help.first :echo 'first'<cr> adds a first item to the Help
menu, which appears before the other items.
 You can also use :amenu to add a new toolbar icon:
 :amenu icon=image-path Toolbar.item-name
 command
 For example:

:amenu icon=options.png ToolBar.OptionsHelp :help<cr>

 If the image-path consists only of a filename, as above, Vim prepends
$VIMRUNTIME/bitmaps/ to it.

***** How to Add an Icon to the Vim Toolbar

1.Create the icon

First, create the icon.In the example below I use Gimp.Start
Gimp.From File menu press New.Create an 18x18 pixels bitmap.Draw the
icon.In my example I draw "B->U" (from "Betacode" to "Unicode") as
shown in the image.[[~/Dropbox/Org/Tech/linux_files/vim-b2u.png]]

The bitmap created with Gimp

You must save the icon (or "button") with the extension bmp in Gimp.The
image used in Vim must be a bitmap.

 Study your VIMHOME

Under GNU/Linux, in your home there is a directory called .vim (the name
 starts with a dot).This is the VIMHOME.If there is no such directory
 you should create it.Under Windows you should look for a directory
called vimfiles.See my L^{A}T_{E}X
[[http://www.ub-filosofie.ro/%7Esolcan/wt/gwltx.pdf][Guide]], section
1.2.1.3.2 for vimfiles and other specific problems of the use of Vim
under Windows.You need three directories from VIMHOME: bitmaps, plugin
and
 scripts.The bitmaps and plugin are standard Vim folders.Do not change
 their names!The folder scripts is a custom folder.I have put the
bitmap created according to the
above[[http://www.ub-filosofie.ro/%7Esolcan/wt/gnu/v/vim-toolbar-icon.html#icon][]]escription
in the bitmaps folder.I have named it b2u.bmp; you should remember the
name of the image.In the scripts folder I have put a
s[[http://www.ub-filosofie.ro/%7Esolcan/wt/gnu/a/agvim.html][script for
converting Betacode into Unicode]]In the example below, I am going to
use this vim script.

 Modify the Vim toolbar
 F

or the addition of the b2u.bmp image to the Vim toolbar we have to
 write a vim script and place it into the plugin folder in VIMHOME.I
 hace named my plugin zToolBar.vim; the extension is important, but you
 may choose any basename you like.The content of the script is shown in
the "Vim script" figure.
 [[~/Dropbox/Org/Tech/linux_files/vim-b2u-plugin.png]]V

i
 m scriptI

n the first line 1.190 indicates a position on the toolbar.In
ToolBar.b2u "b2u" is the name of the image (without the bmp
extension).The last
 item on the first line is a short description of the action associated
 with the icon (or button, as you want to call it) on the toolbar.In
the second line, ToolBar.b2u follows the same logic as on in the first
line.The last part,<Esc>:source
~/.vim/scripts/beta2unicode.vim<CR>starts with a change of the Vim mode
to the command line mode.The
 command is to "source" (to interpret and execute) the script.The
 VIMHOME here is ~/.vim/.The folder in the VIMHOME is scripts| and
\verb|beta2unicode.vim is the name of the script.<CR> is the equivalent
of pressing the Enter key.The button on the toolbar is working in the
insert mode of Vim.In the
 "Betacode" figure we see how we write a word in the betacode
transcription.
 [[~/Dropbox/Org/Tech/linux_files/vim-b2u-logoj.png]]
 B

etacodeW

hen you press the newly created button the text is converted from
Betacode to Unicode.
 [[~/Dropbox/Org/Tech/linux_files/vim-b2u-logos.png]]
 U

nicodeN

ow we can copy and paste the Greek text in another file.
 Pasted from
<h[[http://www.ub-filosofie.ro/%7Esolcan/wt/gnu/v/vim-toolbar-icon.html][http://www.ub-filosofie.ro/~solcan/wt/gnu/v/vim-toolbar-icon.html<]]

[[http://www.ub-filosofie.ro/%7Esolcan/wt/gnu/v/vim-toolbar-icon.html][/A>]]

***** set default font

In gvim, you can change the font using the Edit menu, Select Font. An
alternative is to enter the command:
 :set guifont=
 which will pop on the selection menu
 then after selecting the one you like visually either edit your .vimrc
and add these lines:
 if has('gui running')
 set guifont=Monaco\ 11
 endif
 NOTE: make sure to escape (\) the size
 or edit .gvimrc and just add this line
 set guifont=Monaco\ 11

***** maximize gvim winows on windows

use this:
 au GUIEnter  simalt ~x "maximize gui on windows machines
 in your .gvimrc or .gvimrc.local (for spf13)

**** macro

***** basic macro

first press qX (to start recoreding a macro saved as X)
 this could be any letter such as qi,qw etc..
 then record your sequences and then press 'q' again to finish recording
the macro
 this can be combined with all the vim keys in example:
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-21-41-05-scrot.png]]

***** copy text from one buffer to another repetadly

first press qX (to start recoreding a macro saved as X)
 then use: ggyG to select all text in that buffer
 then enter :bn to switch to the next buffer
 then G to go to the end of that buffer and press p for pasting
 the whole command in succesion looks like this:

qiggyG:bn<CR>Gpq

Note: that should work fine if you only have two buffers

**** marks

***** add a mark

To set a mark, type m followed by a letter.
 For example, ma sets mark a at the current position (line and
column). If you set mark a, any mark in the current file that was
previously identified as a is removed. If you set mark A, any
previous mark A (in any file) is removed.

***** intro

A mark allows you to record your current position so you can return to
it later. There is no visible indication of where marks are set.
 Each file has a set of marks identified by lowercase letters (a-z). In
addition there is a global set of marks identified by uppercase letters
(A-Z) that identify a position within a particular file. For example,
you may be editing ten files. Each file could have mark a, but only one
file can have mark A.
 Because of their limitations, uppercase marks may at first glance seem
less versatile than their lowercase counterpart, but this feature allows
them to be used as a quick sort of "file bookmark." For example, open
your .vimrc, press mV, and close Vim. The next time you want to edit
your .vimrc, just press 'V to open it. This assumes that you have kept
the default 'viminfo' behavior, so that uppercase marks are all
remembered in the viminfo-file between Vim sessions.
 As well as the letter marks, there are various special marks.
 The marks for recently-edited files are saved (provided the 'viminfo'
option has the 'parameter), so marks from previous sessions can be used
when editing in the future. :help 'viminfo'

***** usefull default marks

jump to last mark used use '0
 to quicky jump between 2 previous marks:``
jump to last edited line: `.
 zeltaks config: show marks \m

***** :marks (see current marks)

issuing :marks
 you'll see marks for ., [, ], ", ', and a few others. Those marks are
present whether you've set any marks manually or not. The [ and ] marks
indicate the last changed or copied ("yanked") text. The [ mark is the
first character of the text that's been changed or yanked, the ] is the
last character of that text. Note that these marks don't work until you
actually make a change in the file.
 The . mark will take you to the last position a change was made. So, '.
will take you to the line where the last change was made in your file,
and `. will take you to the cursor position where the last change was
made.
 If you make a jump within a file -- that is, if you use a movement or
search command to move within the file -- the ` character will return
you to the position you started from. For example, using the G movement
command you can jump to the bottom of the file. If you want to return to
the last cursor position, use `` and you'll be moved back to the last
location of the cursor before using G. We'll discuss jumps in more
detail a bit later.
 The " mark is set to the last position of the cursor when you exited
the previous Vim session, if you have Vim configured to save your
session information using a viminfo file. We'll cover that in just a bit
too.
 Finally, if your session information is being saved, you can also use
numbered marks to return to the last position the cursor was at when you
closed a file. Using numbered marks, `0 will move the cursor to the last
position it was at when you closed a file. `1 will move the cursor to
the last position it was at when you closed the file the time before
last, and so forth.
 If you just want to know where a specific mark is in the file, you can
use :marks markname to display just those marks. To see marks a and B,
for instance, you'd just use :marks aB. This is pretty useful when you
have 10 or 20 marks set.

***** Deleting marks

If you delete a line containing a mark, the mark is also deleted.
 If you wipeout a buffer (command :bw), all marks for the buffer are
deleted.
 The :delmarks command (abbreviated as :delm) may be used to delete
specified marks.
 Command Description
 :delmarks a delete mark a
 :delmarks a-d delete marks a, b, c, d
 :delmarks abxy delete marks a, b, x, y
 :delmarks aA delete marks a, A
 :delmarks! delete all lowercase marks for the current buffer (a-z)

***** Special marks

Vim has some special marks which it sets automatically. Here are some of
the most useful:
 [[~/Dropbox/Org/Tech/linux_files/Image_iyp3uIGkW7BTr.jpg]]

***** deleting using marks

Marks are useful for more than just moving about a file -- though that
feature alone is very useful. Marks can also be used to specify a range
for commands. Normally, if you want to delete a few lines, you can use
line numbers to specify the line, like so:
 :22,55 d
 That will delete lines 22 through 55. But it's much easier to remember
marks than line names most of the time. If you have line 22 marked as g
and 55 marked as k, you could substitute :'g,'k d and remove those lines
without having to go back and confirm the line numbers. This works with
other commands too, so you could just as easily write those lines to a
file using :'g,'k w filename or use the range for a substitution command
like this:
 :'g,'k s/foo/bar/g

***** Using marks

To jump to a mark enter an apostrophe (') or backtick (`) followed by a
letter.
 Using an apostrophe jumps to the beginning of the line holding the
mark, while a backtick jumps to the line and column of the mark.
 Using a lowercase letter (for example `a) will only work if that mark
exists in the current buffer. Using an uppercase letter (for example `A)
will jump to the file and the position holding the mark (you do not need
to open the file prior to jumping to the mark).
 Each file can have mark a -- use a lowercase mark to jump within a
file.
 There is only one file mark A -- use an uppercase mark to jump between
files.
 [[~/Dropbox/Org/Tech/linux_files/Image_uZGBxybMzQgoeJVCpFt08Q_0001.jpg]]
 Commands like d'a operate "linewise" and include the start and end
lines.
 Commands like d`a operate "characterwise" and include the start but not
the end character.
 It is possible to navigate between lowercase marks:
 [[~/Dropbox/Org/Tech/linux_files/Image_uZGBxybMzQgoeJVCpFt08Q_0002.jpg]]
 The above commands take a count. For example, 5]` jumps to the fifth
mark after the cursor.

***** Vim mark quick reference

mxtells Vim to add a mark called x.
 `x tells Vim to return to the line and column for mark x.
 'xtells Vim to return to the beginning of the line where mark x is
set.
 `.moves the cursor to the line and column where the last edit was
made.
 '. moves the cursor to the line where the last edit was made.
 '" moves the cursor to the last position of the cursor when you
exited the previous session.
 :marksshows all marks set.
 :marks x shows the mark named x.
 :jumpsshows the jumplist.
 Ctrl-o moves the cursor to the last jump.
 Ctrl-i moves the cursor to the previous jump.
 H moves the cursor to the top of the screen or viewport.
 M moves the cursor to the middle of the screen or viewport.
 Lmoves the cursor to the bottom of the screen or viewport.

***** delete ALL marks

To delete them:

 :delmarks A-Z0-9

***** where are marks stored

~/.viminfo contains histories and marks, if you don't want them any
more, you can delete this file. Vim will recreate it next time.

**** mapping

***** names for keys

Note: its not possible to map Shigt-Ctrl-LETTER
 These names for keys are used in the documentation. They can also be
used
 with the ":map" command (insert the key name by pressing CTRL-K and
then the
 key you want the name for).
 notationmeaning equivalentdecimal value(s)
 <Nul>zeroCTRL-@ 0 (stored as 10) <Nul>
 <BS>backspaceCTRL-H 8backspace
 <Tab>tabCTRL-I 9tab Tab
 linefeed
 <NL>linefeedCTRL-J 10 (used for <Nul>)
 <FF>formfeedCTRL-L 12formfeed
 <CR>carriage returnCTRL-M 13carriage-return
 <Return>same as <CR><Return>
 <Enter>same as <CR><Enter>
 <Esc>escapeCTRL-[ 27escape <Esc>
 <Space>space 32space
 <lt>less-than< 60<lt>
 <Bslash>backslash\ 92backslash <Bslash>
 <Bar>vertical bar|124<Bar>
 <Del>delete127
 <CSI>command sequence intro ALT-Esc 155<CSI>
 <xCSI>CSI when typed in the GUI<xCSI>
 <EOL>end-of-line (can be <CR>, <LF> or <CR><LF>,
 depends on system and 'fileformat')<EOL>
 <Up>cursor-upcursor-up cursor up
 <Down>cursor-downcursor-down cursor down
 <Left>cursor-leftcursor-left cursor left
 <Right>cursor-rightcursor-right cursor right
 <S-Up>shift-cursor-up
 <S-Down>shift-cursor-down
 <S-Left>shift-cursor-left
 <S-Right>shift-cursor-right
 <C-Left>control-cursor-left
 <C-Right>control-cursor-right
 <F1> - <F12>function keys 1 to 12function key
function-key
 <S-F1> - <S-F12> shift-function keys 1 to 12<S-F1>
 <Help>help key
 <Undo>undo key
 <Insert>insert key
 <Home>homehome
 <End>endend
 <PageUp>page-uppage up page-up
 <PageDown>page-downpage down page-down
 <kHome>keypad home (upper left)keypad-home
 <kEnd>keypad end (lower left)keypad-end
 <kPageUp>keypad page-up (upper right)keypad-page-up
 <kPageDown>keypad page-down (lower right)keypad-page-down
 <kPlus>keypad +keypad-plus
 <kMinus>keypad -keypad-minus
 <kMultiply>keypad keypad-multiply
 <kDivide>keypad /keypad-divide
 <kEnter>keypad Enterkeypad-enter
 <kPoint>keypad Decimal pointkeypad-point
 <k0> - <k9>keypad 0 to 9keypad-0 keypad-9
 <S-...>shift-keyshift <S-
 <C-...>control-keycontrol ctrl <C-
 <M-...>alt-key or meta-keymeta alt <M-
 <A-...>same as <M-...><A-

***** Setting a mapping

To set a mapping while in Vim, enter command mode and use the map
command. Here's a quick example:
 :map <F10> <Esc>:tabnew<CR>
 The syntax is pretty simple. First you tell Vim that you're setting a
mapping. Then, tell Vim the key that will be bound to the action --- in
this case, F10. Finally, spell out the action that Vim will perform when
you use F10. This is pretty easy, because you're basically just listing
the same keystrokes that you'd use if you were doing it manually.
 In this example, we tell Vim to enter command mode (Esc:) and run the
tabnew command, followed by the carriage return to return us to normal
mode. (<CR> is the same as <Enter>, just faster to type.) Now, when you
type F10 in normal mode, visual mode, or operator-pending mode, Vim will
open a new tab.
 Every now and again, it might be useful to set a mapping on the fly ---
but the odds are, if it's worth doing once, it's worth setting the
mapping permanently. To do this, just open your .vimrc and insert the
mapping there, like so:
 map <F10> <Esc>:tabnew<CR>
 Type :map with no arguments, and Vim will list the defined mappings.
 The other mapping commands, :imap and :o map, can also be used without
arguments to show what characters are mapped for those modes --- the
:map command only shows keys mapped for modes set with :map.

***** Types of mappings

Types of mappings
 Vim actually recognizes different types of mappings, depending on what
mode the editor is in. For example, you might have a mapping for F2 in
insert mode that enters an HTML tag or a line of C code, and a different
mapping for F2 that toggles the syntax mode on when you're in normal
mode.
 Vim provides several different types of map commands, including:
 map maps keys in normal, visual, and operator-pendingmode.
 cmap handles command-line mappings.
 imap handles insert-only mappings.
 map! maps keys in Vim's command and insert modes.
 nmap maps keys in normal mode only.
 omap maps keys in operator-pending mode only.
 vmap maps keys in visual mode only.
 So, use imap if you want to set a mapping that works in Vim's insert
mode, cmap for mappings to work in command (last line) mode, omap to map
keys to function after an operator has been used in normal mode, and so
on.
 For use in maps
 <CR> : carriage Return for maps
 <Esc> : Escape
 <Leader> : normally \ change with :let mapleader = ","
 <Bar> : | pipe

***** map a chain

use something like this:
 nnoremap <C-w>d :bd<CR>
 where
 C-w-is the item activating the "chain"
 d-is the command after the chain press
 :bd is the command itslef

***** view all current maps

to view all current maps simply issue:
 :map

***** <leader> key

the leader key by fefault means:
 backslash (\)
 you can change with
 :let mapleader = ","

***** bind keys to change a color scheme

nnoremap <Leader><F11> :colorscheme buttercream<CR>
 nnoremap <Leader><F12> :colorscheme ir black<CR>

**** operation

***** commands

Default internal commands start with lower case letter
 all plugin commands/custom commands start with Upper case
 IE in Nerdree issusing:
 :bookmarks
 would result in an Error so this shoudl be used:
 :Bookmarks

***** single instance mode

for simple single instance mode, launch with the follwoing argument:
 --remote-tab-silent
 to make it persistant do the following
 Under linux:
 for the command line launch add this to your bashrc/zshrc:
 alias gvim="gvim --remote-tab-silent" || gvim
 for graphical applications (such as krusader, etc) use this for the
launch command per file type:
 gvim --remote-tab-silent
 Under windows:

 for graphical applications (such as total commander, etc) use the same
as in linux for the launch command per file type:
gvim --remote-tab-silent


***** Tab completion for Vim

By default, Vim will autocomplete words if you use:
 Ctrl-p and Ctrl-n
Ctrl-p searches forward and Ctrl-n searches backward
 For instance, if you've typed in writebackupVersionControl once,
there's no need to type it again -- just type in "writeb" and press
Ctrl-p. Vim will either autocomplete the word, or if "writeb" matches
multiple words, Vim will give you a dropdown with all of your options.
 That's great -- but some folks are used to using the Tab key for
autocompletion. The SuperTab script lets you do that, and a little more.
 Just copy the script to your ~/.vim/plugins directory and fire up Vim.
You'll still be able to use Ctrl-p and Ctrl-n, but you can now use Tab

***** History

To see vims command mode history enter:

:history

 another way and faster way is to enter the first letter and press up:

:set li<up>
 :set lines=75

 Don't forget to check history option and set it to big enough value
in your vimrc
 :set history=1000
 the history is saved in the .viminfo file at $HOME/.viminfo

***** force sudo

" For when you forget to sudo.. Really Write the file.
 cmap w!! w !sudo tee % >/dev/null

***** vim "syntax"

***** Escape characters

escape metacharcters ([ etc)
 ., , \, [, ], \^, $are metacharacters
 +, ?, |, {, }, (, ) must be escaped to use their special function
 \/is / (use backslash + forward slash to search for forward slash)
 Example:

 to change the [8] to [9] in the below example:
 ICAM restable$ciw[8] <-ICAM restable$L CI[8]+ICAM restable$H CI[8]
 use:

 :s/\[8\]/\[9\]/gc
 Tip:

 And then lose your mind in a sea of backslashes. You don't need to. /
is the default pattern separator for search & replace, but you can use
almost anything. The first character after :s is taken as the separator,
so this much-simpler version works just as well:

 :s!/usr/local/!/opt/alt/!

 The next time you find yourself counting backslashes to fix a E486:
Pattern not found error, remember you have an easy alternative.

***** run an external command (bash etc)

If you run :shell or just :sh while you're in the editor, Vim (or Gvim,
if you're partial to Vim's GUI) will place you in an interactive shell.
You can run whatever commands you want, and resume your Vim session by
exiting the shell.
 As most other nix applications, you can also pause Vim with Ctrl-z,
which will drop you back to the shell. When you're finished, you can
resume Vim with fg. (This is a feature of the shell, not a Vim feature.)
 Vim also allows you to execute a command directly from the editor,
without needing to drop to a shell, by using bang (!) followed by the
command to be run. For instance, if you're editing a file in Vim and
want to find out how many words are in the file, run

:! wc %

 This tells Vim to run the file (%) through the wc utility and report
the results. Vim will display the command output at the bottom of the
editing window until you press Enter. Note that this command runs the
file through the command, and not the contents of the buffer -- so if
you haven't saved recently, it won't report your most recent word count.
 Bang works best with non-interactive commands. You wouldn't want to run
top or another interactive command using :! command , but you could drop
to a shell and run such a command with :sh or Ctrl-z.

***** Reading command output

Reading command output
 Most Vim users are already familiar with using the read command, which
inserts text from a specified file into the current buffer, like so:
 :r textfile
 This is handy, but many users aren't aware that you can also read in
the output of shell applications. For example, if you wanted to include
a list of files from a specific directory, you could include them using
this read command:
 :r ! ls -1 /home/user/directory
 This tells Vim to execute the command ls -1 /home/user/directory and
then redirect the output of that command into the buffer. You could also
use this feature to read the text from a Web page into the file that
you're editing, using a text-mode browser such as w3m. It's pretty
simple to grab a page using w3m and dump it right into your editing
session without leaving Vim:
 :r ! w3m
[[http://en.wikipedia.org/wiki/Vi][http://en.wikipedia.org/wiki/Vi]]
-dump
 The -dump option tells w3m to simply spit out the Web page as plain
text and exit.
 It's also possible to execute multiple commands to process your text
before reading it into Vim. A simple example would be to list the
directory contents, then pipe the output to the sort command to sort the
filenames in reverse order, before inserting the text into the current
buffer:
 :r ! ls -1 /home/user/directory | sort -r
 The read command can also come in handy if you're prepping an incident
report from server logs. Let's say you wanted to include all of the
errors in an Apache log that include a specific string. You could grep
the log and insert the input into your Vim session:
 :r ! grep string /var/log/apache2/site-error.log
 Vim makes it easy to redirect the output of most standard nix
utilities into a file, and to pipe text from the file it's editing into
standard nix utilities.

**** movment

***** basic movment

[[~/Dropbox/Org/Tech/linux_files/2010-12-28-13-43-39-scrot.jpg]]
 Example:
 fs will move to the next letters
 the 'g' key is used as "go" so g$ will go to the end of the line
 gm goes to the middle of the line
 M-moves mid screen
 H/L move up/down screen
 zt- moves the current line to top screen
 zb-moves the current line to bottom screen

***** go to line number

NUMBER+G go to NUM line
 115G will go to line to115

***** quick select/move/operate

you can quickly move/operate by using an operator:
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-11-50-51-scrot.png]]
 IE:
 d}-will delete all the paragraph from where you are

***** Global command

Global command
 :g/one\|two/ : list lines containing "one" or "two"
 :g/\^\s$/d : delete all blank lines
 :g/green/d : delete all lines containing "green"
 :v/green/d : delete all lines not containing "green"
 :g/one/,/two/d : not line based
 :v/./.,/./-1join : compress empty lines
 Between lines with marks a and b (inclusive), append each line starting
with "Error" to a file:
 :'a,'b g/\^Error/ .w >> errors.txt
 Delete all lines containing "green" but not "red" or "pink". Command
:g/\^/ matches every line; the current line is copied into variable x;
if any part of x matches (case sensitive) "green" and not "red" and not
"pink", the line is deleted. Replace # with ? for case insensitive.
 :g/\^/let x=getline('.') | if x=~#'green' && x!~#'red' && x!~#'pink' |
d | endif

***** Move efficiently through the file

[[~/Dropbox/Org/Tech/linux_files/2010-12-28-13-52-30-scrot.jpg]]

***** move lines/paragraph

to move between line use:
 ( or )
 to move between paragraph use:
 { or }
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-11-47-19-scrot.png]]

***** jump to previous location

use command:
 Ctrl-o

**** plugins

***** installing

***** manuall install plugins

When you download scripts, they typically come in one of the three
formats:
 1)As a single .vim script file- just copy it to the plugin dir in the
.vim folder
 2)As a compressed (typically Zip) file that typically contains one or
more .vim files (both global and file-type dependent) and
documentation.- uncompress and copy to the plugin dir in the .vin folder
 3)As a vimball, which is an automatic Vim script installation written
in Vim. you need to read each vimball instructions to instakk

***** pathogen

***** install pathogen

issue

 mkdir -p ~/.vim/autoload ~/.vim/bundle; \
 curl -Sso ~/.vim/autoload/pathogen.vim \

[[https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim][https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim]]

 If you're using Windows, change all occurrences of ~/.vim to
~\vimfiles.
 then add this to vimrc:
 execute pathogen#infect()
 Now any plugins you wish to install can be extracted to a subdirectory
under ~/.vim/bundle, and they will be added to the 'runtimepath'.
Observe:

 cd ~/.vim/bundle
 git clone git://github.com/tpope/vim-sensible.git

 Now sensible.vim is installed.

***** non git installs

 1)any plugins (zips, tared etc) you wish to install can be extracted to
a subdirectory under ~/.vim/bundle, and they will be added to the
'runtimepath'
 2)for .vim packages you create a sub-folder below the 'bundle'
folder, then create the relevant plugin/autoload folder and copy the
.vim file
 3)vimballs:
 :e name.vba
 :!mkdir ~/.vim/bundle/name
 :UseVimball ~/.vim/bundle/name

***** remove a plugin

removing a plugin is as simple as deleting that directory.

***** update

go into the specific plugin folder and issue:

 git pull origin master

***** BufExplorer

***** command-T

***** intro

Bring up the Command-T match window by typing:
 <Leader>t
 This mapping is set up automatically for you, provided you do not
already have
 a mapping for <Leader>t or |:CommandT|. You can also bring up the match
window
 by issuing the command:
 For the most efficient file navigation within a project it's
recommended that
 you |:cd| into the root directory of your project when starting to work
on it.
 If you wish to open a file from outside of the project folder you can
pass in
 an optional path argument (relative or absolute) to |:CommandT|:
 :CommandT ../path/to/other/files

***** opening files

The following mappings are active when either the prompt or the match
listing
 has focus:
 <CR> open the selected file
 <C-CR> open the selected file in a new split window
 <C-s> open the selected file in a new split window
 <C-v> open the selected file in a new vertical split window
 <C-t> open the selected file in a new tab
 <C-j> select next file in the match listing
 <C-n> select next file in the match listing
 <Down> select next file in the match listing
 <C-k> select previous file in the match listing
 <C-p> select previous file in the match listing
 <Up> select previous file in the match listing
 <C-c> cancel (dismisses match listing)

***** currently installed plugins

ShowMarks provides a visual representation of the location marks.
 Surround.vim is all about "surroundings": parentheses, brackets,
quotes, XML tags, and more. The plugin provides mappings to easily
delete, change and add such surroundings in pairs. While it works under
Vim 6, much of the functionality requires Vim 7.
 repeat.vim: Use the repeat command (.) with supported plugins
 
 SuperTab continued. : Do all your insert-mode completion with Tab.
 CSApprox : Make gvim-only colorschemes work transparently in
terminal vim
 NERDTREE


***** fuzzy finder

***** open types

<CR>(|g:fuf keyOpen|)- opens in a previous window.
 <C-j> (|g:fuf keyOpenSplit|) - opens in a split window.
 <C-k> (|g:fuf keyOpenVsplit|)- opens in a vertical-split
window.
 <C-l> (|g:fuf keyOpenTabpage|) - opens in a new tab page.

***** NERD Tree

M-bring up Merdtree plugins menu
 B- open bm
 Press o to open the file in a new buffer or open/close directory.
 Press t to open the file in a new tab.
 Press i to open the file in a new horizontal split.
 Press s to open the file in a new vertical split.
 Press p to go to parent directory.
 Press r to refresh the current director

***** sessionman

creates a submenu under the file menu in gvim

***** tcomment

[[http://www.vim.org/scripts/script.php?script_id=1173][http://www.vim.org/scripts/script.php?script id=1173]]
 use 'gc' to mark comments
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-22-39-52-scrot.png]]
 gcc- toggles comennt on single line

***** Ctrl-P

its best to cd to a specfic dir before launching to greatly speed things
upload

**** Saving

***** basics

to save a file, you would normally first leave insert mode by hitting
the Esc key one or more times.
 Then you type the following (and press Enter):
 :w
 You can save your file (if modified) and exit Vim at the same time
with:
 :x
 You can save all modified buffers (all open files) with:
 :wa
 For a tweak, you can set Vim to automatically save the current buffer
when you hit Esc twice. This can be done by simply adding the following
line to your vimrc:
 map <Esc><Esc> :w<CR>
 Assumed that I'm editing hello.txt.
 :w world.txt will write hello.txt's content to the file world.txt while
keeping hello.txt as the opened buffer in vim.
 :sav world.txt will first write hello.txt's content to the file
world.txt, then close buffer hello.txt, finally open world.txt as the
current buffer.

***** save as filename without exiting

save as filename without exiting:
 :w filenamesave as filename without exiting

***** save as root



Basic command, yet extremely useful.
 :w !sudo tee %
 I often forget to sudo before editing a file I don't have write
permissions on. When I come to save that file and get a permission
error, I just issue that vim command in order to save the file without
the need to save it to a temp file and then copy it back again.

***** windows ctrl-s saving

Another thing that causes my fingers to grow weary is saving. The
typical sequence is: press escape, then :w enter. I save all the time
because I'm paranoid and I miss CTRL-S which is so much easier on the
hands.
 map <C-S> <ESC>:w<CR>
 imap <C-S> <ESC>:w<CR>
 Warning if Ctrl-S freezes your terminal, type Ctrl-Q to get it
going again.

***** Save a file you edited in vim without the needed permissions

use this command:

 :w !sudo tee %

**** registers

***** intro

Most editors have a single clipboard. vim has many more; clipboards in
vim are called registers. You can list all the currently defined
registers and their contents by typing
 :reg
 Typically, you'll be using the lowercase letter registers; the others
are used for various internal vim purposes and are only occasionally
helpful.

***** yank and paste to/from a specific registry

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-21-11-35-scrot.png]]
 For example, to copy the current line into register k, you could type
 "kyy
 That line would stay in register k until you specifically copied
something else into register k.
 You would then use
 "kp
 to paste the text from register k.

***** register zero ("0)

the zero register holds the last yank command (and not any d,x etc you
may have done after yanking)
 this is good to make sure your yanked line would be pasted
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-21-28-32-scrot.png]]

***** X11 copy paste

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-21-31-57-scrot.png]]
 to use copy:
 "+y
 to use cut:
 "+yx
 to paste
 "+gP

***** register for local clipboard "plus" (+)

the plus (+) registry is the one that uses the system clipboards
 To paste from they keyboard we type
 "+p
 To copy, for example an entire line, into the system clipboard we type
 "+yy
 To delete the current line and store it in the system clipboard we type
"+dd
 We can also use registers with visual mode. If we wanted to copy the
line underneath the cursor we would type
 V"+y
 We could copy the next three lines into the system clipboard by typing
 Vjj"+y
 To sum it up, to use the system clipboard to copy and paste in vim
simply do what you would usually do in vim, then prepend "+ to your y
(yank) or p (paste) command.

**** search and replace

***** search

***** Basic search commands

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-02-13-scrot.png]]

***** get rid of the highlighting after search

in .vimrc
 a function to toggle highlight search, so I could turn it off and on
with a simple quick keystroke. Here's the function that I put in my
.vimrc:
 function ToggleHLSearch()
 if &hls
 set nohls
 else
 set hls
 endif
 endfunction
 Then, I added this to the mapping section:
 nmap <silent> <C-n> <Esc>:call ToggleHLSearch()<CR>.
 In this example, <silent> isn't a key --- it's to tell Vim not to print
a message when it runs the command. Then, the key shortcut that is
mapped to the action, and the action that will be called.

***** use search to delete/yank sections

example:

 d/SEARCHTERM/e (then pres enter)
 IE:
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-10-40-scrot.png]]
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-12-05-scrot.png]]

***** replace

***** Basic replace

Basic syntax:
:[range]s[ubstitute]/{pattern}/{string}/[flags] [count]
 Replace First:
 :%s/SEACRHED/REPLACED/ (then pres enter)
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-12-39-scrot.png]]
 Example:
 Replace ALL:
 :%s/SEACRHED/REPLACED/g (then press enter)

***** range

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-22-04-scrot.png]]

 Search ranges work with lines, not characters. They are a way to
specify one or more lines, separated by commas or joined by semi-colons.
 Here's how to specify a line:

. " current line
 +5 " Five lines down
 -3 " Three lines back
 1 " line 1 of buffer
 42 " line 42 of buffer
 $ " last line of buffer
 % " all lines in buffer, i.e. 1,$
 't " position of mark t
 /pattern/ " next line where pattern matches
 ?pattern? " previous line where pattern matches

If you're feeling clever, you can chain searches with a semi-colon.
Suppose you want to specify a range covering the content of the first
subsection of the next section.

/h1/;/h2/+,/h2/-

This says:

-  

   First find the nexth1

-  From there, find the firsth2
-  Go one line further on -- that's the start of the range.
-  The end of the range is the line before the nexth2.

***** Flags

[[~/Dropbox/Org/Tech/linux_files/Image_oVR4zHcDewUyCx1HOn16sg_0001.png]]
 flags cone after the replace string
 IE:

 :%s/SEACRHED/REPLACED/c

 the c flag above confirms each replace:

replace with foo (y/n/a/q/l/\^E/\^Y)?

 The "y" and "n" are self-explanatory, but what about the rest? To tell
Vim to go ahead and replace all instances of the matched string, answer
with a. If you realize that you don't really want to make the changes,
you can tell Vim to quit the operation using q. To tell Vim to make the
current change and then stop, use l, for last.
 \^E and \^Y allow you to scroll the text using Ctrl-e and Ctrl-y.

***** count

The optional count at the end is rarely used and only works if you don't
provide a range at the beginning. It will perform the substitution only
over the next number of lines. This example replaces all occurrences of
"bacon" within the next 10 lines only.
 :s/bacon/lettuce/g10

***** replace text

Basic search and replace

 The :substitute command searches for a text pattern, and replaces it
with a text string. There are many options, but these are what you
probably want:
 :%s/foo/bar/g
 : Find each occurrence of 'foo', and replace it with 'bar'.
 :%s/foo/bar/gc
 Change each 'foo' to 'bar', but ask for confirmation first.
 :%s/\<foo\>/bar/gc
 Change only whole words exactly matching 'foo' to 'bar'; ask for
confirmation.
 :%s/foo/bar/gci
 Change each 'foo' (case insensitive) to 'bar'; ask for
confirmation.
 :%s/foo/bar/gcI
 Change each 'foo' (case sensitive) to 'bar'; ask for confirmation.
 The g flag means global -- each occurrence in the line is changed,
rather than just the first.
 Substitute on Lines

To only substitute between certain lines:

:/n/,/n/s/one/two/g

For example, to replace instances of 'one' with 'two' between lines 3&4,
one would execute:

:3,4s/one/two/g
 Search range
 (here, the word between is inclusive of the start and end lines):
 :s/foo/bar/g changes each 'foo' to 'bar' in the current line.
 :%s/foo/bar/g changes each 'foo' to 'bar' in all lines.
 :5,12s/foo/bar/g changes each 'foo' to 'bar' for all lines between
line 5 and line 12.
 :'a,'bs/foo/bar/g changes each 'foo' to 'bar' for all lines between
marks a and b.
 :.,$s/foo/bar/g changes each 'foo' to 'bar' for all lines between
the current line (.) and the last line ($).
 :.,+2s/foo/bar/g changes each 'foo' to 'bar' for the current line
(.) and the two next lines (+2).
 :%s is equivalent to :1,$s
 When searching:
 ., , \, [, ], \^, and $ are metacharacters.
 +, ?, |, {, }, (, and ) must be escaped to use their special
function.
 \/ is / (use backslash + forward slash to search for forward slash)
 \t is tab, \s is whitespace
 \n is newline, \r is CR (carriage return = Ctrl-M = \^M)
 \{#\} is used for repetition. /foo.\{2\} will match foo and the two
following characters. The \ is not required on the closing } so
/foo.\{2} will do the same thing.
 \(foo\) makes a backreference to foo. Parenthesis without escapes
are literally matched. Here the \ is required for the closing \).
 When replacing:
 \r is newline, \n is a null byte (0x00).
 \& is ampersand (& is the text that matches the search pattern).
 \1 inserts the text of the first backreference. \2 inserts the
second backreference, and so on.
 You can use other delimiters with substitute:

:s#[[http://www.example.com/index.html#http://example.com/#][http://www.example.com/index.html#http://example.com/#]]
 Save typing by using \zs and \ze to set the start and end of a pattern.
For example, instead of:

***** Escape characters

escape metacharcters ([ etc)
 ., , \, [, ], \^, $are metacharacters
 +, ?, |, {, }, (, ) must be escaped to use their special function
 \/is / (use backslash + forward slash to search for forward slash)
 Example:

 to change the [8] to [9] in the below example:
 ICAM restable$ciw[8] <-ICAM restable$L CI[8]+ICAM restable$H CI[8]
 use:

 :s/\[8\]/\[9\]/gc
 Tip:

 And then lose your mind in a sea of backslashes. You don't need to. /
is the default pattern separator for search & replace, but you can use
almost anything. The first character after :s is taken as the separator,
so this much-simpler version works just as well:

 :s!/usr/local/!/opt/alt/!

 The next time you find yourself counting backslashes to fix a E486:
Pattern not found error, remember you have an easy alternative.

***** Search and execute (global)

***** basics

You can use Vim's powerful global command, or g for short, to execute a
command on all lines that match a pattern. It takes a form similar to
search and replace:
 :[range]g[lobal]/{pattern}/[cmd]
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-35-29-scrot.png]]
 Unlike search, the default range is the whole buffer.
 print the line number and content of all lines that match a pattern:
use p to print, as we did before.
 :g/bacon/p
 you can use 'v' instead of 'g' to seach for non matching

***** common commands

The commands you'll use most often are # to show the matches with line
numbers, y to yank (or copy) the matching lines, and d to delete them.
Here are a few examples:
 :g/params[:foo]/# " show lines and line numbers where params[:foo]
occurs
 :g/\^$/d " delete all blank lines
 :g/pattern/+ y " yank the line after the line matching pattern

***** ranges

Here are some examples with ranges:

:.,+10g/foo/d

" delete lines matching foo from current line to ten lines down
 :.,'f+2g/foo/# " show numbers of lines matching foo from current line
to two lines after mark f
 :.,/bar/g/foo/d " delete lines matching foo from current line to next
line matching bar

***** prefixing your command with normal

The commands you can execute aren't restricted to deleting and yanking.
You can also execute normal-mode commands by prefixing your command with
normal.
 :g/re/normal {command}
 For example, this adds a new line before each line that contains bacon:
 :g/bacon/normal O<new line of text>

***** norm command

norm will take a string of text as an argument and process that string
as though you were pressing the keys in vim yourself, starting in Normal
mode.
 Combined with the[[#24AkQYSbxebAEU4xmgEYkg][g command]] , you can do
some neat things. For example to search for all lines that start with a
number, and then add a semi-colon to the end of just those lines:

:g/\^\d/norm A;

 Note that you need to use i, A, o, or some other way of getting into
Insert mode if you want to add text.
 One of my favorites (I think I read this on some other site one day) is
to find every line containing some text and move those lines to the end
of the text file. Sort of an ad-hoc partial way of sorting a file:

:g/some text/norm ddGp

 All the vim movement commands work too, so to find every line that has
a ", move to the end of the line, move 3 characters back to the left and
add a ~:

:g/"/norm $hhhi~

 You can move between lines or add lines to the file too, which makes
things interesting. What if you start with this text file:
 1
 2
 3
 4
 5
 And you do this:

:g/\d/norm o999

 Happily this does not blow up into infinite recursion, because vim
always makes two passes through the file (one to mark the lines to
operate on; a second to actually operate on them); you end up with
 1
 999
 2
 999
 3
 999
 4
 999
 5
 999

***** delete lines with a commin string

This is amazingly powerful and short

:g/20/d

 It simply says find any line with a 20 in it and run the ex command to
delete the line. It has a sick counterpart in

:v/20/d

 (think if it a grep -v) which runs the ex command to delete any line
that does not have a 20 in it.
 This maps basically to your g + norm as

:g/20/norm dd

***** regex

***** intro in regex in vim

[[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-47-35-scrot.png]]
 Even thought the default in vim is /m you want to use /v (Very magic)
 you have to "turn it on" each time (using /\v)
 where / starts the search and \v starts the "very magic mode"
 for example:
 [[~/Dropbox/Org/Tech/linux_files/2011-05-15-12-50-49-scrot.png]]

***** example to change all colors in worker

if you have something like this:
 color = 245,121;
 color = 215,221;
 and you want to change all line with color= XXX,YYY to color = 135,132
issue this:

s/color = [0-9]\{3},[0-9]\{3}/color = 135,132/g

 where {3} is the number of digits
 if some line have color = 245,22 (where the second number is not 3
digits) you need to use this:

%s/color = [0-9]\+,[0-9]\+/color = 135,132/gc

 where \{3} is changed to \+ which will match 1 digit or longer
numbers

***** delete all lines with extensions

use this line

:g/\..\{2,4}$/d

where the regex is just matching any line that ends with '.' followed
by 2 to 4 characters

***** replace special characters ('/' '\'')

use this command (notice the , instead of the /) :
 for the '\' use > '\\'
 for the '/' just use '/'
 for one line:

:s,\\,/,g

 and for all the file

:%s,\\,/,g

***** replace all brackets and whats inside them

use this command

:s/([\^()])//g

 or globally:

:%s/([\^()])//g

***** Search and replace in a visual selection (lines) 

You can visually select text, then operate on the selection.
 Press v to select a range of text, or V to select whole lines, or
Ctrl-V (Ctrl-Q if you use Ctrl-V to paste) to select a block.
 After starting the selection, move the cursor with any normal-mode
movement commands (such as j to move down, or w to move by a word, or /
to search).
 When text is visually selected, press : to enter a command. The command
line will automatically enter the range:

:'<,'>

 You can enter a command such as s/red/green/g to replace each red with
green in all lines of the last visual selection. The command will appear
as:

:'<,'>s/red/green/g

 To repeat an Ex command over a previously selected block, use the :
history. That is, press : then <Up>, then edit a previous command.

***** Search and replace in a visual selection (blocks)
same as with line but add the %V as below
#+BEGIN_SRC sh
:s/\%Vus/az/g
#+END_SRC

***** key shortcut to quick replace selected visual mode

Try execute the following or put in into your .vimrc
 vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
 By pressing ctrl + r in the visual mode you will be prompted to enter
text to replace with. Press enter and then confirm each change you agree
with 'y' or decline with 'n'.

***** replace only inside a visual block

You need to add \%V to your pattern.
 mark a block (ctrl-v to enter visual block) and the issue and use
 : s/\%VCURRENT TEXT\%V/REPLACEMENT TEXT/g
 ie:

: s/\%V80\%V/81/g

***** How to add text to the beginning of every line

In vim to add text to the beginning of every line is easy.

:%s/\^/TEXTTOADD/

 Be careful with the texttoadd because you might have to escape certain
characters.

***** How can I add  to the end of each line in Vim?

issue:
 :%s/$/TEXTTOADD/g
 example:

:%s/$//g

 a  will be added to the end of the line

***** Remove unwanted empty lines



Use either of the following commands to delete all empty lines:

:g/\^$/d
 or
 :v/./d

If you want to delete all lines that are empty or that contain only
whitespace characters (spaces, tabs), use either
 of:

:g/\^\s$/d
 or
 :v/\S/d

In the second command, v operates on lines that do /not/ match, and \S
matches anything that is /not/ a whitespace, and d deletes the flagged
lines (all lines that have no characters, or that have only whitespace
characters).
 Pasted from
<[[http://vim.wikia.com/wiki/Remove_unwanted_empty_lines][http://vim.wikia.com/wiki/Remove unwanted empty lines]]>

***** How can I add  to the end of each line in Vim?

How can I add  to the end of each line in Vim?

:%s/$/\/g

 should work. So should

:%s/$//g

 Even shorter than the :search command:


:%norm A

 This is what it means:
 % = for every line
 norm = type the following commands
 A = append '' to the end of current line

***** Find and replace whole words in vim

Find and replace whole words in vim:
 You can use\<to match the beginning of a word and\> to match the
end:

:%s/\<word\>/newword/g

 For case-sensitive replace.. you can use "\C"

:%s/\<word\>\C/newword/g

 It replaces only "word" with newword leaving others like Word,WORD...
 unreplaced.

***** increment by year and copy

to multiply a section and increment the number by 1:

$|for i in range(1,12) |-19,.copy $ | exec
printf('-19,.s/20%02d/20%02d/g', (i - 1), i) | endfor

 where:

 (1,12) is the number of multipliers (here 12)

**** sessions

***** built in vim

You want something like
 :mksession ~/mysession.vim
 Then later you can just source that vim file and you'll have your old
session back.
 a better way would be to use the sessionman.vim plugin

***** session.vim

To persist your current editing session you can execute the
:SaveSession command. If you don't provide a name for the session
'default' is used. You're free to use whatever characters you like in
session names.
 When you want to restore your session simply execute :OpenSession.
Again the name 'default' is used if you don't provide one. When a
session is active, has been changed and you quit Vim you'll be prompted
whether you want to save the open session before quitting Vim.
 When you start Vim without editing any files and the 'default' session
exists, you'll be prompted whether you want to restore the default
session,
 The session scripts created by this plug-in are stored in the directory
~/.vim/sessions (on UNIX) or ~\vimfiles\sessions (on Windows) but you
can change the location by setting
g:session directory[[https://a248.e.akamai.net/camo.github.com/be95bf40ab1227d7d166121fbb7b40a7facc0ed2/687474703a2f2f70657465726f6464696e672e636f6d2f636f64652f76696d2f73657373696f6e2f6175746f6f70656e2e706e67][]]

***** sessionman.vim

to list all session use:
 :SessionList
 i map this to a key:
 map <leader>s :SessionList<CR>
 to save a session issue:
 :SessionSave
 and enter the session name

**** spell checker

***** use

You'll need to be in command mode and switch to last line mode, then run
this:
 :set spell spelllang=en us
 to turn spell checking off if you're working with code or something
like that. Use the nospell directive to turn this off:
 :set nospell
 To move to a misspelled word, use:
 ]s
 and 
 [s
 The ]s command will move the cursor to the next misspelled word, the [s
command will move the cursor back through the buffer to previous
misspelled words.
 Once the cursor is on the word, use
 z=
and Vim will suggest a list of alternatives that it thinks may be
correct
 Use the
 zg
 command and Vim will add it to its dictionary.

You can also mark words as incorrect usingzw
If you don't want to keep telling Vim explicitly every time you restart
to turn on spelling, just add the following to your .vimrc
 :set spell spelllang=en us

 Substitute the appropriate region, of course.

**** spliting

***** positions/spliting

ctrl-W -split key

 [[~/Dropbox/Org/Tech/linux_files/2011-05-14-22-43-44-scrot.png]]

**** tabs

create a new tab:
 :tabnew
 command while in normal mode. This will open a new tab with an empty
buffer.
 If you want to edit a file in the new tab, you can run
 :tabnew filename
 and Vim will load the file in the new tab.
 Another way to do this is to open more than one file at startup using
the -p option. If you want to open three files in separate tabs, you'd
use this syntax:
 vim -p file1 file2 file3
 This will start a Vim session with file1 in the first tab, file2 in the
second tab, and file3 in the third.
 The default maximum is 10 tabs, but you can change this by setting the
tabpagemax option in your .vimrc, like so:
 set tabpagemax=15
 You can edit the remaining files by using the :next or :last
command to move to the files that are not displayed in a tab
 

The :tabfcommand allows you to search for a file in
 your current path and open it in a new tab. For instance, if you want
to
 open a file called inventory.txt that's in your current path, you
could
 run:
 :tabf inven


 That will search for a file that matches the string inven and any
number of characters after it
 The :tabn command will do autocompletion of file names in your path,
so you can just type the first few characters of a filename and hit Tab
to find the right file.
 You can switch between tabs using :tabn and :tabp

 If you have a lot of tabs open, you can use :tabfirst, or just
:tabfir, to jump to the first tab, and :tablast to jump to the last
tab that's open.

***** commands

create a new tab:
 :tabnew
 command while in normal mode. This will open a new tab with an empty
buffer.
 If you want to edit a file in the new tab, you can run
 :tabnew filename
 and Vim will load the file in the new tab.
 Another way to do this is to open more than one file at startup using
the -p option. If you want to open three files in separate tabs, you'd
use this syntax:
 vim -p file1 file2 file3
 This will start a Vim session with file1 in the first tab, file2 in the
second tab, and file3 in the third.
 The default maximum is 10 tabs, but you can change this by setting the
tabpagemax option in your .vimrc, like so:
 set tabpagemax=15
 You can edit the remaining files by using the :next or :last
command to move to the files that are not displayed in a tab
 

The :tabfcommand allows you to search for a file in
 your current path and open it in a new tab. For instance, if you want
to
 open a file called inventory.txt that's in your current path, you
could
 run:
 :tabf inven


 That will search for a file that matches the string inven and any
number of characters after it
 The :tabn command will do autocompletion of file names in your path,
so you can just type the first few characters of a filename and hit Tab
to find the right file.
 You can switch between tabs using :tabn and :tabp

 If you have a lot of tabs open, you can use :tabfirst, or just
:tabfir, to jump to the first tab, and :tablast to jump to the last
tab that's open.

***** execute a command on all tabs

to execute a command of your choice on all tabs issue:
 :tabdo COMMAND
 IE
 :tabdo w
 (saves all opend tabs)

***** Rearranging tabs



If you're really meticulous and want to position tabs just so in Vim,
you can move the tabs to a specific spot in the tab order using
 :tabm n , where n is the position number that you want to use.
 If you don't give the :tabm command an argument, then the current tab
will be moved to the last spot.Vim starts tab numbering from 0, so if
you have six tabs open, you'll have tab 0 through tab 5. So, if you're
in the first tab and want to
 move it to the fourth position, you'd run :tab 3.
 Note that you can still use
[[http://www.linux.com/article.pl?sid=06/05/04/1544258][viewports]]
normally within tabbed windows, and tabs are useful for doing a quick
 edit in a file when you have a main Vim window set up with a couple of
 viewports arranged just right.

***** Running commands in tabs (tabdo)

Let's say you're editing six or seven files in Vim and realize that you
need to replace a variable name with a new one. Using the :tabdo
command, you can run a search and replace through all of the tabs at
once rather than changing each file individually. For instance, if you
want to replace foo with bar, you'd run this:
 :tabdo %s/foo/bar/g
 That will run through each open tab and run the search and replace
command (%s/foo/bar/g) in each one.

***** saving all tabs

The command wa (short for wall) will write all changed buffers. You can
also use :tabdo w, which is definitely exactly what you want, and
generalizes nicely.

***** shortcuts

Speaking of setting options, if you don't like the existing shortcuts
for the tab commands, you can add your own. For instance, if you want to
make it easy to open a new tab, you might insert this into your .vimrc:
 imap ,t <Esc>:tabnew<CR>
 This tells Vim to set up a keymap for ,t in insert mode, to run Esc to
put Vim into normal mode, then :tabnew and a carriage return to run the
command. You can set up mappings for all of the tab commands that you
use regularly

***** showtabline

By default, the tab labels are shown at the top of the Vim window only
when tabs are open. If you want to see the tab bar all the time, you can
modify the showtabline option in your .vimrc. To set this to display all
of the time, use:
 set showtabline=2
 If you want to turn it off altogether, use 0 instead of 2.

***** symbols on tab bar

> curret tab
 + modified tab

**** Tips

***** commet out a block of text

Press ctrl+v to enter visual block mode
 use the j/k keys to select (or up/down if there not mapped to something
else)
 after selecting press shift+I to enter insert mode
 enter your comment (IE # or " etc...)
 press Esc
 this should comment the whole block
 anoher option is to use a plugin like NERDCommenter

***** forgot to sudo before editing a file that requires root
privileges

hen you forgot to sudo before editing a file that requires root
privileges (typically /etc/hosts). This lets you use w!! to do that
after you opened the file already:
 cmap w!! w !sudo tee % >/dev/null

***** launch vim options

to launch vim with multiple buffer open :
 vim -o file1 file2 file3
 (openes split horizontal)
 vim -O file1 file2 file3
 (openes split Vertical)
 vim -t file1 file2 file3
 (openes in tabs)

***** selection

select all:
 ggVG

***** vimdiff

to use vim as a diff tool launch vim like this:
 vimdiff /home/zeltak/BK/ranger/commands.py
/home/zeltak/.config/ranger/commands.py

***** auto source vimrc after changes

I would like Vim to automatically source the vimrc each time I save it.
This can be achieved with the following autocommand:
 " Source the vimrc file after saving it
 augroup reload vimrc " {
 autocmd!
 autocmd BufWritePost $MYVIMRC source $MYVIMRC
 augroup END " }

**** Views

***** split windows

:sp splits windows
 :3sp splits window to 3 and so on

***** Vim viewport

:sp will split the Vim window horizontally. Can be written out entirely
as :split .
 :vsp will split the Vim window vertically. Can be written out as
:vsplit .
 Ctrl-w Ctrl-w moves between Vim viewports.
 Ctrl-w j moves one viewport down.
 Ctrl-w k moves one viewport up.
 Ctrl-w h moves one viewport to the left.
 Ctrl-w l moves one viewport to the right.
 Ctrl-w = tells Vim to resize viewports to be of equal size.
 Ctrl-w - reduce active viewport by one line.
 Ctrl-w + increase active viewport by one line.
 Ctrl-w q will close the active window.
 Ctrl-w r will rotate windows to the right.
 Ctrl-w R will rotate windows to the left.

**** vim server

***** [[class=][Open files in existing Gvim in multiple (new) tabs]]

If vim is compiled with the clientserver option, you can do it. Start
your vim instance with the following flag:
 $ gvim --servername GVIM # GVIM is the server name. It can be anything.
 To open more tabs in this instance, you can run the command:
 $ gvim --servername GVIM --remote-tab file1 file2 file3 ...
 The clientserver feature in vim is very handy. It's not limited to
opening files; it can be used to send any command to vim using the
command-line. For example, to close a vim instance remotely, you can
use:
 $ gvim --servername GVIM --remote-send '<Esc>:wqa<CR>'

***** vim server

to start vim in server mode issue:
 vim --servername NAMEOFSERVER OPTIONAL EDITED FILE
 IE
 vim --servername myvim /home/zeltak/ZH tmp/pre-002.TXT
 then to add files to the server (that sessions) issue:
 gvim --remote FILE TO ADD

**** modes

***** viusal mode

***** Types of visual mode and keys

v-visuall mode characters
 V-visual mode lines
 ctrl+v- block visual mode

***** quick select visual with operators

you can quickly select visuall chunks with v followed by an operator:
 [[~/Dropbox/Org/Tech/linux_files/Image_Hgx6Fb9kuwiJa5Cz26QeFg_0001.png]]
 IE:
 v}-will visuall select all the paragraph from where you are

***** use the 'o' option to toggle which end is active

use the 'o' option to toggle which end is active
 IE:
 press v then o

***** read only mode

open a file with "vim -R":

vim -R FILE

 To open a file from inside vim in a separate tab in readonly mode:

:tab sview /path/to/file

**** repeats

***** repeat last command

. repeats last action

***** Repeat Last Command Line

To repeat the last command-line given in ex mode, you can simply enter
a count followed by\
 @:
 

This Tip becomes super useful with something like the following:

:%s/\<pig\>/cow/gie|:update|:next

 This facilitates the modification of a series of files.Note you need
the 'e' of the gie

-  g=do as many times as occurs in line
-  i=ignore case
-  e=don't break command if no search string found

**** diff

***** launch diff

use:

 gvimdiff FILE1 FILE2

 OR

 vimdiff FILE1 FILE2

***** turn diff on off

use:
 :diffon
 or
 :diffoff

**** sort

***** sort remove duplicate lines

The following command will sort all lines and remove duplicates (keeping
unique lines):

 :sort u

If you need more control, here are some alternatives. There are two
versions, the first leaves only the last line, the second leaves only
the first line.

 g/\^\(.\)$\n\1$/d
 g/\%(\^\1$\n\)\@<=\(.\)$/d

 Breakdown of the second version:
 g//d <-- Delete the lines matching the regexp
 \@<= <-- If the bit following matches, make sure the bit preceding this
symbol directly precedes the match
 \(.\)$ <-- Match the line into subst register 1
 \%( ) <--- Group without placing in a subst register.
 \^\1$\n <--- Match subst register 1 followed by end of line and the new
line between the 2 lines
 In this simple format (matching the whole line), it's not going to make
much difference, but it will start to matter if you want to do stuff
like match the first word only.
 This does a uniq on the first word in the line, and deletes all but the
first line:
 g/\%(\^\1\>.$\n\)\@<=\(\k\+\).$/d

**** completions

***** complete path file names

**** windows/linux/Sync

***** ignore specific commands in the rc based on linux or windows
envrionments

stick this in the relevant rc file (vim,gvim etc)
 if has('win32') || has('win64')
 COMMAND
 endif
 for linux use this:
 
 if has('unix')
 COMMAND
 endif

 example:
 if has('win32') || has('win64')
 au GUIEnter  simalt ~x "maximize gui on windows machine
 endif

***** sync vim between Pc's

I synchronize .vimrc and .vim using Dropbox, but many other forms are
possible, such as Ubuntuone, Sugarsync or any other cloud service you
might have. And even a GIT/SVN/Mercurial/whatever repository based
storage that you update from time to time.
 Put all your vimrc and vimfiles in a centralized place:
 For the rc file use something like this (the plain text configuration
file):
 c:\Users\ekloog\Documents\My Dropbox\multisync\vim\.vimrc
 for the vim plugins etc (the directory containing the plugins etc):

 c:\Users\ekloog\Documents\My Dropbox\multisync\vim\.vim\
 
 Then in every machine, I have the ~/.vimrc ( vimrc in windows) with a
single line, referencing the configuration stored in the dropbox folder.
I could directly link the file, but sometimes you may want to add a
couple more of lines specific to a machine. The content of the ~/.vimrc
file is just:
 source c:\Users\ekloog\Documents\My Dropbox\multisync\vim\.vimrc
 # Additional stuff specific to the machine here...
 This will include the vimrc stored in my Dropbox folder.
 Then, I just create a symbolic link to the vimfiles folder
 1) using the normal symlink tools in linux

 ln -s PATH1 PATH2

 or if using windows use the app Link Shell Extension and then pick the
source first:
 [[~/Dropbox/Org/Tech/linux_files/Image_K0rxuP9BIhJThh0jn3Lf0w_0001.png]]
 and then the drop area later
 [[~/Dropbox/Org/Tech/linux_files/Image_K0rxuP9BIhJThh0jn3Lf0w_0002.png]]

**** Plugins

***** load a command/bind after a plugin to make it override plugins

creat a text file with .vim extension here:
 /home/zeltak/.vim/after/plugin/FILENAME.vim
 Note: if after and plugin folders dont exist create them
 then in the .vim file put the command you need
 In example:
 nnoremap x " x

***** Basic installing plugins/scripts

***** intro

runtimepath: For Unix systems, this is usally the "$HOME/.vim"
directory.
 Depending on the type of the runtime file, you have to place it under a
specific directory under the above runtime
 directory. The names of the directories are listed below:
 colors/ - color scheme files
 compiler/ - compiler files
 doc/ - documentation
 ftplugin/ - filetype plugins
 indent/ - indent scripts
 keymap/ - key mapping files
 lang/ - menu translations
 plugin/ - plugin scripts
 syntax/ - syntax files
 tutor/ - files for vimtutor

***** 1)Single vim file

1) If the script you want to install is just a Vim script file, then
normally all it takes to install it is to copy it to the VIMHOME/plugin
directory or VIMHOME/ftplugin if it is a file-type-dependent script.

***** 2)compressed file

2)If the script comes in a compressed file instead, it can be hard to
tell how to install it. Typically, you will simply have to place the
file in your VIMHOME and then uncompress it there. This normally places
the files in the right folders according to how Vim wants them. In any
case, there might be a README or INSTALL file where you can read how to
install the script.

***** 3)vimballs (Vba)

The third and last way to install Vim scripts is by using the vimball
installation system an installation system created for Vim 7 and newer.
This system takes a range of files and combines them into a single Vim
script archive with the extention .vba a vimball.
 Before you start using vimballs, you will need to have the vimball
script installed. This adds the functionality for reading and installing
vimballs. As with most other scripts for Vim, you will be able to find
the script on the online Vim community site.
 The latest version of the vimball script can always be found here:
http://www.vim.org/scripts/script.php?script id=1502
 When you have the vimball script installed, you are ready to use
vimballs for installing other Vim scripts.
 Let's say that you have a vimball called myscript.vba and want to
install it.
 You simply open the vimball in Vim through the cli:
 vim /PATH/TO/vimball.vba
 Vim will now tell you how to install the script. This is normally done
by executing the following command:
 :source %
 This installs the script in the first place found in the runtimepath
option in Vim.
 If you want to install the script elsewhere, you can do so by using the
following command instead:
 :UseVimball PATH
 You need to replace PATH with the path to where you want Vim to install
the script. Please note that some scripts only work when they are
installed in the correct place.
 Sometimes, you do not want to install a script unless you know what it
contains. If this is the case, then the vimball script has a command
that will give you a list of the files that you will get installed if
you decide to install the vimball. To get the list of files in the
vimball, execute the following command after you have opened the vimball
in Vim:
 :VimballList
 If the files and directories listed are the ones you expected, then you
are ready to install the file, and can then use either the :source or
the :UseVimball commands to install it.

***** Uninstalling Scripts/plugins

Uninstalling Scripts
 There is normally no automatic way of uninstalling scripts after they
are installed, and you will have to go through the files, one by one,
and uninstall them manually. Having said that, the Vimball script does
in fact have an uninstall mechanism.
 If you remember the name of the vimball you used to install a Vim
script, then you can later use this very same vimball name to uninstall
the script. You just have to execute the following command in Vim:
 :RmVimball VIMBALLNAME
 Replace the VIMBALLNAME with the name of the vimball you used to
install the script. If the script was not installed in the default place
(if installed with :UseVimball), then you can add the installation path
as a second argument to the command, and thereby tell the vimball script
where to find the files it should remove.
 :RmVimball VIMBALLNAME PATH
 In order to be able to bind a vimball name to the files it needs to
delete, the script will create a file called .VimballRecord in your
VIMHOME. Note that if you remove this file, you will not be able to
uninstall any of the vimballs you have previously installed unless you
do it manually.

***** Vundle

***** install

 make sure after every bundle install to add the name of the plugin to
the vimrc IE:
 Bundle 'gmarik/vundle'
 Bundle 'UltiSnips'
 Bundle 'SupetTab'

***** use

To install a plugin run:

:BundleInstall

 BundleInstall allows to install scripts by name:

:BundleInstall SCRIPTNAME.vim

 installs and activates SCRIPTNAME.vim. You can use Tab to auto-complete
known script names
 UPDATE SCRIPTS
 
 run:

:BundleInstall!

" NOTE: bang(!)
 installs or updates configured scripts. press u after updates
complete to see the changelog of all updated bundles.
 SEARCHING
 run:

:BundleSearch foo

 lists bundles matching 'foo' in new a new split window,
ie:"VimFootnotes" "foo.vim" etc. Also

:BundleSearch! foo

 refreshes script list before performing actual search.
 LISTING BUNDLES
 To quickly pull list of installed bundles use:

:BundleList

 CLEANING UP
 run:

:BundleClean

 confirms removal of unused script-dirs from `.vim/bundle/`.
 

***** NERDCommenter

<Leader>cc |NERDComComment| Comments out the current line or text
selected in visual mode.
 
 <Leader>cn |NERDComNestedComment| Same as |NERDComComment| but forces
nesting.
 <Leader>c<space> |NERDComToggleComment| Toggles the comment state of
the selected line(s). If the topmost selected
 line is commented, all selected lines are uncommented and vice versa.
 <Leader>ci |NERDComInvertComment| Toggles the comment state of the
selected line(s) individually. Each selected
 line that is commented is uncommented and vice versa.
 <Leader>cy |NERDComYankComment| Same as |NERDComComment| except that
the commented line(s) are yanked
 before commenting.
 <Leader>c$ |NERDComEOLComment| Comments the current line from the
cursor to the end of line.
 <Leader>cu |NERDComUncommentLine| Uncomments any commented lines in the
block (only one level if nested)

***** NERDTree

***** change to a specific directory when vim/NerdT starts

put

the following code in vimrc :

cd /PATH/YOUWANT/NERDTREETOSTART/

***** Ctrlp

***** basics keys



:CtrlP

or

:CtrlP

[starting-directory] to invoke CtrlP in find file mode.
 

:CtrlPBuffer

or

:CtrlPMRU

to invoke CtrlP in find buffer or find MRU file mode.
 

:CtrlPMixed

to search in Files, Buffers and MRU files at the same time.
 Once CtrlP is open:
 Press <c-f> and <c-b> to cycle between modes.
 Press <c-d> to switch to filename only search instead of full
path.
 Press <c-r> to switch to regexp mode.
 Press <F5> to purge the cache for the current directory and get
new files.
 Use <c-n>, <c-p> to select the next/previous string in the
prompt's history.
 Use <c-y> to create a new file and its parent directories.
 Use <c-z> to mark/unmark multiple files and <c-o> to open them.

***** Yankring

***** info

[[http://www.vim.org/scripts/script.php?script_id=1234][http://www.vim.org/scripts/script.php?script id=1234]]
 Visual mode is used to support counts, pasting multiple times and
reversing the order of pasted elements.Ring now uses a
 

***** lustyjuggler

***** ultisnips

***** create a new snippet file

under a file (with a relevant extension, .xml, .r etc) issue:

:UltiSnipsEdit

***** create new snipts

in a snipet file enter snip and press tab:
 snippet Tab trigger "Description" !b
 TEXT
 YOU
 WANT
 endsnippet
 where:
 snippet-end and stop of the snippets
 Tab trigger- the letter/pharse that triggers it with TAB
 "Description"- just shown when u show all snipets commans
 TEXT-The actual snippet

***** tab stops

[[~/Dropbox/Org/Tech/linux_files/Image_xxgFX0JtRyY43Ok5fwmXcg_0001.png]]
 $1 the start of a tab stop
 another1$ a Mirror
 2$ next tabstop etc
 example:
 snippet sbase "SAS base command" b
 data $1;
 set $2;
 $3;
 run;
 endsnippet

***** using with supertab

since the tab completion has priority over ultisnip use ctrl-j instead
of tab to jump between tabstops

***** escape $ characters

you have to escape the $ via \$

 Example:
 Data$Var
 use:
 $1\$$2

***** Showmarks

***** config

The following options can be used to customize the behavior
 " of ShowMarks. Simply include them in your vimrc file with
 " the desired settings.
 "
 " showmarks enable (Default: 1)
 " Defines whether ShowMarks is enabled by default.
 " Example: let g:showmarks enable=0
 " showmarks include (Default:
"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.'`\^<>[]{}()\"")
 " Defines all marks, in precedence order (only the highest
 " precence will show on lines having more than one mark).
 " Can be buffer-specific (set b:showmarks include)
 " showmarks ignore type (Default: "hq")
 " Defines the buffer types to be ignored.
 " Valid types are:
 " h - Help p - preview
 " q - quickfix r - readonly
 " m - non-modifiable
 " showmarks textlower (Default: ">")
 " Defines how the mark is to be displayed.
 " A maximum of two characters can be displayed. To include
 " the mark in the text use a tab(\t) character. A single
 " character will display as the mark with the character
 " suffixed (same as "\t<character>")
 " Examples:
 " To display the mark with a > suffixed:
 " let g:showmarks textlower="\t>"
 " or
 " let g:showmarks textlower=">"
 " To display the mark with a ( prefixed:
 " let g:showmarks textlower="(\t"
 " To display two > characters:
 " let g:showmarks textlower=">>"
 " showmarks textupper (Default: ">")
 " Same as above but for the marks A-Z.
 " Example: let g:showmarks textupper=""
 " showmarks textother (Default: ">")
 " Same as above but for all other marks.
 " Example: let g:showmarks textother="--"
 " showmarks hlline lower (Default: 0)
 " showmarks hlline upper (Default: 0)
 " showmarks hlline other (Default: 0)
 " Defines whether the entire line for a particular mark
 " should be highlighted.
 " Example: let g:showmarks hlline lower=1
 "
 " Setting Highlighting Colours
 " ShowMarks uses the following highlighting groups:
 " ShowMarksHLl - For marks a-z
 " ShowMarksHLu - For marks A-Z
 " ShowMarksHLo - For all other marks
 " ShowMarksHLm - For multiple marks on the same line.
 " (Highest precendece mark is shown)
 "

***** important vimc values

To only show the marks you have set yourself, i.e. the "normal marks",
add this to your .vimrc file:
 let showmarks include =
"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

***** SPF13-VIM

***** install on windows

look here
[[http://vim.spf13.com/#install][http://vim.spf13.com/#install]] and see
if any new requeriments are needed. if not make sure to install git and
curl as instructed.
 make sure the giit and curl executables are defined in the PATH of
wiindows (you need to reboot after adding then). the PATH should look
like this:
 [[~/Dropbox/Org/Tech/linux_files/Image_PWDUrHNKt4V03mw9wwbpBA_0001.png]]
 and have this at the end:
 C:\Program Files (x86)\Mendeley
Desktop\wordPlugin;....................;c:\Program Files
(x86)\Git\cmd\;c:\Program Files (x86)\Git\;
 then launch the bootstrap.sh script in the terminal (not double
clickcing!!)
 look to see if you get errors, if not it should open vim and install
the bundles.
 after that spf13 should be ready to use
 in windows the .vimrc.local etc files are locate here (make sure they
have the dot infront of them)
 c:\Users\ekloog\.vimrc.local


***** window/linux sync

make sure that the base install of spf13 is the same on both machines
and versions as as close as possible (of vim.gvim etc)
 the .local files .vimrc.local etc should be manually synced between
the 2 computers but make sure to manually have a windows section and
linux section that are commented in each OS

***** restart.vim

Commands:
 :Restart
 If modified buffer(s) exist, gVim won't restart.
 If you want to quit anyway, add bang(:Restart!).

***** MRU.vim

[[https://github.com/vim-scripts/mru.vim/][https://github.com/vim-scripts/mru.vim/]]
 1. View the Most Recently Used Files in Vi / Vim Editor
 :MRU Note: :MRU (upper-case) works. :mru (lower-case) doesn't work.

:MRU will show "most recently used" files ordered by the recent usage
from top to bottom as shown below. To open a file press ENTER while the
cursor in that file name.

[[~/Dropbox/Org/Tech/linux_files/vim-editor-mru-list.PNG]]
 2. How to Increase MRU List Count? (Increase the Number of Files
Stored)

By default MRU list stores only the last 10 used files. Add the
following line to your ~/.vimrc to increase this limit as shown below.

$ cat ~/.vimrc
 let MRU Max Entries = 20
 3. Opening Files from MRU List in a New Tab
 Pressing enter on an MRU entry will open the file in the same window by
default. It will open in new window if the file opened in the current
window is not yet saved.
 To open the file from the MRU entry in a new Tab , press 't' when
the cursor is on a file name in MRU window.
 :tabn will take you to the next tab
 :tabp will take you to the previous tab

***** vim-buffergator

:BuffergatorToggle
 Open the buffer catalog if it is closed, or close
it if
 it is already open.

***** Mark

useful to highlight several words each in a different color
 [[~/Dropbox/Org/Tech/linux_files/Image_jX6GI54rnL5KM68iZ7rlxw_0001.png]]
 HIGHLIGHTING

 <Leader>mMark the word under the cursor, similar to the star
 command. The next free highlight group is used.
 If already on a mark: Clear the mark, like
 <Leader>n.
 {Visual}<Leader>mMark or unmark the visual selection.
 <Leader>rManually input a regular expression to mark.
 {Visual}<Leader>rDitto, based on the visual selection.
 <Leader>nClear the mark under the cursor.
 If not on a mark: Disable all marks, similar to
 :nohlsearch.
 :Mark {pattern}Mark or unmark {pattern}.
 :MarkDisable all marks, similar to :nohlsearch. Marks
 will automatically re-enable when a mark is added or
 removed, or a search for marks is performed.
 :MarkClearClear all marks. In contrast to disabling marks, the
 actual mark information is cleared, the next mark will
 use the first highlight group. This cannot be undone.

***** intro

defaults (mapped differently in my config)
 <Leader>mMark the word under the cursor, similar to the star
 command. The next free highlight group is used.
 If already on a mark: Clear the mark, like
 <Leader>n.
 
 
 <Leader>n Clear the mark, like

***** kept and restore marks across Vim sessions

Mark persistence
 The marks can be kept and restored across Vim sessions, using the
viminfo file.
 For this to work, the "!" flag must be part of the 'viminfo' setting
(In your vimcrc file) :
 set viminfo+=! " Save and restore global variables.
 :MarkLoadRestore the marks from the previous Vim session. All
current marks are discarded.
 :MarkSaveSave the currently defined marks (or clear the persisted
marks if no marks are currently defined) for
 use in a future Vim session.

***** backup.vim : Numbered Backups

backup.vim : Numbered Backups
 description
 Holds numered backups inside a seperate directory.
 Automaticly purges old backups. Standart is to hold the last 10
versions.
 install details
 Copy to plugin directory and set the following global variables:
 g:backup directory name of backup directory local to edited file
 used for non VMS only. Since non VMS operating-
 systems don't know about version we would get
 ugly directory listings. So all backups are
 moved into a hidden directory.
 g:backup purge count of backups to hold - purge older once.

**** text helpers (abb/templates)

***** Templates (skeleton)

***** template files

skeleton template
 
 To read a skeleton (template) file when opening a new file put an
example like below in vimrc
 :autocmd BufNewFile .c0r ~/vim/skeleton.c
 :autocmd BufNewFile .h0r ~/vim/skeleton.h
 :autocmd BufNewFile .java0r ~/vim/skeleton.java
 IE to get the bash script ready when you edit a new .sh file:
 """"""skeleton files (templates)
 autocmd BufNewFile .sh 0r ~/vim/skeleton.sh

***** Abbreviations

***** Command abbriveations (cabbrev)

replace a built-in command using :cabbrev to automatically replace the
existing command when it is typed or create new ones:
 For example, you may want to change the behavior of a built-in command
like :e. Or, you may make a common typo, like using :w1 instead of :w!.
 for example:
 :cabbrev w /home/user/work/subfolder/
 and then hit :e w to launch it

***** text abbriveations

Abbreviations are useful for a number of situations. there are 2 types:
 abnormal abbriviation
 iab abbriviation when in insert mode
 For example, if you are prone to certain typos --- like typing "helllo"
instead of "hello" --- just set an abbreviation in your .vimrc like
this:
 ab helllo hello
 If you'd like the abbreviation to work in insert mode only, use iab
instead.
 Like mappings, abbreviations can be unset during your session. To
remove a single abbreviation, use :una abbrv . To clear all
abbreviations, use :abc.
 If you go at it a little at a time, eventually you'll have a set of
mappings and abbreviations tuned for your work that help make Vim even
more efficient than it is to begin with.
 to not abbriviate a line press Ctrl+v after the last abrriviation
character
 here are some examples for text expansions abbreviations:
 auto expand adress from typing 557
 iab 557 557 VFW parkway,Chestnut Hill, Boston, MA 02467
 paste 2 lines:
 iab bw Best wishes <CR>Itai Kloog

**** display

***** fix incorrect syntax

If Vim chooses an incorrect syntax command file, you can specify the
 correct one by entering the command:
 :set syn=syntax-type
 IE:
 :set syn=R

**** formatting

***** Quickly align the columns properly

Quickly align the columns properly so that the result is nicely
formatted data.
 1. Select data using visual mode (press Esc v)
 2. Select data
 3. Type
 !column -t

**** bugs/errors

***** vim keeps saving backup files

these lines can casue the issue:
 au BufWinLeave . silent! mkview "make vim save view (state) (folds,
cursor, etc)
 au BufWinEnter . silent! loadview "make vim load view (state) (folds,
cursor, etc)

*** General Regex

**** delete/select lines

rexeg command to delete line starting with "ns":
 \^ns.$
 To delete empty lines:
 \^\s$
 
* Admin
** General Guides
*** A-Z Index of the Linux BASH

 alias Create an alias
 apropos Search Help manual pages (man -k)
 awk Find and Replace text, database sort/validate/index
 break Exit from a loop
 builtin Run a shell builtin
 bzip2 Compress or decompress named file(s)
 
 cal Display a calendar
 case Conditionally perform a command
 cat Display the contents of a file
 cd Change Directory
 cfdisk Partition table manipulator for Linux
 chgrp Change group ownership
 chmod Change access permissions
 chown Change file owner and group
 chroot Run a command with a different root directory
 cksum Print CRC checksum and byte counts
 clear Clear terminal screen
 cmp Compare two files
 comm Compare two sorted files line by line
 command Run a command - ignoring shell functions
 continue Resume the next iteration of a loop
 cp Copy one or more files to another location
 cron Daemon to execute scheduled commands
 crontab Schedule a command to run at a later time
 csplit Split a file into context-determined pieces
 cut Divide a file into several parts
 
 date Display or change the date & time
 dc Desk Calculator
 dd Data Dump - Convert and copy a file
 declare Declare variables and give them attributes
 df Display free disk space
 diff Display the differences between two files
 diff3 Show differences among three files
 dir Briefly list directory contents
 dircolors Colour setup for `ls'
 dirname Convert a full pathname to just a path
 dirs Display list of remembered directories
 du Estimate file space usage
 
 echo Display message on screen
 egrep Search file(s) for lines that match an extended expression
 eject Eject removable media
 enable Enable and disable builtin shell commands
 env Environment variables
 ethtool Ethernet card settings
 eval Evaluate several commands/arguments
 exec Execute a command
 exit Exit the shell
 expand Convert tabs to spaces
 export Set an environment variable
 expr Evaluate expressions
 
 false Do nothing, unsuccessfully
 fdformat Low-level format a floppy disk
 fdisk Partition table manipulator for Linux
 fgrep Search file(s) for lines that match a fixed string
 file Determine file type
 find Search for files that meet a desired criteria
 fmt Reformat paragraph text
 fold Wrap text to fit a specified width.
 for Expand words, and execute commands
 format Format disks or tapes
 free Display memory usage
 fsck File system consistency check and repair
 ftp File Transfer Protocol
 function Define Function Macros
 
 gawk Find and Replace text within file(s)
 getopts Parse positional parameters
 grep Search file(s) for lines that match a given pattern
 groups Print group names a user is in
 gzip Compress or decompress named file(s)
 
 hash Remember the full pathname of a name argument
 head Output the first part of file(s)
 history Command History
 hostname Print or set system name
 
 id Print user and group id's
 if Conditionally perform a command
 import Capture an X server screen and save the image to file
 install Copy files and set attributes
 
 Join function Join function lines on a common field
 
 kill Stop a process from running
 
 less Display output one screen at a time
 let Perform arithmetic on shell variables
 ln Make links between files
 local Create variables
 locate Find files
 logname Print current login name
 logout Exit a login shell
 look Display lines beginning with a given string
 lpc Line printer control program
 lpr Off line print
 lprint Print a file
 lprintd Abort a print job
 lprintq List the print queue
 lprm Remove jobs from the print queue
 ls List information about file(s)
 lsof List open files
 
 make Recompile a group of programs
 man Help manual
 mkdir Create new folder(s)
 mkfifo Make FIFOs (named pipes)
 mkisofs Create an hybrid ISO9660/JOLIET/HFS filesystem
 mknod Make block or character special files
 more Display output one screen at a time
 mount Mount a file system
 mtools Manipulate MS-DOS files
 mv Move or rename files or directories
 
 netstat Networking information
 nice Set the priority of a command or job
 nl Number lines and write files
 nohup Run a command immune to hangups
 
 passwd Modify a user password
 paste Merge lines of files
 pathchk Check file name portability
 ping Test a network connection
 popd Restore the previous value of the current directory
 pr Prepare files for printing
 printcap Printer capability database
 printenv Print environment variables
 printf Format and print data
 ps Process status
 pushd Save and then change the current directory
 pwd Print Working Directory
 
 quota Display disk usage and limits
 quotacheck Scan a file system for disk usage
 quotactl Set disk quotas
 
 ram ram disk device
 rcp Copy files between two machines.
 read read a line from standard input
 readonly Mark variables/functions as readonly
 remsync Synchronize remote files via email
 return Exit a shell function
 rm Remove files
 rmdir Remove folder(s)
 rsync Remote file copy (Synchronize file trees)
 
 screen Terminal window manager
 scp Secure copy (remote file copy)
 sdiff Merge two files interactively
 sed Stream Editor
 select Accept keyboard input
 seq Print numeric sequences
 set Manipulate shell variables and functions
 sftp Secure File Transfer Program
 shift Shift positional parameters
 shopt Shell Options
 shutdown Shutdown or restart linux
 sleep Delay for a specified time
 sort Sort text files
 source Run commands from a file `.'
 split Split a file into fixed-size pieces
 ssh Secure Shell client (remote login program)
 strace Trace system calls and signals
 su Substitute user identity
 sum Print a checksum for a file
 symlink Make a new name for a file
 sync Synchronize data on disk with memory
 
 tail Output the last part of files
 tar Tape ARchiver
 tee Redirect output to multiple files
 test Evaluate a conditional expression
 time Measure Program running time
 times User and system times
 touch Change file timestamps
 top List processes running on the system
 traceroute Trace Route to Host
 trap Run a command when a signal is set(bourne)
 tr Translate, squeeze, and/or delete characters
 true Do nothing, successfully
 tsort Topological sort
 tty Print filename of terminal on stdin
 type Describe a command
 
 ulimit Limit user resources
 umask User/become Root commands file creation mask
 umount Unmount a device
 unalias Remove an alias
 uname Print system information
 unexpand Convert spaces to tabs
 uniq Uniquify files
 units Convert units from one scale to another
 unset Remove variable or function names
 unshar Unpack shell archive scripts
 until Execute commands (until error)
 useradd Create new user account
 usermod Modify user account
 User/become Root commands List users currently logged in
 uuencode Encode a binary file
 uudecode Decode a file created by uuencode
 
 v Verbosely list directory contents (`ls -l -b')
 vdir Verbosely list directory contents (`ls -l -b')
 vi Text Editor
 
 watch Execute/display a program periodically
 wc Print byte, word, and line counts
 whereis Report all known instances of a command
 which Locate a program file in the user's path.
 while Execute commands
 who Print all usernames currently logged in
 whoami Print the current user id and name (`id -un')
 Wget Retrieve web pages or files via HTTP, HTTPS or FTP
 
 xargs Execute utility, passing constructed argument list(s)
 yes Print a string until interrupted
 
 .period Run commands from a file
 ### Comment / Remark

*** run CLI command in background

A task can usually be started and run as a background task by putting a
'&' at the end of the command line.
 If a task was started and is running in the foreground, it is still
possible to move it to the background without cancelling it. To move a
task from the foreground to the background perform the following steps:
 CTRL-Z (That is, while holding the CTRL key down, tap the 'z' key)
This will suspend the current foreground job (task).
 Enter the job control command 'bg'
 Tap the 'Enter' key
 The job is now running in the background.
 Useful commands to see which jobs are still running is the 'jobs' or
the 'ps ua' commands. If the 'jobs' command is used, a background jobs
can be brought to the foreground with the command fg n where n is the
job (not the PID) number.
*** XCDC password method


#+DOWNLOADED: /tmp/screenshot.png @ 2014-07-18 11:05:03
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-07-18_11:05:03.png]]
 
** systemd
**** systemctl
The main command used to introspect and control systemd is systemctl. Some of its uses are examining the system state and managing the system and services. Note: systemadm is the official graphical frontend for systemctl. It is provided by the systemd-ui-git package from the AUR.

***** Analyzing the system state
List running units:

#+BEGIN_SRC sh
systemctl
#+END_SRC
 or to list all units:

#+BEGIN_SRC sh
systemctl list-units
#+END_SRC

 List failed units:

#+BEGIN_SRC sh
systemctl --failed
#+END_SRC

 The available unit files can be seen in /usr/lib/systemd/system/ and
/etc/systemd/system/ (the latter takes precedence). You can see list
installed unit files by:

#+BEGIN_SRC sh
systemctl list-unit-files
#+END_SRC

***** Using units
Units can be, for example, services (.service), mount points (.mount), devices (.device) or sockets (.socket). When using systemctl, you generally have to specify the complete name of the unit file, including its suffix, for example sshd.socket. There are however a few shortforms when specifying the unit in the following systemctl commands:

If you don't specify the suffix, systemctl will assume .service. For example, netcfg and netcfg.service are treated equivalent. Mount points will automatically be translated into the appropriate .mount unit. For example, specifying /home is equivalent to home.mount. Similiar to mount points, devices are automatically translated into the appropriate .device unit, therefore specifying /dev/sda2 is equivalent to dev-sda2.device.

Activate a unit immediately:

#+BEGIN_SRC sh
systemctl start <unit>
#+END_SRC


Deactivate a unit immediately:

#+BEGIN_SRC sh
systemctl stop <unit>
#+END_SRC

Restart a unit:

#+BEGIN_SRC sh
systemctl restart <unit>
#+END_SRC

Ask a unit to reload its configuration:

#+BEGIN_SRC sh
systemctl reload <unit>
#+END_SRC

Show the status of a unit, including whether it is running or not:

#+BEGIN_SRC sh
systemctl status <unit>
#+END_SRC

Check whether a unit is already enabled or not:

#+BEGIN_SRC sh
systemctl is-enabled <unit>
#+END_SRC

Enable a unit to be started on bootup:

#+BEGIN_SRC sh
systemctl enable <unit>
#+END_SRC

Show the manual page associated with a unit (this has to be supported
by the unit file):

#+BEGIN_SRC sh
systemctl help <unit>
#+END_SRC

Reload systemd, scanning for new or changed units:
#+BEGIN_SRC sh
 systemctl daemon-reload
#+END_SRC


***** If services do not have an Install section:
it usually means they are called automatically by other services. But if you need to install them manually, use the following command, replacing foo with the name of the service.

# ln -s /usr/lib/systemd/system/foo.service
/etc/systemd/system/graphical.target.wants/

***** Disable a unit to not start during bootup:

#+BEGIN_SRC sh
systemctl disable <unit>
#+END_SRC


**** journalctl (logs)
***** basics
To read the log, use:

#+BEGIN_SRC sh
journalctl
#+END_SRC

you can add arguments to the command (see man journalctl) such as :

#+BEGIN_SRC emacs-lisp :results none
journalctl -xn
#+END_SRC

journalctl allows you to filter the output by specific fields. ₆In example₆ Show all messages from this boot:

#+BEGIN_SRC sh
journalctl -b
#+END_SRC

Show all kernel logs from previous boot:

#+BEGIN_SRC sh
journalctl -k -b -1
#+END_SRC

other examples

#+BEGIN_SRC sh
#Show all messages by a specific executable:

journalctl /usr/lib/systemd/systemd

#Show all messages by a specific process:

journalctl _PID=1

#Show all messages by a specific unit:

journalctl -u netcfg
#+END_SRC
***** change log level at bootup
edit your bootloader (syslinux,grub etc) cfg file
sudo vim /boot/syslinux/syslinux.cfg
then add this to your kernel options line
APPEND root=/dev/disk/by-label/Root ro systemd.log level=crit

**** service names

to start nfs:

 systemctl enable rpc-mountd.service
 sudo systemctl enable httpd.service

#for apache web server

 systemctl start mysqld.service #for mysql

**** specific applications
***** transmission

Configuration
 For transmission-gtk and transmission-qt, the default path of
configuration files is ~/.config/transmission.
 For transmission-cli, default configuration path is
~/.config/transmission-daemon.
 If you use systemd, you have to override the user in both the service
file (/usr/lib/systemd/system/transmission.service) and the tmpfile
(/usr/lib/tmpfiles.d/transmission.conf). To do so, copy both files to
the appropriate directory in /etc:

 cp /usr/lib/systemd/system/transmission.service /etc/systemd/system/
 cp /usr/lib/tmpfiles.d/transmission.conf /etc/tmpfiles.d/

 Create a new group named for example, transmission:
 warning: This may already exist

 groupadd transmission

 Add your custom user to the newly created [group] ie. transmission:

 gpasswd -a [user] [group]

 ie:

 gpasswd -a zeltak transmission

 Then change User= to your custom user in the service file by editing
/etc/systemd/system/transmission.service
 [Service]
 User=zeltak
 Type=forking
 PIDFile=/run/transmission/transmission.pid
 ExecStart=/usr/bin/transmission-daemon --pid-file
/run/transmission/transmission.pid
 edit the tmpfile by editing etc/tmpfiles.d/transmission.conf default
is: d /run/transmission - [user] [group] -
 to
 d /run/transmission - zeltak transmission -
 Then run

 systemd-tmpfiles --create transmission.conf

 enable the transmission service.

 systemctl enable transmission.service

 change permissions to 777 on folder '/run/transmission'.

 sudo chmod 777 /run/transmission
***** Emacs
****** emacs fails to start error
if you get this error:

#+BEGIN_EXAMPLE
Job for emacs@zeltak.service failed. See 'systemctl status emacs@zeltak.service' and 'journalctl -xn' for details.
#+END_EXAMPLE

make sure there are no other instances of emacs running (you can use killall emacs)

and stop/start emacs again via systemd

**** query service names

to search for ntp for example:

pacman -Ql ntp | grep .service

**** timedatectl
for more info look here
https://wiki.archlinux.org/index.php/Time
***** get status of system date/time
to view current time:
timedatectl status

***** to set time
timedatectl set-time TIME

In example:
#+BEGIN_SRC sh
timedatectl set-time 17:41

#also
timedatectl set-time "2012-10-30 18:17:16"
#+END_SRC

***** change/info on time zone
#+begin_src sh
sudo timedatectl set-timezone  Asia/Jerusalem
#+end_src

**** suspend/sleep/power

***** use systemd to suspend

1. make sure you login with 'startx'and not'xinit'
 2.issue one of the following commands:
 systemctl suspend
 systemctl hibernate
 systemctl hybrid-sleep

***** disable lid suspend



Systemdhandles some power-related ACPI events. This is configured via
the following options in

 /etc/systemd/logind.conf:

-  HandlePowerKey: specifies which action is invoked when the power key
   is pressed.
-  HandleSuspendKey: specifies which action is invoked when the suspend
   key is pressed.
-  HandleHibernateKey: specifies which action is invoked when the
   hibernate key is pressed.
-  HandleLidSwitch: specifies which action is invoked when the lid is
   closed.

 

The specified action can be one
ofignore,poweroff,reboot,halt,suspend,hibernateorkexec.If these
options are not configured, systemd will use its
defaults:HandlePowerKey=poweroff,HandleSuspendKey=suspend,HandleHibernateKey=hibernate,
andHandleLidSwitch=suspend.On systems which run no graphical setup or
only a simple window manager
like[[https://wiki.archlinux.org/index.php/I3][i3]]or[[https://wiki.archlinux.org/index.php/Awesome][awesome]],
this may replace
the[[https://wiki.archlinux.org/index.php/Acpid][acpid]]daemon which
is usually used to react to these ACPI events.In the current version of
systemd, theHandleoptions will apply throughout the system unless they
are "inhibited" (temporarily turned off) by a program, such as a power
manager inside a desktop environment. If these inhibits are not taken,
you can end up with a situation where systemd suspends your system, then
when it wakes up the other power manager suspends it again.

Note:Currently, the power manager in newest version
of[[https://wiki.archlinux.org/index.php/KDE][KDE]]is the only one
that issues the necessary "inhibited" commands. Until the others do, you
will need to set theHandleoptions toignoreif you want your ACPI
events to be handled
by[[https://wiki.archlinux.org/index.php/GNOME][GNOME]],[[https://wiki.archlinux.org/index.php/Xfce][Xfce]],[[https://wiki.archlinux.org/index.php/Acpid][acpid]]or
other programs. New versions are on the way that will include this
functionality.

** Recovery
*** System rescue CD
**** General
sysrescuecd auto creates a /mnt/backup/ partition where the backup apps sucj as fsarchiver and partimage dump the images by default
**** fsarchiver
***** Backup partitions
Here is how to use FSArchiver to backup a partition of your disk. Let's consider your linux operating system is installed on /dev/sda1 and you want to back it up to a file on /mnt/backup. You can run this command from a livecd:

$Note- sysrescuecd will by default create (and dump) the file into /mnt/backup thats is located in RAM$

#+BEGIN_SRC sh
fsarchiver savefs /mnt/backup/gentoo-rootfs.fsa /dev/sda1
#+END_SRC

You can also archive several filesystems in a single archive file:

#+BEGIN_SRC sh
fsarchiver savefs /mnt/backup/gentoo-rootfs.fsa /dev/sda1 /dev/sda2 /dev/volgroup/lv01
#+END_SRC
%Tip-one can use the -v option for verbose info%


%Tip-FSArchiver also supports multi-threaded compression. If you have a multi-core processor (eg: dual-core or quad-core) you should create several compression jobs so that all the cores are used. It will make the compression or decompression a lot faster. For instance, if you have a dual-core, you should use option -j2 to create two compression threads to use the power of the two cores. If you have a quad-core cpu, option -j4 is recommended, except if you want to leave one core idle for other programs. In that case you can use -j3. Here is an example of multi-threaded compression%:

#+BEGIN_SRC sh
fsarchiver -j3 -o savefs /mnt/backup/gentoo-rootfs.fsa /dev/sda1
#+END_SRC
***** Restore
FSArchiver supports multiple filesystems per archive. For that reason, you have to specify which filesystem you want to restore. Each filesystem has a number starting at 0. The first filesystem in the archive will be filesystem number 0, the second will be filesystem number 1, ... You can restore either one filesystem at a time, or several filesystems with just one command.

!be careful with white spaces, if you get an error about cannot find "dest" key in....its most likley you have whitespace issues!

Here is how to restore a filesystem from an archive when there is only one filesystem in that archive:

#+BEGIN_SRC sh
fsarchiver restfs /mnt/backup/gentoo-rootfs.fsa id=0,dest=/dev/sda1
#+END_SRC

There is how to restore the second filesystem from an archive (second = number 1):

#+BEGIN_SRC sh
fsarchiver restfs /mnt/backup/archive-multple-filesystems.fsa id=1,dest=/dev/sdb1
#+END_SRC

You can also restore both the first and the second filesystem in the same time: (numbers 0 and 1)

#+BEGIN_SRC sh
fsarchiver restfs /mnt/backup/archive-multple-filesystems.fsa id=0,dest=/dev/sda1 id=1,dest=/dev/sdb1
#+END_SRC

Option -F was used to convert a filesystem in old version. For instance, it allows to restore a filesystem which was ext2 when it was saved as reiserfs on the new partition. Now, you have to specify option mkfs=xxx with the destination partition. Here is how to restore the first filesystem from an archive to /dev/sda1 and to convert it to reiserfs in the same time:

#+BEGIN_SRC sh
fsarchiver restfs /mnt/backup/gentoo-rootfs.fsa id=0,dest=/dev/sda1,mkfs=reiserfs
#+END_SRC
***** Display info about an archive

It may be useful to know what has been saved in an archive. You can do this using archinfo. It will tell you how many filesystems there are, their properties, the original size of the filesystem and how much space is used:

#+BEGIN_SRC sh
fsarchiver archinfo /backup/backup-fsa/sysimg-t3p5g965-debian-20100131-07h16.fsa
#+END_SRC
***** Detection of the filesystems
FSArchiver is able to detect the filesystems which are installed on all the disks of a computer. This is very useful when you want to work on a partition when you don't know what is its device name.

#+BEGIN_SRC sh
fsarchiver probe simple
#+END_SRC

*** Clonezilla
**** clone to image on NFS drive
choose NFS as backup destination
enter destination IP
₆In example₆ 132.72.152.204
enter full nfs path
.₆In example₆ on my work debian machine: /volume1/ZUraid/

proceed as normally you would 
**** bad blocks erros
its possible to overcome bad block erros if using clonezilla
if you do get them while cloning:
enter expert mode, and check the option "-rescue" in the relevant screen
if not succesful its recommended to try ddrescue or gddrescue (Gui) as a last resort.
** admin
*** sudo
**** adding user to sudo list
Configuration

to quick view current settings for sudo Run

sudo -ll
to print out the current sudo configuration.
Using visudo
The configuration file for sudo is /etc/sudoers. It should always be
edited with the visudo command. visudo locks the sudoers file, saves
edits to a temporary file, and checks that file's grammar before copying
it to /etc/sudoers.
 Warning: It is imperative that sudoers be free of syntax errors! Any
error makes sudo unusable. Always edit it with visudo to prevent errors.
 The default editor for visudo is vi. It will be used if you do not
specify another editor, by setting either VISUAL or EDITOR environment
variables (used in that order) to the desired editor, e.g. vim. The
command is run as root:

 VISUAL="/usr/bin/vim -p -X" visudo

 You can permanently change the setting system-wide to e.g. vim by
appending:

 export VISUAL="/usr/bin/vim -p -X"

 to your ~/.bashrc file. Note that this won't take effect for
already-running shells.
 To change the editor of choice permanently only for visudo, add the
following line to /etc/sudoers where vim is your prefered editor:
 # Reset environment by default
 Defaults env reset
 # Set default EDITOR to vim, and do not allow visudo to use
EDITOR/VISUAL.
 Defaults editor="/usr/bin/vim -p -X", !env editor
 Example Entries
 To allow a user to gain full root privileges when he/she precedes a
command with sudo, add the following line:
 USER NAME ALL=(ALL) ALL
 uncommon options:

 To allow a user to run all commands as any user but only the machine
with hostname HOST NAME:
 USER NAME HOST NAME=(ALL) ALL
 To allow members of group wheel sudo access:
 %wheel ALL=(ALL) ALL
 To disable asking for a password for user USER NAME:
 Defaults:USER NAME !authenticate

**** no password sudo operation

To let a specific bin/app run without the need for sudo permissions edit
the sudo file again:

 VISUAL="/usr/bin/vim -p -X" visudo

 NOTE: visudo is very hard to work in so if you dont use the above
command and use vim its better to prepare the command in a text editor
and just paste it (middle click etc).
 example:
 Cmnd Alias S2RAM = /usr/sbin/s2ram
 zeltak ALL=(ALL) NOPASSWD: S2RAM
 or then for example if you want the command netcfg to run as sudo
without a password add these lines to the visudo file
 Cmnd Alias HALT = /sbin/halt
 zeltak ALL=(ALL) NOPASSWD: HALT
 where the first line defines the command the alias (MUST BE CAPITAL)
for the bin/command (netcfg in this example)
 and the second lines tells which user is allowed to run the cmd as sudo
without a password
 
 Remember that after that you must issue the commads without sudo IE:

 $netcfg home

**** Enabling Visual Feedback when Typing Passwords

Simply edit /etc/sudoers and change the Defaults line to read:
 Defaults env reset,pwfeedback

**** using NANO as default visudo editor

using NANO as default visudo editor:
 open your ~/.bashrc file, and append the line to the bottom of the
file:
 export EDITOR="nano"
 If you wish to use another text editor, replace "nano" with any text
editor of your choice.
 Run source ~/.bashrc to ensure the changes you made have taken effect.
 Now launch visudo with:

------------------------------------------------------------------------------------------------------------------------------------------
 sudo -E visudo

------------------------------------------------------------------------------------------------------------------------------------------
 in the terminal, and put in Defaults editor=/usr/bin/nano in the file.
 So the top of the file has these 2 lines:
 Defaults editor=/usr/bin/nano
 Defaults env reset
 Again, if you wish to use another text editor, replace "nano" with the
full path to the text editor of your choice. Save, and from now on
launching visudo with gksu visudo for Ubuntu; kdesu visudo for Kubuntu
or sudo visudo in the terminal will now open with your chosen editor.
*** kill
**** send usersig kill (SIGUSR1)
     #+NAME: 
     #+BEGIN_SRC sh
kill -10 1140  
     #+END_SRC 
*** cron

**** intro

Cron-Intro
 
 For cron to run user-scheduled tasks, it reads a file called crontab.
 Each user has her own version of this file, which is stored in the
/var/spool/cron/crontabs directory.
 This file can be edited in a text editor, but a special command should
be used to do so.
 
 Adding a scheduled task is relatively easily and is done via the shell.
Entering the following
 command will cause your personal crontab file to be loaded into the GNU
nano text editor, ready for editing:
 

 crontab -e

 
 01 12 15   tar -cjf /home/keir/mybackup.tar.bz2 /home/keir
 
 Let's examine the line piece by piece. The first part the numbers and
asterisks refers to
 when the task should be run. From left to right, the fields refer to
the following:
 Minutes, from 0 to 59
 Hours, in 24-hour time, so from 0 to 23
 Day dates, for the day of the month, from 1 to 31 (assuming the month
has that many
 days)
 Months, from 1 to 12
 Day, for a particular day, either from 0 to 6 (0 is Sunday), or
specified as a three-letter
 abbreviation (mon, tue, wed, and so on)
 [[~/Dropbox/Org/Tech/linux_files/cron.png]]
 
 What the numbrs mean
 
 0 22    /root/rsync-shell.sh
 What this all means is:
 
 1. The number of minutes after the hour (0 to 59)
 2. The hour in military time (24 hour) format (0 to 23)
 3. The day of the month (1 to 31)
 4. The month (1 to 12)
 5. The day of the week(0 or 7 is Sun, or use name)
 6. The command to run
 
 So at 22:00 (10pm) every day root will run the shell script, without
prompting you for sudo password (because its running as root already)

**** edit cron

Edit cron from the command line

 crontab -e


 Display your crontab file

 crontab -l




**** backup

backup cron file manuay

 crontab -l > /path/to/your/backup/file

 Tip:
 to back up via rsync or other method ,y ou could just backup the entire
/var/spool/cron directory.
 It contains all crontables of all users and more.

**** cron and systemd

make sure when using systemd do enable cron

 systemctl enable cronie

 and to check if loaded

 systemctl status cronie

*** grub

**** grub2

to install grub to mbr issue (as root):
 grub-install /dev/sda

*** init.d

**** init.d processes

to find out what processes start auto in init.d

 issue
 ls -l /etc/rc2.d/
 and see the list of auto boot processes

*** logs

**** log location

The main log is located in

 /var/log/messages
 To view use:
 cat /var/log/messages

**** cron logs (how to enable in ubuntu)

How to enable cron log in Ubuntu

 The following steps will enable the cron log to allow for better
debugging details.
 1. Edit /etc/syslog.conf
 sudo nano /etc/syslog.conf
 and uncomment the line starting with cron.
 2. Run
 sudo /etc/init.d/sysklogd restart
 3. Run
 sudo /etc/init.d/cron restart

*** mounting

**** basic mounting

Basic Mounting

 The standard form of the mount command, is
 mount -t type device dir
 When mounting, you must tell the mount command what is the device or
partition you want to mount and what is the mount point. The mount point
must be a directory that already exists on your system.
 NOTE: before mounting a clean empty directory MUST be created!
 For example, to mount /dev/sda1 Hard drive to the folder in media
directory
 sudo mount /dev/sda1 /media/tmpHD/
 Unmount:
 sudo umount /media/Mymusic
 FAT32
 sudo mount -t vfat -o umask=000 /dev/hdb1 /mnt/windows
 NTFS
 sudo mount -t ntfs -o umask=0222 /dev/hdb1 /mnt/windows
 The -t command option is used to specify the file system type.

**** mount network drives

Mount network drives

 1)mkdir in /media or /mnt to make folders for each drive
 sudo mkdir /media/thd
 mount drive
 sudo mount 192.168.0.2:/mnt/hd2 /media/thd
 to auto mount at startup:
 /!\ Go to Fstab basket for more info

*** users and groups

**** users managment

User management
 Local user information is stored in the /etc/passwd file. To list all
user accounts on the system:

 cat /etc/passwd

 There is one line per account, and each is of the format:
 account:password:UID:GID:GECOS:directory:shell
 where:

 account is the user name
 password is the user password
 UID is the numerical user ID
 GID is the numerical primary group ID for the user
 GECOS is an optional field used for informational purposes; usually
it contains the full user name
 directory is the user's $HOME directory
 shell is the user command interpreter (defaults to /bin/sh)
 Note: Arch Linux uses shadowed passwords. The passwd file is
world-readable, so storing passwords (hashed or otherwise) in this file
would be insecure. Instead, the password field will contain a
placeholder character (x) indicating that the hashed password is saved
in the access-restricted file /etc/shadow.
 To list users currently logged on the system, the who command can be
used.
 To add a new user, use the useradd command:
 useradd -m -g [initial group] -G [additional groups] -s
[login shell] [username]
 -m creates the user home directory as /home/[username]; within his
home directory, a non-root user can write files, delete them, install
programs, and so on.
 -g defines the group name or number of the user's initial login
group; the group name must exist; if a group number is provided, it must
refer to an already existing group; if not specified, the behavior of
useradd will depend on the USERGROUPS ENAB variable contained in
/etc/login.defs.
 -G introduces a list of supplementary groups which the user is also
a member of; each group is separated from the next by a comma, with no
intervening spaces; the default is for the user to belong only to the
initial group.
 -s defines the path and filename of the user's default login shell;
Arch Linux init scripts use Bash; after the boot process is complete,
the default login shell is the one specified here; ensure the chosen
shell package is installed if choosing something other than Bash.
 A typical desktop system example, adding a user named archie specifying
bash as the login shell:

 # useradd -m -g users -s /bin/bash archie

 To specify the user's password, type:

 # passwd [username]

 An interactive tool is available for adding users:

 # adduser

 adduser asks common questions about the user with sane defaults and
constructs a useradd command to run. It also changes finger information
and sets the password, thus carrying out also the job of chfn and
passwd.
 User accounts may be deleted with the userdel command.

 # userdel -r [username]

 The -r option specifies that the user's home directory and mail spool
should also be deleted.

**** groups managment

Group management
 /etc/group is the file that defines the groups on the system (man group
for details).
 Display group membership with the groups command:

 $ groups [user]

 If user is omitted, the current user's group names are displayed.
 The id command provides additional detail, such as the user's UID and
associated GIDs:

 $ id [user]

 To list all groups on the system:

 $ cat /etc/group

 Create new groups with the groupadd command:

 # groupadd [group]

 Add users to a group with the gpasswd command:

 # gpasswd -a [user] [group]

 To delete existing groups:

 # groupdel [group]

 To remove users from a group:

 # gpasswd -d [user] [group]

 If the user is currently logged in, he/she must log out and in again
for the change to have effect.

**** info

Check processes not run by you

 all the processes on the box not being run by you
 ps aux | grep -v `whoami`
 list the top ten time-wasters
 ps aux --sort=-%cpu | grep -m 11 -v `whoami`

**** find out the uid and gid

id command

 Use the id command to display user and group information

id zeltak

**** change uid (user id) of main computer user

Change UID (User ID) of main computer user

 add a user to linux
 steps:
 1 - logout
 2- press alt-F2; login as root
 VERY IMORTANT!!READ CAREFULLY!!
 dont forget the space and dot at the
end!!!!!

 3 backup (as root) the file: /etc/passwd /etc/shadows
 type in terminal
 cp /etc/passwd /etc/shadows .
<--------------------------------------------------------
 dont forget the space before the dot !!!!! dont forget the
dot!!!!!
 4 type in terminal > usermod -u 501 zeltak
 5 - restart

*** raid

**** info

Introduction
 

 The main goals of using redundant arrays of inexpensive disks (RAID)
are to improve disk data performance and provide data redundancy. RAID
can be handled either by the operating system software or it may be
implemented via a purpose built RAID disk controller card without having
to configure the operating system at all. This chapter will explain how
to configure the software RAID schemes supported by RedHat/Fedora Linux.
For the sake of simplicity, the chapter focuses on using RAID for
partitions that include neither the /boot or the root (/) filesystems.
 RAID Types
 RAID 0
 With RAID 0, the RAID controller tries to evenly distribute data across
all disks in the RAID set.
 Envision a disk as if it were a plate, and think of the data as a cake.
You have four cakes- chocolate, vanilla, cherry and strawberry-and four
plates. The initialization process of RAID 0, divides the cakes and
distributes the slices across all the plates. The RAID 0 drivers make
the operating system feel that the cakes are intact and placed on one
large plate. For example, four 9GB hard disks configured in a RAID 0 set
are seen by the operating system to be one 36GB disk.
 Like Linear RAID, RAID 0 aims to accommodate large filesystems spread
over multiple devices with no data redundancy. The advantage of RAID 0
is data access speed. A file that is spread over four disks can be read
four times as fast. You should also be aware that RAID 0 is often called
striping.
 RAID 0 can accommodate disks of unequal sizes. When RAID runs out of
striping space on the smallest device, it then continues the striping
using the available space on the remaining drives. When this occurs, the
data access speed is lower for this portion of data, because the total
number of RAID drives available is reduced. For this reason, RAID 0 is
best used with drives of equal size.
 RAID 1 (Disk Mirroring)
 With RAID 1, data is cloned on a duplicate disk. This RAID method is
therefore frequently called disk mirroring. Think of telling two people
the same story so that if one forgets some of the details you can ask
the other one to remind you.
 When one of the disks in the RAID set fails, the other one continues to
function. When the failed disk is replaced, the data is automatically
cloned to the new disk from the surviving disk. RAID 1 also offers the
possibility of using a hot standby spare disk that will be automatically
cloned in the event of a disk failure on any of the primary RAID
devices.
 RAID 1 offers data redundancy, without the speed advantages of RAID 0.
A disadvantage of software-based RAID 1 is that the server has to send
data twice to be written to each of the mirror disks. This can saturate
data busses and CPU use. With a hardware-based solution, the server CPU
sends the data to the RAID disk controller once, and the disk controller
then duplicates the data to the mirror disks. This makes RAID-capable
disk controllers the preferred solution when implementing RAID 1.
 A limitation of RAID 1 is that the total RAID size in gigabytes is
equal to that of the smallest disk in the RAID set. Unlike RAID 0, the
extra space on the larger device isn't used.
 RAID 4
 RAID 4 operates likes RAID 0 but inserts a special error-correcting or
parity chunk on an additional disk dedicated to this purpose.
 RAID 4 requires at least three disks in the RAID set and can survive
the loss of a single drive only. When this occurs, the data in it can be
recreated on the fly with the aid of the information on the RAID set's
parity disk. When the failed disk is replaced, it is repopulated with
the lost data with the help of the parity disk's information.
 RAID 4 combines the high speed provided of RAID 0 with the redundancy
of RAID 1. Its major disadvantage is that the data is striped, but the
parity information is not. In other words, any data written to any
section of the data portion of the RAID set must be followed by an
update of the parity disk. The parity disk can therefore act as a
bottleneck. For this reason, RAID 4 isn't used very frequently.
 RAID 5 (Data redundancy with loss of 1 disk-Use this ussually)
 RAID 5 improves on RAID 4 by striping the parity data between all the
disks in the RAID set. This avoids the parity disk bottleneck, while
maintaining many of the speed features of RAID 0 and the redundancy of
RAID 1. Like RAID 4, RAID 5 can survive the loss of a single disk only.
 Linux RAID 5 requires a minimum of three disks or partitions.
 Before You Start
 Specially built hardware-based RAID disk controllers are available for
both IDE and SCSI drives. They usually have their own BIOS, so you can
configure them right after your system's the power on self test (POST).
Hardware-based RAID is transparent to your operating system; the
hardware does all the work.
 If hardware RAID isn't available, then you should be aware of these
basic guidelines to follow when setting up software RAID.
 IDE Drives
 To save costs, many small business systems will probably use IDE disks,
but they do have some limitations.
  The total length of an IDE cable can be only a few feet long, which
generally limits IDE drives to small home systems.
  IDE drives do not hot swap. You cannot replace them while your
system is running.
  Only two devices can be attached per controller.
  The performance of the IDE bus can be degraded by the presence of a
second device on the cable.
  The failure of one drive on an IDE bus often causes the
malfunctioning of the second device. This can be fatal if you have two
IDE drives of the same RAID set attached to the same cable.
 For these reasons, I recommend you use only one IDE drive per
controller when using RAID, especially in a corporate environment. In a
home or SOHO setting, IDE-based software RAID may be adequate.
 Serial ATA Drives
 Serial ATA type drives are rapidly replacing IDE, or Ultra ATA, drives
as the preferred entry level disk storage option because of a number of
advantages:
  The drive data cable can be as long as 1 meter in length versus
IDE's 18 inches.
  Serial ATA has better error checking than IDE.
  There is only one drive per cable which makes hot swapping, or the
capability to replace components while the system is still running,
possible without the fear of affecting other devices on the data cable.
  There are no jumpers to set on Serial ATA drives to make it a master
or slave which makes them simpler to configure.
  IDE drives have a 133Mbytes/s data rate whereas the Serial ATA
specification starts at 150 Mbytes/sec with a goal of reaching 600
Mbytes/s over the expected ten year life of the specification.
 If you can't afford more expensive and faster SCSI drives, Serial ATA
would be the preferred device for software and hardware RA
 Should I Use Software RAID Partitions Or Entire Disks?
 It is generally a not a good idea to share RAID-configured partitions
with non-RAID partitions. The reason for this is obvious: A disk failure
could still incapacitate a system.
 If you decide to use RAID, all the partitions on each RAID disk should
be part of a RAID set. Many people simplify this problem by filling each
disk of a RAID set with only one partition.
 Backup Your System First
 Software RAID creates the equivalent of a single RAID virtual disk
drive made up of all the underlying regular partitions used to create
it. You have to format this new RAID device before your Linux system can
store files on it. Formatting, however, causes all the old data on the
underlying RAID partitions to be lost. It is best to backup the data on
these and any other partitions on the disk drive on which you want
implement RAID. A mistake could unintentionally corrupt valid data.
 Configure RAID In Single User Mode
 As you will be modifying the disk structure of your system, you should
also consider configuring RAID while your system is running in
single-user mode from the VGA console. This makes sure that most
applications and networking are shutdown and that no other users can
access the system, reducing the risk of data corruption during the
exercise.
 [root@bigboy tmp]# init 1
 Once finished, issue the exit command, and your system will boot in the
default runlevel provided in the /etc/inittab file.

**** create a raid from scratch

Configuring Software RAID (5)

 In the tutorial example, you'll be configuring RAID 5 using a system
with three pre-partitioned hard disks. The partitions to be used are:
 /dev/hde1
 /dev/hdf2
 /dev/hdg1
 RAID Partitioning
 You first need to identify two or more partitions, each on a separate
disk. If you are doing RAID 0 or RAID 5, the partitions should be of
approximately the same size, as in this scenario. RAID limits the extent
of data access on each partition to an area no larger than that of the
smallest partition in the RAID set.
 Determining Available Partitions :
 /!\ Note: Ususally when you use new Hard drives all this is not
necesseary- go to Route 2 from here
 Route 1 (use only when partitions exist-RARE)
 First use the fdisk -l command to view all the mounted and unmounted
filesystems available on your system. You may then also want to use the
df -k command, which shows only mounted filesystems but has the big
advantage of giving you the mount points too.
 These two commands should help you to easily identify the partitions
you want to use. Here is some sample output of these commands:
 zeltak@voices:~$ sudo fdisk -l
 Disk /dev/sda: 500.1 GB, 500107862016 bytes
 255 heads, 63 sectors/track, 60801 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Disk identifier: 0x2cb12cb0
 Device Boot Start End Blocks Id System
 /dev/sda1  1 7649 61440561 7 HPFS/NTFS
 /dev/sda2 57641 60801 25390732+ 5 Extended
 /dev/sda3 11298 57640 372250147+ 83 Linux
 /dev/sda4 7650 11297 29302560 83 Linux
 /dev/sda5 57641 57831 1534176 82 Linux swap / Solaris
 /dev/sda6 57832 60801 23856493+ 83 Linux
 Partition table entries are not in disk order
 or
 zeltak@voices:~$ df -k
 Filesystem 1K-blocks Used Available Use% Mounted on
 /dev/sda4 28842780 5652872 21724780 21% /
 tmpfs 1815348 0 1815348 0% /lib/init/rw
 varrun 1815348 228 1815120 1% /var/run
 varlock 1815348 0 1815348 0% /var/lock
 udev 1815348 2940 1812408 1% /dev
 tmpfs 1815348 12 1815336 1% /dev/shm
 lrm 1815348 2000 1813348 1% /lib/modules/2.6.27-7-generic/volatile
 /dev/sda3 366407416 286501972 61292940 83% /home
 eddie:/mnt/media 721091456 672508352 48583104 94% /media/media
 eddie:/mnt/hd2 241263968 195883104 42929760 83% /media/thd
 192.168.0.7:/media/movt
 153835008 38204672 107815936 27% /media/movt
 Unmount the Partitions
 You don't want anyone else accessing these partitions while you are
creating the RAID set, so you need to make sure they are unmounted.:
 [root@bigboy tmp]# umount /dev/hde1
 [root@bigboy tmp]# umount /dev/hdf2
 [root@bigboy tmp]# umount /dev/hdg1
 Prepare The Partitions With FDISK
 You have to change each partition in the RAID set to be of type FD
(Linux raid autodetect), and you can do this with fdisk. Here is an
example using /dev/hde1.
 [root@bigboy tmp]# fdisk /dev/hde
 The number of cylinders for this disk is set to 8355.
 There is nothing wrong with that, but this is larger than 1024,
 and could in certain setups cause problems with:
 1) software that runs at boot time (e.g., old versions of LILO)
 2) booting and partitioning software from other OSs
 (e.g., DOS FDISK, OS/2 FDISK)
 Command (m for help):
 Set The ID Type
 Partition /dev/hde1 is the first partition on disk /dev/hde. Modify its
type using the t command, and specify the partition number and type
code. You also should use the L command to get a full listing of ID
types in case you forget. In this case, RAID uses type fd, it may be
different for your version of Linux.
 Command (m for help): t
 Partition number (1-5): 1
 Hex code (type L to list codes): L
 16 Hidden FAT16 61 SpeedStor f2 DOS secondary
 17 Hidden HPFS/NTF 63 GNU HURD or Sys fd Linux raid auto
 18 AST SmartSleep 64 Novell Netware fe LANstep
 1b Hidden Win95 FA 65 Novell Netware ff BBT
 Hex code (type L to list codes): fd
 Changed system type of partition 1 to fd (Linux raid autodetect)
 Command (m for help):
 Make Sure The Change Occurred
 Use the p command to get the new proposed partition table:
 Command (m for help): p
 Disk /dev/hde: 4311 MB, 4311982080 bytes
 16 heads, 63 sectors/track, 8355 cylinders
 Units = cylinders of 1008  512 = 516096 bytes
 Device Boot Start End Blocks Id System
 /dev/hde1 1 4088 2060320+ fd Linux raid autodetect
 /dev/hde2 4089 5713 819000 83 Linux
 /dev/hde4 6608 8355 880992 5 Extended
 /dev/hde5 6608 7500 450040+ 83 Linux
 /dev/hde6 7501 8355 430888+ 83 Linux
 Command (m for help):
 Use the w command to permanently save the changes to disk /dev/hde:
 ommand (m for help): w
 The partition table has been altered!
 Calling ioctl() to re-read partition table.
 WARNING: Re-reading the partition table failed with error 16: Device or
resource busy.
 The kernel still uses the old table.
 The new table will be used at the next reboot.
 Syncing disks.
 [root@bigboy tmp]#
 The error above will occur if any of the other partitions on the disk
is mounted.
 Repeat For The Other Partitions
 It's enough to know that the steps for changing the IDs for /dev/hdf2
and /dev/hdg1 are very similar.
 Route 2
 Prepare The Partitions With FDISK
 Issue fdisk for the new Hard drive
 sudo fdisk /dev/NEWHD
 Example:
 sudo fdisk /dev/hdc
 press p to check the drive indeed is empty (you should see this warning
when issuing fdisk):
 Device contains neither a valid DOS partition table, nor Sun, SGI or
OSF disklabel
 Building a new DOS disklabel. Changes will remain in memory only,
 until you decide to write them. After that, of course, the previous
 content won't be recoverable.
 Command (m for help): p
 Disk /dev/hdc: 250.0 GB, 250059350016 bytes
 255 heads, 63 sectors/track, 30401 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Device Boot Start End Blocks Id System
 Notice its empty!!
 Command (m for help): n
 Command action
 e extended
 p primary partition (1-4)
 p
 Partition number (1-4): 1
 First cylinder (1-30401, default 1):
 Using default value 1
 Last cylinder or +size or +sizeM or +sizeK (1-30401, default 30401):
30401
 Issue n for new partition , p for primary, 1 for partition number, 1
for block start and 30401 for block end (use defaults for using all hard
drive)
 and then press command t:
 Command (m for help): t
 Selected partition 1
 Hex code (type L to list codes): fd
 Changed system type of partition 1 to fd (Linux raid autodetect)
 Command (m for help): p
 Disk /dev/hdc: 250.0 GB, 250059350016 bytes
 255 heads, 63 sectors/track, 30401 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Device Boot Start End Blocks Id System
 /dev/hdc1 1 30401 244196001 fd Linux raid autodetect
 Command (m for help): w
 The partition table has been altered!
 Calling ioctl() to re-read partition table.
 Syncing disks.
 t is for partition type, follow by fd (raid) then p to see it is ok,
End with W to Save and exit
 Repeat for all other hard drives exactly the same
 Reparing the RAID Set
 Now that the partitions have been prepared, we have to merge them into
a new RAID partition that we'll then have to format and mount. Here's
how it's done.
 Create the RAID Set

 You use the mdadm command with the --create option to create the RAID
set. In this example we use the --level option to specify RAID 5, and
the --raid-devices option to define the number of partitions to use
 [root@bigboy tmp]# mdadm --create --verbose /dev/md0 --level=5 \
--raid-devices=3 /dev/hde1 /dev/hdf2 /dev/hdg1
 mdadm: layout defaults to left-symmetric
 mdadm: chunk size defaults to 64K
 mdadm: /dev/hde1 appears to contain an ext2fs file system
 size=48160K mtime=Sat Jan 27 23:11:39 2007
 mdadm: /dev/hdf2 appears to contain an ext2fs file system
 size=48160K mtime=Sat Jan 27 23:11:39 2007
 mdadm: /dev/hdg1 appears to contain an ext2fs file system
 size=48160K mtime=Sat Jan 27 23:11:39 2007
 mdadm: size set to 48064K
 Continue creating array? y
 mdadm: array /dev/md0 started.
 Confirm RAID Is Correctly Inititalized
 The /proc/mdstat file provides the current status of all RAID devices.
Confirm that the initialization is finished by inspecting the file and
making sure that there are no initialization related messages. If there
are, then wait until there are none.
 [root@bigboy tmp]# cat /proc/mdstat
 Personalities : [raid5]
 read ahead 1024 sectors
 md0 : active raid5 hdg1[2] hde1[1] hdf2[0]
 4120448 blocks level 5, 32k chunk, algorithm 3 [3/3] [UUU]
 unused devices: <none>
 Notice that the new RAID device is called /dev/md0. This information
will be required for the next step.
 Format The New RAID Set

 Your new RAID partition now has to be formatted. The mkfs.ext3 command
is used to do this
 mkfs.ext3 /dev/md0
 example:
 [root@bigboy tmp]# mkfs.ext3 /dev/md0
 mke2fs 1.39 (29-May-2006)
 Filesystem label=
 OS type: Linux
 Block size=1024 (log=0)
 Fragment size=1024 (log=0)
 36144 inodes, 144192 blocks
 7209 blocks (5.00%) reserved for the super user
 First data block=1
 Maximum filesystem blocks=67371008
 18 block groups
 8192 blocks per group, 8192 fragments per group
 2008 inodes per group
 Superblock backups stored on blocks:
 8193, 24577, 40961, 57345, 73729
 Writing inode tables: done
 Creating journal (4096 blocks): done
 Writing superblocks and filesystem accounting information: done
 This filesystem will be automatically checked every 33 mounts or
 180 days, whichever comes first. Use tune2fs -c or -i to override.
 [root@bigboy tmp]#
 Create the mdadm.conf Configuration File
 Your system doesn't automatically remember all the component partitions
of your RAID set.
 This information has to be kept in the mdadm.conf file. The formatting
can be tricky, but fortunately the output of the mdadm --detail --scan
--verbose command provides you with it. Here we see the output sent to
the screen.
 [root@bigboy tmp]# mdadm --detail --scan --verbose
 ARRAY /dev/md0 level=raid5 num-devices=4
 UUID=77b695c4:32e5dd46:63dd7d16:17696e09
 devices=/dev/hde1,/dev/hdf2,/dev/hdg1
 Here we export the screen output to create the configuration file.
 [root@bigboy tmp]# mdadm --detail --scan --verbose > /etc/mdadm.conf
 Create A Mount Point For The RAID Set
 The next step is to create a mount point for /dev/md0. In this case
we'll create one called /mnt/raid
 [root@bigboy mnt]# mkdir /mnt/raid
 Zeltaks example
 mkdir /media/media/
 Edit The /etc/fstab File
 The /etc/fstab file lists all the partitions that need to mount when
the system boots. Add an Entry for the RAID set, the /dev/md0 device.
 /dev/md0 /mnt/raid ext3 defaults 1 2
 Zeltaks example
 /dev/md0 /mnt/media ext3 defaults 0 2
 Do not use labels in the /etc/fstab file for RAID devices; just use the
real device name, such as /dev/md0
 Mount The New RAID Set
 The mount command's -a flag causes Linux to mount all the devices in
the /etc/fstab file that have automounting enabled (default) and that
are also not already mounted.
 [root@bigboy tmp]# mount -a
 You can also mount the device manually.
 [root@bigboy tmp]# mount /dev/md0 /mnt/raid
 Check The Status Of The New RAID
 The /proc/mdstat file provides the current status of all the devices.
 [root@bigboy tmp]# raidstart /dev/md0
 [root@bigboy tmp]# cat /proc/mdstat
 Personalities : [raid5]
 read ahead 1024 sectors
 md0 : active raid5 hdg1[2] hde1[1] hdf2[0]
 4120448 blocks level 5, 32k chunk, algorithm 3 [3/3] [UUU]
 unused devices: <none>
 Dont forget t change ownership of raid if you want to mount and use it
 example:
 sudo chown zeltak /media/raid/

**** Auto Mounting RAID Arrays on Linux Server Startup

Updating the /etc/fstab File
 The /etc/fstab file is read by Linux at boot time to see which
filesystems it should mount and how. Each line in /etc/fstab specifies a
single filesystem, so in order to mount our new RAID drive, we only need
to append a single line to the file in the following format:
 <Logical Volume Address> <Directory to mount as> <filesystem type>
defaults 0 0
 In our example, the line added would be:
 # Added RAID on startup
 /dev/md0 /mnt/raid1 ext4 defaults 0 0

**** emergency procedure

To swap a disk that failed in raid 5

 1)check raid status to see which disk is down:

 cat /proc/mdstat

 md0 : active raid5 sda1[4](F) sdd1[3] sdc1[21)check raid status to see
which disk is down:] sdb1[1]
 732587712 blocks level 5, 64k chunk, algorithm 2 [4/3] [ UUU]

 (F)

Means Fail on sda1
 mark the defective drive as failed and remove it from the Raid:

 mdadm --manage /dev/mdX --fail /dev/sdXY

 and then remove it

 mdadm --manage /dev/mdX --remove /dev/sdXY

 2)take out failed drive:
 issue this to see which physical disk it is

 sudo hdparm -I /dev/HARD DISK

 Example:

 sudo hdparm -I /dev/sda
 /dev/sda:
 ATA device, with non-removable media
 Model Number: ST3250823AS
 Serial Number: 4NF012FW
 Firmware Revision: 3.03
 Standards:
 Supported: 7 6 5 4
 Likely used: 7
 Configuration:
 Logical max current
 cylinders 16383 16383
 heads 16 16
 sectors/track 63 63
 --

 3) use the serial number to locate the drive and swap with a new hard
drive make sure in the BIOS everything is working and that all Hard
drives are present
 4) Power on machine and issue command fdisk first on one of the raid
drives that work to get start and end blocks

 sudo fdisk /dev/sdb

The number of cylinders for this disk is set to 30401.
 in the Command menu press p:
 Command (m for help): p
 Disk /dev/sda: 250.0 GB, 250059350016 bytes
 255 heads, 63 sectors/track, 30401 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Device Boot Start End Blocks Id System
 /dev/sda1 1 30401 244196001 fd Linux raid autodetect
 Write down start and end blocks (1 starts and 30401 ends)
 press q to exit without saving
 Command (m for help): q
 Issue fdisk again this time for the new Hard drive

 sudo fdisk /dev/NEWHD

 Example:


 sudo fdisk /dev/hdc

 press p to check the drive indeed is empty (you should see this warning
when issuing fdisk):
 Command (m for help): p
 Disk /dev/hdc: 250.0 GB, 250059350016 bytes
 255 heads, 63 sectors/track, 30401 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Device Boot Start End Blocks Id System
 Notice its empty!!
 Command (m for help): n
 Command action
 e extended
 p primary partition (1-4)
 p
 Partition number (1-4): 1
 First cylinder (1-30401, default 1):
 Using default value 1
 Last cylinder or +size or +sizeM or +sizeK (1-30401, default 30401):
30401
 Issue n for new partition , p for primary, 1 for partition number, 1
for block start and 30401 for block end (see above)
 and then press command t:
 Command (m for help): t
 Selected partition 1
 Hex code (type L to list codes): fd
 Changed system type of partition 1 to fd (Linux raid autodetect)
 Command (m for help): p
 Disk /dev/hdc: 250.0 GB, 250059350016 bytes
 255 heads, 63 sectors/track, 30401 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Device Boot Start End Blocks Id System
 /dev/hdc1 1 30401 244196001 fd Linux raid autodetect
 Command (m for help): w
 The partition table has been altered!
 Calling ioctl() to re-read partition table.
 Syncing disks.
 t is for partition type, follow by fd (raid) then p to see it is ok,
End with W to Save and exit
 5)you now have a new raid hard drive. now we need to sync it with the
rest of the raid drives by issuing
 mdadm --manage -a /dev/md0 /dev/NEW HARD DRIVE
 Example:

 mdadm --manage -a /dev/md0 /dev/sda1

 use

 cat /proc/mdstat

 to check on sync progress

 zeltak@eddie:~$ cat /proc/mdstat
 Personalities : [raid5]
 md0 : active raid5 hdc1[4] sda1[1] sdc1[3] sdb1[2]
 732587712 blocks level 5, 64k chunk, algorithm 2 [4/3] [ UUU]
 [=>...................] recovery = 7.7% (18834828/244195904)
finish=244.4min speed=15360K/sec
 unused devices: <none>

**** common info commands

Check Raid 5 status

 cat /proc/mdstat

 Personalities : [raid5]
 md0 : active raid5 sda1[0] sdd1[3] sdc1[2] sdb1[1]
 732587712 blocks level 5, 64k chunk, algorithm 2 [4/4] [UUUU]

 
 U means the HD is up , if not a line ( ) will appear instead of an U,
see below (   Means Fail on sda1)
 

 md0 : active raid5 sda1[4](F) sdd1[3] sdc1[2] sdb1[1]
 732587712 blocks level 5, 64k chunk, algorithm 2 [4/3] [ UUU] mdadm
(multipule disk admin)

 for info on the raid status issue:
 sudo mdadm --query --detail /dev/md
 
 Where  is the raid number usually md0
 /dev/md0:
 Version : 00.90.03
 Creation Time : Thu Jan 12 16:33:13 2006
 Raid Level : raid5
 Array Size : 732587712 (698.65 GiB 750.17 GB)
 Device Size : 244195904 (232.88 GiB 250.06 GB)
 Raid Devices : 4
 Total Devices : 4
 Preferred Minor : 0
 Persistence : Superblock is persistent
 Update Time : Mon Jan 26 10:41:24 2009
 State : clean
 Active Devices : 4
 Working Devices : 4
 Failed Devices : 0
 Spare Devices : 0
 Layout : left-symmetric
 Chunk Size : 64K
 UUID : f30a11d3:503253cb:a38dc246:74d8e65c
 Events : 0.15956639
 Number Major Minor RaidDevice State
 0 22 1 0 active sync /dev/hdc1
 1 8 1 1 active sync /dev/sda1
 2 8 17 2 active sync /dev/sdb1
 3 8 33 3 active sync /dev/sdc1
 Monitoring RAID arrays
 You can run mdadm as a daemon by using the follow-monitor mode. If
needed, that will make mdadm send email alerts to the system
administrator when arrays encounter errors or fail. Also, follow mode
can be used to trigger contingency commands if a disk fails, like giving
a second chance to a failed disk by removing and reinserting it, so a
non-fatal failure could be automatically solved.
 Let's see a basic example. Running
 mdadm --monitor --mail=root@localhost --delay=1800 /dev/md2
 should release a mdadm daemon to monitor /dev/md2. The delay parameter
means that polling will be done in intervals of 1800 seconds. Finally,
critical events and fatal errors should be e-mailed to the system
manager. That's RAID monitoring made easy.
 Finally, the --program or --alert parameters specify the program to be
run whenever an event is detected.
 Note that the mdadm daemon will never exit once it decides that there
are arrays to monitor, so it should normally be run in the background.
Remember that your are running a daemon, not a shell command.
 Using mdadm to monitor a RAID array is simple and effective. However,
there are fundamental problems with that kind of monitoring - what
happens, for example, if the mdadm daemon stops? In order to overcome
this problem, one should look towards real monitoring solutions. There
is a number of free software, open source, and commercial solutions
available which can be used for Software RAID monitoring on Linux. A
search on FreshMeat should return a good number of matches.

**** grow raid device

When new disks are added, existing raid partitions can be grown to use
the new disks.
 Partition the new device "/dev/sdx" using the same layout as one of
those already in the arrays "/dev/sda".

sfdisk -d /dev/sda > table
 sdfisk /dev/sdx < table

 Note: you may use a disk with that shares an OS/other space on the
other partitons, that is use a partition as part of the raid and not a
full HD. In this case it is VERY IMPORTANT to partition the drive used
to raid exactly as the size of the other HD's used for the raid
(actually you can make it a bit bigger). for example:
 if the size of the raid HD is 1500299.30 create a partition thats
1500300
 then make sure the raid device is unmounted!!!!
 After the new disk was partitioned, the RAID level 1/4/5/6 array can
be grown for example using this command (assuming that before growing it
contains three drives):

mdadm --add /dev/md1 /dev/sdb3
 mdadm --grow --raid-devices=4 /dev/md127

 There is a critical section at start, which cannot be backed up. To
allow recovery after unexpected power failure, an additional option
--backup-file= can be specified. Make sure this file is on a different
disk or it defeats the purpose.

 mdadm --grow --raid-devices=4 --backup-file=/root/grow md1.bak
/dev/md127

 The process can take many hours or even days.

 you can check the raid after the grow with this:
 mdadm --misc --detail /dev/md0
 sudo mdadm --misc --detail /dev/md127

 then finally you need to make sure the raid is unmounted (in case you
mounted it at some stage) and issue:

sudo e2fsck -f /dev/md127
 followed by:
 sudo resize2fs -p /dev/md127
 then finally mount the raid
 sudo mount /dev/md127 /media/raid/

**** New note

 Device Boot Start End Blocks Id System
 /dev/sdb1 63 2930272064 1465136001 fd Linux raid autodetect
 /dev/sda1 2048 2930275000 1465136476+ 83 Linux

*** backups

**** simple system backup

Manuall Best Way to Backup and Restore Linux

 To backup:
 tar cvpzf backup.tgz --exclude=/etc/fstab --exclude=/boot
--exclude=/proc --exclude=/lost+found --exclude=/backup.tgz
--exclude=/mnt --exclude=/sys /
 To Restore:
 tar xvpfz backup.tgz -C /
 excluding the boot dir and fstab file will give you the ability to
restore all your data/settings on a new partition

*** rsync
**** Basics: syncing two folders for daily backup

Syncing Two Folders for Daily Backup
 Warning- make sure bith source and destination have rsync installed
other wise you will get errors and wont be able to sync

 For our daily backup we will use the incremental method since it will
be very frequent. We also don't want to waste disk space, use
unnecessary write operations, and CPU cycles by doing a full backup.
 To sync one folder to the next we use the following command:
 rsync -av /PATH/TO/SOURCE /PATH/TO/FILE
 The a flag tells rsync to go into archive mode.
 The v option is just verbose (show details).
 also r= recursive, u= update and z= compress.
 --exclude leaves out any files or directories you don't want copied. In
my case,
 Now this should copy all of the files from one folder to the other. If
the files already exist and they have not been modified since the last
time you run this command it will simply copy those files. So basically
when you run this command it will backup the files that have changed
since the day before.
 Note

 /home copies the directory and its contents
 /home/ would just copy the contents
 Adding the ---delete flag
 Warning - When using the --delete flag be sure to check your
command twice. If you reverse the source with the destination you will
sync your data with an empty folder. You will be left with two empty
folders!
 By default rsync does not delete files in the backup if they were
deleted in the source. This is rsync's way of protecting you from
deleting the entire directly on accident. To force rsync to delete files
we do this:
 rsync -av --delete /PATH/TO/SOURCE /PATH/TO/FILE
 This will ensure that we are not backing up deleted files.

**** create a script to backup all directories

create a bash script to tiddy things up
 if you have multiple rsyncs you can create a simple bash script to
tiddy up things for example
 #!/bin/bash
 rsync -avr --delete /home/zeltak/.kde/share
/media/raid/Backups/Rsync/Voices/Daily/dotKDE
 rsync -avr --delete /home/zeltak/.mozilla/firefox
/media/raid/Backups/Rsync/Voices/Daily/
 rsync -avr --delete /home/zeltak/Dropbox
/media/raid/Backups/Rsync/Voices/Daily/
 rsync -avr --delete /home/zeltak/programs
/media/raid/Backups/Rsync/Voices/Daily/
 rsync -avr --delete /home/zeltak/.bashrc
/media/raid/Backups/Rsync/Voices/Daily/home rc
 rsync -avr --delete /home/zeltak/.bash aliases
/media/raid/Backups/Rsync/Voices/Daily/home rc
 rsync -avr --delete /etc/apt/
/media/raid/Backups/Rsync/Voices/Daily/apt

**** week and month sync

Weekly and monthly Sync
 weekly sync

 For our weekly sync will just sync with the latest daily folder.
 rsync -av --delete /PATH/TO/DAILY BACKUP /PATH/TO/WEEKLY BACKUP
 We run this command once a week to maintain our weekly incremental
backup. Now if we accidentally deleted something last
 Tuesday and just noticed it on Friday we will have a backup.
 Full Monthly Backup
 Since we are going to keep full monthly backups and they won't be
accessed frequently we can compress them with bzip.
 tar -cvjf /home/mark/rsync/monthly/monthly.tar.bz2 daily/
 Now since we are archiving our full backups monthly we want to be sure
not to over write an existing monthly backup. We will do this by naming
each one with the date. Instead of the command above use this one, to
add the date to each filename.
 tar -cvjf /home/mark/rsync/monthly/monthly $(date +%Y%m%d).tar.bz2
/home/rsync/daily/
 Now you should have all the commands to set up a rotating backup daily,
weekly and a full monthly backup. The only thing now is to execute those
commands every day, week, and end of the month.

**** automate the process with cron

Automate the Process with Cron

 Usually we don't want to have to remember to type in a command daily,
weekly, and at the end of each month so, we will automate it with cron.
 issue:

 crontab -e

 Now add the following lines of code:
 01 17    rsync --av --delete /path/to/source /home/mark/rsync/daily
 00 18   5 rsync --av --delete /home/mark/rsync/daily
/home/mark/rsync/weekly
 00 6 1   tar -cvjf /home/mark/rsync/monthly/monthly $(date
+%Y%m%d).tar.bz2 /home/rsync/daily/
 This example cron setup will backup daily at 5:30PM.Backup every Friday
at 6:00PM.Do the full backup on the first of each month at 6:00AM
 Now you will need to tailor this to the usage patterns of you or your
users. You should also allow enough time for the daily backup to finish
before doing the weekly. In this example on Fridays I allowed 59 minutes
for the daily backup to finish. If you are worried about the sync time
running into each other you can schedule your daily backup in the
morning and your Friday weekly backup at night.
 If you want to find out how long it is currently taking to do a backup
add time command to the beginning of each command.
 Tell Cron to be Quiet
 
 Cron by default sends emails with the output of the command. If you
don't want to get emails you can pipe the cron comands to /dev/null. Add
this to the end of each cron line:
 | /dev/null |

**** rsync and ssh

Using rsync over ssh

 To run an rsync over SSH, pass it the -e switch, like this:

 rsync -ave ssh greendome:/home/ftp/pub/ /home/ftp/pub/

 Note the trailing / on the file spec from the source side (on
greendome.) On the source spec, a trailing / tells rsync to copy the
contents of the directory, but not the directory itself. To include the
directory as the top level of what's being copied, leave off the /:
 rsync -ave ssh bcnu:/home/six .
 This will keep a copy of the ~/six/ directory on village in sync with
whatever is present on bcnu:/home/six/. By default, rsync will only copy
files and directories, but not remove them from the destination copy
when they are removed from the source. To keep the copies exact, include
the --delete flag:
 rsync -ave ssh --delete greendome:~one/reports .
 Now when old reports are removed from ~one/reports/ on greendome,
they're also removed from ~six/public html/reports/ on the synced
version, every time this command is run. If you run a command like this
in cron, leave off the v switch. This will keep the output quiet (unless
rsync has a problem running, in which case you'll receive an email with
the error output). Using SSH as your transport for rsync traffic has the
advantage of encrypting the data over the network and also takes
advantage of any trust relationships you already have established using
SSH client keys.

**** excluding files or folders
Excluding files or folders
To exclude the sources directory we simply add the '--exclude' option:

 --exclude 'sources'

 For example, a local rsync:

 rsync -a --exclude cache/ a/ b/

It really is that simple -- that exclude rule will match a directory named "cache" anywhere in your tree.

%Tip- exclude all git directiroes%


#+NAME: 
#+BEGIN_SRC sh
# use this: --exclude='.git/' , example
rsync -aRPz --delete -e ssh --exclude='.git/'  /home/zeltak/.emacs.d/  root@132.72.152.204:/volume1/rsync/       #&> /dev/null
#+END_SRC 

**** follow symlinks as folders
use the -L flag:

#+BEGIN_SRC sh
rsync -aRPz --delete -L --exclude='.git/' -e ssh /home/zeltak/org/  admin@10.0.0.2:/share/MD0_DATA/Rsync/ #&> /dev/null
#+END_SRC
**** Add a log file to the rsync command

Add log file

 add this to the rsync command
 --log-file=/home/your-username/Desktop/$(date +%Y%m%d) rsync.log

**** The cron job as root

The cron job
 My biggest obstacle with this was the sudo bit. rsync won't be able to
backup all files, or delete any, without root privileges. I didn't want
to have to be there when it runs to type in my password, but after a bit
of searching I found out how to make a root cron job.
 Copy your .sh file to /root by typing
 sudo cp /home/your-username/Desktop/rsync-shell.sh /root
 Then type
 sudo crontab -e
 You'll see a line which reads: # m h dom mon dow command
 Under that type
 0 22    /root/rsync-shell.sh
 What this all means is:
 1. The number of minutes after the hour (0 to 59)
 2. The hour in military time (24 hour) format (0 to 23)
 3. The day of the month (1 to 31)
 4. The month (1 to 12)
 5. The day of the week(0 or 7 is Sun, or use name)
 6. The command to run

**** zeltak music rsync

this command:
 rsync -avr --log-file=/home/zeltak/logs/rsync.log /home/zeltak/Zmusic/
/media/raid/Music/Backup Zmusic

**** advanced commands
*** fscheck

**** cancel fscheck

quit during boot
 to quit during boot the file checking issue Ctrl+alt+delete
 to cancel completely issue:
 tune2fs -i 0 /dev/hdxx

**** run fsck on next boot

run the system file check program (fsck) on next boot

 sudo touch /forcefsck

*** swap

**** create swap partition

find somewhere to put the swap file ... type:
 df -h
 to see how much free space you have on each partition
 create an empty swap file:
 for example, to make a 512 meg swap file on /mnt/home called pup.swp,
type:
 dd if=/dev/zero of=/mnt/home/pup.swp bs=1M count=512
 if /mnt/home is an NTFS drive, do not use dd (writing to your NTFS
drive can corrupt the file system) ... boot to Windows and create the
file by typing something like:
 fsutil file createnew C:\pup.swp 512000000
 then boot Puppy again
 make the empty file a swap file:
 mkswap /mnt/home/pup.swp
 mount the swap file:
 swapon /mnt/home/pup.swp
 you can see if it's working by typing:
 free
 to automatically mount the swap file , put a line like this in an init
file, like /etc/rc.d/rc.local:
 swapon /mnt/home/pup.swp

**** turn swap on/off

swapon, swapoff - enable/disable devices and files for paging and
swapping
 examples:
 swapon /mnt/home/pup.swp
 sudo swapoff /home/zeltak/pup.swp

*** Chroot

**** change root (chroot)
Changing Root:
boot from a live cd (an arch installer or ubuntu live cd),then issue these commands:
1)Mount the temporary filesystems:

mount /dev/sda1 /mnt/

cd /mnt/

mount -t proc proc proc/
mount -t sysfs sys sys/
mount -o bind /dev dev/

Mount other parts of your filesystem (e.g. /boot, /var, /usr...) that
reside on separate partitions but which you need access to. For example:
mount /dev/<device-or-partition-name> boot/

Now chroot to your installed device or partition and define your shell:

chroot . /bin/bash

another example where /boot is in another partition

mount /dev/sda2 /mnt; mount /dev/sda1 /mnt/boot; for f in dev proc sys;
do mount -B /{,mnt/}$f; done; chroot /mnt

note that the above \^\^\^\^ is all in one command

*** date
**** set date abd time from command line

Changing the date and time:
 Please note that you can change the time and date by graphical tool
also but what I am explaining here is doing all that with command line.
 In every system, there are two clocks which comes into action while
setting the time, one is hardware clock and the other is linux (OS)
clock. The hardware clock determines the system clock on system boot.
While the system is running, changes to one of these doesn't affect the
other. Normally you can follow any procedure, like first update one
clock and then sync it with the other but it is always advised to first
update the hardware clock and then let the linux clock sync it with it
at the next reboot. Changing the system clock by using the date program
on a running system could cause date discontinuities and consequently
problems. Down here, I will be discussing both ways.
 For viewing/changing the time, we can use "date" command.

 # date

 Thu Feb 25 11:56:54 IST 2010
 Changing time from "date" command is the easiest part. Simply copy
paste the output of the date command and change the values you wanted to
and then set it.

 # date --set="Thu Feb 28 14:05:15 2010"

 Sun Feb 28 14:05:15 IST 2010
 But this is something which doesn't work in all flavors. For ex,
flavors like freebsd work in different ways. To change time/date in
freebsd is a little bit confusing but very much easy. You just need to
use "date" command followed by the month, day, hour, minute, and year
all numeric and no spaces.

 # date 021415232010

 Sun Feb 14 15:23:31 PST 2010
 If you will be using ntpd, you probably don't need to set either of
these clocks (unless the current time is more than 1000s off the real
time). Just setup ntpd and let ntpd adjust the time (it will do it in
small steps to keep system timestamps reliable).
 Redhat Systems: Using the dateconfig tool will update both the system
clock and the hardware clock. The dateconfig tool also allows you to
setup ntpd, which will keep the system clock in sync with a remote
server.
 Only change time not date:
 To only set the time use like this:

 # date -s hh:mm:ss

 Update Hardware clock:
 To sync the hardware clock to the current system clock:

 # hwclock --systohc

 OR

 # hwclock --systohc --utc

  use the second option if you use UTC.
 Set Hardware clock manually:
 Earlier i told you that better idea is to set the hardware clock and
then let the OS clock sync with that.
 To know the current time of the hardware clock:

 # hwclock --show

 Tue Nov 4 22:13:40 2003 -0.684660 seconds
 To set the hw clock manually:

 # hwclock --set --date="09/21/2005 14:23:23"

 Everytime you use the hwclock --set command, it will create or edit the
file /etc/adjtime to determine the systematic drift. Once you have some
history, you can use the --adjust option to adjust the hardware clock
appropriately. Run as a cron job if you want the clock to adjust
automatically on a regular schedule. Don't use the --adjust function
when using ntpd since ntpd will turn the "11 minute mode" on, which is
best left alone. See the hwclock manpage for more info.
 Now you can leave the OS clock to sync it with the hardware clock on
the next reboot or else you can do it manually now:

 # hwclock --hctosys
 # date
 Wed Sep 21 12:23:23 PST 2005

 Using NTP (Network Time Protocol):
 NTP will connect to the servers to get the atomic time. To use NTP,
simply download and install it, and use the ntpdate command to sync your
time with the NTP servers.

 # ntpdate "server name or IP address"

 Now update the hardware clock also.

 # hwclock --systohc

 To keep your system always updated you can create a cronjob which could
run on daily basis and put this:

 # ntpdate "server" && hwclock -w

 -w == --systohw

**** using ntp

install from distros repos:

 sudo pacman -S ntp

 then enable with systemd:

 sudo systemctl enable ntpd

*** Persistent block device naming

**** viewing all the information

for all lables available:

 # blkid -o list -c /dev/null

device fs type label mount point UUID

------------------------------------------------------------------------------------------
 /dev/sda1 ext2 /boot 7f4cef7e-7ee2-489a-b759-d52ba23b692c
 /dev/sda2 swap (not mounted) a807fff3-e89f-46d0-ab17-9b7ad3efa7b5
 /dev/sda3 ext4 / 81917291-fd1a-4ffe-b95f-61c05cfba76f
 /dev/sda4 ext4 /home c4c23598-19fb-4562-892b-6fb18a09c7d3
 /dev/sdb1 ext4 X2 /mnt/X1 4bf265f7-da17-4575-8758-acd40885617b
 /dev/sdc1 ext4 X1 /mnt/X2 4bf265f7-da17-4575-8758-acd40885617b
 /dev/sdd1 ext4 Y2 /mnt/Y2 8a976a06-3e56-476f-b73a-ea3cad41d915
 /dev/sde1 ext4 Z2 /mnt/Z2 9d35eaae-983f-4eba-abc9-434ecd4da09c
 /dev/sdf1 ext4 Y1 /mnt/Y1 e2ec37a9-0689-46a8-a07b-0609ce2b7ea2
 /dev/sdg1 ext4 Z1 /mnt/Z1 9fa239c1-720f-42e0-8aed-39cf53a743ed
 /dev/sdj1 ext4 RAPT (not mounted) a9ed7ecb-96ce-40fe-92fa-e07a532ed157
 /dev/sdj2 swap <swap> 20826c74-eb6d-46f8-84d8-69b933a4bf3f
 Almost every filesystem type can have a label. All your partitions that
have one are listed in the /dev/disk/by-label directory. This directory
is created and destroyed dynamically, depending on whether you have
partitions with labels attached.

 $ ls -lF /dev/disk/by-label

 total 0
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 data -> ../../sdb2
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 data2 -> ../../sda2
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 fat -> ../../sda6
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 home -> ../../sda7
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 root -> ../../sda1
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 swap -> ../../sda5
 lrwxrwxrwx 1 root root 10 Oct 16 10:27 windows -> ../../sdb1

**** create a label

to create (assign) a label:
 use the tune2fs command:

 tune2fs -L LABEL NAME /dev/sdX

 IE:

 tune2fs -L serverswap /dev

 for swap:

 # mkswap -L <label> /dev/XXX

 Warning: This command will destroy your running swap. If your swap is
mounted, run

 swapoff /dev/XXX

before and

 swapon /dev/XXX

after.
 for ext2/3/4 :

 # e2label /dev/XXX <label>

**** Using persistent naming

There are various applications that can be configured using persistent
naming. Following are some examples of how to configure them:
 fstab
 To enable persistent naming in /etc/fstab replace the device kernel
name in the first column with the persistent name path as follows:
 # /etc/fstab: static file system information
 #
 # <file system> <dir> <type> <options> <dump> <pass>
 tmpfs /tmp tmpfs nodev,nosuid 0 0
 LABEL=boot /boot ext2 defaults 0 1
 LABEL=archroot / ext4 defaults 0 1
 LABEL=serverhome /home ext4 defaults 0 1
 LABEL=swap swap swap ext2 defaults 0 0
 /dev/md127 /media/raid/ ext3 defaults 0 1
 Boot managers
 label arch
 TEXT HELP
 Boot Arch Linux
 ENDTEXT
 MENU LABEL Arch Linux
 LINUX /vmlinuz-linux
 append initrd=/initramfs-linux.img root=/dev/disk/by-label/archroot
rootfstype=ext4 init=/bin/systemd ro

*** modules

Blacklisting

Blacklisting, in the context of kernel modules, is a mechanism to
prevent the kernel module from loading. This could be useful if, for
example, the associated hardware is not needed, or if loading that
module causes problems: for instance there may be two kernel modules
that try to control the same piece of hardware, and loading them
together would result in a conflict.

Some modules are loaded as part of the
[[https://wiki.archlinux.org/index.php/Initramfs][initramfs]].
mkinitcpio -M will print out all autodetected modules: to prevent the
initramfs from loading some of those modules, blacklist them in
/etc/modprobe.d/modprobe.conf. Running mkinitcpio -v will list all
modules pulled in by the various hooks (e.g. filesystem hook, SCSI hook,
etc.). Remember to add that .conf file to the FILES section in
/etc/mkinitcpio.conf (if you have not done so already) and rebuild the
initramfs once you have blacklisted the modules, and to reboot
afterwards.

 Using files in /etc/modprobe.d/

Create a .conf file inside /etc/modprobe.d/ and append a line for each
module you want to blacklist, using the blacklist keyword.
 If for example you want to prevent the pcspkr module from loading:
 nano /etc/modprobe.d/nobeep.conf

 #Do not load the 'pcspkr' module on boot.
 blacklist pcspkr
 Note: The blacklist command will blacklist a module so that it will not
be loaded automatically, but the module may be loaded if another
non-blacklisted module depends on it or if it is loaded manually.

However, there is a workaround for this behaviour; the install command
instructs modprobe to run a custom command instead of inserting the
module in the kernel as normal, so you can force the module to always
fail loading with:
 /etc/modprobe.d/blacklist.conf...

 install module name /bin/false ...
 This will effectively blacklist that module and any other that depends
on it.
 Pasted from
<[[https://wiki.archlinux.org/index.php/Kernel_modules#Blacklisting][https://wiki.archlinux.org/index.php/Kernel modules#Blacklisting]]>

*** Symlink dot files to central location and back it up
1.you need to manually copy (COPY, not smylink) the configs to
~/dotfiles or any other dir (you can try dropbox)
2.then remove the originals
3.and symlink back from the new folder to original location
ideally ~/dotfiles is a git repo :)which is pushed remotely and run a
cronjob for that

** bash
*** shortcuts

**** Movement

Ctrl-a Move to the start of the line.
 Ctrl-e Move to the end of the line.
 Alt-] x Moves the cursor forward to the next occurrence of x.
 Alt-Ctrl-] x Moves the cursor backwards to the previous occurrence of
x.

**** Copy paste cut in CLI

Copy paste cut in CLI

 ctrl-ins=copy
 shift-ins=paste
 shift-del=cut
 Ctrl-u Delete from the cursor to the beginning of the line.
 Ctrl-k Delete from the cursor to the end of the line.
 Ctrl-w Delete from the cursor to the start of the word.
 Ctrl-y Pastes text from the clipboard.
 Ctrl-l Clear the screen leaving the current line at the top of the
screen.
 Ctrl-x Ctrl-u Undo the last changes. Ctrl- 
 Alt-r Undo all changes to the line.
 Alt-Ctrl-e Expand command line.
 !!  Execute last command in history
 sudo !! Run last command as root
 !abc Execute last command in history beginning with abc
 !n Execute nth command in history
 \^abc\^xyz Replace first occurrence of abc with xyz in last command
and execute it

**** Search Terminal

Search Terminal history for common commands

 ctrl-r= terminal search reverse
 ctrl-s= terminal search forward (susually dosent work-needs todisable
ctrl-s in shortcuts)
 Alt-p Non-incremental reverse search of history.

*** alias

**** tips

To edit the alias file

 To create an alias you'll want to edit your local .bashrc file.
 This file defines a number of shell options for your account but also
can store any aliases you want to define. The default file has a few
example aliases set, and all you have to do to create your own are
append them to the list. A sample entry would look like this:
 alias 'ps?'='ps ax | grep '
 Easily search running processes (alias).
 A more proper place to put (and manage them) would be in something
like:
 A ~/.bash aliases file
 In ~/.bashrc, find the section that looks like this:
 # Alias definitions.
 # You may want to put all your additions into a separate file like
 # ~/.bash aliases, instead of adding them here directly.
 # See /usr/share/doc/bash-doc/examples in the bash-doc package.
 #if [ -f ~/.bash aliases ]; then
 # . ~/.bash aliases
 #fi
 uncomment those last 3 lines.
 That way you have 1 file just for your own custom aliases and they can
be more easily managed and separate from the bash config file.To view
your aliases issue:
 aliasto refresh bash after writing aliases:

 source .bashrcAvoid common mistypes and long commands

 The alias command is useful for setting up shortcuts for long commands,
or even more clever things. From HACK 25, we could make a new command,
lsnew, by doing this:
 alias lsnew=" ls -al --time-style=+%D | grep `date +%D` "
 But there are other uses of alias. For example, common mistyping
mistakes. How many times have you accidentally left out the space when
changing to the parent directory? Worry no more!
 alias cd..="cd .."
 Alternatively, how about rewriting some existing commands?
 alias ls="ls -al"
 saves a few keypresses if, like us, you always want the complete
list.To have these shortcuts enabled for every session, just add the
alias commands to your user .bashrc file in your home directory.

*** Cdargs

**** setup

Cdargs

 sudo apt-get install cdargs
 then edit .bashrc and add these lines
 if [ -e /usr/share/doc/cdargs/examples/cdargs-bash.sh ]; then
 . /usr/share/doc/cdargs/examples/cdargs-bash.sh
 fi
 cdargs is a command that enhances the good old cd by adding bookmarks
and a browser. Sometimes you need to work on directories that are
difficult to reach, even with the help of tab-completion (e.g.
/var/www/mysite.com/subsection/includes). When you are in one of such
directories, just type
 ca wwwinc
 and you'll add a bookmark of the directory with the name wwwinc.
 You can create bookmarks by editing your bookmarks file
"$HOME/.cdargs" using your favorite editor
 Whenever you want to go back to that directory, no matter which is your
current working directory, just type cv wwwinc and you'll be back there.
cdargs has tab-completion too and understands subdirectories of
bookmarks. In the previous example, typing
 cv wwwinc/foo
 will be equivalent to cd /var/www/mysite.com/subsection/includes/foo
 cdargs has a browser. Just type cdargs and cdargs will bring you a list
of your bookmarks. You can use the arrow keys (or h, j, k and l if you
are used to vim) to navigate the list. When you have selected your final
directory hit enter, and you'll return to the command line, in that
directory. You can add new bookmarks by hitting 'a' and you can edit
your list of bookmarks with your favorite editor hitting 'e'. With '?'
you get a list of all of the available commands in cdargs.
 cdargs browser
 The bookmarks of cdargs can be extended to other commands.
 The distribution of cdargs provides examples for the commands cp and
mv, under the aliases cpb and mvb.
 For example, if you want to copy the file bar to the bookmark in the
previous example, a quick cpb bar wwwinc will do the trick.

*** bash tips
**** Reolaod/Refresh bash

reload/refresh bash

 source ~/.bashrc
 or
 . ~/.bashrc


**** make your tab completion case insensitive

make your tab completion case insensitive:
 You may know that if you have a directory called
 My-Documents
 and you want to change to it, you have to do something like this
 cd My-[TAB]
 And you will end with the full command like this.
 cd My-Documents
 But, if you do this
 cd my-[TAB]
 You will probable hear the system's beep and nothing else, because
Linux is case sensitive, if you want to be able to use TAB with capital
letter or without it, add this line to /etc/inputrc, or to
$HOME/.inputrc
 set completion-ignore-case on

**** Create and Change to a New Directory in One Command

[[http://lifehacker.com/5535495/create-and-change-to-a-new-directory-in-one-command][Create
and Change to a New Directory in One Command]]
 add the following code to your ~/.bashrc file:

------------------------------------------------------------------------------------------------------------------------------------------
 # mkdir, cd into it
 mkcd () {
 mkdir -p "$"
 cd "$"
 }

------------------------------------------------------------------------------------------------------------------------------------------
 

Once you've done so, and either restarted the terminal, or just pasted
the same code into your active terminal, you can create folders, or even
folder hierarchies with a single step, like so:

------------------------------------------------------------------------------------------------------------------------------------------
 mkcd New Folder/New Subfolder

------------------------------------------------------------------------------------------------------------------------------------------
 
**** Output a command to a txt file

Output command to a text file

 use >> after the command and choose the name of the txt file, for
example"
 ls >> tst.txt

**** Remove vim and emacs backup files. Endind with hash or tilde ~	:Fav:
how  to remove them?

find ./ -name "##" | xargs rm

And

find ./ -name '~' | xargs rm


The part of the command before the pipe (|) will find all those files, and the part behind the pipe symbol, will delete them. You can run just the first part in order to print those files in the screen.

**** restart an failed x-session login from cli

to restart an failed x-session login from CLI issue as root
 sudo killall x-session-manager
 this should take you back to the GDM/KDM
**** enhance up/down history search
Create ~/.inputrc and fill it with this:

#+BEGIN_EXAMPLE sh
"\e[A": history-search-backward
"\e[B": history-search-forward
set show-all-if-ambiguous on
set completion-ignore-case on
#+END_EXAMPLE

This allows you to search through your history using the up and down arrows  i.e. type "cd /" and press the up arrow and you'll search through everything in your history that starts with "cd /".

*** echo

echo

 The echo command merely tells the shell to print something on screen.
 echo $PATH
 It can be used to pipe text/info to other stuff like text files, dzen2
OSD etc..
 if you want to break a line in echo use the following command between
lines:
 \\n
 for example:
 echo
"($MPD SONG TAG TRACK)$MPD SONG TAG TITLE,($MPD SONG TAG GENRE)"\\n"$MPD SONG TAG ALBUM"

**** echo command

echo

 The echo command merely tells the shell to print something on screen.
 echo $PATH
 It can be used to pipe text/info to other stuff like text files, dzen2
OSD etc..
 if you want to break a line in echo use the following command between
lines:
 \\n
 for example:
 echo
"($MPD SONG TAG TRACK)$MPD SONG TAG TITLE,($MPD SONG TAG GENRE)"\\n"$MPD SONG TAG ALBUM"

*** PATH



**** PATH command

PATH command

 PATH is where your programs are stored, commands you type in, as well
as any programs you might want to run, is stored in the PATH variable.
 if you want to run a program that is not contained in a directory
listed in your
 PATH,you must tell the shell exactly where the program is.
 zeltak@zwind:~$ echo $PATH
 /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
 To add permenant folder to the PATH in ubuntu (or any other distro)
edit your ~/.bashrc file (for other users use this table:
 [[~/Dropbox/Org/Tech/linux_files/Image_Hsm3noeRtyG8-NoMJ66yXg_0001.png]]
 Then and add this line:
 export
PATH=$PATH:$HOME/kde/bin:/home/zeltak/programs/:/home/zeltak/scripts/
 Each entry is seperated by a colon (:)
 save the file and issue:
 source .bashrc
 to reload bashFor examle to add the double commander (which downloads
as a binary) commnad to path, add this line to the bashrc
 export
PATH=$PATH:$HOME/kde/bin:/home/zeltak/programs/:/home/zeltak/scripts/:/home/zeltak/programs/dc/

**** export PATH in .bashrc

add this line in your bashrc
 export PATH=${HOME}/bin:${PATH}
 and either add a new line for each path you want to add or add the path
seperated by a :
 export PATH=${HOME}/scripts:/bin:${PATH}

** cli info
*** process managment

**** top

***** Global defaults

TOP:

 top program gives you a view of the processes running on your system:
 Tip: one can install htop from repo's to get a gui process manager
 Global defaults

 'A' - Alt display Off (full-screen)
  'd' - Delay time 3.0 seconds
 'I' - Irix mode On (no, 'solaris' smp)
  'p' - PID monitoring Off
  's' - Secure mode Off (unsecured)
 'B' - Bold disable Off
 
 Summary Area defaults

 'l' - Load Avg/Uptime On (thus program name)
 't' - Task/Cpu states On (1+1 lines, see '1')
 'm' - Mem/Swap usage On (2 lines worth)
 '1' - Single Cpu On (thus 1 line if smp)
 Task Area defaults

 'b' - Bold hilite On (not 'reverse')
  'c' - Command line Off (name, not cmdline)
  'H' - Threads Off (show all threads)
  'i' - Idle tasks On (show all tasks)
 'R' - Reverse sort On (pids high-to-low)
  'S' - Cumulative time Off (no, dead children)
 'x' - Column hilite Off (no, sort field)
 'y' - Row hilite On (yes, running tasks)

***** Fields

PID -- Process Id
 
 The task's unique process ID, which periodically wraps, though never
restarting at zero.
 %CPU -- CPU usage
 The task's share of the elapsed CPU time since the last
screen update, expressed as a percentage of total CPU time. In a true
SMP environment, if 'Irix mode' is Off, top will operate in 'Solaris
mode' where a task's cpu usage will be divided by the total number of
CPUs. You toggle 'Irix/Solaris' modes with the 'I' interactive command.
 %MEM -- Memory usage (RES)
 A task's currently used share of available physical memory.

***** commands

'k' :Kill a task
 You will be prompted for a PID and then the signal to
send. The default signal, as reflected in the prompt,
 is SIGTERM. However, you can send any signal, via number
or name.
 If you wish to abort the kill process, do one of the
following depending on your progress:
 1) at the pid prompt, just press <Enter>
 2) at the signal prompt, type 0

***** Sorting

SORTING of task window

 For compatibility, this top supports most of the former top
sort keys. Since this is primarily a service to former top users, these
commands do not appear on any help screen.
 command sorted field supported
 A start time (non-display) No
 M %MEM Yes
 N PID Yes
 P %CPU Yes
 T TIME+ Yes
 Before using any of the following sort provisions, top
suggests that you temporarily turn on column highlighting
 using the 'x' interactive command. That will help ensure that
the actual sort environment matches your intent.

***** .toprc

Press 'W'- to write into the rc file the current config

**** ps-pstree

PS (Process status)

 PS commands can diagnose and treat process problems.
 The first of these is the ps command. This stands for Process Status
and will report a list
 of currently running processes on your system. This command is normally
used with the -aux options:
 ps -aux
 This will return a list something like what you see when you run top.
 If you can spot the problematic process, look for its PID and
issue the following command:pstree

 pstree is a graphical tree view of processes

**** kill-xkill

Kill

 kill <PID number>
 
 For example, to kill a process with a PID of 5122, you would type
this:
 kill 5122
 If, after this, you find the process isn't killed, then you should
use the top program, as
 described in the previous sections, because it allows for a more
in-depth investigation.
 
 Another handy process-killing command lets you use the actual process
name.
 The killall command is handy if you already know from past experience
what a program's process is called.
 For example, to kill the process called firefox-bin, which is the chief
process of the Firefox web browser, you would use the following command:
 killall firefox-binEasily Kill Unresponsive Applications with single
click Using Xkill

 1. When a program gets hung, hit Alt + F2 to bring up the Run dialog.
 2. Type in xkill and hit enter.
 3. Your mouse cursor will change into a cross or skull and bones.
 4. If the unresponsive application is not in focus, use Alt-Tab to
switch to it. Left click anywhere on the application window to kill it.

**** Htop

to enter filter mode press F4
 to clear current filter double press ESC

*** view
**** less

Less command

 Less command is used for longer text
 less lets you search forward through the file by typing a slash (/),
and then entering your search
 To repeat the search, type n.
 To search backward in a file from your current point, type a question
mark (?).
 To quit press q
 less /home/zed/Homeloads/Zed.txt
 
 
**** cat

Cat command

 Using the cat Command to view a file:
 
 When followed with a filename, the cat command will display the text
file on screen:
 cat mytextfile
 Example:
 cat /etc/fstab

use cat to merge text files

you can also use cat to megre (append) different text files togheter

issue

#+BEGIN_SRC sh

cat filename1 filename2 > NEWFILE.txt

#or if they all start with same string use the  


cat filename > NEWFILE.txt

#+END_SRC

**** head-tail 2

Head/tail

 As names suggest, these let you quickly view the beginning (head) of a
file or the end (tail) of it.
 tail mytextfile
 
 
 Or
 head mytextfile
 
 By default, both commands will display ten lines of the file. You can
override this by using
 the -n command option followed by the number of lines you want to see.
 tail -n5 mytextfile

**** diff

Diff

 compare the differences between two text files
 
 diff mytextfile1 mytextfile2

**** Tree

use the Tree command to show a list of files/dirs in the command line
  make sure its installed on the system first
 for example:
 this pipe sit into a text file:
 tree -L 3 /media/raid/Music/Zmusic/ > 1.txt

**** more

You can display the file contents directly on the screen with the cat
command, but the results will probably go flying past you on most large
files, so it's usually better to use the more or less commands. For
instance:
 #more <filename>
 This will display the contents of a file on the screen, and prompt you
to scroll through the file a screen at a time.

*** searching
**** find

***** find tips

    find ?        
  ,          
 :
 $ find
     ,     :
 $ find /some/path
        .
              
:
 $ find /some/{path,location,directory}
       path,  location   directory.
      bash   find   
find 3  .    :
 $ find /some/path /some/location /some/directory
        ,     , 
        .
        ,      
test:
 $ find /some/path -name "test"
      bash       
 (    ),       .
           (   
/   )   :
 $ find /some/path -type d
         .
              
,    find  :
 $ find /some/path -type d -maxdepth 1
         .     
   2    5  ,     :
 $ find /some/path -type d -maxdepth 5 -mindepth 2
        24      
 :
 $ find /some/path -mtime +0
       .
 mtime   n24     : 0   240  0 
 24 .         24+24 . 
 1   48 .
           ,  
find   24  ,       
,     24  .     ,   24
 .       ( ,   
),      .
     ,        
 find       exec :
 $ find /some/path -exec /bin/rm -rf {} \;
     :
    ,       (  
      )
            bash  
find
          /
,  find     exec
     ,       exec 
   .         
  
     bash    .   
  ,      PATH  .
           .   
      print:
 $ find /some/path -print
         state  ,
  ,    printf
 $ find /some/path -printf "...."
   find        
(regex)   .         
 ,           
      find   man  .

***** basics

Basics
 Let's start simple by looking for things by name. Remember that the
first argument you give find iswhere to look (the dot (.) means look
here) .
 # find all files with something in their name
 find .-name ".jpg"
 Note that by default when you give a location to start from (in our
case "."), the find command starts there and drills all the way down
during its search. So in this case I started from my home directory and
it found the files all the way down in "~/Pictures/iPhoto
Library/Data/2006/Roll 20" as well.
 [ Placing quotes around the search criteria avoids issues with wildcard
characters and is probably a good habit to get into. You can also use
-iname instead of -name; it's the same but it's case insensitive ]

***** excluding parts of a name

exclude anything with "autumn" in the name
 find . -type f -name .jpg ! -name autumn
 ...
 ./Pictures/iPhoto Library/blue forest.jpg
 ./Pictures/iPhoto Library/brothers.jpg
 ...

***** find by user

Find by User
 # find all files that belong to a certain user
 find . -user daniel
 [ Also works for groups (-group) ]

***** Find by type

Find by Type
 # find only directories, files, links, or sockets
 find . -type d
 ...
 ./Development/envelope
 ./Development/mhp
 ./Development/mservers
 ./Development/mservers/fortune100
 ./Development/mst
 ./Development/mst/nmap
 ./Development/mst/services
 ...
 Those are all directories, and to look for the others (files, links, or
sockets), just substitute f, l, s for the d in the command above.

***** Find by Size

Find by Size
 # find things over a megabyte in size
 find ~/Movies/ -size +1024M
 ...
 /Movies/Comedy/Funny.mpg
 /Movies/Drama/Sad.avi
 ...
 [ +M indicates that you're searching in megabytes, but you can also
search in bytes or kilobytes if so desired. ]

***** find by modification time

Find by Modification Time
 find also has a number of options that help one answer
forensics-oriented questions such as when a file's contents or
permissions were last changed.
 # find all files in /etc owned by root that have been modified within
the last day
 find /etc/ -user root -mtime 1
 ...
 /etc/passwd
 /etc/shadow
 ...
 The checks you can use here are:
 -atime: when the file was last accessed
 -ctime: when the file's permissions were last changed
 -mtime: when the file's data was last modified
 These searches are done in 24 hour increments and followed by a number
n. If you want to match the exact 24 hour period you use n by itself.
More frequently, however, you'll want to say everything since yesterday,
or everything "more than 3 days ago." This is accomplished using the -n
and +n options respectively.
 There are also minute versions of the atime, ctime, and mtime
arguments:
 -amin: when (in minutes) the file was last accessed
 -cmin: when (in minutes) the file's permissions were last changed
 -mmin: when (in minutes) the file's data was last modified

***** Find by Permissions

# find all files in my directory with open permissions
 find ~ -perm 777
 ...
 ~/testfile.txt
 ~/lab.rtf
 ...
 Additional Forensics-oriented Options:
 -nouser: shows output that's not associated with an existing userid
 -nogroup: shows output not associated with an existing groupid
 -links n: file has n links
 -newer file: file was modified more recently than file.
 -perm mode: file has mode permissions.

***** Combinations

Combinations
 Just as with any good unix/linux command, the real power comes in
combining options. You can combine find arguments using and, or, and
not. By default if you use two different arguments you're and'ing them.
If you want to use or you give the -o option, and if you want to get
everything except something, you use the ! option.
 # find .jpg images (files) owned by daniel
 find . -user daniel -type f -name .jpg
 ...
 ./Pictures/iPhoto Library/autumn woods.jpg
 ./Pictures/iPhoto Library/blue forest.jpg
 ./Pictures/iPhoto Library/brothers.jpg
 ...
 # now do the same, but exclude anything with "autumn" in the name
 find . -user daniel -type f -name .jpg ! -name autumn
 ...
 ./Pictures/iPhoto Library/blue forest.jpg
 ./Pictures/iPhoto Library/brothers.jpg
 ...
 # show me all ruby programs in /apps owned by root that have been
accessed in the last two minutes
 find /apps/ -user root -type f -amin -2 -name .rb
 ...
 /apps/testing.rb
 /apps/runme.rb
 ...

**** grep
***** Intro
****** base syntax
%Tip- for regex grep look here:%

http://www.cyberciti.biz/faq/grep-regular-expressions/ 

grep Command Syntax:

#+BEGIN_EXAMPLE
grep 'word' filename
grep 'string1 string2' filename
cat otherfile | grep 'something'
command | grep 'something'
command option1 | grep 'data'
grep --color 'data' fileName
#+END_EXAMPLE

****** simple grep (search)
Search /etc/passwd for boo user:

#+BEGIN_SRC sh
grep boo /etc/passwd
#+END_SRC

****** force grep to ignore word case
i.e match boo, Boo, BOO and all other combination with -i option:

#+BEGIN_SRC sh
grep -i "boo" /etc/passwd
#+END_SRC

****** search recursively
i.e. read all files under each directory for a string "192.168.1.5"

#+BEGIN_SRC sh
grep -r "192.168.1.5" /etc/
#+END_SRC

In example:

#+BEGIN_EXAMPLE
grep -irw "password" /home/zeltak/Dropbox/PC/dotfiles/
#+END_EXAMPLE

****** Use grep to search words only
When you search for boo, grep will match fooboo, boo123, etc. You can force grep to select only those lines containing matches that form whole words i.e. match only boo word:

#+BEGIN_SRC sh
grep -w "boo" /path/to/file
#+END_SRC

****** Use grep to search 2 different words, use egrep as follows:

#+BEGIN_SRC sh
egrep -w 'word1|word2' /path/to/file
#+END_SRC

****** Count line when words has been matched
grep can report the number of times that the pattern has been matched for each file using -c (count) option:

#+BEGIN_SRC sh
grep -c 'word' /path/to/file
#+END_SRC

 Also note that you can use -n option, which causes grep to precede each
line of output with the number of the line in the text file from which
it was obtained:

#+BEGIN_SRC sh
grep -n 'word' /path/to/file
#+END_SRC

****** UNIX / Linux pipes and grep command
grep command often used with pipes. For example print name of hard disk devices:

#+BEGIN_SRC sh
dmesg | egrep '(s|h)d[a-z]'
#Display cpu model name:
cat /proc/cpuinfo | grep -i 'Model'
#+END_SRC

However, above command can be also used as follows without shell pipe:

#+BEGIN_SRC sh
grep -i 'Model' /proc/cpuinfo
#+END_SRC

****** list just the names of matching files?
Use the -l option to list file name whose contents mention main():

#+BEGIN_SRC sh
grep -l 'main' .c
#+END_SRC

****** force grep to display output in colors:

#+BEGIN_SRC sh
grep --color vivek /etc/passwd
#+END_SRC
****** exclude lines of text in file by words
use the egrep command

#+BEGIN_EXAMPLE
egrep -v '(avi|mpg|mp4|nfo|jpg|tbn|sub|db|md5|iso|txt|rar|ogm|ogg|srt|mov|mpeg|mpg|mp4)' TEXTFILE /home/zeltak/BK/raid movies.txt
#+END_EXAMPLE

this is a comprehensive command:

#+BEGIN_EXAMPLE
egrep -v '(ass|com|divx|DIVX|css|gif|js|BUP|IFO|VOB|ogv|ogm|ogg|mp3|wmv|AVI|WMV|MKV|MOV|MPEG|xml|mkv|flv|sfv|xls|qpw|exe|oldversion|SRT|avi|mpg|mp4|nfo|jpg|tbn|sub|db|md5|iso|txt|rar|ogm|ogg|srt|mov|mpeg|mpg|mp4)' /home/zeltak/BK/raid TV.txt > /home/zeltak/ZH tmp/raid tv.txt
#+END_EXAMPLE

****** extract part of piped output
******* extract a part that starts with X
#+NAME: extract only word starting with percent part 
       #+BEGIN_SRC sh
acpi | grep -o "\w%\w"
       #+END_SRC 

****** Anchors (grep start/end of lines)
******* grep start of lines
You can use ^ and $ to force a regex to match only at the start or end of a line, respectively. The following example displays lines starting with the word vivek only:

#+BEGIN_SRC sh
grep ^vivek /etc/passwd
#+END_SRC

You can display only lines starting with the word vivek only i.e. do not display vivekgite, vivekg etc:
#+BEGIN_SRC sh
grep -w ^vivek /etc/passwd
#+END_SRC
******* grep end of lines
Find lines ending with word foo:

#+BEGIN_SRC sh
grep 'foo$' filename
#+END_SRC

******* Match line only containing foo:

#+BEGIN_SRC sh
grep '^foo$' filename
#+END_SRC

******* You can search for blank lines with the following examples
#+BEGIN_SRC sh
grep '^$' filename 
#+END_SRC

****** Character Class
******* match any case
#+BEGIN_SRC sh
grep '[vV]ivek' filename
#+END_SRC
OR
#+BEGIN_SRC sh
grep '[vV][iI][Vv][Ee][kK]' filename
#+END_SRC

******* match digits
(i.e match vivek1 or Vivek2 etc):
#+BEGIN_SRC sh
grep -w '[vV]ivek[0-9]' filename
#+END_SRC

match two numeric digits (i.e. match foo11, foo12 etc):
#+BEGIN_SRC sh
grep 'foo[0-9][0-9]' filename
#+END_SRC

******* match at least one letter:
#+BEGIN_SRC sh
grep '[A-Za-z]' filename
#+END_SRC

Display all the lines containing either letter
₆In example₆ a "w" or "n" character:

#+BEGIN_SRC sh
grep [wn] filename
#+END_SRC

****** Within a bracket expressions

the name of a character class enclosed in "[:" and ":]" stands for the list of all characters belonging to that class. Standard character class names are:

#+BEGIN_EXAMPLE
    [:alnum:] - Alphanumeric characters.
    [:alpha:] - Alphabetic characters
    [:blank:] - Blank characters: space and tab.
    [:digit:] - Digits: '0 1 2 3 4 5 6 7 8 9'.
    [:lower:] - Lower-case letters: 'a b c d e f g h i j k l m n o p q r s t u v w x y z'.
    [:space:] - Space characters: tab, newline, vertical tab, form feed, carriage return, and space.
    [:upper:] - Upper-case letters: 'A B C D E F G H I J K L M N O P Q R S T U V W X Y Z'.
#+END_EXAMPLE

In this example match all upper case letters:

#+BEGIN_SRC sh
grep '[:upper:]' filename
#+END_SRC

****** Wildcards
******* syntax
You can use the "." for a single character match. In this example match all 3 character word starting with "b" and ending in "t":

grep '\<b.t\>' filename

Where,

    \< Match the empty string at the beginning of word
    \> Match the empty string at the end of word.

******* Print all lines with exactly two characters:

#+BEGIN_SRC sh
grep '^..$' filename
#+END_SRC

******* Display any lines starting with a dot and digit:
#+BEGIN_SRC sh
grep '^\.[0-9]' filename
#+END_SRC

****** Escaping the dot

The following regex to find an IP address 192.168.1.254 will not work:

#+BEGIN_SRC sh
grep '192.168.1.254' /etc/hosts
#All three dots need to be escaped:
grep '192\.168\.1\.254' /etc/hosts
#+END_SRC
The following example will only match an IP address:

#+BEGIN_SRC sh
egrep '[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}' filename
#+END_SRC

The following will match word Linux or UNIX in any case:

#+BEGIN_SRC sh
egrep -i '^(linux|unix)' filename
#+END_SRC

****** How Do I do OR/AND with grep?

Use the following syntax:

#+BEGIN_SRC sh
grep 'word1|word2' filename
#or
grep 'word1\|word2' filename
#Use the following syntax to display all lines that contain both 'word1' and 'word2'
grep 'word1' filenae | grep 'word2'
#+END_SRC

**** locate

Locate

 not for very new files, relies on database
 locate myfile
 To update the locate database:
 sudo updatedb

**** whereis

whereis

 whereis locates where programs are stored!

----------------------------------------------------------------------------------------------------------------------
 whereis vlc

----------------------------------------------------------------------------------------------------------------------

*** info

**** misc info commands

Assorted info commands

 pwd (Print working directory, i.e., display the name of my current
directory on the screen.)
 whoami (Print my login name)
 date (change and show OS date and time) [to change 2000-12-31 23:57 use
>date 123123572000
 who (Determine the User/become Root commands logged on the machine)
 Uptime (Show the amount of time since the last reboot)

**** distro-kernel info

How to find out what version of Distro you're using

 lsb release -a
 OR
 cat /etc/issue 
 what linux version do you have?

 cat /proc/version

*** colors

**** print all colors current term support

[[~/Dropbox/Org/Tech/linux_files/attach/b1.sh][Attachment #26 (b1.sh)]]
 use this line
 ( x=`tput op` y=`printf %$((${COLUMNS}-6))s`;for i in {0..256};do
o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y//
/=}$x;done; )
 or better yet use it in a script (see attahced)

**** print current 16 color scheme script

use this script to visually see current color scheme (also attahced):
 #!/bin/bash
 # Original:
[[http://frexx.de/xterm-256-notes/][http://frexx.de/xterm-256-notes/]]
 #
[[http://frexx.de/xterm-256-notes/data/colortable16.sh][http://frexx.de/xterm-256-notes/data/colortable16.sh]]
 # Modified by Aaron Griffin
 # and further by Kazuo Teramoto
 FGNAMES=(' black '' red '' green '' yellow' 'blue' 'magenta' 'cyan'
'white')
 BGNAMES=('DFT' 'BLK' 'RED' 'GRN' 'YEL' 'BLU' 'MAG' 'CYN' 'WHT')
 echo "
"
 for b in {0..8}; do
 ((b>0)) && bg=$((b+39))
 echo -en "\033[0m ${BGNAMES[b]} "
 
 for f in {0..7}; do
 echo -en "\033[${bg}m\033[$((f+30))m ${FGNAMES[f]}"
 done
 
 echo -en "\033[0m "
 echo -en "\033[0m\n\033[0m "
 
 for f in {0..7}; do
 echo -en "\033[${bg}m\033[1;$((f+30))m ${FGNAMES[f]}"
 done
 echo -en "\033[0m "
 echo -e "\033[0m"
 ((b<8)) &&
 echo "
"
 done
 echo "
"

**** find out how many colors the term supports

to find out how many colors the term supports issue this:
 $ tput colors
 if you get this:
 256
 it means 256

*** redirect command line output

use these commands:
 
 &> file
 redirect both stdout and stderr to file
 2> file
 for just stderr,
 example:
 gmusicbrowser &> /home/zeltak/test4.txt

** files and directories
*** tips
Find and replace Files/Folder Tricks

Delete all .directory files in a certain Dir

#+BEGIN_SRC sh
find /media/media/Music/Freezed\ Collection/ -type f -name '.directory' -exec rm \{\} \;
#+END_SRC

Make all sub directories to use same .desktop file (icon) as current folder you are in:

#+BEGIN_SRC sh
find -type d -exec cp .directory {} \;cd '/media/media/My documents'
#+END_SRC

*** file-folder size (du)

List the size (in human readable form) of all sub folders from the
currentlocation
 du -h --max-depth=1Get the 10 biggest files/folders for the current
directory
 du -sh  | sort -n | tailSort the size usage of a directory tree by
Size
 du -b --max-depth 1 | sort -nr | perl -pe 's{([0-9]+)}{sprintf
"%.1f%s", $1>=230? ($1/230, "G"): $1>=220? ($1/220, "M"):
$1>=210? ($1/210, "K"): ($1, "")}e'

*** delete files (rm)

Deleting Files

 rm Deletes a file without confirmation (by default)
 Remove the file myfile.txt without prompting the user.
 rm myfile.txt
 Remove a directory, even if files existed in that directory.
 rm -r directory
 The asterisk () can be used to mean any file to delete all files
within a directory
 rm -f 
 To delete all files that start with the word myfile.
 rm -f myfile
 Options:
 -v verbose
 -f force
 To remove all files in a Directory whith explanations
 rm -r -v HomicideSelective deletion

 If you have a directory that contains ten subdirectories and you want
to delete three of them, the slow way to do it would be like this:
 rm -rf /home/hudzilla/work
 rm -rf /home/hudzilla/projects
 rm -rf /home/hudzilla/sandbox
 But that's pretty darn slow and open to making mistakes - a much
smarter way to is to let Bash perform multiple filename expansion by
placing the options inside braces. For example, this would achieve the
same as the three lines from above:
 rm -rf /home/hudzilla/{work,projects,sandbox}

*** copy files (cp)

**** Copy comamnd (cp)

Copy comamnd (cp)

 Copies files from one location to another.
 Copies the file1.txt in the current directory to the newdir directory:
 cp file1.txt newdir
 Copy all files ending in .txt into the newdir directory.
 cp .txt newdir
 Copies all the files, directories, and subdirectories in the files
directory into the backup directory.
 cp -r /home/hope/files/ /home/hope/backup1
 Note:  Be careful not to add a final slash to the command when
you do this.doing so would cause BASH to think that myfile2 is a
directory.
 Duplicate a file:
 This way of copying files is a handy way of duplicating files. By not
specifying a new location in the destination part of the command, but
still specifying a different filename, you effectively duplicate the
file within the same directory:
 cp myfile myfile2
 Options:
 -a, --archive same as -dpR
 --backup[=CONTROL] make a backup of each existing destination file
 -b like --backup but does not accept an argument
 --copy-contents copy contents of special files when recursive
 -d same as --no-dereference --preserve=link
 --no-dereference never follow symbolic links
 -f, --force if an existing destination file cannot be opened, remove
it and try again
 -i, --interactive prompt before overwrite
 -H follow command-line symbolic links
 -l, --link link files instead of copying
 -L, --dereference always follow symbolic links
 -p same as --preserve=mode,ownership,timestamps
 --preserve[=ATTR LIST] preserve the specified attributes (default:
mode,ownership,timestamps), if possible additional attributes: links,
 all
 --no-preserve=ATTR LIST don't preserve the specified attributes
 --parents append source path to DIRECTORY
 -P same as '--no-dereference'
 -R, -r, --recursive copy directories recursively
 --remove-destination remove each existing destination file before
attempting to open it (contrast with --force)
 --reply={yes,no,query} specify how to handle the prompt about an
existing destination file
 --sparse=WHEN control creation of sparse files
 --strip-trailing-slashes remove any trailing slashes from each
SOURCE argument
 -s, --symbolic-link make symbolic links instead of copying
 -S, --suffix=SUFFIX override the usual backup suffix
 --target-directory=DIRECTORY move all SOURCE arguments into
DIRECTORY
 -u, --update copy only when the SOURCE file is newer than the
destination file or when the destination file is missing
 -v, --verbose explain what is being done
 -x, --one-file-system stay on this file system

**** copy a file/folder structure without files
Copy a file structure without files

#+BEGIN_EXAMPLE
mkdir /where/you/wantem
cd /source/dir
find  -type d -exec mkdir /where/you/want/\{\} \;
#+END_EXAMPLE

Example:
#+BEGIN_SRC sh
find  -type d -exec mkdir /app01/data/\{\} \;
#+END_SRC

*** change dirs (cd)

Change Dir

 #cd mydirectory
 Go one Direcroty up
 #cd ..
 To swap directories to the previous working directory, the '-' (hyphen)
shortcut is handy to have on hand. For example, if you were in the
/first/folder/path/ directory and then switched over to /etc/ to make a
configuration change, you might not want to type in the full path to
switch back. You can quickly switch back to the previous working
directory with this command:
 #cd -

*** create dirs (mkdir)

Create a Directory (make dir)

 mkdir mydirectory
 make directories with parent folder:
 mkdir -p /path/to/folder

*** move command (mv)

Move (mv) Command

 Moving Files:
 Renames a file or moves it from one directory to another directory.
 
 The mv command is similar to cp, except that rather than copying the
file, the old one is removed. You can move files from one directory to
another, for example, like this:
 mv myfile.txt newdirectory/
 moves the file myfile.txt to the directory newdirectory.
 mv myfile.txt ../11
 moves the file myfile.txt back one directory (if available).
 You can also use the mv command to quickly rename files:
 mv myfile myfile2
 Syntax
 mv [-f] [-i] oldname newname
 -f mv will move the file(s) without prompting even if it is writing
over an existing target. Note that this is the default if the standard
input is not a terminal.
 -i Prompts before overwriting another file.
 oldname The oldname of the file renaming.
 newname The newname of the file renaming.
 filename The name of the file you want to move directory - The
directory of were you want the file to go.

*** compress/archive/zip 
**** gzip-compress all files in a directory seperatly
Individually compress each file in a directory

#+NAME: 
#+BEGIN_SRC sh
gzip 
#you can also use it recursivly
gzip -r .
#+END_SRC
**** tar
syntax of tar command:

#+BEGIN_EXAMPLE
tar -zcvf archive-name.tar.gz directory-name

Where,

    -z: Compress archive using gzip program
    -c: Create archive
    -v: Verbose i.e display progress while creating archive
    -f: Archive File name
#+END_EXAMPLE


For example, you have directory called /home/jerry/prog and you would like to compress this directory then you can type tar command as follows:

#+BEGIN_SRC sh
tar -zcvf prog-1-jan-2005.tar.gz /home/jerry/prog
#+END_SRC

Above command will create an archive file called prog-1-jan-2005.tar.gz in current directory. If you wish to restore your archive then you need to use following command (it will extract all files in current directory):
 tar -zxvf prog-1-jan-2005.tar.gz

Where,

    -x: Extract files

If you wish to extract files in particular directory, for example in /tmp then you need to use following command:
$ tar -zxvf prog-1-jan-2005.tar.gz -C /tmp
$ cd /tmp
$ ls - 
*** list (ls)
**** general
example:
 ls -lSr
 -l detailed listing; -t will sort the results by file time; -S will
sort by file size; and -r will reverse the sorting.
 -a option, you can see hidden files, and you'll also notice something
else in the listing: there are two entries for "." and ".." at the
beginning of the list. These represent the current folder---the "."
folder---and the parent folder---the ".." folder.
 Display a List of Just Subdirectories
 ls -l | grep \^d
 you can put this in Alias file
 alias lsd="ls -l | grep \^d"
**** output all files/dirs with full path to a txt file

#+NAME: 
     #+BEGIN_SRC sh
ls -d -1 $PWD// > /home/zeltak/Path.txt
     #+END_SRC
**** list just directories
The simplest way of list just directories
 ls -d /
 You can list the directories start with letter b
 ls -d b/
 Further more list the subdirectories of the directories start with
letter b
 ls -d b//
 list hidden directories
 Bare in mind the command lines above do not list out the hidden
directories, to list hidden directories
 ls -d ./
 Yes, you can also list with details, and with nice colors.
 ls -d ./ -l
 Manual of ls should at lease gives a line of example on how to list
just directories, ls capable of doing that but it seems to like easter
egg for me.

*** permissions

**** intro

Intro

 when issuing the following command on a file or folder
 ls -l
 you get the following output
 -rw-r--r-- 2 keir keir 673985982 2005-10-31 17:19 myfile
 The r, w, and - symbols on the very left of the listing indicate the
file permissions.
 The permission list usually consists of the characters r (for read), w
(for write), x (for execute), or - (meaning none are applicable).
 They're followed by a number indicating the link count, which you can
ignore.
 After this is listed the owner of the file (keir in the example) and
the group that he belongs to (keir).
 This is followed by the file size (in bytes), then the date and time
the file was last accessed, and finally
 the file name itself appears.
 
 The four groups are as follows:
 12345678910
 FileUser PermissionsGroup PermissionsOther Permissions

TypeReadWriteExecuteReadWriteExecuteReadWriteExecute
 drwerwerwe
 
  Character 1 is the type of file: - is ordinary, d is directory, l
is link.
  Characters 2-4 show owner permissions. Character 2 indicates read
permission, character 3 indicates write permission, and character 4
indicates execute permission.
  Characters 5-7 show group permissions. Character 5=read, 6=write,
7=execute
  Characters 8-10 show permissions for all other users. Character
8=read, 9=write, 10=execute

**** altering permissions (chmod)

Altering Permissions (chmod)

 You can easily change permissions of files and directories by using
the chmod command. For
 example, if you want to change a file so that everyone on the system
can read and write to it,
 type the following:
 chmod a+rw myfile
 In other words, you're adding add read and write (rw) permissions for
all users (a).
 another example:
 chmod a-w myfile
 This tells Linux that you want to take away (-) the ability of all
users (a) to write (w) to the
 file. However, you want to leave the other permissions as they are. You
can substitute a with g
 to change group permissions instead.
 The most useful use of chmod is in making a program file that you've
downloaded executable.
 Due to the way the Internet works, if you download a program to install
on your computer,
 it can lose its executable status while in transit. In this case, issue
the following command:
 chmod +x myprogram
 Other examples
 chmod u+x filename - adds execute permission for the owner of the file
 chmod a+x filename - adds execute permission for all users
 chmod a-x filename - removes execute permission for all users
 chmod g-x filename - removes execute permission for the file's group
 chmod a=x filename - gives all users execute permission, nothing more
or less
 chmod o=rx filename - sets other users' permissions to read and
execute, not write
 chmod ug+x filename - adds execute permission for the owner and the
groupUsing number values to change permissions

 The other syntax that can be used with chmod involves an octal bitmask
to represent each possible set of permissions. This is less intuitive
but worth understanding. In the octal representation, a three-digit
number is used to express the permissions on a file.
 Each digit is the sum of three bits, with
 4 representing read permission
 2 representing write permission
 1 representing execute permission.
 The bits are added together to give a unique total:
 read plus write = 6; read plus execute = 5; all three together = 7.
 So 755 is the same as rwxr-xr-x.
 This syntax can be used interchangeably with the other in chmod.
 Some examples:
 chmod 111 filename - gives all users execute permission, nothing more
or less
 chmod 754 filename - owner has full permission; group can't write;
others can only read
 Chown

**** change the owner-group of a file (chown-chgrp)

change the owner/group of a file (chown/chgrp command):

 The owner of a file or directory can change the file or directory's
permissions. This is done from the command line with the chmod command,
which stands for "change mode." There are two different syntaxes that
can be used with chmod. The easiest is class-operator-mode syntax, in
which you specify, respectively, whose permissions you want to change,
what change you want to make, and which kind of permissions will be
effected. The class is represented by one or more of u, g, o, and a,
meaning the User (owner), the Group, the Others (everyone else), and All
of the above. The permissions are the now-familiar r, w, and x. The two
are joined by an operator, +, -, or =, which respectively add the
specified permission to the user class, remove it, or allow the class
exactly the permissions, no more and no less.
 sudo chown frank myfile
 sudo chgrp mygroup myfile

**** permission number table

[[~/Dropbox/Org/Tech/linux_files/permissnapshot5.png]]

*** Find Duplicate Files

The sure-fire way to find duplicate files is by comparing MD5 hashes.
This compares only the first 20 characters of the md5sum, but it still
takes a long time. It's the most accurate method, so I don't mind the
wait:

 $ find . -type f -exec md5sum '{}' ';' | sort | uniq
--all-repeated=separate -w 20

 You can also compare file sizes, which is a little less accurate but a
lot faster:

 $ find . -type f -printf "%p - %s" | sort -nr -k3 | uniq -D -f1

 I use the first method when I start accumulating a lot of sloppy
backups, and have too many copies of the same files littering my backup
servers.

** hardware
*** xset

**** find out the current xset settings

issue
 xset -q
*** hardware info commands 
**** lscpu
The lscpu command reports information about the cpu and processing units. It does not have any further options or functionality.
**** Hardware info tools: lshw, inxi and hwinfo
these need to be installed manually
to run:

#+BEGIN_SRC sh
sudo lshw -short
#and
hwinfo --short
#or 
inxi -Fx 
#+END_SRC


*** screen

**** How do I find out screen resolution of my Linux desktop?

Screen resolution suggests the number of dots or pixels on the entire
computer screen. For example, when you say a 640 x 480 screen resolution
then all you means is individual 640 dots on each 480 lines i.e. 307K
pixels.
 Use xdpyinfo command to find out current screen resolution:

xdpyinfo | grep 'dimensions:'

 You can also use xrandr command:

xrandr | grep ''

*** usb flash thumb drives
**** check for bad blocks

There is no way to query a USB memory stick for SMART-like parameters;
I'm not aware of any memory sticks which support doing so even via
publicly-available proprietary software. The best you can do is to check
that you can successfully read+write to the entire device using
badblocks.

[[https://en.wikipedia.org/wiki/Badblocks][https://en.wikipedia.org/wiki/Badblocks]]
 You want to specify one of the write tests, which will wipe all data on
the stick; make a backup first.
 Find the device by looking at dmesg after plugging in the USB stick;
you'll see a device name (most likely sd , ie sdc, sdd, etc.) and
manufacturer information. Make sure you're using the proper device!
 If the stick is formatted with a valid filesystem, you may have to
unmount it first.
 Example syntax, for a USB stick enumerated as /dev/sdz, outputting
progress information, with a data-destructive write test and error log
written to usbstick.log:

@WARNING:This will wipe out the data from the device@
#+BEGIN_SRC sh
#@WARNING:This will wipe out the data from the device@
sudo badblocks -w -s -o usbstick.log /dev/sdz
#+END_SRC
@WARNING:This will wipe out the data from the device@


 You'll need to repartition and reformat the stick afterwards, assuming
it passes; this test will wipe everything on the stick. Any failures
indicate a failure of the device's memory controller, or it has run out
of spare blocks to remap failed blocks. In that case, no area of the
device can be trusted.

*** bad blocks

from the terminal, type following command:

 $ sudo badblocks -v /dev/hda1 > bad-blocks

 The above command will generate the file /bad-blocks/ in the current
directory from where you are running this command.
 Now, you can pass this file to the fsck command to record these bad
blocks

 $ sudo fsck -t ext3 -l bad-blocks /dev/hda1
 Pass 1: Checking inodes, blocks, and sizes
 Pass 2: Checking directory structure
 Pass 3: Checking directory connectivity
 Pass 4: Check reference counts.
 Pass 5: Checking group summary information.
 /dev/hda1:  FILE SYSTEM WAS MODIFIED 
 /dev/hda1: 11/360 files, 63/1440 blocks

 If badblocks reports a block that was already used, e2fsck will try to
move the block to another place. If the block was really bad, not just
marginal, the contents of the file may be corrupted.
 Looks at badblocks man pages for more command line options.
 Read more:
[[http://linuxpoison.blogspot.com/2008/01/howto-check-disk-drive-for-errors-and.html#ixzz2Hp7W6wNp][http://linuxpoison.blogspot.com/2008/01/howto-check-disk-drive-for-errors-and.html#ixzz2Hp7W6wNp]]
 Pasted from
<[[http://linuxpoison.blogspot.com/2008/01/howto-check-disk-drive-for-errors-and.html][http://linuxpoison.blogspot.com/2008/01/howto-check-disk-drive-for-errors-and.html]]>
*** mount permissions errors with external drives
just change the permission

#+BEGIN_SRC sh
chown -R root:disk /media/EXTDRIVE
#or 
chown -R zeltak:disk /media/EXTDRIVE 
#+END_SRC

** Monitors
*** autorander
**** setup
How to use:

Save your current display configuration and setup with:

#+BEGIN_SRC sh
autorandr --save mobile
#+END_SRC

Connect an additional display, configure your setup and save it:

#+BEGIN_SRC sh
autorandr --save docked
#+END_SRC

Now autorandr can detect which hardware setup is active:

#+BEGIN_SRC sh
$ autorandr
mobile
docked (detected)
#+END_SRC

To automatically reload your setup, just append
--change to the command line
To manually load a profile, you can use the
--load <profile> option.
** Languages

*** perl

**** run a perl script-program

how to run a perl script
 issue in the command line:
 perl SCIPTNAME

** mmedia-grpahics
*** graphics
**** ImageMagick
***** mogrify

To convert and resize a set of images:
cd into the dir with the fils and then issue the mogrify command:
 mogrify -resize 128x128 -format png .svg
 the format the files are currently in
 the output size
 the new file format mogrify also works with % so for example:
 mogrify -resize 50% rose.jpg

***** convert raster formats

Image editing in ImageMagick :

 convert mouse.png -scale 32x32 mouse.png
The following example will convert a JPEG file to a PNG:
 convert pic.jpg pic.png

***** Resize script for 128x128 etc.. folders

Using the re-size script for icon folder theme
1)create a folder (Name it for this example Tops) , and inside it
another folder named 128x128 where inside there are sub folders
containing the png file (IE folders named actions,apps, mime etc..)
 2)in the same folder (Tops) add the script
 3)open a terminal window, cd to the Tops dir and issue this:
 ./f Image resizer.sh
 There will be no output and it will take a will but you will be left
with all sized folders with icons (16x16,24x24 etc..)
 NOTE :You may have to install imagemagic for this to work


***** the script

#!/bin/bash
 for i in 96x96 72x72 64x64 48x48 32x32 24x24 22x22 16x16; do
 cp -a 128x128 $i
 find $i -name ".png" -execdir mogrify -resize $i "{}" \;
 done

**** pdfs
***** Crack copy protected PDFs using two simple commands

Crack copy protected PDFs using two simple commands
Use two simple commands to convert a protected pdf into an unprotected
pdf.
 Here in this example i assume the protected pdf file name to be
'protected.pdf'.
 Now open your terminal and type.
 $ pdftops protected.pdf out.ps
 $ pstopdf out.ps out.pdf
 The out.pdf will be your unprotected PDF.
 If you don't have pstopdf and pdftops installed then type this at
terminal to install them.
 $ sudo apt-get install context
***** convert an image/series of images to PDF
use the imagemagic convert 
#+BEGIN_SRC sh
convert page.png page.pdf
#for multiple
convert .png mydoc.pdf
#or
convert input1.jpg input2.jpg input3.jpg output.pdf
#to resize to lower size
convert -resize 1400x1400 -define pdf:use-trimbox=true . new_pdf.pdf
#or To specify the dimension of image:
convert -size 800x600 input.jpg output.pdf
#To resize the image:
convert -resize 50% input.jpg output.pdf
#+END_SRC

!you may get an error, just ingore it!
#+BEGIN_EXAMPLE
convert: clCreateBuffer failed. . @ warning/accelerate.c/ComputeResizeImage/2812.
#+END_EXAMPLE

**** SVG's
***** unzip svgz

go into the scalable dir
 cd /PATH/TO/SCALABLE
 and issue
 rename 's/svgz/svg\.gz/' .svgz
 then
 gunzip 
 or to do a recursive thing issue:
 find -type d| while read i; do (cd $i && rename 's/svgz/svg\.gz/'
.svgz && gunzip ); done

***** convert png to svg using inkscape command line

for i in .svg; do inkscape -f "$i" -e "${i%%.svg}.png" -w 128; done

*** music

**** Flac

***** Converts a single FLAC with associated cue file into multiple
FLAC files

Converts a single FLAC (or APE) file with associated cue file into
multiple FLAC files:

 cuebreakpoints "$2" | shnsplit -o flac "$1"
 Requires:
 - cuetools
 - shntools

***** Add seek point into flac files

Add seek point into flac files

 change dir to where the flac files are and issue
 metaflac --add-seekpoint=10s .flac
 or for a scirpt for all folders (Needs testing):
 find . -name ".flac" -type f -exec metaflac --add-seekpoint=10s {} \;

***** Add the ID3 tags in a cue file to the flac files

Add the ID3 tags in a cue file to the flac files:
 cuetag .cue .flac ;

***** split full album flac

using GUI:
 use the gcue2tracks program

**** Replay gain

***** add gains to all mp3 files

use command line replay gain to add gains to all files
 mp3gain -r .mp3

**** Conversions

***** convert mpeg to mp3 file using ffmpeg

convert mpeg to mp3 file

 ffmpeg -i .mpg .mp3Add seek point into flac files

**** Playing

***** aplay (alsaplay)

you can use alsaplay (the aslaplay command) to play a sound file with no
gui needed
 for a wave file issue
 aplay PATH TO FILE
 example:
 aplay /usr/share/sounds/alsa/Front Center.wav
 to play an mp3 file use the same command (MAY NOT WORK PERFECT FOR
Mp3..)

aplay /home/zeltak/My\ Linux\ Theme/1 Zeltak Current/0 Current\
Theme/Ice\ PhoeNix\ 1.0/Sounds/e-Mail\ Client/galactica short.mp3

***** play a short sound/mp3

play a short sound/mp3
 use either vlc with the --play-and-exit argument
 vlc --play-and-exit /home/zeltak/My\ Linux\
Theme/1 Zeltak Current/0 Current\ Theme/Ice\ PhoeNix\
1.0/Sounds/Kalarm/zbirthday.mp3
 or use aplay (alsaplay)
 UPDATE:
 Use this instead:

------------------------------------------------------------------------------------------------------------------------------------------
 vlc -Idummy /home/zeltak/My\ Linux\
Theme/1 Zeltak Current/0 Current\ Theme/Ice\ PhoeNix\
1.0/Sounds/Kalarm/buistime.mp3

------------------------------------------------------------------------------------------------------------------------------------------
 
*** video
**** use ffmpeg to screencast (capture)

use ffmpeg to screencast
 ffmpeg -f x11grab -r 30 -s 1280x800 -i :0.0 -vcodec libx264 -vpre
lossless ultrafast -threads 0 output.avi

**** Mount a .iso file in UNIX/Linux

mount /path/to/file.iso /mnt/cdrom -oloop

**** rip and ISO fro cd/Dvd

 readom dev=/dev/dvd f=/home/zeltak/sw.iso
 Note: Remember to start the command before the system mounts it
otherwise you will get a error:
 Error trying to open /dev/dvd exclusively (Device or resource busy)...
retrying in 1 second.

*** internet

**** Wget
***** Specify a download Path for wget putput
      
      #+NAME: wget_output_path
      #+BEGIN_SRC sh
wget -P/PATH  http://URL/
#example
wget -P/tmp  http://www.cnn.com/
      #+END_SRC
      
***** Download an entire website
Download an entire website:

wget --random-wait -r -p -e robots=off -U mozilla [[http://www.example.com][http://www.example.com]]

#or try

wget --recursive --no-clobber --page-requisites --html-extension --convert-links --restrict-file-names=windows --no-parent URL

***** Mirror a site
      
      #+NAME: mirror a site with wget
      #+BEGIN_SRC sh
wget --mirror -p --adjust-extension --no-parent --convert-links -P yii_doc http://www.yiiframework.com/doc/api/1.1
#for password site
wget -e robots=off --wait 1 -x --user=xxx --password=xxx -m -k http://domain.to.mirror/
      #+END_SRC
      
***** download all links to a specific file type

wget -r -np -l 1 -A zip http://site.com/download/
wget -r -A '.pdf' url/path
wget -r -A '.mp3' url/path/dir/ 


 Options meaning:
 -r, --recursive specify recursive download.
 -np, --no-parent don't ascend to the parent directory.
 -l, --level=NUMBER maximum recursion depth (inf or 0 for infinite).
 -A, --accept=LIST comma-separated list of accepted extensions.
***** use wget to download a ftp site
use the following command (the -m is for mirror)

#+BEGIN_SRC sh
wget -m ftp://username:password@ip.of.old.host
#if you need a passwordless login leave the passworld field empty
wget -m ftp://username:@ip.of.old.host
#+END_SRC 

***** dl per file type wget
The easiest way to download all pdf or mp3 files from given url:

wget -r -A '.pdf' url/path
wget -r -A '.mp3'url/path/dir/

***** dl files recursivly by part of string
in this example we want to downlaod all files containing 'AOD'
#+BEGIN_SRC sh
wget -r  -np ftp://maiac:@dataportal.nccs.nasa.gov/DataRelease/NorthAmerica/  -A "*AOT*.hdf"  
#+END_SRC
** scripts

*** basics

**** Command Redirection

Command Redirection

 Each command line application can accept standard input and writes to
standard output, and you can use the > or | operators to redirect output
from one command into another, which lets you chain commands together
into much more powerful commands.
 For instance, if you want to use ls --l to display a list of files but
it keeps scrolling off the screen, you can pipe the output from the ls
--l command into the input of the more command by using the | character:
 ls | more
 If you wanted to save the output of that list directly into a file
instead of displaying on the console, you could use the > operator to
redirect the output into a file instead:
 ls -l > filename.list
 You could then use the cat command to display the contents of that
file, pipe that into the grep command (detailed further below), and then
redirect that output into a separate file:
 cat filename.list | grep keyword > filefound.list

**** Looping Over a Set of Files

Looping Over a Set of Files

 If you want to loop through a set of filenames and perform an action on
each one, you can use the for command to loop through a set of files.
For instance, to loop through all the .txt files in the current
directory and display them on the console, you could use:
 for f in .txt;do echo $f;done

**** how ot deal with empty spaces

how to deal with empty spaces in paths
 use qoutation marks IE "XXXXX" for the path

*** bash scripts

**** tips
the {} in find is used to substitute the path of what was found

the OK command
 An important alternative to the -exec parameter is -ok; it behaves the
same as -exec, but it prompts you to see if you want to run the command
on that file. Suppose you want to remove most of the .txt files in your
home directory, but you wish to do it on a file-by-file basis. Delete
operations like the UNIX rm command are dangerous, because it's possible
to inadvertently delete files that are important when they're found by
an automated process like find; you might want to scrutinize all the
files the system finds before removing them.
 The following command lists all the .txt files in your home directory.
To delete the files, you must enter Y or y when the find command prompts
you for action by listing the filename:
 $ find $HOME/. -name .txt -ok rm {} \;
 Each file found is listed, and the system pauses for you to enter Y or
y. If you press the Enter key, the system won't delete the file. Listing
1 shows some sample results:
 Listing 1. Sample results
 < rm ... /home/bill/./.kde/share/apps/karm/karmdata.txt > ?
 < rm ... /home/bill/./archives/LDDS.txt > ?
 < rm ... /home/bill/./www/txt/textfile1.txt > ?
 < rm ... /home/bill/./www/txt/faq.txt > ?
 < rm ... /home/bill/./www/programs/MIKE.txt > ?
 < rm ... /home/bill/./www/programs/EESTRING.txt > ?
 .
 .
 .
 After each question mark, the system paused; in this case, the Enter
key was pressed to continue to the next file. (No files were removed.)
The -ok parameter lets you control the automatic processing of each
found file, adding a measure of safety to the danger of automatic file
removal.
 If too many files are involved for you to spend time with the -ok
parameter, a good rule of thumb is to run the find command with -exec to
list the files that would be deleted; then, after examining the list to
be sure no important files will be deleted, run the command again,
replacing ls with rm.
 Both -exec and -ok are useful, and you must decide which works best for
you in your current situation. Remember, safety first!

**** rename-resize images

Rename and resize images

 Fond of your new camera but can't put up with the terrible names? Do
you want also to prepare them for publishing on the web? No problem, a
simple bash script is what you need:
 #!/bin/sh
 counter=1
 root=mypict
 resolution=400x300
 for i in `ls -1 $1/.jpg`; do
 echo "Now working on $i"
 convert -resize $resolution $i ${root} ${counter}.jpg
 counter=`expr $counter + 1`
 done
 save the script in a file called picturename.sh and make it executable
with
 chmod u+x picturename.sh
 and store it somewhere in your path. Now, if you have a bunch of .jpg
files in the directory /path/to/pictdir, all you have to do is to
execute
 picturename.sh /path/to/pictdir
 and in the current directory you'll find mypict 1.jpg, mypict 2.jpg
etc, which are the resized versions of your original ones. You can
change the script according to your needs, or, if you're just looking
for super-simple image resizing, try looking at the mogrify command with
its -geometry parameter.

**** change case of filenames

Change case of filenames

 Despite the case of a word not making any difference to other operating
systems, in Linux "Command" and "command" are different things. This can
cause trouble when moving files from Windows to Linux. tr is a little
shell utility that can be used to change the case of a bunch of files.
 #!/bin/sh
 for i in `ls -1`; do
 file1=`echo $i | tr [A-Z] [a-z] `
 mv $i $file1 2>/dev/null
 done
 By executing it, FILE1 and fiLe2 will be renamed respectively file1 and
file2.

**** catalog drives to txt

ls -Rhg /media/media/Video/ >
/home/zeltak/sysbackup/txt cat/med video.txt
 or
 ls -Rhg /media/media/Music/ >
/home/zeltak/sysbackup/txt cat/med music.txt
 use find instead, its faster
 find /media/raid/ > /media/raid/Backups/marvin/catdrive/

**** create dirs from a a files text

create dirs from a a files text
 cat k.txt |while read i; do mkdir "$i"; done
 make sure to del .avi from text file if exists before issuing the
command

**** move files from one folder to another based on file type

Move files from one folder to another based on file type
in this example we are moving all media files:

find /media/mova/ '(' -iname '.avi' -o -iname '.mpeg' -o -iname'.divx' -o -iname '.ogm' ')' -exec mv {} /media/movt \;

**** move a bunch of .avi into corresponding dirs

move a bunch of .avi into corresponding dirs
 for f in ; do mv "$f" /somewhere/else/"$f"/; done
 Note: the dirs need to be name DIRNAME.avi

**** find and delete all jpg and nfo and txt from folders
find and delete all jpg and nfo and txt from folders

`to just list the files (dry run):`

#+BEGIN_SRC sh
#to find in current dir
find . '(' -iname '.nfo' -o -iname '.jpg' -o -iname '.nfo' -o -iname '.tbn' -o -iname '.txt' ')' -exec ls {} \;
#to find in a specific dir
find /path/to/dir '(' -iname '.nfo' -o -iname '.jpg' -o -iname '.nfo' -o -iname '.tbn' -o -iname '.txt' ')' -exec ls {} \;
#+END_SRC

`to Delete:`

#+BEGIN_SRC sh
#to find in current dir
find . '(' -iname '.nfo' -o -iname '.jpg' -o -iname '.nfo' -o -iname '.tbn' -o -iname '.txt' ')' -exec rm {} \;
#to find in a specific dir
find /path/to/dir '(' -iname '.nfo' -o -iname '.jpg' -o -iname '.nfo' -o -iname '.tbn' -o -iname '.txt' ')' -exec rm {} \;
#+END_SRC

$Note$ name=case sensitive, iname=case dosent matter

'clean eveything possible'


#+BEGIN_SRC sh
find . '(' -iname '.nfo' -o -iname '.jpg'  -o -iname '.JPEG'    -o -iname '.png'  -o -iname '.PNG'  -o -iname '.jpeg'  -o -iname '.JPEG'  -o -iname '.log'  -o -iname '.m3u'  -o -iname '.accurip' -iname '.nfo' -o -iname '.tbn' -o -iname '.txt' ')' -exec rm {} \;
#+END_SRC
**** find and delete a specific file type
#+BEGIN_SRC bash
find /home/zeltak/music/  -name ".ratings" -exec rm {} \;
#+END_SRC

here we delete all text files that have a .rating extension
**** delete all non music files form music collection


Delete all non music files form Music collection:
 find /media/raid/Music/Zeltak\ Collection/ '(' -iname '.jpg' -o -iname
'.jpeg' -o -iname '.png' -o -iname '.txt' -o -iname '.nfo' -o -iname
'.url' -o -iname '.pdf' -o -iname '.m3u' -o -iname '.db' -o -iname
'.html' -o -iname '.cue' -o -iname '.log' -o -iname '.txt' -o -iname
'.ffp' -o -iname '.htm' -o -iname '.md5' -o -iname '.gif' -o -iname
'.torrent' -o -iname '.log' -o -iname '.tmp' -o -iname '.folder' -o
-iname '.doc'-o -iname '.mood' -o -iname '.JPEG' ')' -exec rm {} \;

**** mp3gain mass script

for mp3
 find . -name mp3 -exec mp3gain -r -k {} \;
 for flacs


**** xclip example

sleep 7 && xclip -o | fb && (xclip -o;echo) | xclip -selection clipboard
&& notify-send -u low -t 1 'xclip' 'clipboard uploaded)' ;;
 where:
 -o prints the current selection clip
 xclip -o | fb takes that selection and uploads it to FB

*** upload a file to omploader

Script to upload a file to omploader
Its possible to automate this for example look
[[#23x5wkVPLtnX-xetmYP5PA][HERE]] for how to auto upload a screenshot

Before we begin:
 You must have the following installed:
 Ruby
 Curl - is installed by default on crunchbang main
 Zenity - is installed by default on crunchbang main
 First save the following modified ruby script in your ~/scripts dir.
Save it as "upload" ([[#EqQVmtV5RjMDI0.-Y7V04Q][see attahced]])
 It looks the same but there are a couple added lines to make it
compatible.
 Next create a new file called "upload.sh"
 This should be in the same directory as the "upload" ruby script.
 Here is what should be in the "upload.sh" shell script file
([[#P1ikZKbrNvreJfUnswr2uQ][see attahced]])
 Now open a terminal and type:
 chmod +x ~/scripts/upload
 chmod +x ~/scripts/upload.sh
 Now all you have to do is set a shortcut key to run:
 ~/scripts/upload.sh
 And a file selection box will pop up.
 Choose the file to upload and hit Ok, the file should upload and return
a dialog box with the url to your upload.

**** upload a screenshot directly to omploader

Upload a screenshot directly to omploader
 use this command from CLI:
 scrot '%sscrot.png' -e 'mv $f ~/ & terminator --command="ruby
~/scripts/upload ~/$f"'
 Or add to Openbox menu:
 <item label="Now+upload">
 <action name="Execute">
 <execute>
 scrot '%sscrot.png' -e 'mv $f ~/ &amp; terminator
--command="ruby ~/scripts/upload ~/$f"'
 </execute>
 </action>
 </item>
 <item label="In 5 Seconds...+upload">
 <action name="Execute">
 <execute>
 scrot -d 5 '%sscrot.png' -e 'mv $f ~/ &amp;
terminator --command="ruby ~/scripts/upload ~/$f"'
 </execute>
 </action>
 </item>
 <item label="In 10 Seconds...+upload">
 <action name="Execute">
 <execute>
 scrot -d 8 '%sscrot.png' -e 'mv $f ~/ &amp;
terminator --command="ruby ~/scripts/upload ~/$f"'
 </execute>
 </action>
 </item>
 NOTE: in xml the "&" must be replaced with a &amp;

**** upload

[[~/Dropbox/Org/Tech/linux_files/attach/upload][Attachment #27 (upload)]]

**** upload.sh

[[~/Dropbox/Org/Tech/linux_files/attach/upload.sh][Attachment #28 (upload.sh)]]

*** keep terminal open after launching a command

the best way to do that would be this:

 urxvt -e bash -c "COMMAND; zsh"

 you can also make it auto-refresh (Nx is the number of seconds)

 urxvt -e bash -c "watch -n10 COMMAND"

** system
*** root operations

**** sudo-su

To Change user to root
 Sudo su -
 to become Root command (Switch user)

 su zeltak

*** installations
**** apt

***** install

Install and uninstall
 to install a specific program:

 sudo apt-get install digikam
 
 to uninstall a specific program:

 sudo apt-get remove digikam
 Upgrade distribution
 sudo apt-get update
 sudo apt-get dist-upgrade
 Edit the apt source file list (to add software sources)
 sudo nano /etc/apt/sources.list
 Updating the source list
 sudo apt-get update
 Upgrading the source list
 sudo apt-get upgrade
 Fix broken packages and install dependencies:
 sudo apt-get install -f

***** tips

Generate list of all manually installed packages
 On the source system, execute:
 sudo aptitude search '~i !~M' -F '%p install' > packages-list
 This will generate a list of all manually installed packages in
packages-list. (All packages not installed as a dependency of another
package.)
 On the destination system execute:
 sudo dpkg --set-selections < packages-list
 sudo apt-get update && sudo apt-get dselect-upgrade
 Misc operations
 Install packages from a CDROM
 apt-cdrom
 Using a proxy for apt-get in Debian and ubuntu
 A quick and easy way to get apt-get to work with a proxy in Debian...
 Place the following code into the file /etc/apt/apt.conf.d/proxy
(create proxy in editor if missing)
 Acquire::http::Proxy "http://proxy:8080";
 IE add this line if connecting in Haifa U:
 Acquire::http::Proxy "http://proxy.haifa.ac.il:8080"
 Fixing the GPG error

 When you get this error:
 Fetched 172kB in 1s (90.5kB/s)
 Reading package lists... Done
 W: GPG error: http://ppa.launchpad.net intrepid Release: The following
signatures couldn't be verified because the public key is not available:
NO PUBKEY 60487016493B3065
 W: GPG error: http://ppa.launchpad.net intrepid Release: The following
signatures couldn't be verified because the public key is not available:
NO PUBKEY 60D11217247D1CFF
 W: GPG error: http://ppa.launchpad.net intrepid Release: The following
signatures couldn't be verified because the public key is not available:
NO PUBKEY 7D2C7A23BF810CD5
 issue this command to download the key
 gpg --keyserver keyserver.ubuntu.com --recv XXXXXXXXXX
 where XXXX is the name of the missing key
 gpg --keyserver keyserver.ubuntu.com --recv 8AD328D8A58BCAE3
 Install with no dependencies

 using apt-get install with the --no-install-recommends switch should
install the package and just the dependencies

***** aptitude

Intro
Aptitude is the superior way to install, remove, upgrade, and otherwise
administer packages on you system with apt. For one, since it's
inception, aptitude has been solving orphaned dependencies. Second, it
has a curses interface that blows the doors off of dselect. Finally, and
most importantly, it takes advantage of one tool, doing many many
functions. Let's take a look:
  aptitude: Running it with no arguments brings up a beautiful
interface to search, navigate, install, update and otherwise administer
packages.
  aptitude install: Installing software for your system, installing
needed dependencies as well.
  aptitude remove: Removing packages as well as orphaned
dependencies.
  aptitude purge: Removing packages and orphaned dependencies as
well as any configuration files left behind.
  aptitude search: Search for packages in the local apt package
lists.
  aptitude update: Update the local packages lists.
  aptitude upgrade: Upgrade any installed packages that have been
updated.
  aptitude clean: Delete any downloaded files necessary for
installing the software on your system.
  aptitude dist-upgrade: Upgrade packages, even if it means
uninstalling certain packages.
  aptitude show: Show details about a package name.
  aptitude autoclean: Delete only out-of-date packages, but keep
current ones.
  aptitude hold: Fix a package at it's current version, and don't
update iSearch using aptitude

 sudo aptitude search FILE/PROGRAM
 sudo aptitude search flac

***** Locate Missing Package Files when compiling using apt-file

the apt-file is a tool that searches online repositories for a specific
file, may be the answer.
 Occasionally, when building a package from source, disaster strikes and
the whole process grinds to a halt due to a missing file. Fortunately,
this is increasingly uncommon due to the maturity of Linux package
management and the ubiquity of Autoconf configuration scripts. However,
some software projects don't use Autoconf, either because the
maintainers prefer another solution such as CMake or because the program
is too small to make setting up a configure script worthwhile.
 Fortunately, on the rare occasions when this problem does crop up,
there may be a solution in the form of apt-file: a member of the APT
family of package management tools. This utility assembles an index of
all of the files stored in the online repositories that your
distribution is configured to use and allows you to search for
individual files.
 Case example: recently, I decided to check out KBackup, a KDE backup
management utility that isn't currently in the Ubuntu repository.
Following the instructions, I ran the CMake build tool, only to be
disappointed when the build process stopped with a notice that it
couldn't find a file called "FindKDE4Internal.cmake".
 To solve the problem, I installed apt-file via the command line:
 sudo apt-get install apt-file
 After installation, apt-file's internal index needs to be populated
with the following command:
 apt-file update
 This process takes a minute or so to complete, depending on the speed
of your Internet connection. Once the index was up to date, I searched
for the missing file:
 apt-file search FindKDE4Internal.cmake
 and apt-file gave me a single line of output that told me everything I
needed to know:
 kdelibs5-dev: /usr/share/kde4/apps/cmake/modules/FindKDE4Internal.cmake
 In other words, the file I needed was in the package "kdelibs5-dev",
which I installed from the command line:
 sudo apt-get install kdelibs5-dev
 After this, I was able to continue and complete the normal install
procedure.

**** dpkg

***** installations

Basic install/removal of a package:

 To Install a package, type the following:
 sudo dpkg -i packagename.i386.deb
 To remove a package, type the following:
 sudo dpkg -r packagename
 To remove a package including all config files related type the
following:
 sudo dpkg -p packagenameTo search a package
 dpkg -l packagenameTo force an installation of i386 on AMD64

 sudo dpkg --force-architecture -i sir 1.9.1-qt4 i386.deb
 or
 sudo dpkg -i --force-allTo Force packages that dont install during a
dist/other upgrade (--force-overwrite):

 sudo dpkg -i --force-overwrite /var/cache/apt/archives/Install all deb
files at a dir
 cd to the dir containing the files
 issue this command
 sudo dpkg -i .

**** compiling

***** basics

Basic compiling from source
 install all the program-compilation tools you need:
 sudo apt-get build-essential checkinstall
 Then to compile:
 ./configure
 make
 sudo make install
 apt-file

 Install:
 sudo apt-get install apt-file
 Then when you get any not found errors, you can issue
 apt-file search <filename>
 where you replace <filename> with the name indicated as not being
found.
 For example, in your case, FindKDE4Internal.cmake was not found. So I
run
 apt-file search FindKDE4Internal.cmake
 and get
 kdelibs5-dev:
/usr/lib/kde4/share/kde4/apps/cmake/modules/FindKDE4Internal.cmake
 So you may not have kdelibs5-dev installed.
 Create a .deb package from source files
 If your build from source is successful, you can make a Debian
(Ubuntu/Kubuntu) package (.deb) for future use:
  Install package tools:
 sudo apt-get install checkinstall
 Rebuild package using "checkinstall":
 cd /path/to/extracted/package
 ./configure
 sudo make
 sudo checkinstall
 Rebuild package using "checkinstall":
 sudo dpkg -i packagename.deb
 Note: These are basic instructions that may not always work. Some
packages require additional dependencies and optional parameters to be
specified in order to build them successfully.
 
 Advanced compiling using Audacity as an example

 Get prepared
 First off, we need to get hold of the Audacity source code. You can
find this on the project's website at http://audacity.sf.net. Save the
tar.gz file of the latest version to your desktop (eg
audacity-src-1.2.6.tar.gz) on to your desktop, then open a command line
window (Applications > Accessories > Terminal) and enter the following:
 cd Desktop
 tar xfvz audacity-src-1.2.6.tar.gz
 cd audacity-src-1.2.6
 The first command switches us into the Desktop folder, and the second
command extracts the compressed .tar.gz archive. (Note that for archives
with a .tar.bz2 suffix, you should use tar xfvj instead.) Finally, we
switch into the newly created source code directory.
 Enter ls to see the list of files in the expanded archive. Along with
various scripts (highlighted in green) and sub-directories (blue),
you'll see a README.txt file. It's always worth having a quick peek at
any file called README.txt or INSTALL.txt, as it may have useful
information on building the program.
 Enter less README.txt to view the file, and hit the Q key to quit. In
this case, we don't need to read through it all - we can get straight to
work on the compilation process.
 The configure script will prepare the Audacity source code for
compilation. Enter this command:
 ./configure --help
 This executes the configure script (the ./ is required, as we're
running it in the current directory), telling it to spew out all
available compilation options. If you scroll up through the terminal,
you can see that there's a huge range of options available to us. But
don't fret - we can happily accept the defaults.
 We're going to make a couple of small changes though: firstly we're
going to enable the SoundTouch library, which provides extra pitch and
tempo manipulation tools that aren't included in the default Ubuntu
package.
 Another tweak we can make is to set the location of the installed
program when it has been built. To do this, we use the --prefix option
with the configure script. For instance, to install Audacity in the
/usr/local directory (away from other software and easier to maintain),
we use --prefix=/usr/local.
 As mentioned earlier, another great benefit of compiling software from
source is the choice of optimisations. By setting the CFLAGS (for C
code) and CXXFLAGS (for C++) environment variables before we run the
configure script, we can select the exact GCC compiler optimisations we
want to use. This is a complicated subject, but we can get an extra
speed boost very easily. Consider these commands:
 export CFLAGS="-O3 -march=core2"
 export CXXFLAGS="-O3 -march=core2"
 Here we're setting up the aforementioned environment variables with
optimisations suitable for the Intel Core 2 CPU architecture. The -O3
bit at the start has a letter O, not a zero, and requests the third
level of optimisation. (Most distributions compile their packages with
-O2 for slightly smaller executables and easier debugging.)
 If you have a machine with a AMD64 chip, use -march=athlon64, and if
you're not sure, just use -march=i686 for wide compatibility. You can
consult the GCC manual page (man gcc) for a complete list of supported
CPU architectures, but it's heavy reading!
 So, we have our optimisations set up, and we're ready to run the
configure script. Here we go:
 ./configure --prefix=/usr/local --with-soundtouch=system
 This tells the script that we want to install into the /usr/local
directory, and enable the SoundTouch option that was listed when we ran
./configure --help before. (The 'system' part for the soundtouch option
indicates that we want to use the version of SoundTouch available in the
distro, as the one supplied with Audacity is broken.)
 Grab dependencies
 Oops - something's not quite right. After you've run the ./configure
command, you'll get this error back: 'C compiler cannot create
executables'. We need to install a development toolchain to build
binaries from source, so enter: sudo apt-get install build-essential
 On Ubuntu, this installs a meta-package that pulls in all the tools we
need to compile bare-bones command-line programs. If you're running
another distro, look for GCC, G++ and Binutils in your package manager,
and go ahead and install them. Now run the previous configure script
again. (A handy time-saver for those new to the command line: hit the up
cursor key and you'll be able to retrieve previously entered commands.)
 Now the script will proceed more healthily, but it will stop and inform
us when it can't find a program on the system called wx-config. Audacity
uses a graphical toolkit called WXWidgets to render its interface, and
we don't have it installed, hence the error message that you'll see. So
we need to grab WXWidgets from the Synaptic package manager.
 Before you run off with the mouse, though, it's important to note that
many Linux programs, especially libraries and toolkits on which other
programs depend, are supplied in two versions.
 One version is the run-time library that a program can link to; the
other is a bundle of development libraries and header files used for
compiling software. So, open Synaptic (under the System > Administration
menu) and search for WXWidgets.
 Scroll down the list of results and you'll see libwxgtk2.6-0. This is
the run-time library on which WXWidgets-using programs depend - it
provides a GTK layer on top of the WXWidgets framework. Check that for
installation, and also check libwxgtk2.6-dev, which will provide the
necessary development bits and bobs for our source code build, and then
apply the changes. (In other distros, these packages will have similar
names, so search for WXWidgets or wxgtk to find them. Development
packages will almost always end with a -dev or -devel extension.)
 Now re-run the configure script. You'll see that Audacity requires an
older version of WXWidgets - namely, 2.4.x! This is pretty much the
standard process for building from source code, which is why we've
illustrated it for you here; it often takes a bit of trial and error to
work out exactly what library dependencies and versions are required -
and it can sometimes be frustrating. So, head back into Synaptic, remove
WXWidgets 2.6, and install version 2.4 (don't forget the -dev package).
 Build the code
 Run the configure script once more and you'll see that everything goes
smoothly this time. For other programs, you may have more dependencies
to sort out before you can build - as mentioned, it's all a
trial-and-error process.
 For instance, if a program's configure script complains that it can't
find the PNG development libraries, look for a package named something
like libpng-dev. If you're building a Qt-based app, you'll need
libqt-dev. Often the README file will provide a full list.
 The command we need to kick off the GCC compiler is (drum roll
please)...
 make
 Simple as that. The 'make' utility consults a newly created file called
Makefile, which details the order in which the program's source code
files are to be compiled.
 Depending on the size of your program - and speed of your machine - the
compilation process can take anywhere between 10 seconds (for a small
command line app) to several hours (for a leviathan like
OpenOffice.org).
 During the compilation phase, you'll see that GCC is being executed
using the CFLAGS and CXXFLAGS settings we defined before. You may also
see some warning messages about non-strict code, but those are nothing
to worry about.
 You will, however, get a bit of a shock when the compilation process
halts abruptly with an error. You'll see that SoundTouchEffect.o
couldn't be compiled - does that mean SoundTouch is missing?
 Well, yes, and the configure script should have alerted us to that. But
not all is perfect in this world, so we have to fix it ourselves. You
may recall, back at the start, that we passed the
--with-soundtouch=system option to the configure script, instead of
=local, because the version supplied with Audacity is broken. (You
would've found out that =local is broken, so we've saved you a bit of
time!)
 So, configure let us down a bit there. But no big deal: open Synaptic,
search for libsoundtouch and install it (along with its -dev sibling).
We don't need to re-run the configure step again, as that succeeded, so
enter make again and watch the output.
 Now you'll see that it can't find FLAC. D'oh! So fire up Synaptic and
install the libflac-dev library package. Enter 'make' once more, and
you'll see that the compilation progresses a bit further, but then halts
with a rather terrifying sequence of errors, including this:
 undefined reference to 'soundtouc::SoundTouch::SoundTouch()'
 Well, it looks like the compiler still can't find SoundTouch, even
though we've installed it and it didn't complain during the configure
phase. So during the last part of the compilation, when all of the
program's files are being linked together into the executable, GCC
doesn't know where SoundTouch is.We need to alter the Makefile which
controls the compilation process. Enter:
 gedit src/Makefile
 Scroll down to line 31, where you'll see 'LIBS' - that is, the
libraries with which Audacity needs to be linked. Add -libSoundTouch to
the end of the line (it's case-sensitive), save the file and exit the
editor. Run make again. You'll see that the main Audacity binary
compiles correctly, but the process hits another wall: it can't find the
msgfmt utility to handle documentation.
 This time we need to rely on Google: search for 'msgfmt' and 'Ubuntu'
(both terms in the same search, but not in quotes as it's not a phrase)
and you'll see that other users have had similar problems when compiling
programs. You'll discover that it's in the gettext package - but,
tediously, the Ubuntu team has both gettext and a gettext-base packages.
 The latter was installed as part of the build-essential bundle, whereas
the former includes our essential msgfmt tool. Maybe one day distro
developers will stop fragmenting programs into a squillion ambiguously
named packages, but at least the solution was a quick Google away here.
 So, install gettext to get msgformat, and run make again. In the words
of Borat, great success! You'll land back at the command line prompt
with no errors. All we need to do now is install the newly built
Audacity into the filesystem, so enter:
 sudo make install
 This action needs to be performed as the root (admin) user, hence sudo.
On non-Ubuntu distros, you may need to switch to root with su and then
enter make install. And now you can run the program:
 /usr/local/bin/audacity
 If you want to uninstall the program, do sudo make uninstall. You can
also remove the source code directory whenever you want - the final
program is now in /usr/local/.
 Examples of missing dependecies

 Tools and libraries to install in KDE in order to compile stuff
 
 if you get this error message:
 configure: error: Qt (>= Qt 3.0 and < 4.0) (library qt-mt)
 
 then libqt3-mt-dev is needed:
 sudo apt-get install libqt3-mt-dev
 
 if you get this error:
 missing KDE headers
 then you need this: kdelibs4-dev:
 
 sudo apt-get install kdelibs4-dev
 
 if you get an Error about missing Automake, install:
 sudo apt-get install automake1.9
 o make a program start automatically with KDE
 1)open a text editor and type in:
 #!/bin/bash
 Command (for example>berylmanager)
 then save the file as XXX.sh (or whatever you want to call it) in the
directory /home/USERNAME/.kde/Autostart/ (where USERNAME is your
username).
 Remember that .kde is a hidden folder, so you will need to turn on
viewing of hidden files/folders, or type in the location manually in the
save dialogue.
 Finally you need to make XXX.sh executable. To do this just right click
on XXX.sh, then properties > Permissions tab > tick Is executable.
 
 if you get
 configure: error: C++ preprocessor "/lib/cpp" fails sanity check
 then install :
 apt-get install g++

***** how to patch code

How to patch code
 Dl the patch file and put in the source directory (where the make files
are and .configure etc...)
 [[~/Dropbox/Org/Tech/linux_files/Image_1CXkKt.png]]
 Then cd to that dir and issue:
 patch < NAME OF PATCH
 For example
 patch < dmenu-vertical-history.patch
 after that compile as instructed by the specific program

***** svn-git-bzr etc

get git source
 Issue in CLI the following:
 git clone git://github.com/kelvie/basket.git

**** launchpad stuff

***** use bazar to pull files

install bzr
 sudo apt-get install bzr
 use the following command :
 bzr clone lp:~ripps818/+junk/LaGaDesk-BlackWhite-II
 this is the ppa for the files

*** python

**** uninstall a setup.py app

run the sane command as when installing just add the --record option
 sudo python setup.py install --record /PATH/TO/FILE
 ie:
 sudo python setup.py install --record
/home/zeltak/ZH tmp/tvnamer/unins.txt
 then use the file to manually delete the installed apps
 NOTE: you may need to use sudo in the 2nd part of the command if you
installed in the sys root
 cat unins.txt | sudo xargs rm -rf

*** poweroff-reboot-etc

**** commands

Commands for computer power-offs

 halt (shut down computer)
 reboot (restarts the computer)
 shutdown -h now (as root, Shut down the system to a halt. Mostly used
for a remote shutdown)
 
 exit (Logout)
 startx (Start an X-windows server (KDE) and the default windows
manager)
 shutdown -h +30 shut down with a timer
 +30 for 30 minutes, -h to actually turn the machine off (instead of
just shutting down the operating system)

*** disk utils
**** hdparm

check which hard drive (physical) is a /dev/Device

 view and managment of the processes running on your system (TOP/PS)
 sudo hdparm -I /dev/sda

**** disk usage (du-df)

disk usage (du/df)

 du /path/to/mydirectory
 
 -s summarize
 -h Human size
 
 Finding Out the Amount of Free Space (df)
 df -h
 
 (-h Human size)
 show size of folders/files

 du -h --max-depth=1
 
 calculate dir size
 du -sh /path/to/dir

**** finding the biggest files (ls)

Finding the biggest files

 A common problem with computers is when you have a number of large
files (such as audio/video clips) that you may want to get rid of. You
can find the biggest files in the current directory with:
 ls -lSrh
 The "r" causes the large files to be listed at the end and the "h"
gives human readable output (MB and such). You could also search for the
biggest MP3/MPEGs:
 ls -lSrh .mp
 You can also look for the largest directories with:
 du -kx | egrep -v "\./.+/" | sort -n

**** find uuid of partitions

Find out the UUID of your partitions

 ls /dev/disk/by-uuid/ -alh

**** smart-tools

smart montools

 install first
 sudo apt-get install smartmontools
 Particularly for hard disks, the tool in charge is smartctl from the
package smartmontools. IDE disks (if they're not of the age of
dinosaurs) have an integrated self-testing tool called SMART which means
Self-Monitoring, Analysis and Reporting Technology . Modern SCSI disks
have it too if they're SCSI 3 or newer. It happens that inside the disk
chipset there are routines to check parameters of disk health: spin-up
time, number of read failures, temperature, life elapsed And all of
those parameters are not only registered by the disk chipset, but they
have designated security limits and both parameters and limits can be
checked by software who access the disk using the appropriate I/O
instructions.
 And that software is smartctl, a piece of the smartmontools deb
package. Of course, since they access the disk in a raw way, you need to
be root to use these commands.
 smartctl can ask the disk for its smart identification:smartctl can ask
the disk for its smart identification:smartctl can ask the disk for its
smart identification:
 smartctl -i /dev/sda
 smartctl version 5.38 [i686-pc-linux-gnu] Copyright (C) 2002-8 Bruce
Allen
 Home page is http://smartmontools.sourceforge.net/
 === START OF INFORMATION SECTION ===
 Model Family: Fujitsu MHV series
 Device Model: FUJITSU MHV2060BH
 Serial Number: NW10T652991F
 Firmware Version: 00850028
 User Capacity: 60,011,642,880 bytes
 Device is: In smartctl database [for details use: -P show]
 ATA Version is: 7
 ATA Standard is: ATA/ATAPI-7 T13 1532D revision 4a
 Local Time is: Mon May 12 02:39:31 2008 CEST
 SMART support is: Available - device has SMART capability.
 SMART support is: Enabled
 More interesting, smartctl can ask the disk for its parameter values:
 smartctl -A /dev/sda
 smartctl version 5.38 [i686-pc-linux-gnu] Copyright (C) 2002-8 Bruce
Allen
 Home page is http://smartmontools.sourceforge.net/
 === START OF READ SMART DATA SECTION ===
 SMART Attributes Data Structure revision number: 16
 Vendor Specific SMART Attributes with Thresholds:
 ID# ATTRIBUTE NAME FLAG VALUE WORST THRESH TYPE UPDATED WHEN FAILED
RAW VALUE
 1 Raw Read Error Rate 0x000f 100 100 046 Pre-fail Always - 124253
 2 Throughput Performance 0x0004 100 100 000 Old age Offline -
18284544
 3 Spin Up Time 0x0003 100 100 025 Pre-fail Always - 0
 4 Start Stop Count 0x0032 099 099 000 Old age Always - 1199
 5 Reallocated Sector Ct 0x0033 100 100 024 Pre-fail Always -
8589934592000
 7 Seek Error Rate 0x000e 100 087 000 Old age Always - 1761
 8 Seek Time Performance 0x0004 100 100 000 Old age Offline - 0
 9 Power On Seconds 0x0032 079 079 000 Old age Always -
10866h+57m+47s
 10 Spin Retry Count 0x0012 100 100 000 Old age Always - 0
 12 Power Cycle Count 0x0032 100 100 000 Old age Always - 1199
 192 Power-Off Retract Count 0x0032 099 099 000 Old age Always - 283
 193 Load Cycle Count 0x0032 100 100 000 Old age Always - 6953
 194 Temperature Celsius 0x0022 100 100 000 Old age Always - 45
(Lifetime Min/Max 14/58)
 195 Hardware ECC Recovered 0x001a 100 100 000 Old age Always - 62
 196 Reallocated Event Count 0x0032 100 100 000 Old age Always -
459276288
 197 Current Pending Sector 0x0012 100 100 000 Old age Always - 0
 198 Offline Uncorrectable 0x0010 100 100 000 Old age Offline - 0
 199 UDMA CRC Error Count 0x003e 200 200 000 Old age Always - 0
 200 Multi Zone Error Rate 0x000e 100 082 000 Old age Always - 22371
 203 Run Out Cancel 0x0002 100 100 000 Old age Always - 1533257648465
 240 Head Flying Hours 0x003e 200 200 000 Old age Always - 0
 As you can see, there are some attributes marked as Pre-fail . If any
of these attributes goes beyond its threshold, the disk is about to fail
in hours, maybe minutes.
 Even if there are more options to smartctl , the last ones I will
comment here are -a and -t.
 smartctl -t launches a disk test. It needs a parameter indicating the
type of the test, and in the longest case it can last for tens of
minutes and will check the electrical and mechanical performance as well
as the read performance of the disk, going through all its surface.
smartctl -a, in its turn, shows all available information about the
disk, including self testing results. Since tests will span minutes or
tens of minutes, we can not see them happening. All what we will get
when launching tests is like:
 # smartctl -t long /dev/sda
 smartctl version 5.38 [i686-pc-linux-gnu] Copyright (C) 2002-8 Bruce
Allen
 Home page is http://smartmontools.sourceforge.net/
 === START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===
 Sending command: "Execute SMART Extended self-test routine immediately
in
 off-line mode".
 Drive command "Execute SMART Extended self-test routine immediately in
 off-line mode" successful.
 Testing has begun.
 Please wait 41 minutes for test to complete.
 Test will complete after Mon May 12 05:44:03 2008
 Use smartctl -X to abort test.
 Here, we're being informed that (maybe) we will get a slightly lower
performance on the disk for the next 41 minutes, since the test has
started. It is completely background, or better underground', since it
does not happen under the kernel control at all: everything is happening
internally to the disk, and all what we can get is the result.
 smartctl -a, in turn, show a very large amount of SMART information
about the disk: almost all stored SMART information parsed for us. It is
usually better to use a more specific switch, see the man page for
details.
 Finally, I want to comment that there is a daemon in the smartmontools
package, smartd, who can take care of doing tests for you. It works by
running smartctl in a periodic way (typically every 30 minutes) and
logging all errors and parameter value changes to the syslog. The
default configuration in Debian will also mail root if there's any
problem detected. I will not explain here about it, because I want you
to read its (short and easy) documentation, but remember that in order
to use it you must enable it in /etc/default/smartmontools

**** formating

Format new partitions

 There is no possibility to format a mounted device!
 for more info man mkfs (manual for mkfs)
 mkfs -j /Path/to/HD (ext3)
 mkfs -j /dev/hda1
 mkswap /Path/to/HD (make swap partition)
 mkswap /dev/hda2

**** fdisk

Quick view of partitions:
 sudo fdisk -l
 Basic Operations

 To start fdisk on a selcetd drive
 fdisk Path.to.HD (usually needs root permisions)
 sudo fdisk /dev/hda
 press me for menu commands:
 a toggle a bootable flag
 b edit bsd disklabel
 c toggle the dos compatibility flag
 d delete a partition
 l list known partition types
 m print this menu
 n add a new partition
 o create a new empty DOS partition table
 p print the partition table
 q quit without saving changes
 s create a new empty Sun disklabel
 t change a partition's system id
 u change display/entry units
 v verify the partition table
 w write table to disk and exit
 x extra functionality (experts only)
 Command (m for help): p (print the partition table)
 Disk /dev/hda: 120.0 GB, 120034123776 bytes
 255 heads, 63 sectors/tracks for nili, 14593 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 
 Device Boot Start End Blocks Id System
 /dev/hda1  1 4875 39150405 7 HPFS/NTFS
 /dev/hda2 4875 14593 78067836 f W95 Ext'd (LBA)
 /dev/hda5 4875 5136 2104452 82 Linux swap / Solaris
 /dev/hda6 5137 7747 20972826 83 Linux
 /dev/hda7 7748 14593 54990463+ 83 Linux
 Delete partitions
 Command (m for help): d (Delete the partition)
 Partition number (1-7): 1 (which partition to delete)
 
 Command (m for help): d
 Partition number (1-7): 2
 
 (after 2 partition deletions it will delete all)
 
 Command (m for help): p
 
 Disk /dev/hda: 120.0 GB, 120034123776 bytes
 255 heads, 63 sectors/tracks for nili, 14593 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 
 Device Boot Start End Blocks Id System
 Create partitions
 Command (m for help): n
 Command action
 e extended
 p primary partition (1-4)
 p
 Partition number (1-4): 1
 First cylinder (1-30401, default 1):
 Using default value 1
 Last cylinder or +size or +sizeM or +sizeK (1-30401, default 30401):
30401
 Issue n for new partition , p for primary, 1 for partition number, 1
for block start and 30401 for block end (see above)
 and then press command t:
 Command (m for help): t
 Selected partition 1
 Hex code (type L to list codes): fd (or any other partition for a list
press L)
 Changed system type of partition 1 to fd (Linux raid autodetect)
 Command (m for help): p
 Disk /dev/hdc: 250.0 GB, 250059350016 bytes
 255 heads, 63 sectors/track, 30401 cylinders
 Units = cylinders of 16065  512 = 8225280 bytes
 Device Boot Start End Blocks Id System
 /dev/hdc1 1 30401 244196001 fd Linux raid autodetect
 Command (m for help): w
 The partition table has been altered!
 Calling ioctl() to re-read partition table.
 Syncing disks.
 in Hex codes 82 is the code for Swap!, 83 for reg linux

**** fstab

***** general

fstab is a configuration file stored in the /etc directory that contains
details of all file systems on the PC that can be mounted.
 an example of a /etc/fstab file:
 #
 # <file system> <mount point> <type> <options> <dump> <pass>
 proc /proc proc defaults 0 0
 /dev/sda3 / reiserfs notail 0 1
 /dev/sda1 /media/sda1 ntfs defaults 0 0
 /dev/sda4 /media/sda4 vfat defaults 0 0
 /dev/sda2 none swap sw 0 0
 eddie:/mnt/media /media/media nfs defaults 0 0
 eddie:/mnt/hd2 /media/thd nfs defaults 0 0
 /dev/hdd /media/cdrom0 udf,iso9660 user,unhide,noauto 0 0
 /dev/fd0 /media/floppy0 auto rw,user,noauto 0 0
 //ztpc/c$ /media/ztpc c smbfs rw,user,username=zeltak,password= 0 0

***** remount all fstab entries without restarting

issue:

sudo mount -a

**** grub

edit the boot menu
 sudo nano /boot/grub/menu.lst
 menu.lst - grub options
 
 to change time of grub pause
 
 # timeout sec
 # Set a timeout, in SEC seconds, before automatically booting the
default entry
 # (normally the first entry defined).
 timeout 10
 
 
 example of linux boot line:
 title Ubuntu, kernel 2.6.15-26-386
 root (hd0,2)
 kernel /boot/vmlinuz-2.6.15-26-386 root=/dev/sda3 ro quiet splash
 initrd /boot/initrd.img-2.6.15-26-386
 savedefault
 boot
 
 change the timeout and the title etc of the distro Restore Grub
 Use any live CD to boot your machine, launch a root terminal, mount
Ubuntu root partition (hda2 in your case, for exmaple to /mnt/hda2) and
then go to directory where grub lies: /mnt/hda2/boot/grub
 
 Launch grub
 $>grub
 
 from the grub command prompt execute the following command
 >root (hd0,1)
 (this is hda2 in grub talk)
 >setup (hd0)
 
 and then reboot. I assume you have a correct menu.lst in
/mnt/hda2/boot/grub. check which boot kernel images are present
 go to /boot/vm-XXXX and see kernel numbers Restore grub after windows
kills grub
 Distro installers are pretty good at identifying an existing Windows
installation and setting up dual booting, but should you have to
reinstall a spyware-riddled Windows install you'll find that your
machine boots straight into Windows and that your Linux installation is
gone!
 Don't panic: all Windows has done is overwrite the Grub bootloader with
its own equivalent, removing your boot menu. All your data is still
there - you just need to reload the bootloader configuration into the
disk's master boot record (MBR). You'll need to boot from a Live CD to
do this, this, then open a terminal and run
 sudo grub-install /dev/sda
 This assumes you have everything installed on the first (or only) hard
drive. Grub-install will usually make a good job of detecting a Grub
installation and set things back to rights. If it doesn't, you'll have
to do it manually, which is a lot easier than it sounds. Run sudo grub
to enter the Grub shell. then run
 find /boot/grub/stage1
 To determine which partition holds the Grub files. If Windows is on
the first partition Grub is likely to be on the second, in which case
this command will return something like (hd0,1). Now set Grub up with
 root (hd0,1)
 setup (hd0)
 quit
 The first command identifies the boot partition, the second writes the
bootloader to the MBR and then you leave the Grub shell. Grub is only
concerned with the location of /boot, so if you have a separate /boot
partition, omit the /boot part from the find command. Add a splash
image
 Either use the kde admin tools in sysytemsettings or startop manager
in gnome or edit the /boot/grub/menu.lst and add this
 splashimage (hd0,3)/boot/grub/splashimages/77942-wolf.xpm.gz
 default 0
 timeout 10
 make sure to change to correct HD (hd0,3)make distro load without
splash image and with text info

 change the end output to no splash and quiet like this
 kernel/boot/vmlinuz-2.6.27-11-generic
root=UUID=475e5ebd-1a65-4e83-8986-17afc357b921 ro quiet no splash

**** boot sector

Backup and restore your boot sector

 Messing with bootloaders, dual-booting and various other scary
processes can leave you with a messed up boot sector. Why not create a
backup of it while you can:
 dd if=/dev/hda of=bootsector.img bs=512 count=1
 Obviously you should change the device to reflect your boot drive (it
may be sda for SCSI). Also, be very careful not to get things the wrong
way around - you can easily damage your drive! To restore use:
 dd if=bootsector.img of=/dev/hda

**** flash drives

***** check speed of sd cards

install hdparm and use something like this

 sudo hdparm -t /dev/mmcblk0

 The important value is the first one, showing 4.4MB/s. A Class 10 SD
card can theoretically reach 10MB/s so I'm guessing 6MB/s is lost on the
USB bus or Linux SD card driver

*** hardware

**** Hardware info

General hardware system info
 lspci (all things connected to PCI)
 
 lsusb (all things connected to USB)
 
 tty (Print the name of the terminal in which you are typing this
command)
 free (free Memory)
 cat /proc/cpuinfo (shows CPU info,vendor speed etc)

**** memory

Display the top ten running processes - sorted by memory usage

 ps aux | sort -nrk 4 | head

**** printers

lpq
 (show the printer que)
 lprm
 (Clear printer que)
 lprm job number
 (Remove a printing job "job number" from the queue)

*** xorg-x11

**** xorg

Edit xorg.conf file

 sudo nano /etc/X11/xorg.conf

*** date and time

**** date ands time commands

to update the time using the internet time servers issue:

 /etc/network/if-up.d/ntpdate
 Manuall set time and date from CLI

 BETTER way via string :
 date -s "2 OCT 2006 18:00:00"

                                                                                             
 Type in the following command, replacing nn with the two-digit month
(01 - 12), dd with the two-digit day, hh with the two-digit hour (00 -
23), mm with the two-digit minute (00 - 59). Optionally, you can then
follow that with either a two-digit or four-digit year, and/or the
two-digit second. If you're adding the seconds, put a . (period) before
the seconds.
 date nnddhhmm
 or
 date nnddhhmmyy
 or
 date nnddhhmm.ss
 For instance, to set the date/time for May 19th, 2007, 6:00pm (and 0
seconds), you would type:
 date 051918002007.00

*** laptop

**** power tips

check battery power left in CLI
 acpi
 put computer to sleep

 /etc/acpi/sleep.sh
 switch the laptop screen off

 sleep 1; xset dpms force off
 Command to suspend computer from CLI
 sudo /etc/acpi/sleep.sh

*** create boot up disk from ISO (using dd) 				:Fav:

Use the dd command

#+BEGIN_SRC sh
sudo dd if=/PATH/TO/iso of=/dev/DEVICE
#+END_SRC
for example:

#+BEGIN_SRC sh
sudo dd if=/home/zeltak/Downloads/debian-6.0.3-amd64-netinst.iso of=/dev/sdb
#+END_SRC
*** xclip
**** xsel

#+BEGIN_SRC sh
echo -n {f} | xsel -i
#+END_SRC

** Text manuiplulation

*** sed

**** basics

sed -e 's/source regexp/replacement/' for replacing the first matching
string in the line, add g at the end (s/s1/s2/g) for replacing all
matching strings.

*** awk 
**** find and replace awk
     #+NAME: 
     #+BEGIN_SRC sh
awk '{gsub(/,,/,",")}; 1'  Fintmpc_2003.csv > tmp2003.csv
     #+END_SRC
this will replace ,, to ,

some more example

#+NAME: 
#+BEGIN_SRC sh
 # substitute (find and replace) "foo" with "bar" on each line
 awk '{sub(/foo/,"bar")}; 1'           # replace only 1st instance
 gawk '{$0=gensub(/foo/,"bar",4)}; 1'  # replace only 4th instance
 awk '{gsub(/foo/,"bar")}; 1'          # replace ALL instances in a line
#+END_SRC

**** pipe an CLI output and extract part of the output
***** extract the last fiels
use the $NF option (last field)

#+NAME: 
#+BEGIN_SRC sh
acpi | awk '{print $NF}'
#+END_SRC
*** regexp

**** basics

you might want to learn a bit about regular expressions (regexp). the
basics:
 . = any character (one charater, like ? in file names)
  = the last character, repeated any (incl. 0) no. of times
 ? = the last character, repeated exactly once
 [asd] = a or s or d (one charater)
 [a-z] = a through z
 [0-9] = numbers
 (string1|string2) = string1 or string2

*** diff

**** basic use

diff is used to find differences in text files but can be extended to do
much more
 basic example:

diff FILE1 FILE 2

 to output to a file

diff FILE1 FILE 2 > filename.txt

*** create files from a list (text file)

use the cat command like this:
 cat your file | while read name; do cp stub.disc "$name.disc"; done
 where yourfile is a text file in which each name is on a separate line
 $name -is the name it takes from each line in the txt file
 .disc- is the extension you want the file to have
 stub.disc-is the file that will be generated each time
 example:
 cat list.txt | while read name; do cp stub.disc "$name.disc"; done
 you can also use the touch instead of cp if all files need to be empty
 cat datacrow.txt | while read name; do touch "$name.nfo"; done

*** see the difference between 2 files (which lines are not in bothe
files)

see the difference between 2 files (which lines are not in both files):

 comm -12 <(sort file1) <(sort file2)

*** cat

**** output a specific line

use with either of following:

 cat -n wordfile | grep "\^ 5"
 sed -n '5p' filename
 awk 'NR == 5' filename

 In example:

 cat -n /proc/mdstat | grep "\^ 3"

 or combined with tail

 cat -n /proc/mdstat | grep "\^ 3" | tail -c 8

** Zsh
*** zsh config file locations

Put all the PATH variables in a .zshenv file:

file:/home/zeltak/.zshenv

*** make Zsh the default shell

issue:

 chsh -s $(which zsh)

 Note: You have to log out and log back in, in order to start using Zsh
as your default shell.
 After logging back in, you should notice Zsh's prompt, which by default
looks different from Bash's. However you can verify that Zsh is the
current shell by issuing:

 $ echo $SHELL

*** zsh and keyring

if using a the Florian "Bluewind" zshrc and this line is there
 # machine dependent stuff . $HOME/.private stuff.zsh
 create the file $HOME/.private stuff.zsh and put this line there:
 eval `keychain --eval --nogui -Q -q id rsa`

*** reload settings after zshrc changes

just issue:
source ~/.zshrc

*** save a history file

function precmd() {
 if [ "$(id -u)" -ne 0 ]; then
 FULL CMD LOG=/export/hda3/home/mote/logs/zsh history.log;
 echo "`/bin/date +%Y%m%d.%H%M.%S` `pwd` `history -1`" >>
${FULL CMD LOG};
 fi
 }
 or if you want a separate file per day:
 function precmd() {
 if [ "$(id -u)" -ne 0 ]; then
 FULL CMD LOG="$HOME/.logs/zsh-history-$(date
-u"+%Y-%m-%d").log"
 echo "$USER@`hostname`:`pwd` [$(date -u)] `\history -1`" >>
${FULL CMD LOG}
 fi
 }
 You'll want to run a mkdir ~/.logs before-hand to make sure that the
directory exists, otherwise it will just complain. Now you'll wind up
with log names like /home/$USER/.logs/zsh-history-2012-11-29.log and
inside will be the full list of that day's commands. Each command will
look like:
 ahays@:<host>/home/ahays [Thu Nov 29 21:02:22 UTC 2012] 148 cat
/path/to/my/favorite/textfile

*** oh-my-zsh

You can install this via the command line with either `curl` or `wget`.
 via `curl`

 curl -L
https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh |
sh

 via `wget`

 wget --no-check-certificate
https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O
- | sh

*** disable autocorrect

add this to .zshrc
 unsetopt correct all

*** create a blank zsh session

use this command:

 PROMPT= urxvt -e zsh -f

** cli networking
*** wireless

Turn off wireless card
 sudo ifconfig wlan0 down

*** info

Show which programs are listening on TCP and UDP ports

 netstat -plunt
 -p Tell me the name of the program and it's PID
 -l that is listening
 -u on a UDP port.
 -n Give me numeric IP addresses (don't resolve them)
 -t oh, also TCP portsShow which ports are open in the network
 nmap 192.168.0.1Use nmap to discover network connections on LAN
issue:
 nmap -A
*** ethhtool (enable 1000 network)
very useful to get info and set properties to lan cards

install from repos

to get info issue as root 

sudo ethtool eth0

which should return info on your card and speed

%Tip- if your lan card if 1gb and you see its only recognized as 100mbit issue:% 

#+BEGIN_SRC sh
sudo ethtool -s eth0 speed 1000 duplex full
#+END_SRC

@also check the cable is not a bad cable@

*** host file

The hosts file is a computer file used by an operating system to map
hostnames to IP addresses.
 The hosts file is a plain-text file and is traditionally named hosts,
and is most often located at the path /etc/hosts
 to edit issue:
 sudo nano /etc/hosts
 Configuring /etc/hosts

 If your IP address is assigned to you by a DHCP server, then /etc/hosts
is configured as follows:
 127.0.0.1mybox.mydomain.comlocalhost.localdomain localhost mybox
 If you have a static IP address, then /etc/hosts is configured as
follows:
 127.0.0.1localhost.localdomain localhost
 192.168.0.10mybox.mydomain.commybox

*** ifconfig

1)To set an ip address to a network card:
 
 sudo ifconfig <interface> <ip address>
 
 example:
 ifconfig eth0 192.168.0.1
 
 
 
 2)To add a default gateway :
 
 route add default gw 192.xx.xx.xx
 
 
 3)To bring an interface up or take it down again use
 
 sudo ifconfig <interface> (up/down)

*** resolv.conf

set up DNS
 
 in the /etc/resolv.conf
 sudo nano /etc/resolv.conf
 
 
 add the nameservers you want to use, one to a line, in the following
format.
 nameserver <nameserver>
 
 Example:
 nameserver 192.115.106.10

*** dhcp

#+BEGIN_EXAMPLE
sudo dhclient <interface>
#+END_EXAMPLE
 
Example:

#+BEGIN_SRC sh
sudo dhclient eth0
#+END_SRC
 
and this will look for a dhcp server and tell you the ip address it is
given and lets you know when it will expire.
 
*** cli networking commands

ARP
 shows simple mapping of IP addresses to MAC addresses
 
 example: arp
 Hostname
 displays the computers host name.
 
 example:
 hostname
 nslookup
 look up the IP address for a given DNS name.
 
 example:
 
 nslookup www.zeltak.com
 Server: 194.90.1.5
 Address: 194.90.1.5#53
 
 Non-authoritative answer:
 Name: www.zeltak.com
 Address: 192.115.133.122
 
 
 traceroute
 shows how many "hops" (routers a packet makes untill destination)
 
 example:
 
 traceroute www.zeltak.com

*** netstat

**** check ports on local machine (nstat)

Check ports on local machine

 for tcp:
 netstat -nlt
 for Udp:
 netstat -nlu
 for both
 netstat -nltu
 to see which prog uses the port add -p or run as root to see all
programs

**** see what port a program is listening on

see what port it's listening on:
 sudo netstat -nlp | grep progname
 For example:
 sudo netstat -nlp | grep mpd

*** print IP address

ifconfig wlan0| awk 'NR==2 {print $2}'| awk -F: '{print $2}'
 or
 ifconfig eth0| awk 'NR==2 {print $2}'| awk -F: '{print $2}'
*** ip command
**** Displays info about all network interfaces
Type the following command to list and show all ip address associated on on all network interfaces:

#+BEGIN_SRC sh
ip a
#OR
ip addr
#+END_SRC

You can select between IPv4 and IPv6 using the following syntax:

#+BEGIN_SRC sh
### Only show TCP/IP IPv4  ##
ip -4 a
 
### Only show TCP/IP IPv6  ###
ip -6 a

#It is also possible to specify and list particular interface TCP/IP details:

### Only show eth0 interface ###
ip a show eth0
ip a list eth0
ip a show dev eth0
 
### Only show running interfaces ###
ip link ls up
#+END_SRC

**** Assigns the IP address to the interface
The syntax is as follows to add an IPv4/IPv6 address:

#+BEGIN_EXAMPLE
ip a add {ip_addr/mask} dev {interface}
#+END_EXAMPLE

#+BEGIN_SRC sh
#To assign 192.168.1.200/255.255.255.0 to eth0, enter:
ip a add 192.168.1.200/255.255.255.0 dev eth0
#OR
ip a add 192.168.1.200/24 dev eth0
#+END_SRC

**** How do I change the state of the device to UP or DOWN?
The syntax is as follows:
#+BEGIN_EXAMPLE
ip link set dev {DEVICE} {up|down}
#+END_EXAMPLE

To make the state of the device eth1 down, enter:
#+BEGIN_SRC sh
ip link set dev eth1 down
#To make the state of the device eth1 up, enter:
ip link set dev eth1 up
#+END_SRC

** `networking`
*** dynamic dns
**** ddclient

Update IP addresses at dynamic DNS services Using ddclient

 Install ddclient in ubuntu
 sudo aptitude install ddclient
 Configure ddclient
 Edit the configuration file /etc/ddclient.conf
 The ddclient.conf file is usually installed completely commented out,
but provides many configuration examples for the most popular DDNS
providers.
 The most important general parameters to configure are:
  Username: Your DDNS account's login name
  Password: Your DDNS account's password
  Use: The method used to determine the IP address to advertise to
the DDNS server
 Some important DDNS provider parameters are
  Server: The name of the DDNS provider's main DNS server
  Protocol: The methodology the DDNS client should use to
communicate with the DDNS server
  Your domain: The domain to which your web server will belong
 You can use the ddclient command to determine the best use parameter to
use in the ddclient.conf file. In this example, only the use=web option
gives a valid Internet IP address and should be considered as a first
option:
 [root@bigboy tmp]# ddclient -daemon=0 -query
 use=if, if=lo address is 127.0.0.1
 use=if, if=wlan0 address is 192.168.1.100
 use=web, web=dyndns address is 97.158.253.26
 sudo gedit /etc/ddclient.conf
 # Configuration file for ddclient generated by debconf
 #
 # /etc/ddclient.conf
 pid=/var/run/ddclient.pid
 protocol=easydns
 use=web
 server=members.easydns.com
 login=yournamehere
 password='password'
 .your.domain
 Zeltaks Example (see protected voices)
 If you can't find the public IP address, then you can have ddclient
check your public IP address from the web by editing /etc/ddclient.conf
and making it use the web by saying
 use=web
 or
 use=web, web=checkip.dyndns.org/, web-skip='IP Address'
 Save and exit the file
 Restart ddclient service using the following command
 sudo /etc/init.d/ddclient restart
 You can start, stop, and restart DDclient after boot time using the
DDclient initialization script as in:
 [root@bigboy tmp]# service ddclient start
 [root@bigboy tmp]# service ddclient stop
 [root@bigboy tmp]# service ddclient restart
 Note:
 1)You want to make sure it runs as a service and monitors changes in
ppp something that the install wizard doesn't cover.
 2)If you want to reconfigure you seetings use the following command
 dpkg-reconfigure ddclient
 More info:

http://www.linuxhomenetworking.com/wiki/index.php/Quick HOWTO : Ch19 : Dynamic DNS
**** freedns setup
register for an account in 
http://freedns.afraid.org/

then register a subdomain
type A and choose you own subdomain, ₆In example₆ zeltak.mooo.com

then in the Dynamic DNS tab copy the direct link URL at the bottom and configure ddwrt hostname with
DOMAIN, the token part of the url you just copied, ₆In example₆ 

zeltak.mooo.com,Q2liUVRmbFR1T201V3RVcWpqRDFralExOjExNjUyODgw
 
*** firewall

**** glossary and info

1)Virtual server-only what can come from outside the firewall inside
 
 2)DMZ(Demilitarized Zone) is used to allow a single computer on the LAN
to be exposed to the Internet- that is one computer without a firewall
 Lets say 192.168.0.25 is without a firewall!
 
 
 3) Dynamic DNS-send your current IP to the dynamic dns server
 
 4) Firewall Rules- can be used to allow or deny traffic from a specific
outside/inside IP
 Example: allow www.zeltak .com (192.115.133.122) to acess the firewall

*** 'git' 								:Fav:
    :PROPERTIES:
    :ID:       7816c1c8-be9a-4fd5-8121-15c190885cd7
    :END:
**** quick theoretical intro
***** The Three States
Git has three main states that your files can reside in:

'committed', 'modified', and 'staged'.

'Committed' means that the data is safely stored in your local database.

'Modified' means that you have changed the file but have not committed it to your database yet.

'Staged' means that you have marked a modified file in its current version to go into your next commit snapshot.

***** Git workflow

The basic Git workflow goes something like this:

1. You modify files in your working directory.

2. You stage the files, adding snapshots of them to your staging area.

3. You do a commit, which takes the files as they are in the staging area and stores that
snapshot permanently to your Git directory.

**** Basics
***** set Identity
Your Identity:
The first thing you should do when you install Git is to set your username and e-mail address.
This is important because every Git commit uses this information, and it's immutably baked into the commits you pass around:

#+BEGIN_SRC sh
git config --global user.name "zeltak"
git config --global user.email "zeltak@gmail.com"
#+END_SRC

if you want to check your settings, you can use

#+BEGIN_SRC sh
git config --list
--------------------------------------------------------------------------------------
user.name=zeltak
user.email=zeltak@gmail.com
github.user=zeltak
github.token=29fd4f4450185d9e725a964645cbc756

#+END_SRC

***** start git repo							:Fav:
****** To start a new git repo:

#+BEGIN_SRC sh
git init
#Or add all files in folder to git
git add .
#+END_SRC

****** do a inital commit

#+BEGIN_SRC sh
git commit -m 'initial commit'
#+END_SRC

***** Remote Repos
****** To Clone remote repo
checkout a repository:

#+BEGIN_SRC sh
#create a working copy of a local repository by running the command
git clone /path/to/repository
#when using a remote server, your command will be
git clone username@host:/path/to/repository
#+END_SRC

****** get extended info on remote repo

#+BEGIN_SRC sh
git remote -v
#+END_SRC

****** push to remote

after you add and commit your changes are now in the HEAD of your local working copy. To send those changes to your remote repository, execute 

#+BEGIN_SRC sh
#git push [remote-name] [branch-name]
git push origin master
#+END_SRC

Change `master` to whatever branch you want to push your changes to. 

If you have not cloned an existing repository and want to connect your repository to a remote server, you need to add it with
git remote add origin <server>
Now you are able to push your changes to the selected remote server
***** update, merge, replace
****** update and merge
to update your local repository to the newest commit, execute 

#+BEGIN_SRC sh
git pull
#+END_SRC

in your working directory to fetch and merge remote changes.
to merge another branch into your active branch (e.g. master), use

#+BEGIN_SRC sh
git merge <branch>
#+END_SRC

in both cases git tries to auto-merge changes. Unfortunately, this is not always possible and results in conflicts. You are responsible to merge those conflicts manually by editing the files shown by git. After changing, you need to mark them as merged with

#+begin_src sh
git add <filename>
#+end_src

before merging changes, you can also preview them by using

#+begin_src sh
git diff <source_branch> <target_branch>
#+end_src

****** replace local changes
In case you did something wrong (which for sure never happens ;) you can replace local changes using the command

#+BEGIN_SRC sh
git checkout -- <filename>
#+END_SRC

this replaces the changes in your working tree with the last content in HEAD. Changes already added to the index, as well as new files, will be kept.
If you instead want to drop all your local changes and commits, fetch the latest history from the server and point your local master branch at it like this

#+BEGIN_SRC sh
git fetch origin
git reset --hard origin/master
#+END_SRC

***** Viewing the Commit History
After you have created several commits, or if you have cloned a repository with an existing commit history, you'll probably want to look
back to see what has happened. The most basic and powerful tool to do this is the git log command:
#+BEGIN_SRC sh
git log
#+END_SRC

#+BEGIN_EXAMPLE
commit 7b751d203bc72c00a1764184b71b09abb67c3842
Author: zeltak <zeltak@gmail.com>
Date:   Thu May 2 08:25:56 2013 -0400

    fixed # error

commit 244233e73a7e2fff8a82a3dc95d3861732797b7a
Author: zeltak <zeltak@gmail.com>
Date:   Wed May 1 21:12:33 2013 -0400

    bm+ and find file

commit 25553bc2fd2ee078a526f9a7acbe93807c2eab39
Author: zeltak <zeltak@gmail.com>
Date:   Tue Apr 23 10:54:50 2013 -0400

    fixing windows paths and leuven theme

commit 093a3ccde4314bb4238d86eea04bec06e71eeb57
Author: zeltak <zeltak@gmail.com>
Date:   Thu Apr 18 09:06:25 2013 -0400

    emacs and i3 updates

commit d4e7b0d0afb8d57a5954a310d59a20c1f1d7c234
Author: zeltak <zeltak@gmail.com>
Date:   Tue Apr 9 17:39:51 2013 -0400

    added emacs

commit 30d43652a1f225d9379e8d06c3f9fdbec580b242
Author: zeltak <zeltak@gmail.com>
Date:   Tue Apr 9 17:20:53 2013 -0400

    first commit
#+END_EXAMPLE
***** general usability tips
****** check git status
#+NAME: 
#+BEGIN_SRC sh
git status
#+END_SRC
****** built-in git GUI
gitk
****** config options
use colorful git output
#+BEGIN_SRC sh
git config color.ui true
#+END_SRC
show log on just one line per commit
#+BEGIN_SRC sh
git config format.pretty oneline
#+END_SRC
****** use interactive adding
#+BEGIN_SRC sh
git add -i
#+END_SRC

****** How do I make git use the editor of my choice for commit 
issue: 
#+NAME: 
#+BEGIN_SRC sh
git config --global core.editor "vim"
#+END_SRC
**** In Depth
from https://www.atlassian.com/git/
***** Git basics 
****** git init
The git init command creates a new Git repository.

Executing git init creates a .git subdirectory in the project root, which contains all of the necessary metadata for the repo. Aside from the .git directory, an existing project remains unaltered (unlike SVN, Git doesn't require a .git folder in every subdirectory).

Usage:

#+BEGIN_SRC sh
git init
#+END_SRC

Transform the current directory into a Git repository. This adds a .git folder to the current directory and makes it possible to start recording revisions of the project.

#+BEGIN_SRC sh
git init <directory>
#+END_SRC

Create an empty Git repository in the specified directory. Running this command will create a new folder called <directory>  containing nothing but the .git subdirectory.

#+BEGIN_SRC sh
git init --bare <directory>
#+END_SRC

Initialize an empty Git repository, but omit the working directory. Shared repositories should always be created with the --bare flag (see discussion below). Conventionally, repositories initialized with the --bare flag end in .git. For example, the bare version of a repository called my-project should be stored in a directory called my-project.git.

`Discussion`

For most projects, git init only needs to be executed once to create a central repository—developers typically dont use git init to create their local repositories. Instead, they'll usually use git clone to copy an existing repository onto their local machine.

`Bare Repositories`

The
'--bare'
flag creates a repository that doesn’t have a working directory, making it impossible to edit files and commit changes in that repository. Central repositories should always be created as bare repositories because pushing branches to a non-bare repository has the potential to overwrite changes. Think of --bare as a way to mark a repository as a storage facility, opposed to a development environment. This means that for virtually all Git workflows, the central repository is bare, and developers local repositories are non-bare.

₆Example₆ to create a bare repo 

#+BEGIN_SRC sh
ssh USER@SERVER 
cd path/above/repo 
git init --bare my-project.git
#+END_SRC

First, you SSH into the server that will contain your central repository. Then, you navigate to wherever you’d like to store the project. Finally, you use the --bare flag to create a central storage repository. Developers would then clone my-project.git to create a local copy on their development machine.

****** git clone
The git clone command copies an existing Git repository. 

$Note$  that the .git extension is omitted from the cloned repository. This reflects the non-bare status of the local copy.

As a convenience, cloning automatically creates a remote connection called 'origin' pointing back to the original repository. This makes it very easy to interact with a central repository.

Usage:

#+BEGIN_SRC sh
git clone <repo>
#+END_SRC

Clone the repository located at <repo> onto the local machine. The original repository can be located on the local filesystem or on a remote machine accessible via HTTP or SSH.

#+BEGIN_SRC sh
git clone <repo> <directory>
#+END_SRC

Clone the repository located at <repo> into the folder called <directory> on the local machine.

`Discussion`

If a project has already been set up in a central repository, the git clone command is the most common way for users to obtain a development copy. Like git init, cloning is generally a one-time operation—once a developer has obtained a working copy, all version control operations and collaborations are managed through their local repository.

Example

The example below demonstrates how to obtain a local copy of a central repository stored on a server accessible at example.com using the SSH username john:

#+BEGIN_SRC sh
git clone ssh://john@example.com/path/to/my-project.git 
cd my-project
# Start working on the project
#+END_SRC

The first command initializes a new Git repository in the my-project folder on your local machine and populates it with the contents of the central repository. Then, you can cd into the project and start editing files, committing snapshots, and interacting with other repositories. 

****** git config
******* the location of git config files:

#+BEGIN_SRC sh
<repo>/.git/config 
#Repository-specific settings.

~/.gitconfig
#User-specific settings. This is where options set with the --global flag are stored.

$(prefix)/etc/gitconfig
#System-wide settings.
#+END_SRC

******* configure editor
#+BEGIN_SRC sh
git config --global core.editor emacs
#+END_SRC

******* example commnads
The git config command lets you configure your Git installation (or an individual repository) from the command line. This command can define everything from user info to preferences to the behavior of a repository. Several common configuration options are listed below.

Usage:

#+BEGIN_SRC sh
git config user.name <name>
#Define the author name to be used for all commits in the current repository. Typically, you’ll want to use the --global flag to set configuration options for the current user.

git config --global user.name <name>
#Define the author name to be used for all commits by the current user.

git config --global user.email <email>
#Define the author email to be used for all commits by the current user.

git config --global alias.<alias-name> <git-command>
#Create a shortcut for a Git command.

git config --system core.editor <editor>
#Define the text editor used by commands like git commit for all users on the current machine. The <editor> argument should be the command that launches the desired editor (e.g., vi).

git config --global --edit
#Open the global configuration file in a text editor for manual editing.
#+END_SRC

All configuration options are stored in plaintext files, so the git config command is really just a convenient command-line interface. Typically, you’ll only need to configure a Git installation the first time you start working on a new development machine, and for virtually all cases, you’ll want to use the --global flag.

Git stores configuration options in three separate files, which lets you scope options to individual repositories, users, or the entire system:

#+BEGIN_EXAMPLE
- <repo>/.git/config – Repository-specific settings.
- ~/.gitconfig – User-specific settings. This is where options set with the --global flag are stored.
- $(prefix)/etc/gitconfig – System-wide settings.
#+END_EXAMPLE

When options in these files conflict, local settings override user settings, which override system-wide. If you open any of these files, you’ll see something like the following:

#+BEGIN_EXAMPLE
[user] 
name = John Smith
email = john@example.com
[alias]
st = status
co = checkout
br = branch
up = rebase
ci = commit
[core]
editor = vim
#+END_EXAMPLE

You can manually edit these values to the exact same effect as git config.

****** git add

The git add command adds a change in the working directory to the staging area. It tells Git that you want to include updates to a particular file in the next commit. However, git add doesn't really affect the repository in any significant way—changes are not actually recorded until you run git commit.

In conjunction with these commands, you'll also need git status to view the state of the working directory and the staging area.

Usage

#+BEGIN_SRC sh
git add <file>
#+END_SRC
Stage all changes in <file> for the next commit.

#+BEGIN_SRC sh
git add <directory>
#+END_SRC
Stage all changes in <directory> for the next commit.


#+NAME: 
#+BEGIN_SRC sh
git add -A
#+END_SRC
add all files in current di

#+BEGIN_SRC sh
git add -p
#+END_SRC
Begin an interactive staging session that lets you choose portions of a file to add to the next commit. This will present you with a chunk of changes and prompt you for a command. Use y to stage the chunk, n to ignore the chunk, s to split it into smaller chunks, e to manually edit the chunk, and q to exit.

`Discussion`

The git add and git commit commands compose the fundamental Git workflow. These are the two commands that every Git user needs to understand, regardless of their team’s collaboration model. They are the means to record versions of a project into the repository’s history.

Developing a project revolves around the basic edit/stage/commit pattern. First, you edit your files in the working directory. When you’re ready to save a copy of the current state of the project, you stage changes with git add. After you’re happy with the staged snapshot, you commit it to the project history with git commit.

****** git commit

The git commit command commits the staged snapshot to the project history. Committed snapshots can be thought of as “safe” versions of a project—Git will never change them unless you explicity ask it to. Along with git add, this is one of the most important Git commands.

While they share the same name, this command is nothing like svn commit. Snapshots are committed to the local repository, and this requires absolutely no interaction with other Git repositories.

Usage

#+BEGIN_SRC sh
git commit
#+END_SRC
Commit the staged snapshot. This will launch a text editor prompting you for a commit message. After you’ve entered a message, save the file and close the editor to create the actual commit.


#+BEGIN_SRC sh
git commit -m "<message>"
#+END_SRC
Commit the staged snapshot, but instead of launching a text editor, use <message> as the commit message.

#+BEGIN_SRC sh
git commit -a
#+END_SRC
Commit a snapshot of all changes in the working directory. This only includes modifications to tracked files (those that have been added with git add at some point in their history).

.₆In example₆ 

#+BEGIN_SRC sh
git add hello.py
git commit
#+END_SRC

This will open a text editor (customizable via git config) asking for a commit message, along with a list of what’s being committed:

#+BEGIN_SRC sh
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
# Changes to be committed:
# (use "git reset HEAD ..." to unstage)
#
#modified: hello.py
#
#+END_SRC

Git doesn't require commit messages to follow any specific formatting constraints, but the canonical format is to summarize the entire commit on the first line in less than 50 characters, leave a blank line, then a detailed explanation of what’s been changed. For example:

Change the message displayed by hello.py

#+BEGIN_EXAMPLE
- Update the sayHello() function to output the user's name
- Change the sayGoodbye() function to a friendlier message
#+END_EXAMPLE

Note that many developers also like to use present tense in their commit messages. This makes them read more like actions on the repository, which makes many of the history-rewriting operations more intuitive.
***** Remotes (extended)
******* git remote command

The git remote command lets you create, view, and delete connections to other repositories. Remote connections are more like bookmarks rather than direct links into other repositories. Instead of providing real-time access to another repository, they serve as convenient names that can be used to reference a not-so-convenient URL.

For example, the following diagram shows two remote connections from your repo into the central repo and another developer’s repo. Instead of referencing them by their full URLs, you can pass the origin and john shortcuts to other Git commands.


#+DOWNLOADED: /tmp/screenshot.png @ 2014-08-02 14:39:10
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/screenshot_2014-08-02_14:39:10.png]]
Usage

#+BEGIN_SRC sh
git remote
#+END_SRC
List the remote connections you have to other repositories.

#+BEGIN_SRC sh
git remote -v
#+END_SRC
Same as the above command, but include the URL of each connection.

#+BEGIN_SRC sh
git remote add <name> <url>
#+END_SRC
Create a new connection to a remote repository. After adding a remote, you’ll be able to use <name> as a convenient shortcut for <url> in other Git commands.

#+BEGIN_SRC sh
git remote rm <name>
#+END_SRC
Remove the connection to the remote repository called <name>.

#+BEGIN_SRC sh
git remote rename <old-name> <new-name>
#+END_SRC
Rename a remote connection from <old-name> to <new-name>.

`The origin Remote`

When you clone a repository with git clone, it automatically creates a remote connection called origin pointing back to the cloned repository. This is useful for developers creating a local copy of a central repository, since it provides an easy way to pull upstream changes or publish local commits. This behavior is also why most Git-based projects call 'their central repository origin'

`Repository URLs`

Git supports many ways to reference a remote repository. Two of the easiest ways to access a remote repo are via the HTTP and the SSH protocols. HTTP is an easy way to allow anonymous, read-only access to a repository. For example:

http://host/path/to/repo.git

But, it’s generally not possible to push commits to an HTTP address (you wouldn’t want to allow anonymous pushes anyways). For read-write access, you should use SSH instead:

#+BEGIN_SRC sh
ssh://user@host/path/to/repo.git
#+END_SRC
You’ll need a valid SSH account on the host machine, but other than that, Git supports authenticated access via SSH out of the box.

`Examples`

In addition to origin, it’s often convenient to have a connection to your teammates’ repositories. For example, if your co-worker, John, maintained a publicly accessible repository on dev.example.com/john.git, you could add a connection as follows:

#+BEGIN_SRC sh
git remote add john http://dev.example.com/john.git
#+END_SRC

Having this kind of access to individual developers’ repositories makes it possible to collaborate outside of the central repository. This can be very useful for small teams working on a large project.
******* git pull

Merging upstream changes into your local repository is a common task in Git-based collaboration workflows. 

$Note$ for working in groups where people commit differnt code versions look at git fetch followed by git merge, but git pull rolls this into a single command

Usage:

#+BEGIN_SRC sh
git pull <remote>
#+END_SRC
Fetch the specified remote’s copy of the current branch and immediately merge it into the local copy. This is the same as git fetch <remote> followed by git merge origin/<current-branch>.

#+BEGIN_SRC sh
git pull --rebase <remote>
#+END_SRC
Same as the above command, but instead of using git merge to integrate the remote branch with the local one, use git rebase.

`Pulling via Rebase`

The --rebase option can be used to ensure a linear history by preventing unnecessary merge commits. Many developers prefer rebasing over merging, since it’s like saying, "I want to put my changes on top of what everybody else has done." In this sense, using git pull with the --rebase flag is even more like svn update than a plain git pull.

In fact, pulling with --rebase is such a common workflow that there is a dedicated configuration option for it:

#+BEGIN_SRC sh
git config --global branch.autosetuprebase always
#+END_SRC

After running that command, all git pull commands will integrate via git rebase instead of git merge.

The following example demonstrates how to synchronize with the central repository's master branch:

#+BEGIN_SRC sh
git checkout master
git pull --rebase origin
#+END_SRC

This simply moves your local changes onto the top of what everybody else has already contributed.
******* git push

Pushing is how you transfer commits from your local repository to a remote repo. It's the counterpart to git fetch, but whereas fetching imports commits to local branches, pushing exports commits to remote branches. This has the potential to overwrite changes, so you need to be careful how you use it. These issues are discussed below.

Usage

#+BEGIN_SRC sh
git push <remote> <branch>
#+END_SRC
Push the specified branch to <remote>, along with all of the necessary commits and internal objects. This creates a local branch in the destination repository. To prevent you from overwriting commits, Git won’t let you push when it results in a non-fast-forward merge in the destination repository.

#+BEGIN_SRC sh
git push <remote> --force
#+END_SRC
Same as the above command, but force the push even if it results in a non-fast-forward merge. Do not use the --force flag unless you’re absolutely sure you know what you’re doing.

#+BEGIN_SRC sh
git push <remote> --all
#+END_SRC
Push all of your local branches to the specified remote.

#+BEGIN_SRC sh
git push <remote> --tags
#+END_SRC
Tags are not automatically pushed when you push a branch or use the --all option. The --tags flag sends all of your local tags to the remote repository.

`Force Pushing`

Git prevents you from overwriting the central repository’s history by refusing push requests when they result in a non-fast-forward merge. So, if the remote history has diverged from your history, you need to pull the remote branch and merge it into your local one, then try pushing again. This is similar to how SVN makes you synchronize with the central repository via svn update before committing a changeset.

The '--force flag' overrides this behavior and makes the remote repository’s branch match your local one, deleting any upstream changes that may have occurred since you last pulled. The only time you should ever need to force push is when you realize that the commits you just shared were not quite right and you fixed them with a git commit --amend or an interactive rebase. However, you must be absolutely certain that none of your teammates have pulled those commits before using the --force option.

$Note Only Push to Bare Repositories$

In addition, you should only push to repositories that have been created with the --bare flag. Since pushing messes with the remote branch structure, it’s important to never push to another developer’s repository. But because bare repos don’t have a working directory, it’s impossible to interrupt anybody’s developments.

The following example describes one of the standard methods for publishing local contributions to the central repository. First, it makes sure your local master is up-to-date by fetching the central repository’s copy and rebasing your changes on top of them. The interactive rebase is also a good opportunity to clean up your commits before sharing them. Then, the git push command sends all of the commits on your local master to the central repository.

#+BEGIN_SRC sh
git checkout master
git fetch origin master
git rebase -i origin/master
# Squash commits, fix up commit messages etc.
git push origin master
#+END_SRC

Since we already made sure the local master was up-to-date, this should result in a fast-forward merge, and git push should not complain about any of the non-fast-forward issues discussed above.

******* QUICK:Adding Remote Repositories
To add a new remote, use the git remote add command:

#+BEGIN_SRC sh
git remote add origin https://github.com/user/repo.git
# Set a new remote

git remote -v
# Verify new remote
# origin  https://github.com/user/repo.git (fetch)
# origin  https://github.com/user/repo.git (push)

#+END_SRC

The command takes two arguments:

remote name: origin
repository URL: https://github.com/user/repo.git

******* git fetch
to get updated data from your remote projects, you can run:

#+BEGIN_SRC sh
git fetch [remote-name]
#+END_SRC

The command goes out to that remote project and pulls down all the data from that remote project that you !don't have yet!
After you do this, you should have references to all the branches from that remote, which you can merge in or inspect at any time

$A git pull is what you would do to bring your repository up to date with a remote repository$
$git fetch updates your local copy of a remote branch$

******* updating URL of origin remote
A common mistake is cloning using the default (HTTPS) instead of SSH. You can correct this by going to your repository, clicking the ssh button left to the URL field and updating the URL of your origin remote like this:

#+BEGIN_SRC sh
git remote set-url origin git@github.com:username/repo.git 
#+END_SRC
******* use git to connect without a password
******** using ssh keys
just add the ssh keys for the relevant remote repo and push using your ssh keys
******** using credentials

#+BEGIN_SRC sh
git config --global credential.helper cache
#+END_SRC

which tells git to keep your password cached in memory for (by default) 15 minutes. You can set a longer timeout with:

#+BEGIN_SRC sh
git config credential.helper 'cache --timeout=3600'
#+END_SRC
******** using netrc

An alternative approach is to put your username and password in your ~/.netrc file, although, as with keeping the password in the remote URL, this means that your password will be stored on the disk in plain text and is thus less secure and not recommended. However, if you want to take this approach, add the following line to your ~/.netrc:

#+BEGIN_SRC sh
machine <hostname> login <username> password <password>
#+END_SRC

replacing <hostname> with the server's hostname, and <username> and <password> with your username and password. Also remember to set restrictive file system permissions on that file:

#+BEGIN_SRC sh
chmod 600 ~/.netrc
#+END_SRC

$NOTE: Note that on Windows, this file should be called _netrc, and you may need to define the %HOME% environment variable$

***** git merge
****** git merge command

Merging is Git's way of putting a forked history back together again. The git merge command lets you take the independent lines of development created by git branch and integrate them into a single branch.

Note that all of the commands presented below merge into the current branch. The current branch will be updated to reflect the merge, but the target branch will be completely unaffected. Again, this means that git merge is often used in conjunction with git checkout for selecting the current branch and git branch -d for deleting the obsolete target branch.

Usage

#+BEGIN_SRC sh
git merge <branch>
#+END_SRC
Merge the specified branch into the current branch. Git will determine the merge algorithm automatically (discussed below).

#+BEGIN_SRC sh
git merge --no-ff <branch>
#+END_SRC
Merge the specified branch into the current branch, but always generate a merge commit (even if it was a fast-forward merge). This is useful for documenting all merges that occur in your repository.


A 'fast-forward' merge can occur when there is a linear path from the current branch tip to the target branch. Instead of “actually” merging the branches, all Git has to do to integrate the histories is move (i.e., “fast forward”) the current branch tip up to the target branch tip. This effectively combines the histories, since all of the commits reachable from the target branch are now available through the current one. For example, a fast forward merge of some-feature into master would look something like the following:

****** Resolving Conflicts

If the two branches youre trying to merge both changed the same part of the same file, Git won't be able to figure out which version to use. When such a situation occurs, it stops right before the merge commit so that you can resolve the conflicts manually.

The great part of Git's merging process is that it uses the familiar edit/stage/commit workflow to resolve merge conflicts. 

When you encounter a merge conflict, running the 'git status' command shows you which files need to be resolved. For example, if both branches modified the same section of hello.py, you would see something like the following:

# On branch master
# Unmerged paths:
# (use "git add/rm ..." as appropriate to mark resolution)
#
# both modified: hello.py
#

Then, you can go in and fix up the merge to your liking. When youre ready to finish the merge, all you have to do is run:

#+BEGIN_SRC sh
git add
#+END_SRC

on the conflicted file(s) to tell Git they're resolved. Then, you run a normal git commit to generate the merge commit. It’s the exact same process as committing an ordinary snapshot, which means it’s easy for normal developers to manage their own merges.

Fast-Forward Merge

#+BEGIN_SRC sh
# Start a new feature
git checkout -b new-feature master

# Edit some files
git add <file>
git commit -m "Start a feature"

# Edit some files
git add <file>
git commit -m "Finish a feature"

# Merge in the new-feature branch
git checkout master
git merge new-feature
git branch -d new-feature
#+END_SRC
     
****** How to Solve a Merge Conflict
When faced with a merge conflict, the first step is to understand what happened. E.g.: Did one of your colleagues edit the same file on the same lines as you/Did he delete a file that you modified/Did you both add a file with the same name?

Git will tell you that you have "unmerged paths" (which is just another way of telling you that you have one or more conflicts) via "git status":

#+BEGIN_SRC sh
$ git status
# On branch contact-form
# You have unmerged paths.
#   (fix conflicts and run "git commit")
#
# Unmerged paths:
#   (use "git add <file>..." to mark resolution)
#
#       both modified:   contact.html
#
no changes added to commit (use "git add" and/or "git commit -a")
#+END_SRC

Let's take an in-depth look on how to solve the most common case, when two changes affected the same file on the same lines.
Now is the time to have a look at the contents of the conflicted file.
Git was nice enough to mark the problematic area in the file by enclosing it in "<<<<<<< HEAD" and ">>>>>>> [other/branch/name]".


#+DOWNLOADED: file:///home/zeltak/ZH_tmp/conflict-markers.png @ 2014-05-14 10:15:14
#+attr_html: :width 300px

[[/home/zeltak/org/attach/images_2014/conflict-markers_2014-05-14_10:15:14.png]]


The contents after the first marker originate from your current working branch. After the angle brackets, Git tells us where (from which branch) the changes came from. A line with "=======" separates the two conflicting changes.

Our job is now to clean up these lines: when we are done, the file should look exactly as we want it to look. It can be necessary to consult the teammate who wrote the conflicting changes to decide which code is finally correct. Maybe its yours, maybe it's his - or maybe a mixture between the two.

Opening the raw file in your editor and cleaning it up there is perfectly valid, but not very comfortable. Using a dedicated merge tool can make this job a great deal easier.

You can configure your tool of choice using the "git config" command. Consult your tool's documentation for detailed instructions.
Then, in case of a conflict, you can later invoke it by simply typing `git mergetool`.

#+DOWNLOADED: file:///home/zeltak/ZH_tmp/merge-conflict-in-gui.jpg @ 2014-05-14 10:21:04
#+attr_html: :width 300px
 [[/home/zeltak/org/attach/images_2014/merge-conflict-in-gui_2014-05-14_10:21:04.jpg]]

The left and right panes stand for the conflicting changes; a far more elegant visualization than "<<<<<<<" and ">>>>>>>". 
You can now simply toggle which change shall be taken. The middle pane shows the resulting code; in good tools, you can even edit this further.

Now, after cleaning up the file with the final code, all that is left is to save it.

To give Git a hint that youre done with this file, you should quit the merge tool to continue. Behind the scenes, this told Git to execute a "git add" command on the (now formerly) conflicted file. This marks the conflict as solved. Should you decide not to use a merge tool and instead clean up the file in your editor, you'll have to mark the file as resolved by hand (by executing "git add <filename>").

Finally, after solving all conflicts, a merge conflict situation needs to be concluded by a regular commit.

****** How to Undo a Merge

You should always keep in mind that you can return to the state before you started the merge at any time. This should give you the confidence that you can't break anything. On the command line, a simple "git merge --abort" will do this for you.

In case you've made a mistake while resolving a conflict and realize this only after completing the merge, you can still easily undo it: just roll back to the commit before the merge happened with "git reset --hard " and start over again.
***** git submodules
****** remove a submodel completely
To remove a submodule you need to:

#+BEGIN_EXAMPLE
Delete the relevant section from the .gitmodules file.
Stage the .gitmodules changes git add .gitmodules
Delete the relevant section from .git/config.
Run git rm --cached path_to_submodule (no trailing slash).
Run rm -rf .git/modules/path_to_submodule
Commit git commit -m "Removed submodule <name>"
Delete the now untracked submodule files
rm -rf path_to_submodule
#+END_EXAMPLE
       
**** github
***** inital setup
1.Set Up SSH Keys

We use SSH keys to establish a secure connection between your computer and GitHub. Setting them up is fairly easy, but does involve a number of steps. To make sure you generate a brand new key, you need to check if one already exists. First, we need to check for existing ssh keys on your computer:

cd ~/.ssh
!(create .ssh if not existing)!

Generate a new SSH key
To generate a new SSH key, enter the code below. We want the default settings so when asked to enter a file in which to save the key, just press enter.
 
#+BEGIN_SRC sh
ssh-keygen -t rsa -C "your email@youremail.com"
-------------------------------------------------------------------------------------------------------

 Generating public/private rsa key pair.
 Enter file in which to save the key
(/Users/your user directory/.ssh/id rsa):
 Now you need to enter a passphrase.
 Why do passphrases matter?
 Enter passphrase (empty for no passphrase):
 Enter same passphrase again:
 Which should give you something like this:
 Your identification has been saved in
/Users/your user directory/.ssh/id rsa.
 Your public key has been saved in
/Users/your user directory/.ssh/id rsa.pub.
 The key fingerprint is:
 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db
user name@username.com
 The key's randomart image is:
 +--[ RSA 2048]----+
 | .+ + |
 | = o O . |
 | =   |
 | o = + |
 | o S . |
 | o o = |
 | o . E |
 | |
 | |
 +-----------------+

#+END_SRC


2.Add your SSH key to GitHub

On the GitHub site Click 

Account Settings > Click "SSH Public Keys" > Click Add another public key

on linux use xclip to copy clip

#+BEGIN_SRC sh
xclip -sel clip < ~/.ssh/id_rsa.pub
#+END_SRC

if not on linux do it manualy:Open the id rsa.pub file with a text editor itt's important you copy your SSH key exactly as it is written without adding any newlines or whitespace.


Now paste it into the "Key" field. Hit "Add Key."


$Test everything out$

To make sure everything is working you'll now SSH to GitHub. Don't change the "git@github.com" part. That's supposed to be there.

@WARNING:if your using an alternate sshkey make sure to use the -i option to point the ssh to the right PATH@
for more info on the ssh -i option look [[login%20with%20different%20private%20key%20(not%20id%20rsa)][login with different private key (not id rsa)]]


#+BEGIN_SRC sh
# Attempts to ssh to github
ssh -T git@github.com

The authenticity of host 'github.com (207.97.227.239)' can't be
established.
RSA key fingerprint is
16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?

#+END_SRC

Don't worry, this is supposed to happen. Type "yes". Some tools connect to GitHub without SSH. To use these tools properly you need to 

find and configure your API Token.
On the GitHub site Click Account Settings > Click Account > Admin

copy your API token

At the command line run the following code, using your GitHub username and token in place of the ones shown.

#+BEGIN_SRC sh
git config --global github.user USERNAME
git config --global github.token
#+END_SRC

$NOTE:If you ever change your GitHub password, a new token will be created and will need to be updated$

***** Add a new Repo in github
on the github GUI page press the new button in the repo page

then on the Client (the local repo on your PC/laptop), issue this:

#+NAME: 
#+BEGIN_SRC sh
#in the directory you want to use git in
git init
#add the current files
git add -A
#commit first time
git commit -m "first commit"
#configure the name of current repo and the corresponding remote git repo, that is:
#git remote add REPONAME https://github.com/zeltak/GITREPONAME.git
git remote add origin git@github.com:zeltak/rcgit.git
#initial push (In Example transfer the new files to the REMOTE Repo
git push -u origin master

#+END_SRC

!$Note$, to push an existing repo!
#+BEGIN_SRC emacs-lisp :results none
#Push an existing repository from the command line
git remote add REPONAME origin https://github.com/zeltak/GITREPONAME.git
git push -u origin master

#+END_SRC

***** delete a repo github
Go to the repo's admin page
click "Delete this repository"
Read the warnings and follow the prompts
***** upadte repo and push to GitHub
this works as the usuall workflow, add, commit, push:

#+BEGIN_SRC sh
git add -A #adds all files changed in the git directoy
git commit -m "MESSAGE"
git push origin    #pushes to origin (defined when you setup the git repo>IE the specific github repo for this local got dir
#+END_SRC

**** !Issues!
***** address conflicts using a merge tool
to fix this you should use the git merge tool. also its recommended to spcify a diff tool with the -t option so you would run it like this:

#+BEGIN_SRC sh
git mergetool -t meld    
#+END_SRC

this will open the diff tool with 3 panes

| base | local | remote |


in 'meld' the middle pane is the combined final file. the right pane is the file you are trying to 'pull' from the remote server (₆In example₆ github) while the left pane is the current state of local file.

%Tip- in the meld app you will see on the right red marks that show where the conflicts are. make sure to go one by one and resolve the conflicts until its blue% 

you can copy/merger parts or all of the remote file (right pane), or the same for the left etc until you have the changes you want (in meld you can click on the arrows). meld has "merge from right" "merge from left" options.
when you are finish save and quit

then for a specific file (the local file we worked in in the middle pane in meld (₆In example₆ "FILE):
#+BEGIN_SRC sh
git add FILE.org
git commit -m "MESSAGE"
git push
 #+END_SRC

***** address deleted files
you may also get deleted files on remote issues like this:

#+DOWNLOADED: /tmp/screenshot.png @ 2014-02-16 15:08:23
#+attr_html: :width 800px

 [[~/org/attach/images_2013//screenshot_2014-02-16_15:08:23.png]]

choose which files you want to keep and which versions (remote or local etc)

***** stash 
you may need at some stage to stash:
@read about it before executing@                                                                 

#+BEGIN_SRC sh
git stash                                                                  
git pull                                                                   
stash apply   
#+END_SRC

you may get a merge commit which is normal          
use git diff to see the changes of the stuff you are going to commit

***** remote: error: GH001: Large files detected.
use the following:
cd into the git dir
then issue the following command

#+BEGIN_SRC sh
git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch LAPTOP/.mpd/log'
#+END_SRC

where-the LAPTOP/.mpd/log part is from the git error message telling you which file is to big and casuing issues

then add, commit ,push and pull to fix the repo

***** 'Force overwrite of local file with whats it origin repo'
If you want to overwrite only one file:

#+BEGIN_SRC sh
git fetch
git checkout origin/master <filepath>
#+END_SRC

If you want to overwrite all changed files:

@this will overwrite ALL the repo@
#+BEGIN_SRC sh
git fetch
git reset --hard origin/master
#+END_SRC
@this will overwrite ALL the repo@

***** Resolving a merge conflict from the command line

This is the most common type of conflict. It happens when two branches have changed the same part of the same file, and then those branches are merged together. For example, if you make a change on a particular line in a file, and your colleague working in a repository makes a change on the exact same line, a merge conflict occurs. Git has trouble understanding which change should be used, so it asks you to help out.

When this sort of conflict occurs, Git writes a special block into the file that contains the contents of both versions where the conflict occurred. To complete this type of merge, use your text editor to resolve the conflict, then add the file and commit it to complete the merge.

For this example, suppose youre working in branch-a, and have made some changes to a file called planets.md. Meanwhile, your friend on the other side of the world has made a different change to the same line. If you try to merge your friend's branch into yours, there will be a merge conflict. Running

#+begin_src shell
git status
#+end_src

tells you about the conflict:

#+BEGIN_SRC sh
git status
# # On branch branch-b
# # You have unmerged paths.
# #   (fix conflicts and run "git commit")
# #
# # Unmerged paths:
# #   (use "git add ..." to mark resolution)
# #
# # both modified:      planets.md
# #
# no changes added to commit (use "git add" and/or "git commit -a")

#+END_SRC

Both of you have modified planets.md. When you open the file in your text editor, you'll see both changes:

#+BEGIN_SRC sh
vim planets.md
#+END_SRC

#+BEGIN_EXAMPLE
the number of planets are
<<<<<<< HEAD
nine
=======
eight
>>>>>>> branch-a
#+END_EXAMPLE

In 'branch-a', you wrote the word "nine," but your friend wrote "eight." Git automatically adds conflict markers to the affected areas. A conflict-marked area begins with <<<<<<< and ends with >>>>>>>. These are also known as the conflict markers. The two conflicting blocks themselves are divided by a =======.

You have several options here. You can either keep your changes, take your friend's changes, or make a brand new change. Whatever you do, you need to make sure to resolve the conflict such that the file makes sense, and everyone is happy.

In this case, youll put in a whole new version of the line that reflects what happened. The goal is to get the file to look exactly how you want it. You'll delete the conflict markers, and just type out a new change:

#+BEGIN_EXAMPLE
the number of planets are
nine, or eight, depending on who you ask.
#+END_EXAMPLE

That's it! You can now
git add this file
commit the change with a new commit message, and be on your way.

***** Resolving a removed file conflict
Removed file conflicts occur when one person edits a file, and another person deletes that file in their branch. Git does not know if you want to keep the file with the new edits, or delete the file and forget about those edits. This example will show how to resolve this both ways.
****** Keeping the edited file

First, you'll resolve the conflict by keeping the new changes. Suppose that you added a line to your README.md in branch-b, but someone else has deleted the file entirely in branch-c. Git declares the following conflict:

#+BEGIN_SRC sh
# CONFLICT (modify/delete): README.md deleted in HEAD and modified in branch-b. Version branch-b of README.md left in tree.
# Automatic merge failed; fix conflicts and then commit the result.

git status

# # On branch branch-c
# # You have unmerged paths.
# #   (fix conflicts and run "git commit")
# #
# # Unmerged paths:
# #   (use "git add/rm ..." as appropriate to mark resolution)
# #
# # deleted by us:      README.md
# #
# no changes added to commit (use "git add" and/or "git commit -a")

#+END_SRC

You can resolve this by adding the file back, and committing it once more:

#+BEGIN_SRC sh
git add README.md

git commit
# [branch-c 9bc3b01] Merge branch 'branch-b' into branch-c

git show | head
# commit 9bc3b0130fe0178359d51243b5b882076a12f554
# Merge: 4c80a63 7e8b679
# Author: tekkub :bear:  
# Date:   Sat Jun 1 18:39:40 2013 -0700

#     Merge branch 'branch-b' into branch-c
>
#     Conflicts:
#         README.md
#+END_SRC

****** Resolving by removing the file
Now, you'll resolve that conflict the opposite way: by leaving the file deleted. Again, with a merge conflict, Git declares:

#+BEGIN_SRC sh
# CONFLICT (modify/delete): README.md deleted in HEAD and modified in branch-c. Version branch-c of README.md left in tree.
# Automatic merge failed; fix conflicts and then commit the result.

git status
# # On branch branch-d
# # You have unmerged paths.
# #   (fix conflicts and run "git commit")
# #
# # Unmerged paths:
# #   (use "git add/rm ..." as appropriate to mark resolution)
# #
# #   deleted by us:      README.md
# #
# no changes added to commit (use "git add" and/or "git commit -a")
#+END_SRC

Now, you want to remove the file, so do that with the git rm command:

#+BEGIN_SRC sh
git rm README.md
# README.md: needs merge
# rm 'README.md'
#+END_SRC

Looks good, so commit it with the default message:

#+BEGIN_SRC sh
git commit
# [branch-d 6f89e49] Merge branch 'branch-c' into branch-d

git show | head
# commit 6f89e49189ba3a2b7440fc434f351cb041b3999e
# Merge: 211261b fcc1093
# Author: tekkub :bear:  
# Date:   Sat Jun 1 18:43:01 2013 -0700

#     Merge branch 'branch-c' into branch-d
>
#     Conflicts:
#         README.md

#+END_SRC

***** revert to old version of specific file

So let's start with finding the right commit. You can see the commits which have made modifications to given file(s) very easily:

#+BEGIN_SRC sh
git log path/to/file
#+END_SRC

If your commit messages aren't good enough, and you need to see what was done to the file in each commit, use the -p/--patch option:

#+BEGIN_SRC sh
git log -p path/to/file
#+END_SRC

Either way, you'll be able to find the SHA1 (hash) of the commit with the version of the file you want. Now, all you have to do is this:

#+BEGIN_SRC sh
# get the version of the file from the given commit
git checkout <commit> path/to/file
# and commit this modification
git commit
#+END_SRC

(The checkout command first reads the file into the index, then copies it into the work tree, so there's no need to use git add to add it to the index in preparation for committing.)

**** Manage dotfiles with git
***** Initial Setup
create a dotfile folder and initiate a git dir
#+begin_src sh
mkdir dotfiles
cd dotfiles
git init
#+end_src

then move over files/folders you want to track with git. after moving each file symlink them back to the original location
%Tip-best way i found to do this is with a FM, ₆In example₆ move and symlink back using gui FM like worker,DC etc%

@update- i now use [[stow][stow]] to do this@

on your remote repo (₆In Example₆ github) start a new repository, add and commit current files in git repo and add that repo to the current git repo 

#+begin_src sh
git add -A
git commit -m "first commit"
git remote add origin git@github.com:zeltak/dotfiles.git
git push -u origin master
#+end_src
after this works, keep adding/symlinking all other relevant files/folder needed and pushing changes

@These folders should be backed up seperatly@
#+BEGIN_EXAMPLE
.ssh
.mozzila
.kde4
#+END_EXAMPLE

***** Cloning onto another machine
Having done this, when you’re working with a new machine onto which you’d like to clone your configuration, you clone the repository from GitHub, and replace the existing versions of those files in your new machine home directory with symbolic links into your repository

#+BEGIN_SRC sh
git clone git@github.com:zeltak/dotfiles.git dotfiles
#+END_SRC

Finally, if you come back to use this machine later after you’ve tweaked these configuration files a bit and pushed them to GitHub, you can update them by just running a pull:

#+BEGIN_SRC sh
git pull
#+END_SRC

*** netcfg

**** install under arch

[[http://www.archlinux.org/packages/?q=netcfg][netcfg]]package
is available incore:
 # pacman -S netcfg
 As of version 2.5.x, optional dependencies
include[[http://www.archlinux.org/packages/?q=wpa_actiond][wpa actiond]]--
required for automatic/roaming wireless connection --
and[[http://www.archlinux.org/packages/?q=ifplugd][ifpl]][[http://www.archlinux.org/packages/?q=ifplugd][u]][[http://www.archlinux.org/packages/?q=ifplugd][gd]]--
required for automatic ethernet configuration.
([[http://www.archlinux.org/news/487/][More information]].)
 # pacman -S wpa actiond ifplugd
 2. Configuration
 Network profiles are stored in the /etc/network.d/ directory.
 To minimize the potential for errors, copy an example configuration
from
 /etc/network.d/examples/
 to
 /etc/network.d/mynetwork (mynetwrokis a text file not a dir!!)
 The file name is the name of the network profile ("mynetwork" is used
as an example throughout this article).
 The name is not a network setting and does not need to match the
wireless network name (SSID).
 Depending on the connection type and security, use one of the
following examples from/etc/network.d/examples/ as a base. Be wary of
examples found on the Internet as they often contain deprecated options
that may cause problems.
 [[~/Dropbox/Org/Tech/linux_files/Image_fAy1t-tDlaanYbeK69gfjg_0001.png]]
 for example:
 sudo cp /etc/network.d/examples/ethernet-dhcp /etc/network.d/ulan
 Next, modify the new configuration file:
 nano /etc/network.d/mynetwork
 SetINTERFACEto the correct wireless or ethernet interface (Thiscan
be checked withifconfigandiwconfig)
 Ensure theESSIDandKEY(passphras

e

-  ) are set correctly for wireless connections. Typos in these fields
   are common errors.
    Note that WEPstring

ke

y

s(nothexkeys) must be specified with a
leadings:(e.g.KEY="s:somepasskey"). Netcfg configurations are valid
Bash scrip ts. Any configuration//involvi ng /spe/cial characters such
as $ or \ needs to be quoted correctly otherwise it will be interpreted
by Bash. To avoid interpretation, use single quotes or backslash escape
characters where appropriate.
 IMPORTANT:Network information (e.g. wireless passkey) will be stored
in plain text format, so users may want to change the permissions on the
newlycreated profile:
 chmod 0600 /etc/network.d/mynetwork
 to make it readable by root only)
 2.edit /etc/rc.conf
 the next step is to to edit /etc/rc.conf :
 make sure that under the networking section only the following is
uncommented:
 
 INTERFACES=(eth0 wlan0)
 
 WIRELESS INTERFACE=wlan0
 
 WIRED INTERFACE=eth0
 This will bring up the different interfaces during bootup

**** Connect with netcfg

Usage

 To connect a profile:
 # netcfg mynetwork
 To disconnect a profile:
 # netcfg down mynetwork
 


**** Connecting automatically

Connecting automatically
 Several methods are available to users wanting to automatically connect
network profiles (e.g. during boot or whilst roaming)
 If you mount NFS shares during boot, ensure thenetfsdaemon remains
listed, though (otherwise the network will be dropped before unmounting
shares during shutdown).
 net-profiles
 Tip: Access the menu at any time by runningnetcfg-menuin a
terminal.net-auto-wireless
 net-profiles(deamon) allows users to connect profiles during boot.
 To enable this feature, users must addnet-profilesto
theDAEMONSarray in[[/index.php/Rc.conf][rc.conf]]and specify
profiles to try in theNETWORKSarray:
 NETWORKS=(mynetwork yournetwork)
 DAEMONS=(... net-profiles ...)
 Alternatively,net-profilescan be configured to display a menu --
allowing users to choose a desired profile -- by setting the contents of
theNETWORKSarray tomenu:
 NETWORKS=(menu)
 DAEMONS=(... net-profiles ...)
 Additionally,
the[[http://www.archlinux.org/packages/?q=dialog][dialog]]package is
required.
 net-auto-wireless
 net-auto-wirelessallows users to automatically connect to wireless
networks with proper roaming support.
 To enable this feature, users must addnet-auto-wirelessto
theDAEMONSarray in[[/index.php/Rc.conf][rc.conf]]and specify the
desired wireless interface with theWIRELESS INTERFACEvariable:
 WIRELESS INTERFACE="wlan0"
 DAEMONS=(... net-auto-wireless ...)
 Additionally,
the[[http://www.archlinux.org/packages/?q=wpa_actiond][wpa actiond]]package
is required. Note that wpa-config profiles does not work with
net-auto-wireless. Convert them to wpa-configsection instead.
 net-auto-wired
 net-auto-wiredallows users to automatically connect to wired networks.
 To enable this feature, users must install ifplugd
 # pacman -S ifplugd
 and addnet-auto-wiredto theDAEMONSarray
in[[/index.php/Rc.conf][rc.conf]]and specify the desired wired
interface with theWIRED INTERFACEvariable:
 WIRED INTERFACE="eth0"
 DAEMONS=(... net-auto-wired ...)
 The daemon starts an ifplugd process which
runs/etc/ifplugd/netcfg.actionwhen the status of the wired interface
changes (e.g. a cable is plugged in or unplugged). On plugging in a
cable, attempts are made to start any profiles with CONNECTION =
"ethernet" or "ethernet-iproute" and INTERFACE = WIRED INTERFACE until
one of them succeeds.
 Note: DHCP profiles are tried before static ones, which could lead to
undesired results in some cases.
 Note2: The net-auto-wired daemon cannot start multiple ifplugd
processes for multiple interfaces (unlike ifplugd's own
/etc/rc.d/ifplugd which can).

**** tools

wifi-select

 There is a console tool for selecting wireless networks in "real-time"
(in NetworkManager manner) calledwifi-select. The tool is convenient
for use in Internet cafs or other places you are visiting for the first
(and maybe the last) time. With this tool, you do not need to create a
profile for a new network, just typesudo wifi-select wlan0and choose
the network you need.
 The tool is currently packaged and available in [community] repository.
To install:
 # pacman -S wifi-select
 wifi-select does the following:
 parses iwlist scan results and presents list of networks along with its
security settings (WPA/WEP none) using dialog
 if user selects network with existing profile -- just use this profile
to connect with netcfg
 if user selects a new network (for example, WiFi hotspot), wifi-select
automatically generates new profile with corresponding $SECURITY and
asks for the key (if needed). It uses DHCP as $IP by default
 then, if connection succeeds, profile is saved for later usage
 if connection fails, user is asked if he/she wants to keep generated
profile for further usage (for example to change $IP to static or adjust
some additional options)
 
 dnetcfg

 a dmenu hack to change netcfg profiles on the quick
 i

[[http://aur.archlinux.org/packages.php?ID=35416][http://aur.archlinux.org/packages.php?ID=35416]])
 then change the sudo permissions in visudo, place the following lines:
 Cmnd Alias NETMGR = /usr/bin/netcfg
 network ALL=NOPASSWD: NETMGR
 then run as command dnetcfg or use the dmenu script to your own needs

*** nmap
**** find out all IPs connected currently to local LAN			:Fav:

to find out all IPs connected currently to local LAN issue:

#+BEGIN_SRC sh
nmap -e eth0 -sP 192.168.0.1/24
#+END_SRC

NOTE: the /24 is for 256 addresses dont change that

**** find open ports

to find all open ports inside LAN use:
 nmap 192.168.0.1/24
 you can of course just use it for on IP
 nmap 192.168.0.1

**** multiple host scan

Multiple Hosts
 You can scan more than one host at a time using nmap. If you're using
IP addresses, you can specify a range like 10.0.0.1-6 or a range like
10.0.0.0/24. The 10.0.0.1-6 would scan hosts 10.0.0.1, 10.0.0.2,
10.0.0.3 through 10.0.0.6. Using the /24 notation would scan the whole
range of hosts from 10.0.0.0 to 10.0.0.255. For example, to scan
10.0.0.1 through 10.0.0.42 to learn what OS they might be running I'd
use nmap -O 10.0.0.1-42.
 If you have hostnames instead of IP addresses, you can separate them
with a space on the command line, like so:
 nmap -O host1.target.com host2.target.com

*** network manager

**** cnetwork manager (CLI interface)

first install cnetworkmanager
 then to connect to wifii: (use the man if problems occur)
 cnetworkmanager --connect=NETWORKSSID --wpa-pass=PASSHERE


**** nmcli (alternative cli interface)

one can try using nmcli as an alternative interface to cnetworkmanaer

**** config network without need for root

Add yourself to the network group (if not already done before)

 sudo gpasswd -a zeltak network

 and create the following file:
 /etc/polkit-1/rules.d/50-org.freedesktop.NetworkManager.rules

---------------------------------------------------------------------------------------------------------------------
 polkit.addRule(function(action, subject) {
 if (action.id.indexOf("org.freedesktop.NetworkManager.") == 0 &&
subject.isInGroup("network")) {
 return polkit.Result.YES;
 }
 });
 All users in the network group will be able to add and remove networks
without a password. This will not work under systemd if you do not have
an active session with systemd-logind.

*** nfs
**** setup a nfs server

Setup a nfs Server

Install NFS Serverer

sudo pacman -S nfs-common portmap

Note (This is normally irelevant):-------> When configuring portmap do
=not= bind loopback. If you do you can either edit /etc/default/portmap
using the following
 sudo vi /etc/default/portmap
 or use the following command
 sudo dpkg-reconfigure portmap
 Restart Portmap using the following command
 sudo /etc/init.d/portmap restart

Create exports
 NFS exports from a server are controlled by the file /etc/exports
 Each line begins with the absolute path of a directory to be exported,
followed by a space-seperated list of allowed clients.
 A client specification may be followed by a set of options, in
parenthesis----->(rw,sync,no subtree check) . It is important not to
leave any space between the last client specification character and the
opening parenthesis, since spaces are intrepreted as client seperators.
 You need to edit the exports file using the following command:

 sudo nano /etc/exports

 For Full Read Write Permissions allowing any computer from 192.168.1.1
through 192.168.1.255
 /PATH/TO/FOLDER/ 192.168.0.0/255.255.255.0 (rw,sync,no subtree check)
 Or for Read Only from a single machine
 /PATH/TO/FOLDER/ 192.168.1.2 (ro,async)
 Example zeltak:

 /home/zeltak/ 192.168.0.0/255.255.255.0(rw,sync,no subtree check)
 Here are some quick examples of what you could add to your
/etc/exports:
 shares /home and /usr/local to all clients in the myclients netgroup
 /home @myclients(rw,sync,no subtree check)
 /usr/local @myclients(rw,sync,no subtree check)
 shares /home and /usr/local to two clients with fixed ip addresses.
Best used only with machines that have static ip addresses.
 /home 192.168.0.10(rw,sync,no subtree check)
192.168.0.11(rw,sync,no subtree check)
 /usr/local 192.168.0.0/255.255.255.0(rw,sync,no subtree check)
 shares /home and /usr/local to all clients in the private network
falling within the designated ip address range.
 
 /home 192.168.0.0/255.255.255.0(rw,sync,no subtree check)
 /usr/local 192.168.0.0/255.255.255.0(rw,sync,no subtree check)

**** start stop the service (systemd)

Starting the server
 The services for the NFS server are
 rpc-idmapd.service and rpc-mountd.service
 Start them and configure them to start at boot.
 IE:

 sudo systemctl start rpc-mountd.service

 and

 sudo systemctl enable rpc-mountd.service

**** mounting nfs shares

Mounting Nfs Shares

 After sucessfly installing a nfs server you need to mount the shares.
 for a one time mount this is the basic template you will use is:
 sudo mount ServerIP:/folder/already/setup/to/be/shared
/home/username/folder/in/your/local/computer
 zeltaks example
 sudo mount 192.168.0.2:/home/zeltak/ /media/tmphd/
 For a Permenant mount:
 You need to set the nfs mount in /etc/fstab
 Prior to setting up the mounts, make sure the directories that will act
as mountpoints are already created (sudo mkdir)
 In /etc/fstab, add lines for shares such as:
 servername:/PATH/TO/DIR /mntpoint nfs rw,hard,intr 0 0
 zeltaks example
 eddie:/mnt/media /media/media nfs defaults 0 0
 The rw mounts it read/write. Obviously, if the server is sharing it
read only, the client won't be able to mount it as anything more than
that. The hard mounts the share such that if the server becomes
unavailable, the program will wait until it is available. The
alternative is soft. intr allows you to interrupt/kill the process.
Otherwise, it will ignore you. Documentation for these can be found in
the Mount options for nfs section of man mount.

**** NFS on debian
First, the packages to begin with:

#+BEGIN_SRC sh
$ aptitude install nfs-kernel-server portmap
#+END_SRC

Note that portmap defaults to only listening for NFS connection attempts on 127.0.0.1 (localhost), so if you wish to allow connections on your local network, then you need to edit /etc/default/portmap, to comment out the "OPTIONS" line. Also, we need to ensure that the /etc/hosts.allow file allows connections to the portmap port. For example:

#+BEGIN_SRC sh
$ perl -pi -e 's/^OPTIONS/#OPTIONS/' /etc/default/portmap
$ echo "portmap: 192.168.1." >> /etc/hosts.allow
$ /etc/init.d/portmap restart
#+END_SRC

See 'man hosts.allow' for examples on the syntax. But in general, specifying only part of the IP address like this (leaving the trailing period) treats the specified IP address fragment as a wildcard, allowing all IP addresses in the range 192.168.1.0 to 192.168.1.255 (in this example.) You can do more "wildcarding" using DNS names, and so on too.

Then, edit the /etc/exports file, which lists the server's filesystems to export over NFS to client machines. The following example shows the addition of a line which adds the path "/example", for access by any machine on the local network (here 192.168.1.).

 $ echo "/example 192.168.1.0/255.255.255.0(rw,no_root_squash,subtree_check)" >> /etc/exports
 $ /etc/init.d/nfs-kernel-server reload

This tells the server to serve up that path, readable/writable, with root-user-id connecting clients to use root access instead of being mapped to 'nobody', and to use the 'subtree_check' to silence a warning message. Then, reloads the server.

From the client side (for example, I used a PLD "rescue" disk to boot up a Windows machine for some diagnostics, and used its built-in NFS client support to mount a path from my other computer), you need to ensure that portmap is running, and that the NFS client support is built into the kernel or the proper module ("nfs.ko") is loaded, and then mount the server's path like so:

 $ mount 192.168.1.100:/example /mnt/example 
**** nfs tips

Firewall setting for NFS
 If you have a firewall you need to make sure ports 32771, 111 and 2049
are open
 Using Webmin to manage NFS
 nfs shares as well as managing nfs can be done using webmin (use NFS
Exports module).
 I recommend setting it up manually and then tweaking with webim after
the server is up and runing

*** samba
**** Create a user in samba

Configuration

The /etc/samba/smb.conf file must be created before starting the
daemons. As root, copy the default Samba configuration file to/etc/samba/smb.conf

cp /etc/samba/smb.conf.default /etc/samba/smb.conf

Open smb.confand edit it to suit your needs. The default file creates
a share for each user's home directory. It also creates a share for
printers. More information about the options available can be found in
man smb.conf
Note: its best to install webmin and configure samba shares/users from
there (see next note)


Adding users

To log into a Samba share you will need to add a samba user.For Samba
versions 3.4.0 and above:

pdbedit -a -u <user>

The user must already have a account on the server. If the user does not exist you will receive the error:

Failed to modify password entry for user "<user>" You can add a new user to the Linux host with the [[#xOsQV5Gfan4OgTs3KBarag][adduser]] command

**** start with systemd

systemctl enable smbd.service

**** Add Shares

 Read only users/groups: people you want to allow to just view files
 Read/write users/groups: full access
 invalid users/groups: people you want to deny access

***** Add shares in Webmin

Samba and Webmin

 much of the administration for post samba install can be done through
webmin
 I suggest installing manually first and managing with webmin
 to create a new share:
 [[~/Dropbox/Org/Tech/linux_files/snapshot4.png]]
 then define the path and name of the share
 [[~/Dropbox/Org/Tech/linux_files/permissnapshot6.png]]
 then [[#69YFswdyD9e2mAUtxMvLHw][set the permissions of the share]]

***** set share permissions in webmin

after defining the shares you need to set the permissions of the share
(click the share itself to get to to the permissions area):
 [[~/Dropbox/Org/Tech/linux_files/Image_69YFswdyD9e2mAUtxMvLHw_0001.png]]
 then fill in the relevant fields
 [[~/Dropbox/Org/Tech/linux_files/Image_69YFswdyD9e2mAUtxMvLHw_0002.png]]
 make sure that you restart the samba server in order to things to take
effect
 then Other Share Option

**** Accessing shares
***** Accessing a Samba share from the shell

***** Automatic share mounting

smbnetfs
 1. Install smbnetfs:

# pacman -S smbnetfs

 2. Add the following line to /etc/fuse.conf:
 user allow other
 3. Load the fuse kernel module:

# modprobe fuse

 4. Start the smbnetfs daemon:

# /etc/rc.d/smbnetfs start

 If the required configuration is properly researched and done, it is
claimed that all shares in the network are now automatically mounted
under /mnt/smbnet.
 Add the following to /etc/rc.conf to access the shares at boot:
 MODULES=(... fuse ...)
 DAEMONS=(... smbnetfs ...)
 If a username and a password are required to access some of the shared
folders, you have to edit /etc/smbnetfs/.smb/smbnetfs.conf by
uncommenting the line starting with "auth" and editing it to your needs:
 auth"hostname" "username" "password"
 Then, it may be necessary to change the permissions of
/etc/smbnetfs/.smb/smbnetfs.conf and all include files for smbnetfs to
work correctly:
 # chmod 600 /etc/smbnetfs/.smb/smbnetfs.conf

***** manuall mount shared mounts

Intercept date 3.7262
 AOD date 89.6610
 Temp F x date 0.003099
 Intercept date(reg id) 6.2512
 AOD date(reg id) 84.0657
 Variance zid 0.03111
 Residual 9.3770
 1.Create the mount point for the share:

# mkdir /mnt/MOUNTPOINT

 3. Mount the share using mount.cifs
 Keep in mind that not all options may be needed nor desirable, such as
password:

mount -t cifs //SERVER/SHARENAME MOUNTPOINT -o
user=USERNAME,password=PASSWORD,workgroup=WORKGROUP,ip=SERVERIP

NOTE: dont put the full PATH to the share just the share name

 SERVER
 The Windows system's name
 SHARENAME
 The shared directory
 MOUNTPOINT
 The local directory where the share will be mounted to
 -o [options]: Specifies options for mount.cifs
 user: Username used to mount the share
 password: The shared directory's password
 workgroup: Used to specify the workgroup
 ip; The IP address of the server -- if the system is unable to find the
Windows computer by name (DNS, WINS, hosts entry, etc.)
 Note: Abstain from using trailing directory (/) characters. Using
//SERVER/SHARENAME/ will not work.
 4. To unmount the share, use:

# umount /mnt/MOUNTPOINT

***** add share to fstab

Adding the share to fstab
 Add the following to /etc/fstab for easy mounting:
 //SERVER/SHARENAME /mnt/MOUNTPOINT cifs
noauto,noatime,username=USER,password=PASSWORD,workgroup=WORKGROUP,ip=SERVERIP
0 0
 The noauto option disables mounting it automatically at boot and
noatime increases performance by skipping inode access times.
 After adding the previous line, the syntax to mount files becomes
simpler:

# mount /mnt/MOUNTPOINT

 Another option, to keep your password out of sight, is to use the
'credentials' option:
 //SERVER/SHARENAME /path/to/SHAREMOUNT cifs
noauto,noatime,credentials=/path/to/smdcredentials 0 0
 The credentials file should contain the following text:
 username=USERNAME
 password=PASSWORD
 You may also want to chmod 700 this file so that only your user can
read and write to it.
 If adding a Samba share to fstab, the netfs daemon should also be added
to rc.conf, somewhere after the network

***** example of mount command

sudo mount -t cifs //192.168.0.1/tomb /media/tomb -o
user=zeltak,password=amonth,workgroup=WORKGROUP

 or using a credential file:

sudo mount -t cifs //192.168.0.1/tomb /media/tomb -o
workgroup=WORKGROUP,credentials=/home/zeltak/smbcred

***** Accessing a Samba share from GUI

KDE
 If you are using KDE, it has the ability to browse Samba shares. You
therefore do not need any additional packages. (However, for a GUI in
the KDE System Settings you have to install the kdenetwork-filesharing
package from [extra]. Another program choice is SMB4K.) If, however, you
plan to use the share in Gnome or solely from a shell, you will need an
additional package.
 Accessing a Samba share from Gnome/Xfce4
 Gnome
 In order to access samba shares through Nautilus, first install the
gvfs-smb and gnome-vfs packages:

# pacman -S gvfs-smb gnome-vfs

 For access under Xfce4 using thunar, one only needs gvfs-smb

# pacman -S gvfs-smb

 From a Nautilus/Thunar window, hit Ctrl+L or go to the "Go" menu and
select "Location..." -- both actions will allow for the typing in the
"Go to:" blank. Enter:
 smb://servername/share
 Note: If the servername is not in /etc/hosts, use the IP Address of the
server in place of the servername.
 Another Gnome browser program is Gnomba.
 If iptables is running, the nf conntrack netbios ns module should be
loaded:
 modprobe nf conntrack netbios ns
 Accessing shares from other graphical environments
 There are a number of useful programs, but they will need to have
packages created for them. This can be done with the Arch package build
system. The good thing about these others is that they do not require a
particular environment to be installed to support them, and so they
bring along less baggage.
 LinNeighborhood is non-specific when it comes to the DE or WM. It can
be seen as a simple and generic X-based LAN browser and share mounter.
Not pretty, but effective.
 Other possible programs include pyneighborhood and RUmba, as well as
the xffm-samba plugin for Xffm.

**** info

***** find share names and servers

1. Use smbclient to browse shares from the shell. To list any public
shares on a server:

$ smbclient -L <hostname> -U%

this will output this where you can see the share name and server name
 [[~/Dropbox/Org/Tech/linux_files/Image_JGaBRCKEHCgwbWNgXFRHSQ_0001.png]]

**** old

***** setting up a samba server

Setting up a samba server

 1. Prerequisites
 Your Linux box should have an static ip-address.
 In case you're getting your ip from a router/server via DHCP make sure
it's configured to provide a fixed dhcp-lease. If that's no valid option
you cannot use WINS ... more on this way down.
 You need to have samba installed.
 sudo apt-get install samba
 2. Getting samba configured
 First, let us make sure samba isn't running:
 sudo /etc/init.d/samba stop
 Since the installation of samba just installed a rather useless
template file we're going to rename it - we keep the file just in case.
 sudo mv /etc/samba/smb.conf /etc/samba/smb.conf.template
 Next we create a new empty file
 sudo touch /etc/samba/smb.conf
 And finally we need to open the file inside an editor
 sudo nano /etc/samba/smb.conf
 NOTE: If you're on KDE replace "nano" with "kate"
 Copy / Paste the contents of the Text below into your editor and read
on
 [global]
 ; General server settings
 netbios name = YOUR HOSTNAME
 server string =
 workgroup = YOUR WORKGROUP
 announce version = 5.0
 socket options = TCP NODELAY IPTOS LOWDELAY SO KEEPALIVE
SO RCVBUF=8192 SO SNDBUF=8192
 passdb backend = tdbsam
 security = user
 null passwords = true
 username map = /etc/samba/smbusers
 name resolve order = hosts wins bcast
 wins support = yes
 printing = CUPS
 printcap name = CUPS
 syslog = 1
 syslog only = yes
 ; NOTE: If you need access to the user home directories uncomment the
 ; lines below and adjust the settings to your hearts content.
 ;[homes]
 ;valid users = %S
 ;create mode = 0600
 ;directory mode = 0755
 ;browseable = no
 ;read only = no
 ;veto files = /.{}/./mail/bin/
 ; NOTE: Only needed if you run samba as a primary domain controller.
 ; Not needed as this config doesn't cover that matter.
 ;[netlogon]
 ;path = /var/lib/samba/netlogon
 ;admin users = Administrator
 ;valid users = %U
 ;read only = no
 ; NOTE: Again - only needed if you're running a primary domain
controller.
 ;[Profiles]
 ;path = /var/lib/samba/profiles
 ;valid users = %U
 ;create mode = 0600
 ;directory mode = 0700
 ;writeable = yes
 ;browseable = no
 ; NOTE: Inside this place you may build a printer driver repository for
 ; Windows - I'll cover this topic in another HOWTO.
 [print$]
 path = /var/lib/samba/printers
 browseable = yes
 guest ok = yes
 read only = yes
 write list = root
 create mask = 0664
 directory mask = 0775
 [printers]
 path = /tmp
 printable = yes
 guest ok = yes
 browseable = no
 ; Uncomment if you need to share your CD-/DVD-ROM Drive
 ;[DVD-ROM Drive]
 ;path = /media/cdrom
 ;browseable = yes
 ;read only = yes
 ;guest ok = yes
 [MyFiles]
 path = /media/samba/
 browseable = yes
 read only = no
 guest ok = no
 create mask = 0644
 directory mask = 0755
 force user = YOUR USERNAME
 force group = YOUR USERGROUP
 Ok, I already mentioned that there are a few simple things you may need
to tweak; so here they are:
 netbios name = YOUR HOSTNAME
 Replace "YOUR HOSTNAME" with your desired hostname (don't use
spaces!). Best practice would be to use the same name you configured
upon installation.
 Example:
 netbios name =ztpc
 workgroup = YOUR WORKGROUP
 Replace "YOUR WORKGROUP" with the name of your workgroup, but make
sure you're using the same as configured in Windows.
 To find out the Workgroup name in Windows follow these steps:
 - Click "START"
 - Click "Control Panel"
 - Click "System"
 - Click the 2nd Tab entitled "Computername" and find the name of the
Workgroup there.
 Example:
 workgroup = WORKGROUP
 wins support = yes
 If your box doesn't have a static ip-address, or you cannot configure
your router/server to provide you with a fixed dhcp-lease, change this
configuration parameter to "no".
 In this case you cannot use the benefits of WINS.
 Configuring the Shares
 [MyFiles]
 This is the name of the share. Leave it as it is or adjust it to
whatever you prefer. Don't use more than 31 characters and try to avoid
spaces!
 path = /media/samba/
 This suggests that you've mounted an hard drive or partition on
/media/samba where all the shared files will be stored.
 In case you don't have an extra hard drive/partition you may also
create folder.
 I assume you've been wise enough to put /home onto a separate partition
having an reasonable amount of storage space.
 force user = YOUR USERNAME
 force group = YOUR USERNAME
 Well, this should say it all. Replace "YOUR USERNAME" with the name
you use for login (no spaces!).
 Example:
 force user = zeltak
 force group = zeltak
 Now we completed the part of editing smb.conf
 Save the file and close gedit.
 Since we are going to share the folder with other users we should now
make sure that the permissions are set. Type:
 sudo chmod 0777 /media/samba
 Zeltak Example to above (short smb.conf version):
 Please note that in the above config file more changes were made with
webmin (see later remarks)
 [global]
 ; General server settings
 netbios name = eddie
 server string =
 workgroup = WORKGROUP
 announce version = 5.0
 socket options = TCP NODELAY IPTOS LOWDELAY SO KEEPALIVE
SO RCVBUF=8192 SO SNDBUF=8192
 passdb backend = tdbsam
 security = user
 null passwords = true
 username map = /etc/samba/smbusers
 name resolve order = hosts wins bcast
 wins support = yes
 printing = CUPS
 printcap name = CUPS
 syslog = 1
 syslog only = yes
 ; NOTE: If you need access to the user home directories uncomment the
 ; lines below and adjust the settings to your hearts content.
 ;[homes]
 ;valid users = %S
 ;create mode = 0600
 ;directory mode = 0755
 ;browseable = no
 ;read only = no
 ;veto files = /.{}/./mail/bin/
 ; NOTE: Only needed if you run samba as a primary domain controller.
 ; Not needed as this config doesn't cover that matter.
 ;[netlogon]
 ;path = /var/lib/samba/netlogon
 ;admin users = Administrator
 ;valid users = %U
 ;read only = no
 ; NOTE: Again - only needed if you're running a primary domain
controller.
 ;[Profiles]
 ;path = /var/lib/samba/profiles
 ;valid users = %U
 ;create mode = 0600
 ;directory mode = 0700
 ;writeable = yes
 ;browseable = no
 ; NOTE: Inside this place you may build a printer driver repository for
 ; Windows - I'll cover this topic in another HOWTO.
 [print$]
 path = /var/lib/samba/printers
 browseable = yes
 guest ok = yes
 read only = yes
 write list = root
 create mask = 0664
 directory mask = 0775
 [printers]
 path = /tmp
 printable = yes
 guest ok = yes
 browseable = no
 ; Uncomment if you need to share your CD-/DVD-ROM Drive
 ;[DVD-ROM Drive]
 ;path = /media/cdrom
 ;browseable = yes
 ;read only = yes
 ;guest ok = yes
 ;[MyFiles]
 ; path = /media/samba/
 ; browseable = yes
 ; read only = no
 ; guest ok = no
 ; create mask = 0644
 ; directory mask = 0755
 ; force user = YOUR USERNAME
 ; force group = YOUR USERGROUP[global]
 ; General server settings
 ; netbios name = YOUR HOSTNAME
 ; server string =
 ; workgroup = YOUR WORKGROUP
 ; announce version = 5.0
 ; socket options = TCP NODELAY IPTOS LOWDELAY SO KEEPALIVE
SO RCVBUF=8192 SO SNDBUF=8192
 [thd]
 browseable = yes
 writeable = yes
 invalid users = michal,@michal
 write list = zeltak,@zeltak
 path = /mnt/hd2
 force group = zeltak
 create mask = 0644
 force user = zeltak
 directory mask = 0755
 [media]
 browseable = yes
 writeable = yes
 read list = michal,@michal
 path = /mnt/media
 write list = zeltak,@zeltak
 force group = zeltak
 create mask = 0644
 force user = zeltak
 directory mask = 0755
 [music mcg]
 browseable = yes
 read list = michal,@michal
 write list = zeltak,@zeltak
 path = /mnt/media/Music
 force group = zeltak
 create mask = 0644
 force user = zeltak
 directory mask = 0755
 [michal music]
 path = /mnt/hd2/M Music
 browseable = yes
 read only = no
 guest ok = no
 create mask = 0644
 directory mask = 0755
 force user = zeltak
 force group = zeltak
 Starting samba and user accounts
 Let us fire up samba for the first time. Type:
 sudo /etc/init.d/samba start
 There shouldn't be any errors - if you are presented with an error
message make sure everything is correct (search for typos and/or invalid
paths).
 Time to add yourself as an samba user.
 NOTE: You will be asked for a password - make sure you use the same as
you use for login!
 sudo smbpasswd -L -a USER
 sudo smbpasswd -L -a zeltak
 This will create the user in samba with a password
 then issue
 sudo smbpasswd -L -e your username
 sudo smbpasswd -L -e zeltak
 This will enable the user
 Note: For more help on smbpasswd:
 smbpasswd --help
 In case you need other users to be able to access the share you need to
add them to your system !!AND!! samba as well.
 Make sure you use the very same Windows usernames and passwords!
 NOTE: Windows XP doesn't set passwords for its useraccount per default.
If you haven't set a password on your XP box just press enter when
prompted to enter a password for the user account you're about to
create!
 In the following example we will add an user called "michal"
 sudo useradd -s /bin/true michal
 sudo smbpasswd -L -a michal
 sudo smbpasswd -L -e michal
 The "-s /bin/true" in the first line prevents the users from being able
to access the commandline of your linux box ("-s" stands for "shell"). I
strongly advise you to follow this recommendation! Don't change that
setting to a valid login-shell unless you really know what you are
doing!
 NOTE: If this does not work consider firing up the Ubuntu desktop (GUI)
or webmin and add user and user group (michal and michal) by hand. it
may work better

***** changing network settings in windows

Changing network settings in Windows

 Now we should let Windows know that there's a WINS server active in the
network.
 If you had to change "wins support" to "no" above skip this step!
 - Click "START"
 - Click "Control Panel"
 - Click "Network Connections"
 - Find your "LAN Connection"
 - Right-click the icon and select "Properties"
 - Select the "TCP/IP" Protocol and click the "Properties" button
 - Click "Advanced"
 - Select the third Tab entitled "WINS"
 - Click "Add"
 - Type in the ip-address of your Linux box
 - Click "Add"
 - Select "Use NetBIOS over TCP/IP"
 - Click "OK"
 - Click "OK"
 - Click "OK"
 - Reboot Windows
 Upon reboot you may now map the network drive within Windows.
 With WINS enabled:
 - Click "START"
 - Right-click "My Computer"
 - Select "Map network drive"
 - Choose the drive letter
 - Type \\DAPPER\MyFiles
 NOTE: Adjust this to the hostname and sharename you chose above!
 - Click "Finish"
 With WINS disabled:
 - Click "START"
 - Right-click "My Computer"
 - Select "Map network drive"
 - Choose the drive letter
 - Type \\<ip-address>\MyFiles
 NOTE: To find out the ip-address of your Linux box type "ifconfig"
inside a terminal and find the ip for the correct interface (i.e. eth0).
Don't forget to adjust the sharename to the name you chose above.
 - Click "Finish"
 That's it - samba is up and running now.

***** security consideration

Security consideration

 This is the right time to think about security right away.
 In case your computer has more than one network connection (i.e. wired
and wireless ethernet) you may want to restrict access to samba.
 If not especially configured samba will bind its service to all
available network interfaces.
 So, let us assume you only want your wired network to have access and
that the network card is called eth0.
 Add the following lines to the [general] section of your smb.conf to
achieve that goal:
 Code:
 interfaces = lo, eth0
 bind interfaces only = true
 If you did it correctly it should look similar to this:
 Code:
 [global]
 ; General server settings
 netbios name = YOUR HOSTNAME
 server string =
 workgroup = YOUR WORKGROUP
 announce version = 5.0
 socket options = TCP NODELAY IPTOS LOWDELAY SO KEEPALIVE
SO RCVBUF=8192 SO SNDBUF=8192
 interfaces = lo, eth0
 bind interfaces only = true
 Now only the local loopback interface (dubbed "lo") and eth0 are able
to access samba - there's no need to fear that someone might break into
your system by wireless as the interface isn't bound to the service.
**** !BUGS/errors!
***** samba dosent recogniz passowrds				      :cbugs:
re add your user to samba
#+BEGIN_SRC sh 
pdbedit -a -u <user>
#+END_SRC

*** 'ssh'
    :PROPERTIES:
    :ID:       bf60adbf-fc3a-4eed-be14-a9244c3fef4e
    :END:
**** intro
Intro
 Client: the system one types directly on, such as a laptop or desktop
system (where your connectingfrom!)
 
 Server:anything connected to from the client. (where you are
connecting to!)
 This includes other servers accessed through the first server connected
to.
 Warning: Never allow root-to-root trust between systems
 [[~/Dropbox/Org/Tech/linux_files/Image_aFKXI.png]]

 The namepublic key comes from the fact that you can make the
encryption key public without compromising the secrecy of the data or
the decryption key.
 What this means is that it is safe to send yourpublic key (i.e. the
contents of the ~/.ssh/id rsa.pub file) in electronic mail or by having
a system administrator of a remote site install that key into your
~/.ssh/authorized keys file.
 To actually gain access they need the correspondingprivate key (i.e.
the decrypted contents of ~/.ssh/id rsa) to identify themselves.
 To further protect your private key you should enter a passphrase to
encrypt the key when it is stored in the filesystem. This will prevent
people from using it even if they gain access to your files.To connect
remotly you will need to open port 22 in the internet gateway (the
router usually)
 The public portion (id rsa.pub by default) of this key pair will
reside on the servers being connected to,
 the private portion (id rsa by default) needs to remain on a
secure local area of the client system
**** create and distribute a new key
***** 1.Create new ssh keys  

The public portion (`id rsa.pub` by default) of this key pair will reside on the server being connected to,


the private portion (`id rsa by` default) needs to remain on a secure local area of the client system

on the client:


the private portion (`id rsa by` default) needs to remain on a secure local area of the client system

on the client:

to generate an SSH key issue:

#+BEGIN_SRC sh
ssh-keygen -b 4096 -q
#+END_SRC

where: -b 4096 creates a high-security 4096-bit key, -q keeps the messages quiet
Press enter twice for each of the password prompts so the key isn't encrypted with a password, and your screen should look like this:

#+BEGIN_EXAMPLE
user@server1 [~]# ssh-keygen -b 4096 -q
Enter file in which to save the key (/home/user/.ssh/id rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
user@server1 [~]#
#+END_EXAMPLE

We now have an unencrypted private SSH key, and a public key.

Notes:


1.you can give the key a different name then the default (id rsa). if doing so see [[#dcc8DgR3jlQwysBDrhAyyA][login with different private key]] for how to connect with a non default name

2.The file permissions should be locked down to prevent other users from being able to read the key pair data. OpenSSH may also refuse to support public key authentication if the file permissions are too open, then run this:



1.you can give the key a different name then the default (id rsa). if doing so see [[#dcc8DgR3jlQwysBDrhAyyA][login with different private key]] for how to connect with a non default name

2.The file permissions should be locked down to prevent other users from being able to read the key pair data. OpenSSH may also refuse to support public key authentication if the file permissions are too open, then run this:


#+BEGIN_SRC sh
chmod 700 ~/.ssh
#+END_SRC

***** 2.Copying your SSH key to servers

Now, we upload your public key to a server so that you can authenticate using your ssh key.

this is done by pushing the `id_rsa.pub` to a `authorized_keys` keys file on the server your trying to connect to


Run this from your client computer(-i specifies the path to your public ssh key):

#+BEGIN_SRC sh
#use this neat method 
cat ~/.ssh/id_rsa.pub | ssh user@machine "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"
#+END_SRC


which will copy your public key to the remote server, and automatically add it to the authorized keys file.


Run this from your client computer(-i specifies the path to your public ssh key):

#+BEGIN_SRC sh
#use this neat method 
cat ~/.ssh/id_rsa.pub | ssh user@machine "mkdir ~/.ssh; cat >> ~/.ssh/authorized_keys"
#+END_SRC


which will copy your public key to the remote server, and automatically add it to the authorized keys file.

Now try logging into the machine, with "ssh user@server", and check in:
 
file:/home/USER/.ssh/authorized_keys
 
***** 3.configure sshd on the server
      :PROPERTIES:
      :ID:       475a0e2b-6f00-43bd-8222-3e06eb6bb686
      :END:
edit the sshd_config file: (!MAKE SURE ITS THE SSHD NOT SSH!)
#+BEGIN_SRC sh
sudo vim /etc/ssh/sshd_config
#+END_SRC

1)we are going to config part that have these uncommented lines:


$Note-if they arent there, create them. Also make sure they're not commented out$

#+BEGIN_EXAMPLE
PasswordAuthentication no
PermitEmptyPasswords no
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
#+END_EXAMPLE

2) make sure that "PermitRootLogin" is set to no as well as it's a security risk.

#+BEGIN_EXAMPLE
PermitRootLogin no
#+END_EXAMPLE

3)Restart the SSH on the Server:



$Note-if they arent there, create them. Also make sure they're not commented out$

#+BEGIN_EXAMPLE
PasswordAuthentication no
PermitEmptyPasswords no
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
#+END_EXAMPLE

2) make sure that "PermitRootLogin" is set to no as well as it's a security risk.

#+BEGIN_EXAMPLE
PermitRootLogin no
#+END_EXAMPLE

3)Restart the SSH on the Server:


#+BEGIN_SRC sh
systemctl start sshd
#or for init
/etc/init.d/ssh restart
#+END_SRC

This time you should be greeted with "Enter passphrase for key..." or if you already use a key agent it will auto login
 
**** ssh and systemd

you can enable the sshd daemon at startup with the following command:

 # systemctl enable sshd.service

 Warning: Systemd is an asynchronous starting process. If you bind the
SSH daemon to a specific IP address ListenAddress 192.168.1.100 it may
fail to load during boot since the default sshd.service unit file has no
dependency on network interfaces being enabled. When binding to an IP
address, you will need to add After=network.target to a custom
sshd.service unit file. See Systemd#Replacing provided unit files.
 Or you can enable SSH Daemon socket so the daemon is started on the
first incoming connection:

 # systemctl enable sshd.socket

 If you use a different port than the default 22, you have to set
"ListenStream" in the unit file (/lib/systemd/system/sshd.socket) to the
appropriate port.

**** ssh on synology NAS
     :PROPERTIES:
     :ID:       6976dbaa-6148-4656-a2f1-c0a4064f20f8
     :END:
To start you need to edit the synology server SSH config file to allow access via keys.
edit file:/etc/ssh/sshd_config using vi (on synology by default) and change the lines as in the regular config server , that is to have these lines:
 
#+BEGIN_EXAMPLE
#RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
#+END_EXAMPLE

Save the file.

Time to create the necessary .ssh directory & file on your Synology DiskStation:

#+BEGIN_SRC sh
cd /root
mkdir .ssh
touch .ssh/authorized_keys
#+END_SRC

Now get your permissions set correctly on that directory & file:

#+BEGIN_SRC sh
chmod 700 .ssh
chmod 644 .ssh/authorized_keys
#+END_SRC

Now you need to edit the authorized_keys file. Do so remotely with ssh (or with vim, or FTP etc) into the server

#+BEGIN_SRC sh
cat ~/.ssh/id_rsa.pub | ssh root@SYN_IP "cat >> /root/.ssh/authorized_keys"
#+END_SRC

Save the file, & try logging in to your Synology DiskStation

**** key limit acesss

Key Access Limits
As an optional step to limit usage of the public key for access to any
servers, a from statement can be used before public key entries in the
~/.ssh/authorized keys file on the servers to limit where the client
system is permitted to access the server from.
 Without a from limit, any client system with the appropriate private
key data will be able to connect to the server from anywhere.
 for example
 server$

nano ~/.ssh/authorized keys

 and add
 from="192.168.0.3" ssh-rsa AAAAB3NzaC1...
 or
 from=".example.org" ssh-rsa AAAAB3NzaC1...
 Multiple hosts or addresses can be specified as comma separated values
 from=".example.org,10.,external.example.com" ...
 NOTE: If a text editor is used to add the from option, ensure the data
is saved as a single line; some editors may wrap the public key and thus
corrupt the data. Each public key in the ~/.ssh/authorized keys file
must not span multiple lines.

**** zeltak example

even though marvin is the house server usually if you want to issue
commands on the desktop, you need to set up marvin as the ssh client
 1) follow the [[javascript:;][generate keys example]]to generate the
keys but LEAVE EMPTYthe passphrase
 2)continue using the [[javascript:;][generate keys example]] guide
untill finished
 3)issue this command as an example and test
 ssh -o PreferredAuthentications=publickey 192.168.0.1 aplay
/home/zeltak/MLT/sounds/galactica short.wav

**** Multiple SSH Keys settings for different github account		:Fav:

create different public key

create different ssh keys

#+BEGIN_SRC sh
$ ssh-keygen -t rsa -C "your_email@youremail.com"
#+END_SRC

Please refer to github ssh issues for common problems.

for example, 2 keys created at:

#+BEGIN_SRC sh
~/.ssh/id_rsa_activehacker
~/.ssh/id_rsa_jexchan
#+END_SRC

then, add these two keys as following

#+BEGIN_SRC sh
$ ssh-add ~/.ssh/id_rsa_activehacker
$ ssh-add ~/.ssh/id_rsa_jexchan
#+END_SRC

you can delete all cached keys before

#+BEGIN_SRC sh
$ ssh-add -D
#+END_SRC

finally, you can check your saved keys

#+BEGIN_SRC sh
$ ssh-add -l
#+END_SRC

Modify the ssh config

#+BEGIN_SRC sh
$ cd ~/.ssh/
$ touch config
$ subl -a config
#+END_SRC

Then added

#+BEGIN_SRC sh
#activehacker account
Host github.com-activehacker
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_activehacker

#jexchan account
Host github.com-jexchan
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_jexchan
#+END_SRC

Clone you repo and modify your Git config

clone your repo git clone git@github.com:activehacker/gfs.git gfs_jexchan

#+BEGIN_SRC sh
cd gfs_jexchan and modify git config

$ git config user.name "jexchan"
$ git config user.email "jexchan@gmail.com" 

$ git config user.name "activehacker"
$ git config user.email "jexlab@gmail.com" 
#+END_SRC

or you can have global git config $ git config --global user.name "jexchan" $ git config --global user.email "jexchan@gmail.com"

then use normal flow to push your code

#+BEGIN_SRC sh
$ git add .
$ git commit -m "your comments"
$ git push
#+END_SRC
 
**** ssh agent								:Fav:
***** base options
usage: ssh-add [options] [file ...]
Options:
  -l          List fingerprints of all identities.
  -L          List public key parameters of all identities.
  -k          Load only keys and not certificates.
  -c          Require confirmation to sign using identities
  -t life     Set lifetime (in seconds) when adding identities.
  -d          Delete identity.
  -D          Delete all identities.
  -x          Lock agent.
  -X          Unlock agent.
  -s pkcs11   Add keys from PKCS#11 provider.
  -e pkcs11   Remove keys provided by PKCS#11 provider.
See whether you have an ssh-agent running at present:

***** add key
use the ssh-add command

$Note$this is dependent on SHELL (bash/zsh), In Example if you add in in zsh it wont work in bash and vice versa$

on Client to add a key issue 'ssh-add'

#+BEGIN_SRC sh
ssh-add /home/zeltak/.ssh/id_rsa_github

#to see that it worked at list all keys
ssh-add -l
#+END_SRC
 
***** keychain
Keychain manages one or more specified private keys. When initialized it will ask for the passphrase for the private key(s) and store it. That way your private key is password protected but you won't have to enter your password over and over again.
Install keychain from the extra repo:

#+BEGIN_SRC sh
pacman -S keychain
#+END_SRC

Append this line:

#+BEGIN_SRC sh
eval `keychain --eval --agents ssh id dsa`
#+END_SRC
to your .bashrc or .bash profile.
If necessary, replace ~/.ssh/id dsa with ~/.ssh/id rsa

%Tip-if you want to load 2 keys add the 2nd key with a space after the first one%

#+BEGIN_SRC sh
eval `keychain --eval --agents ssh id dsa id_dsa2 id_dsa3`
#+END_SRC

**** ssh config file (ssh alias) 					:Fav:
***** simplify logins with host address and name Shortcuts
create if not present a file name config here:

[[file:~/.ssh/config]]

then put this Inside

#+BEGIN_SRC sh

Host karif
	User zeltak
	Hostname karif.server-speed.net

#+END_SRC


where 'host' is a simple user derived name In Example 'karif'
'User' is the that log in In example 'zeltak'
and Hostname is the address you connect to In example '192.168.0.1' or 'karif.server-speed.net'

%TIP:tip-you can of course add as many of these of needed%

Then to ssh simple issue:

#+BEGIN_SRC sh
ssh karif
#+END_SRC

***** use the config file to login with differnt ssh keys

you can use different SSH keys defined in the config file:


#+BEGIN_SRC sh
Host example2
  Hostname example.com
  User exampleuser
  IdentityFile ~/.ssh/another_ssh.identity
#+END_SRC

**** change passphrase

You can change the pass-phrase at any time by using the -p option of
ssh-keygen
 client$ssh-keygen -p
 
 Enter file in which the key is (/home/kim/.ssh/id rsa): [RETURN]
 Enter old passphrase: 1amp jumb3d
 Key has comment '/home/kim/.ssh/id rsa'
 Enter new passphrase (empty for no passphrase): cow 3ats grass
 Enter same passphrase again: cow 3ats grass
 Your identification has been saved with the new passphrase.
 The pass-phrases are not echoed as you type them.

**** running commands on remote systems

Running commands on remote systems
The ssh command can also be used to run commands on remote systems
without logging in.
 The output of the command is displayed and control returns to the local
system.
 Here are some example
 1)get info:
 client$ ssh hrothgar who
 christos ttyp8 Oct 17 20:42 (milou)
 
 2)play sound on the servre machine:
 ssh -o PreferredAuthentications=publickey 192.168.0.1 aplay
/home/zeltak/MLT/sounds/galactica short.wav

**** removing changed hosts

removing changes hosts
 if you ever get this:
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
 Someone could be eavesdropping on you right now (man-in-the-middle
attack)!
 It is also possible that the RSA host key has just been changed.
 The fingerprint for the RSA key sent by the remote host is
 b7:e6:6a:6c:79:7c:ce:8b:c3:7b:3f:7e:8b:88:8b:d9.
 Please contact your system administrator.
 Add correct host key in /home/zeltak/.ssh/known hosts to get rid of
this message.
 Offending key in /home/zeltak/.ssh/known hosts:5
 RSA host key for 192.168.0.3 has changed and you have requested strict
checking.
 Host key verification failed.
 use :
 nano /home/zeltak/.ssh/known hosts
 nano /home/zeltak/.ssh/known hosts
 and delete the line that has the problem: (Offending key in
/home/zeltak/.ssh/known hosts:5) so in this case delete line 5 in the
file

**** port forward (tunneling)

The host (server) must be running the SSH Server.
 The format of the client command to create an SSH tunnel to an OpenSSH
host listening on the default port 22 is:
 ssh -L <local port>:<remote computer>:<remote port> <user>@<remote ip>
 An example is:
 ssh -L 6669:94.92.10.15:6667 foowho
 In this example, local port 6669 on the local client computer is
tunneled by encrypted SSH over the default port 22 to the router at
94.92.10.15.
 The router must be set up to forward port 22 to whatever the internal
LAN IP (such as 192.168.0.56) of the SSH host is.
 The host is running OpenSSH (ssdh service) and is set to listen to port
22.
 It then routes the incoming data to the host port 6667, where
presumably some other program is waiting for data. foowho has an account
on the host running the OpenSSH server.
 SSH tunnels can also be established using URLs and even alternate
ports. An example is:
 ssh -L 5900:foobar.dyndns.org:5900 foowho -p 11022
 In this example, local port 5900 on the client is forwarded through an
SSH tunnel on port 11022 to foobar.dyndns.org. The DNS service
translates foobar.dyndns.org into the appropriate WAN (Internet) IP
address, where the router is listening. The router is set up to forward
port 11022 to the LAN machine hosting the OpenSSH server, which is
listening on port 11022. It then sends the data to whatever program is
running on port 5900 on the host.
 You can forward a local port to a different port on the remote host.
 Example: Make port 80 (web server/browser) on the remote host at
10.0.2.10 available locally as port 81
 ssh -L 81:10.0.2.10:80 user@office.net

***** forward firefox

Create a SSH Tunnel for Firefox to surf securely

 A ssh tunnel for Firefox to a remote computer is good security measure.
Especially when connecting via an untrusted network like a wifi hotspot
or other public networks. The tunnel encrypts and sends the data to your
remote machine then it is sent over the web to your destination. This
tutorial assumes you have an account on a remote machine you can ssh
into. This is a pretty easy set up.
 Now all you need to do is login your remote computer that you have
access to with SSH then issue this 1 command
 ssh -D 9999 -C me@ipaddress.com
 The -D switch - Specifies a local dynamic application-level port
forwarding. We are also adding the -C switch for compression.
 Next we need to put the settings into Firefox.
 Firefox> Edit> Preferences> Advanced tab> Network tab> Settings button.
 Select Manual proxy configuration
 SOCKS Host: localhost Port: 9999
 SOCKS v5
 No Proxy for: localhost, 127.0.0.1
 Note: Sometimes localhost can cause a problem. If your settings are
right and it still is not working replace localhost with 127.0.0.1.

***** using putty (plink)

an alternative is to use the command line tool plink installed with
'putty'
 Linux/Mac OS X

plink -C -A -N user@ssh host -D 0.0.0.0:port

 Windows

plink.exe -C -A -N user@ssh host -D 0.0.0.0:port

 example:
 plink -C -A -N zeltak@zeltak.homelinux.com -D 0.0.0.0:9999
 Note: -D 0.0.0.0 means to bind with any IP address so that other hosts
in the same LAN will be able to use the tunnel.

**** scp

Using scp
 You can copy files from the local system to a remote system or vice
versa, or even between two remote systems using the scp command.
 To specify a file on a remote system simply prefix it with the name of
the remote host followed by a colon (:)
 If you leave off the filename of the copy or specify a directory only
the name of the source file will be used.
 An easy way of retrieving a copy of a remote file into the current
directory while keeping the name of the source file is to use a single
dot as the destination.
 
 client$ scp -p server:aliases .
 The -p option is not required. It indicates that the modification
and access times as well as modes of the source file should be preserved
on the copy. This is usually desirable.You can copy several files in a
single command if the destination is a directory
 client$ scp -p server:.login server:.logout panix.com:.Relative
filenames resolve differently on the local system than on the remote
system.
 On the local system (client) the current directory is assumed (as
usual with all commands).
 On the remote system (server) the command runs in the home
directory! Thus relative filenames will be relative to the home
directory of the remote account.
 NOTE: When you specify remote machines in both the source and the
destination the connection to copy the files is made directly between
those hosts. The files are not copied through the local system.
Sometimes this makes a difference in a firewalled or otherwise
restricted environment.

**** x11forwarding (use gui in ssh)

Acsess GUI Programs through ssh

If you would like to lie in bed with your Linux laptop and access your
applications from your Windows machine, you can do this with SSH. You
first need to enable the following setting in /etc/ssh/sshd config (on
the server machine):
X11Forwarding yes
We can now run The GIMP on 192.168.0.2 with:

 ssh -X 192.168.0.2 gimp

**** SSH on arch

To let other people ssh to your machine you need to adjust
/etc/hosts.allow, add the following:
 # let everyone connect to you
 sshd: ALL
 ---------Preffered option------
 # OR you can restrict it to a certain ip
 sshd: 192.168.0.1
 # OR restrict for an IP range
 sshd: 10.0.0.0/255.255.255.0
 # OR restrict for an IP match
 sshd: 192.168.1.
 then

Just add sshd to the "DAEMONS" section of
your/etc/[[http://wiki.archlinux.org/index.php/Rc.conf][rc.conf]]:

DAEMONS=(... ... sshd ... ...)
 To start/restart/stop the daemon, use the following:

------------------------------------------------------------------------------------------------------------------
 # /etc/rc.d/sshd {start|stop|restart}

------------------------------------------------------------------------------------------------------------------

**** SSHFS
***** Mount

Installation

 To install the needed packages, do:

 # pacman -S sshfs

 This should install fuse and sshfs, and maybe other packages.
 Mounting

 You will use the command sshfs. To mount a remote directory:
 # sshfs USERNAME@HOSTNAME OR IP:/PATH LOCAL MOUNT POINT
SSH OPTIONS
 For example:

 # sshfs sessy@mycomputer:/home/sessy /mnt/sessy -C -p 9876

 Where 9876 is the port number.
 zeltak example:

 sshfs zeltak@192.168.0.20:/home/zeltak/ /media/zdock/ -C

 or

 sshfs zeltak@192.168.0.20:/home/ /home/zeltak/sshmounts/ -C

 
 NOTE: if trying to mount to /media/ you most likley will get an error
like:
 fusermount: user has no write access to mountpoint
 
 I you want to use /media/ give your user write access to
/media/MOUNTFOLDER(after unmounting the drive!)
 that is chown to user:
 sudo chown zeltak /media/zdock/
 Unmounting
 To unmount the remote system:
 # fusermount -u LOCAL MOUNT POINT
 Example:
 # fusermount -u /mnt/sessy
 zeltak example:
 fusermount -u /home/zeltak/sshmounts/

***** unmount

To unmount the filesystem:
 fusermount -u mountpoint
 IE:

 fusermount -u /home/zeltak/mounts/raid

***** use under ubuntu

Simply install the following package: sshfs
 then add yourself to the fuse group:
 sudo gpasswd -a USER fuse
 IE:
 sudo gpasswd -a zeltak fuse
 Adding yourself to the fuse group lets you use the fusermount command,
which is needed by the FUSE userland filesystem utility. Once you have
added yourself to the fuse group, you should log out and log back in
again for the change to take effect.
 
 use the arch guide for detailed info

***** use sshfs to mount a remote filesystem through /etc/fstab

An example on how to use sshfs to mount a remote filesystem through
/etc/fstab
 sshfs#USERNAME@HOSTNAME OR IP:/REMOTE/DIRECTORY /LOCAL/MOUNTPOINT
fuse defaults 0 0
 Take for example a line from my fstab
 sshfs#llib@192.168.1.200:/home/llib/FAH /media/FAH2 fuse defaults 0 0
 Although the above will not work automatically unless you are using a
ssh key for the user. Using SSH Keys.
 If you want to use sshfs with multiple users :
 sshfs#user@domain.org:/home/user /media/user fuse defaults,allow other
0 0
 Note: With the above method, umount complains that the filesystem is
not in fstab. To get around this, remove the 'sshfs#' prefix, change the
filesystem from 'fuse' to 'fuse.sshfs', and create a script
'/sbin/mount.fuse.sshfs':
 #!/bin/bash
 DEVICE="$1"
 MOUNTPOINT="$2"
 OPTIONS="$4"
 OPTIONS="${OPTIONS/,noauto/}"
 OPTIONS="${OPTIONS/,user/}"
 # workaround to conflicting 'user' options
 # in fstab, specify 'login=joe' instead of 'user=joe'
 OPTIONS="${OPTIONS/,login=/,user=}"
 exec /usr/bin/sshfs "$DEVICE" "$MOUNTPOINT" -o "$OPTIONS"
 If you get "connection reset by peer" from using the fstab method, it's
possible your PC is not yet connected to the internet at that point of
the boot process. The solution for me was (as I'm using XFCE) to add a
startup command to mount it using sshfs. At that point the internet
connection should already be ready.

***** Options and Tips

sshfs can automatically convert your local and remote user id's, if you
add the idmap option:
 # sshfs -o idmap=user sessy@mycomputer:/home/sessy /mnt/sessy -C -p
9876
 If you have a different login on the remote system, it can still work
if you provide the ssh standard option User:
 # sshfs -o idmap=user,User=sessy2 sessy@mycomputer:/home/sessy
/mnt/sessy -C -p 9876
 (I've used first form, second is based on docs, so YMMV, but it should
at least be close)
 Tips

 To quickly mount a remote dir, do some file-management and unmount it,
put this in a script:
 sshfs USERNAME@HOSTNAME OR IP:/PATH LOCAL MOUNT POINT SSH OPTIONS
 mc ~ LOCAL MOUNT POINT
 fusermount -u LOCAL MOUNT POINT
 This will mount the remote directory, launch MC, and unmount it when
you exit.

***** How to remote mount with password using SSHFS and stdin

This will allow you to mount a remote ssh filesystem using sshfs (Secure
SHell FileSystem):
 echo mypassword | sshfs myuser@ftp.mysite.com:/ ~/mounts/mysite -o
workaround=rename -o password stdin
 Replace mypassword, myuser, ftp.mysite.com and mysite.
 Example:
 echo baghira | sshfs jsmith@ftp.example.com:/ ~/mounts/example -o
workaround=rename -o password stdin
***** !bug! sshfs cant mountm dir us busy and ghost files are there
unmount the drives if needed, delete the folder and recreate it
then mounts
**** login to ssh session and execute a command

there are two ways to do that:
 1) simple way:
 ssh zeltak@192.168.0.20 -t "tmux attach"
 
 or to get unicode runing:
 ssh zeltak@192.168.0.20 -t "LANG=$LANG tmux a"
 2)alternative (good for all sessions/cleints that login no matter
where):
 add the following to the .bashrc on the server computer (the one your
connecting to):
 #auto ssh tmux attaching
 if [ -n "$SSH CONNECTION" ]
 then
 tmux attach
 fi
 
**** login with different private key (not id rsa)			:Fav:

By default, ssh searches for id dsa and id rsa files. The keys do not have to be named like this, you can name it mykey as well and place it in a different directory as well. usually the best way to conect with multiple keys is to use a config file (see alternative method below ) To connect one time using another key use:

#+BEGIN_SRC sh
ssh user@server -i /path/to/mykey
#+END_SRC

If a command does not accept -i, e.g. sshfs, use the IdentityFile option:

#+BEGIN_SRC sh
sshfs -o IdentityFile=/path/to/mykey user@host:/path/on/remote/mountpoint
#+END_SRC

-Alternative method (better) method-

Instead of running
ssh user@host -i /path/to/identity file

you can use a configuration file:
 ~/.ssh/config

Common settings are the IdentityFile (the keys) and port. The next configuration will check "id dsa" and "bender" only:

#+BEGIN_SRC sh
Host github-org
    User git
    HostName github.com
    IdentityFile ~/.ssh/github.org.key
#+END_SRC

If you omit Host yourhost, the settings will apply to all SSH connections. Port 22 can be omitted if the server listens on port 22, but is added for clarity.

**** encrypted an unencrypted SSH key

If you ever create one of these unencrypted SSH keys, and want to
encrypt it (ie, put a password on it) you can do it with this command:

ssh-keygen -p -f .ssh/id rsa

 where: -p puts ssh-kegen in a password-setting mode, and -f
.ssh/id rsa is the path to your private ssh key
 This looks like so:
 user@server1 [~]# ssh-keygen -p -f .ssh/id rsa
 Key has comment '.ssh/id rsa'
 Enter new passphrase (empty for no passphrase):
 Enter same passphrase again:
 Your identification has been saved with the new passphrase.
 user@server1 [~]#

**** possible errors

*****  Possible reasons why the public key is denied:
 /etc/ssh/sshd config:
 AllowUsers or AllowGroups is specified, but your server user is
not listed in the groups or users list (default not defined, placing no
restriction on the users or groups from logging in).
 DenyUsers or DenyGroups is specified and you're in the users or
groups list.
 You're trying to login as root, but PermitRootLogin is set to
No (default yes).
 PubkeyAuthentication is set to No (default yes).
 AuthorizedKeysFile is set to a different location, and the
public keys are not added to that file (default .ssh/authorized keys,
relative to home dir)
 ~/.ssh/authorized keys: your public key is not added in this file
(note that this file is read as root user)

***** Could not open a connection to your authentication agent.
You might need to start ssh-agent before you run the ssh-add command:

#+BEGIN_SRC sh
$ eval `ssh-agent -s`
$ ssh-add
#+END_SRC

**** laucnh gui app on the sshes machine

use this:
 

DISPLAY=:0 COMMAND TO LAUNCH

 IE

DISPLAY=:0 xbmc

**** Record SSH sessions

a) Record SSH sessions and store into a file called
~/server2.session.txt:

 ssh user@server2| tee -a ~/server2.session.txt

 exit session

 to view

 cat ~/server2.session.txt
**** Reverse SSH Tunneling

Have you ever wanted to ssh to your Linux box that sits behind NAT? Now you can with reverse SSH tunneling. This document will show you step by step how to set up reverse SSH tunneling. The reverse SSH tunneling should work fine with Unix like systems.

Let's assume that Destinations IP is 192.168.20.55 (Linux box that you want to access).

You want to access from Linux client with IP 138.47.99.99.

#+BEGIN_EXAMPLE
Destination (192.168.20.55) <- |NAT| <- Source (138.47.99.99)
#+END_EXAMPLE

1. SSH from the destination to the source (with public ip) using command below:

#+BEGIN_SRC sh
ssh -R 19999:localhost:22 sourceuser@138.47.99.99
#+END_SRC

$Note$ port 19999 can be any unused port.

2. Now you can SSH from source to destination through SSH tuneling:

#+BEGIN_SRC sh
ssh localhost -p 19999
#+END_SRC

3. 3rd party servers can also access 192.168.20.55 through Destination (138.47.99.99).

Destination (192.168.20.55) <- |NAT| <- Source (138.47.99.99) <- Bob's server

3.1 From Bob's server:

#+BEGIN_SRC sh
ssh sourceuser@138.47.99.99
#+END_SRC

3.2 After the sucessful login to Source:

#+BEGIN_SRC sh
ssh localhost -p 19999
#+END_SRC

the connection between destination and source must be alive at all time.

%Tip you may run a command (e.g. watch, top) on Destination to keep the connection active%
**** fix ssh session size after connection in screen
see this:
[[reconnect%20a%20ssh%20session%20that%20has%20different%20res][reconnect a ssh session that has different res]] 
*** vnc
**** x11vnc
***** general x11vnc options
****** keep alive forever (dont kill connection after client stops)
use the -forever option 
****** place the x11vnc line in a script which is called at login
use something like this

#+NAME: 
#+BEGIN_SRC sh
#!/bin/bash
x11vnc -nap -wait 50 -noxdamage -passwd PASSWORD -display :0 -forever -o /var/log/x11vnc.log -bg
#+END_SRC 
****** Scale the Displays
use the -scale options, ₆In example₆ 

#+NAME: 
#+BEGIN_SRC sh
x11vnc -display :0 -xinerama -scale 3/4
#+END_SRC 

$Note$ one can use fractions such as 0.70 etc 
****** send x11vnc to Background
use the -bg option 

***** X11vnc- How to access a current desktop session remotely using VNC and ssh (debian)
SSH into the computer whose current desktop you want to access and install x11vnc if it hasn’t been installed already:

ssh into remote computer (server) and issue

#+BEGIN_SRC sh
sudo apt-get install x11vnc
#+END_SRC
	
Once x11vnc is ready, start it up and point it to the display you want to access remotely. In most cases, the display will be :0. If it’s not, try issuing the “w” command to see which users are logged in on which terminals or displays.

#+BEGIN_SRC sh
x11vnc -display :0
#+END_SRC
 
x11vnc should now be connected. Make a note of the port number it spits out after the connection is complete. 5900 is the default. It’s important to note that x11vnc has no password in this configuration, but the newly-opened port should only be accessible to localhost. If you’re paranoid, you may want to set a password.
 
$Note- the bellow ssh section isnt needed if your connected through a VPN, then just connect to the IP of the machine$ 

Now, on your loclal (client) machine, open a new terminal and use SSH to forward a local port to the remote VNC server’s port. This has the added benefit of securely tunneling your VNC connection over ssh.

#+BEGIN_SRC sh
ssh -L 5555:localhost:5900 user@remoteIP 
#+END_SRC
 
Replace “remote” with the remote machine’s ip address. This command creates a tunnel between localhost:5555 and remote:5900. “5555″ can be changed to any available port of your choosing.

Now, point your VNC client to localhost:5555 and you should see the remote desktop!
I use remmina for VNC, but if you’re using vncviewer from the command line, type

#+BEGIN_SRC sh
vncviewer localhost:5555
#+END_SRC

***** multi monitor support
****** use x11vnc on a multi-headed display that is not Xinerama (i.e. separate screens :0.0, :0.1, ... for each monitor) 
You can, but it is a little bit awkward: you must start separate x11vnc processes for each screen, and on the viewing end start up separate VNC viewer processes connecting to them. e.g. on the remote end:

#+BEGIN_SRC sh
x11vnc -display :0.0 -bg -q -rfbport 5900
x11vnc -display :0.1 -bg -q -rfbport 5901
#this could be automated in the display manager Xsetup for example) and then on the local machine where you are sitting:
vncviewer somehost:0 &
vncviewer somehost:1 &
#+END_SRC

****** with a pc running Xinerama
use the 

#+BEGIN_EXAMPLE
-clip xinerama0
#+END_EXAMPLE

to clip to the first xinerama sub-screen (if xinerama is active.) xinerama1 for the 2nd sub-screen, etc. 
This way you dont need to figure out the WxH+X+Y of the desired xinerama sub-screen. screens are sorted in increasing distance from the (0,0) origin (I.e. not the Xserver's order.)

If the viewing-end monitor is not as big as the remote Xinerama display, then the vncviewer scrollbars, etc, will have to be used to pan across the large area. However one user started two x11vnc's, one with "-clip 1280x1024+0+0" and the other with "-clip 1280x1024+1280+0" to split the big screen into two and used two VNC viewers to access them

**** Misc
***** setup vnc server and connect through a browser

 1) Install packages
 sudo aptitude install x11vnc vnc-java
 2) Set up password to allow clients to view
 x11vnc -storepasswd
 3) Open up ports 5800 and 5900 on your firewall
 4) Run this command:
 x11vnc -forever -usepw -httpdir /usr/share/vnc-java/ -httpport 5800
 to test VNC
 5) Add the command from step 4 to your sessions, so that it starts at
each login
 6) If you want to test it out on a browser, type this in the URL field:
 192.168.115.10:5800
 Of course, replace the example IP with your external IP address.
**** my (zeltak) prefferd v11vnc options 
     #+NAME: 
     #+BEGIN_SRC sh
x11vnc -display :0 -xinerama -scale 0.73  -forever -bg
     #+END_SRC
*** wicd

**** tips

to fix unsecured network issue with wicd

 install dhcpcd
 sudo apt-get install dhcpcd

**** wicd on arch

Installation
 If you are not using gnome (or its notification-daemon), you might want
to install xfce4-notifyd from extra before you install wicd, or you will
most likely end up with the standard notification-daemon pulling a lot
of unnecessary packages.
 # pacman -S xfce4-notifyd
 Wicd also is available from the standard repositories:
 # pacman -S wicd
 This will install Wicd and all the necessary dependencies, including
dbus, python and gtk2.
 To install the KDE client, the wicd-client-kde package from the Arch
User Repository is required.
 Note: this is just the KDE front-end, and will install wicd with its
GTK front-end as a dependency.
 To remove the GTK front-end, you can replace it with wicd-nogtk from
AUR after installing the KDE front-end. Once you've built the package,
install it and answer "yes" when asked to replace wicd.
 Alternative
 The wicd-bzr buildscript is available from AUR, which should build the
latest development branch.
 If you need an alternative version or you just want to roll your own
package, you can easily build it using ABS.
 Getting Started
 Initial Setup
 Wicd provides a daemon that must be started.
 Warning: Running multiple network managers will cause problems, so it
is important to disable all other network management daemons.
 First, stop all previously running network daemons:
 # /etc/rc.d/network stop
 # /etc/rc.d/dhcpcd stop
 # /etc/rc.d/networkmanager stop
 Now, edit /etc/rc.conf as root:
 # nano /etc/rc.conf
 Disable (!) any devices in the INTERFACES array that you wish to manage
with Wicd. For example:
 INTERFACES=(!eth0 !wlan0)
 Disable (!) any existing network management daemons in the DAEMONS
array, including network, dhcdbd, and networkmanager.
 Now, add dbus (if not already present) and wicd to the DAEMONS array,
in that order. The DAEMONS array should now look something like this:
 DAEMONS=(syslog-ng dbus !network !dhcdbd !networkmanager wicd ...)
 Note: If you use hal, confirm that dbus precedes hal in the DAEMONS
array.
 Save and close.
 Add your account to network group:
 # gpasswd -a USERNAME network
 Note: The Unix group that dbus allows to access wicd is subject to
change, and may be different than network. Check which policy group is
specified in /etc/dbus-1/system.d/wicd.conf, and add your user to that
group.
 Lastly, reboot your computer or start the daemons:
 # /etc/rc.d/dbus start
 or
 # /etc/rc.d/hal start
 If you added your user to a new group, logout and then login.
 Running Wicd
 To load Wicd, run:
 $ wicd-client
 Or if your desktop environment does not have a notification area, run:
 $ wicd-client -n
 You can add wicd-client to your DE/WM startup to have the application
start when you log in.
 You can also run wicd as a curses application from the terminal so it
won't need the X server, like so:
 $ wicd-curses

*** static ip through router

**** find out whats the mac adress (CLI)

issue :

ifconfig

 then look at the input:
 [[~/Dropbox/Org/Tech/linux_files/2011-05-29-08-35-35-scrot.png]]

**** reserve an IP in DHCP using a mac adress

find out the MAC address of your device

*** ftp

**** mount a ftp drive with curlftpfs

install :
 # pacman -S curlftpfs
 to mount use the following command:

# curlftpfs ftp.yourserver.com /mnt/ftp/ -o user=username:password

 IE:

curlftpfs ftp://192.168.0.105 /home/zeltak/mounts/xoom -o
user=zeltak:,allow other

 to unmount use fuseermount:

fusermount -u /home/zeltak/mounts/xoom/

*** webmin
**** config under arch

 To make webmin start at boot time start the webmin service:

 systemctl enable webmin.service
 systemctl start webmin.service

Point your web browser to http://localhost:10000 to use webmin.
**** configure remote access
The access is restricted to localhost, if you want to connect from other locations

change /etc/webmin/miniserv.conf to something like that:

#+BEGIN_SRC sh
allow=127.0.0.1 <your-ip>
#In example:
allow=127.0.0.1 192.168.0.2
#+END_SRC

*** setting up LAMP

**** apache

For security reasons, as soon as Apache is started by the root user
(directly or via startup scripts) it switches to the UID/GID specified
in /etc/httpd/conf/httpd.conf
 Check for the existence of the http user by looking for http in the
output of the following command:

grep http /etc/passwd

 Create the system user http if it does not exist already:

useradd -d /srv/http -r -s /bin/false -U http

 This creates the http user with home directory /srv/http/, as a system
account (-r), with a bogus shell (-s /bin/false) and creates a group
with the same name (-U).
 Add this line to /etc/hosts (If the file does not exist, create it.):
 127.0.0.1 localhost.localdomain localhost
 If you want a different hostname, append it to the end:
 127.0.0.1 localhost.localdomain localhost myhostname
 IE:
 127.0.0.1 localhost.localdomain localhost eddie
 Edit /etc/rc.conf:
 If you set a hostname, the HOSTNAME variable should be the same;
otherwise, use "localhost":
 #
 # Networking
 #
 HOSTNAME="localhost"
 Make sure the hostname appears in /etc/hosts or apache will fail to
start.
 Alternatively, you can edit /etc/httpd/conf/httpd.conf and comment the
following module:
 LoadModule unique id module modules/mod unique id.so
 Customize your config
 At least change httpd.conf and extra/httpd-default.conf to your liking.
For security reasons, you might want to change ServerTokens Full to
ServerTokens Prod and ServerSignature On to ServerSignature Off in
extra/httpd-default.conf.
 Run the following in a terminal to start the HTTP server:

rc.d start httpd

 Apache should now be running. Test by visiting [[http://localhost/]] in
a web browser.
 It should display a simple Apache test page. If you receive a 403
Error, comment out the following line in /etc/httpd/conf/httpd.conf:
 Include conf/extra/httpd-userdir.conf
 To start Apache automatically at boot, edit /etc/rc.conf and add the
httpd daemon:
 DAEMONS=(... httpd ...)

**** php

Pre-Installation
 make sure apache is installed before hand
 Installation
 To install phpMyAdmin, install the phpmyadmin and php-mcrypt packages
with

pacman -S phpmyadmin php-mcrypt

 Configuration
 Ensure you do not have an older copy of phpMyAdmin (not needed on an
new system)

rm -r /srv/http/phpMyAdmin

 Copy the example configuration file to your httpd configuration
directory.

cp /etc/webapps/phpmyadmin/apache.example.conf
/etc/httpd/conf/extra/httpd-phpmyadmin.conf

 Add the following lines to /etc/httpd/conf/httpd.conf:
 # phpMyAdmin configuration
 Include conf/extra/httpd-phpmyadmin.conf
 You can type this into the terminal to produce the same effect:

echo -e "\nInclude conf/extra/httpd-phpmyadmin.conf" >>
/etc/httpd/conf/httpd.conf

 Check php module configuration
 Add the following lines to /etc/httpd/conf/httpd.conf
 # Use for PHP 5.x:
 LoadModule php5 module modules/libphp5.so
 AddHandler php5-script php
 Add index.php after "DirectoryIndex index.html"
 # DirectoryIndex: sets the file that Apache will serve if a directory
 # is requested.
 #
 <IfModule dir module>
 DirectoryIndex index.html index.php
 </IfModule>
 Adjust access rights
 In /etc/webapps/phpmyadmin/.htaccess comment out deny from all. The
line should look like this:
 #deny from all
 Alternatively, you can restrict access to localhost and your local
network only. Replace 192.168.1.0/24 with your network's IP block.
 deny from all
 allow from localhost
 allow from 192.168.1.0/24
 The lines above are not enough if you use ipv6 in /etc/hosts. If so,
add one more line to /etc/webapps/phpmyadmin/.htaccess:
 allow from ::1
 Otherwise you'll get an error similar to "Error 403 - Access
forbidden!" when you attempt to access your phpMyAdmin installation.
 Review apache phpmyadmin configuration
 Your /etc/httpd/conf/extra/httpd-phpmyadmin.confshould have the
following information:
 Alias /phpmyadmin "/usr/share/webapps/phpMyAdmin"
 <Directory "/usr/share/webapps/phpMyAdmin">
 AllowOverride All
 Options FollowSymlinks
 Order allow,deny
 Allow from all
 php admin value open basedir
"/srv/:/tmp/:/usr/share/webapps/:/etc/webapps:/usr/share/pear/"
 </Directory>
 You need the mcrypt (if you want phpmyadmin internal authentication)
and mysql modules, so append the following to
/etc/php/conf.d/custom.ini
 extension=mcrypt.so
 extension=mysql.so

**** MySQL

***** Install

Installation
 Install the mysql package which is available in the official
repositories.
 After installing MySQL, you should run the setup script as root:

rc.d start mysqld && mysql secure installation

 Then restart MySQL:

rc.d restart mysqld

 To start MySQL automatically at boot, edit /etc/rc.conf and add
mysqld to the DAEMONS array.
 If you use systemd
 add these two files.
 /lib/systemd/system/mysqld.service
 [Unit]
 Description=MySQL Server
 After=network.target
 [Service]
 Type=simple
 ExecStart=/usr/bin/mysqld --user=mysql
--pid-file=/var/run/mysqld/mysqld.pid
 ExecStop=/bin/kill -15 $MAINPID
 PIDFile=/var/run/mysqld/mysqld.pid
 Restart=always
 [Install]
 WantedBy=multi-user.target
 /etc/tmpfiles.d/mysqld.conf
 # systemd tmpfile settings for mysql
 # See tmpfiles.d(5) for details
 d /var/run/mysqld 0755 mysql mysql -
 Start MySQL server:
 # systemctl start mysqld.service
 To start MySQL automatically at boot,
 # systemctl enable mysqld.service
 Configuration
 Once you have started the MySQL server, you probably want to add a root
account in order to maintain your MySQL users and databases. This can be
done manually or automatically, as mentioned by the output of the above
script. Either run the commands to set a password for the root account,
or run the secure installation script.
 You now should be able to do further configuration using your favorite
interface. For example you can use MySQL's command line tool to log in
as root into your MySQL server:
 mysql -p -u root
 To start MySQL at bootup add mysqld to the list of daemons in
/etc/rc.conf

***** enable remote access to mysql

Enabling Remote Access to MySQL:

 Step # 1: Login over ssh if server is outside your IDC
 First, login over ssh to remote MySQL database server

ssh USER@SERVER IP

 Step # 2: Enable networking
 Once connected you need edit the mysql configuration file my.cfg using
text editor such as vi.

vim /etc/mysql/my.cnf

 Step # 3: Once file open, locate line that read as
 [mysqld]
 Make sure line skip-networking is commented (or remove line) and add
following line
 bind-address=YOUR-SERVER-IP
 For example, if your MySQL server IP is 65.55.55.2 then entire block
should be look like as follows:
 [mysqld]
 user = mysql
 pid-file = /var/run/mysqld/mysqld.pid
 socket = /var/run/mysqld/mysqld.sock
 port = 3306
 basedir = /usr
 datadir = /var/lib/mysql
 tmpdir = /tmp
 language = /usr/share/mysql/English
 bind-address = your public ip address
 #skip-networking .... .. ....
 Where:
 bind-address : IP address to bind to.
 skip-networking : Don't listen for TCP/IP connections at all. All
interaction with mysqld must be made via Unix sockets. This option is
highly recommended for systems where only local requests are allowed.
Since you need to allow remote connection this line should removed from
the file or put it in comment state.
 Step# 4 Save and close the file
 Restart your mysql service to take change in effect:

/etc/init.d/mysql restart

 Step # 5 Grant access to remote IP address
 Open the mysql console (assuming user 'root' with password 'mysql'):
 mysql -u root -p mysql
 If you want to add new database called foo for user bar and remote IP
202.54.10.20 then you need to type following commands at mysql> prompt:
 CREATE DATABASE foo;
 GRANT ALL ON foo. TO bar@'202.54.10.20' IDENTIFIED BY 'PASSWORD';
 How do I grant access to existing database?
 Let us assume that you are always making connection from remote IP
called 202.54.10.20 for database called webdb for user webadmin, To
grant access to this IP address type the following command At mysql>
prompt for existing database:
 update db set Host='202.54.10.20' where Db='webdb';
 update user set Host='202.54.10.20' where user='webadmin';
 Step # 5: Logout of MySQL
 Type exit command to logout mysql:
 exit
 Step # 6: Open port 3306

 note: this is for outside connections only
 You need to open TCP port 3306 using iptables or BSD pf firewall. A
sample iptables rule to open Linux iptables firewall
 Step # 7: Test it
 From your remote system or your desktop type the following command:

mysqladmin -h SERVERADRESS --port=3306 variables -u USER -p

 IE:

mysqladmin -h 192.168.0.2 --port=3306 variables -u xbmc -p

 Where,
 -u webadmin: webadmin is MySQL username
 -h IP or hostname: 65.55.55.2 is MySQL server IP address or
hostname (FQDN)
 -p : Prompt for password
 You can also use telnet to connect to port 3306 for testing purpose:
 $ telnet 65.55.55.2 3306

***** commands

To login (from unix shell) use -h only if needed.
 # [mysql dir]/bin/mysql -h hostname -u root -p
 Create a database on the sql server.
 mysql> create database [databasename];
 List all databases on the sql server.
 mysql> show databases;
 Switch to a database.
 mysql> use [db name];
 To see all the tables in the db.
 mysql> show tables;
 To see database's field formats.
 mysql> describe [table name];
 To delete a db.
 mysql> drop database [database name];
 To delete a table.
 mysql> drop table [table name];
 Show all data in a table.
 mysql> SELECT  FROM [table name];
*** create AP on laptop
**** using arch bash script
https://github.com/oblique/create_ap
and here:
https://wiki.archlinux.org/index.php/Software_access_point

Dependencies:

#+BEGIN_EXAMPLE
bash (to run this script)
util-linux (for getopt)
hostapd
iproute2
iw
haveged (optiona 
#+END_EXAMPLE

Example:

#+BEGIN_SRC sh
#No passphrase (open network):
create_ap wlan0 eth0 MyAccessPoint
#WPA + WPA2 passphrase:
create_ap wlan0 eth0 MyAccessPoint MyPassPhrase
#+END_SRC

** X system
*** X11
**** keyboard
***** Accents on US keyboards						:Fav:

Typing in foreign languages such as French, Italian and German can be difficult on an American keyboard. To remedy this, [[/index.php/Xorg][Xorg]] provides options such as the compose key and the [[/index.php/Xmodmap][xmodmap]] utility.

!XCompose!

The compose key, when pressed in sequence with other keys, produces a Unicode character. E.g., in most configurations pressing

!<Compose>+' (RELEASEKEY)  then e    >>>>>>   produces ! 

Compose can be enabled on any keyboard with setxkbmap. For example, compose can be set to right alt by running:

#+BEGIN_EXAMPLE
setxkbmap -option compose:ralt
#+END_EXAMPLE

If you want another key to be your Compose key, see

^/usr/share/X11/xkb/rules/base.lst^

You may also edit your /etc/X11/xorg.conf.d/10-evdev.conf and change InputClass / 'evdev keyboard catchall' to look like this.

#+BEGIN_EXAMPLE
    Section "InputClass"
            Identifier "evdev keyboard catchall"
            MatchIsKeyboard "on"
            MatchDevicePath "/dev/input/event"
            Driver "evdev"
            Option "XkbOptions" "terminate:ctrl_alt_bksp,compose:ralt"
    EndSection
#+END_EXAMPLE

!Key combinations!

By default, the compose key uses combinations defined in a file. The file used depends on the user's locale: an American using
LC\_CTYPEen\_US.UTF-8, for instance, would find the defaults in 

^/usr/share/X11/locale/en_US.UTF-8/Compose^


@WARNING: for something like <Multi_key> <numbersign> <q> , you need to press IE Altr+Shift+3 RELEASE and then press IE q@

#+begin_src sh
<Multi_key> <less> <less>        ,..: ""   guillemotleft # LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
<Multi_key> <greater> <greater>  ,..: ""   guillemotright # RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK   

#where Multi-key is the 'compose key', IE Alt-right and then less less is twice the <  key (Shift+,)
# IE press  AL-r + Shift + ,,

#+end_src

Some of the default combinations are listed below:

#+BEGIN_SRC sh

<Multi_key> <O> <c>              ,..: ""   copyright # COPYRIGHT SIGN
<Multi_key> <f> <s>              ,..: ""   U017f # LATIN SMALL LETTER LONG S

# Musical alterations
 
<Multi_key> <numbersign> <q>    ,...: ""   U2669 # QUARTER NOTE
<Multi_key> <numbersign> <e>    ,...: ""   U266a # EIGHTH NOTE
<Multi_key> <numbersign> <E>    ,...: ""   U266b # BEAMED EIGHTH NOTES
<Multi_key> <numbersign> <S>    ,...: ""   U266c # BEAMED SIXTEENTH NOTES
<Multi_key> <numbersign> <b>     ,..: ""   U266d # MUSIC FLAT SIGN
<Multi_key> <numbersign> <f>     ,..: ""   U266e # MUSIC NATURAL SIGN
<Multi_key> <numbersign> <numbersign> ,.: ""   U266f # MUSIC SHARP SIGN


<Multi_key> <o> <x>              ,..: ""   currency # CURRENCY SIGN
<Multi_key> <comma> <minus>      ,..: ""   notsign # NOT SIGN
<Multi_key> <comma> <L>          ,..: ""   U013B # LATIN CAPITAL LETTER L WITH CEDILLA
<Multi_key> <l> <comma> ,...,...: ""   U013C # LATIN SMALL LETTER L WITH CEDILLA
<Multi_key> <c> <L>              ,..: ""   U013D # LATIN CAPITAL LETTER L WITH CARON
<Multi_key> <less> <l> ,,...,...: ""   U013E # LATIN SMALL LETTER L WITH CARON

<Multi_key> <underscore> <0>     ,..: ""   U2080 # SUBSCRIPT ZERO
4414 <Multi_key> <underscore> <1>     ,..: ""   U2081 # SUBSCRIPT ONE
4418 <Multi_key> <underscore> <2>     ,..: ""   U2082 # SUBSCRIPT TWO
4424 <Multi_key> <underscore> <3>     ,..: ""   U2083 # SUBSCRIPT THREE
4428 <Multi_key> <underscore> <4>     ,..: ""   U2084 # SUBSCRIPT FOUR
4432 <Multi_key> <underscore> <5>     ,..: ""   U2085 # SUBSCRIPT FIVE
4436 <Multi_key> <underscore> <6>     ,..: ""   U2086 # SUBSCRIPT SIX
4440 <Multi_key> <underscore> <7>     ,..: ""   U2087 # SUBSCRIPT SEVEN
4444 <Multi_key> <underscore> <8>     ,..: ""   U2088 # SUBSCRIPT EIGHT
4448 <Multi_key> <underscore> <9>     ,..: ""   U2089 # SUBSCRIPT NINE
4452 <Multi_key> <underscore> <plus>  ,..: ""   U208A # SUBSCRIPT PLUS SIGN

<Multi_key> <1> <3>,,...,...: "",..U2153 # VULGAR FRACTION ONE THIRD
4486 <Multi_key> <2> <3>,,...,...: "",..U2154 # VULGAR FRACTION TWO THIRDS
4487 <Multi_key> <1> <5>,,...,...: "",..U2155 # VULGAR FRACTION ONE FIFTH
4488 <Multi_key> <2> <5>,,...,...: "",..U2156 # VULGAR FRACTION TWO FIFTHS
4489 <Multi_key> <3> <5>,,...,...: "",..U2157 # VULGAR FRACTION THREE FIFTHS
4490 <Multi_key> <4> <5>,,...,...: "",..U2158 # VULGAR FRACTION FOUR FIFTHS
4491 <Multi_key> <1> <6>,,...,...: "",..U2159 # VULGAR FRACTION ONE SIXTH
4492 <Multi_key> <5> <6>,,...,...: "",..U215A # VULGAR FRACTION FIVE SIXTHS
4493 <Multi_key> <1> <8>,,...,...: "",..U215B # VULGAR FRACTION ONE EIGHTH
4494 <Multi_key> <3> <8>,,...,...: "",..U215C # VULGAR FRACTION THREE EIGHTHS
4495 <Multi_key> <5> <8>,,...,...: "",..U215D # VULGAR FRACTION FIVE EIGHTHS
4496 <Multi_key> <7> <8>,,...,...: "",..U215E # VULGAR FRACTION SEVEN EIGHTHS
4497 <Multi_key> <0> <3>,,...,...: "",..U2189 # VULGAR FRACTION ZERO THIRDS



#+END_SRC

***** Changing your caps lock into Ctrl in X

beofre starting you may want to backup the current xmodlemaps:

 xmodmap -pke > /path/to/file

 install xshowkeys or xev to show the keycode you need:

 xshowkeys

 The interesting parts here is 'keycode' and perhaps what's inside the
parenthesis. Be sure to note the keycodes of the keys you're interested
in. 66 is the keycode of my Caps Lock, depending on you hardware yours
might be something else (most probably it'll be 66 on a PC).
 Now lets do some real action! You might want to start with executing
xmodmap -pke and redirect the output to some file. That way you might be
able to restore your keymap without restarting your X. After that, do
this:

 xmodmap -e 'keycode 66 = Control L'
 xmodmap -e 'clear Lock'
 xmodmap -e 'add Control = Control L'

 And test if that did the trick. If you don't get the desired effect,
try some other combinations. You may want to put your Caps Lock
somewhere else, find a decent key and do this:

 xmodmap -e 'keycode 117 = Caps Lock'
 xmodmap -e 'add Lock = Caps Lock'

 117 is one of the windowskeys on my Keyboard. Find a good key with xev
as described before.
 I assume you don't want to do those commands every time you restart
your X. The solution to this is to put something like this:
 keycode 66 = Control L
 clear Lock
 add Control = Control L
 (ie, the above commands without the xmodmap before each line). in a
file called .Xmodmap or .xmodmap in your home dir.
 Then make sure the command xmodmap .Xmodmap is executed somewhere in
your X startup files (IE .xinitrc)
 To activate your custom table when starting Xorg add the following:
 ~/.xinitrc
 if [ -f $HOME/.Xmodmap ]; then
 /usr/bin/xmodmap $HOME/.Xmodmap
 fi
 . If you have a good distribution that's already automatically done.
Debian for example will xmodmap a file called .Xmodmap. Check out the
scripts in /etc/X11/ to see if it's done in your dist, and what the
filename should be.

***** disable caps lock key

issue:
setxkbmap -option caps:none
***** change right alt key to alt-gr on key board 
issue:

#+begin_src sh
setxkbmap us intl -option lv3:ralt_switch
#+end_src
***** set default keyboard, disable caps lock

#+BEGIN_SRC emacs-lisp
setxkbmap -layout "us, se" -option "grp:caps_toggle"
#+END_SRC

*** xprop
**** basics
used to find properties of of x windows/cleints
for basic info launch :
 xprop
 to get the output:
 [[~/Dropbox/Org/Tech/linux_files/Image_8xF8nQGOLWZWeaA1czDk5w_0001.png]]
 issue on the workspace you are in
 xprop -root | grep " NET CURRENT DESKTOP(CARDINAL)"
 or
 xprop -root  NET CURRENT DESKTOP | cut -d '=' -f 2
**** Click on a GUI window and show its process ID and command used to run the process
#+begin_src sh
xprop | awk '/PID/ {print $3}' | xargs ps h -o pid,cmd
#+end_src

*** xwininfo

used to view output and info on size etc of X clients. issue:

 xwininfo
 [[~/Dropbox/Org/Tech/linux_files/Image_Nq932J2S70IWYo35S2i7MA_0001.png]]

*** wmctrl

**** show information about all the windows on your desktop

run wmctrl with the -l option to show information about all the windows
on your desktop:

wmctrl -l

 0x020000ba 0 minimus Quake Term
 0x00e00031 -1 minimus Desktop
 0x01200003 -1 minimus gkrellm
 0x00800029 -1 minimus Top Expanded Edge Panel
 0x00800003 -1 minimus Bottom Expanded Edge Panel
 0x01000172 0 minimus greenfly.org - Mozilla Firefox

**** list all info with offset info

using the -G option:

 wmctrl -lG
 0x00e00031 -1 0 48 1280 768 minimus Desktop
 0x01200003 -1 -130 100 62 367 minimus gkrellm
 0x00800029 -1 0 0 1280 24 minimus Top Expanded Edge Panel
 0x00800003 -1 0 1524 1280 25 minimus Bottom Expanded Edge Panel
 0x01000172 0 6 96 1040 708 minimus greenfly.org - Mozilla Firefox
 0x0201c24f 0 -2552 96 642 410 minimus Eterm Main 1
 0x02000021 0 -2552 96 642 410 minimus Eterm Main 1
 0x020000ba 0 938 96 810 500 minimus Irssi Term

 In this output, the -G option adds four extra columns in the middle.
 These columns represent the x-offset, y-offset, width and height,
respectively. So, in the case of Firefox, the x-offset is 6, the
y-offset is 96, the width is 1040, and the height is 708. Jot down these
values for the two windows you want to script, and then resize and move
them to reflect your "chat mode". Next, run the command again and jot
down the new values.

**** modify the position and size of a window

wmctrl provides the -e argument that allows you to modify the position
and size of a window. The argument actually takes five integer values in
a row---
 g,x,y,w,h
 where g is the gravity of the window (usually put 0 here), x and y are
the x and y coordinates for the top-left corner of the window, and w and
h are the width and height, respectively. So, if I had moved my Firefox
terminal and wanted to move it back to the above coordinates, I would
run the following:

 wmctrl -r Firefox -e '0,6,0,1040,708'

*** Xrandr

Dynamically testing different resolutions

xrandr shows you the names of different outputs available on your system (LVDS, VGA-0, etc.) and resolutions available on each: Screen 0: minimum 320 x 200, current 1400 x 1050, maximum 1400 x 1400 VGA disconnected (normal left inverted right x axis y axis) LVDS connected 1400x1050+0+0 (normal left inverted right x axis y axis) 286mm x 214mm 1400x1050 60.0+ 50.0 [...]
You can direct xrandr to set a different resolution like this:

#+BEGIN_SRC sh
xrandr --output LVDS --mode 1024x768
#+END_SRC


The refresh rate may also be changed, either at the same time or
independently:

#+BEGIN_SRC sh
xrandr --output LVDS --mode 1024x768 --rate 75
#+END_SRC

!$Note$!: Changes you make using xrandr only last through the current
session. xrandr has a lot more capabilities - see man xrandr for
details. the best way is to install a gui xrandr app that ouptuts a script you
can then use in your .xinitrc

%Tip% arandr is a good gui frontend%

*** Xsel (x-clipboard)
**** worker
#+BEGIN_SRC sh
#for just the path
echo -n {p}  | xsel -i ;
#for path and file

#+END_SRC

* linux hardware tips
** x200

*** powersave tips

Finding and removing high interrupt packages
 Install PowerTOP
 Run PowerTOP as root (sudo powertop) and look for the packages that
come up on top of the interrupt frequency list. These are the packages
that wake up the CPU most frequently.
 In my case the majority of the easily preventable interrupts were from
3 packages:
 i915, the intel graphics driver
 SCIM
 Gnome Power Manager
 With the first one accounting for the bulk of the battery life
improvement.
 The %'s in PowerTOP give you an indication of what to focus on, no need
to worry about a 1% problem (unless it is easy to prevent that it), it
will not have much impact on your battery life.
 Remember that over time these packages will improve and will not need
to be removed.
 Turning off DRI
 Just insert: Option "NoDRI" to the "Device" section in
/etc/X11/xorg.conf. This turns off all 3D, so no compiz or other fancy
effect. Worth it for me because the impact on battery life is
substantial.
 Turning off SCIM
 I had my system set to accept foreign characters. Going to System >
Language Support > Disable support to enter complex characters does the
trick.
 Turning off Gnome Power Manager
 You may decide you cannot live without it, but on my system I disabled
Gnome Power Manager from the startup list: System > Sessions > Power
Management daemon.
 I replaced it with the Gnome Panel Battery Charge Monitor (Add to
Panel...) which works well enough for me.
 Reducing CPU voltage
 Installing phc module patches
 The phc module patches are available here, make sure you get the
version that matches you kernel version. You can easily check by typing
uname -r in a console.
 You need not compile your own module, check the thread, users have
posted already compiled versions of the acpi-cpufreg.ko module for most
kernel versions.
 Once you have the apci-cpufreq.ko module, back up the old module:
 sudo cp /lib/modules/$(uname
-r)/kernel/arch/x86/kernel/cpu/cpufreq/acpi cpufreq.ko
 /lib/modules/$(uname
-r)/kernel/arch/x86/kernel/cpu/cpufreq/acpi cpufreq.ko.bak
 Then copy the new module to the right place:
 sudo cp acpi cpufreq.ko /lib/modules/$(uname
-r)/kernel/arch/x86/kernel/cpu/cpufreq
 Restart your system and check that you now have voltage controls by
typing: more /sys/devices/system/cpu/cpu0/cpufreq/phc vids
 You should see something like:
 38 29 23 13 (your values may be different)
 These are the voltage index values for the 4 frequencies available on
your CPU. They are directly related to the actual voltages, phctools
does the computation for you as explained below.
 Notes:
 If you check phc fids you will see values that do not make sense
 more /sys/devices/system/cpu/cpu0/cpufreq/phc fids
 These are supposed to be the available frequency indexes, which are the
ratios of CPU frequency to FSB frequency, sometimes called multipliers.
There is a bug in the phc patches which affects how the multiplers are
reported. This bug does not affect undervolting your CPU.
 Intalling phctools
 Download them here.
 Unpack the package in a directory where you can conveniently access it.
Use the install script (install.sh) to enable pctools to run without
requiring a password.
 Also download here the update which supports the Core2Duo CPU.
 Unpack the archive and copy the file to"inc/libs" within the PHCTool
directory (replace the old one).
 Lastly made sure the module msr is loaded. PhcTool works without it,
but having it loaded allows it to display the actual votage fed into
your CPU.
 sudo modprobe msr
 You can make this module load automatically by adding it to the file
/etc/modules
 Also install the burnMMX application, it is designed to put a heavy
load on your system and is necessary to make sure the voltages you
choose will work under load:
 sudo apt-get install burnMMX
 Experimenting with lower voltages
 This is the scary part: you will have to crash your system on purpose.
I found it to be harmless, but be forewarned that some users have
reported that it could damage your system.
 DO NOT RUN THIS TEST WITH A CUSTOM PROGRAM TO CONTROL THE FAN, YOU
COULD FRY YOUR SYSTEM. FIRST REVERT TO HW CONTROLLED FAN IF YOU MADE ANY
CHANGES TO FAN CONTROL.
 Check that you are using "ondemand" as the frequency scaling governor.
This governor delivers the lowest power consumption according to Intel.
An easy way to do this is to use Frequency Scaling Monitor Gnome panel
applet.
 Another way is to check:
 /sys/devices/system/cpu/cpu0/cpufreq/scaling governor
 which returns the currently active governor. You can echo a new value
as root, it takes effect immediately.
 Start phctools:
 phctools.sh
 On the Info tab, you will see your CPU identified and the available
frequencies for this CPU:
 2267Mhz 2266Mhz 1600Mhz 800Mhz
 On the Voltage tab you will see the VID and corresponding voltage for
each frequency as well as the difference from the default values.
 The phc patches prevent you from using a value higher than the highest
defaults voltage or a value lower than the lowest default voltage even
though phctools will let you enter higher and lower values. They will
have no effect, so stay within the range defined by the highest and
lowest VID value.
 The default values are also reloaded each time you restart the system.
Do NOT set phctools to "restore VID on load" at this time.
 Now the fun begins...
 Start burnMMX in a terminal window. WARNING this puts a lot of stress
on your sys
 Lower the first VID value, 25 should work to get started. Do this for
both CPU's (tab on the left for CPU0 and CPU1
 Save values
 Use your system for a bit and see if it is stable
 Lower the first VID value until your system crashes (or stop before if
you do not dare).
 My threshold was 15, at this VID my system crashes after less than a
minute. At this point reboot your system, restart phctools and set the
VID for 2267Mhz to the value that crashed + 2. Do this for both CPU's.
 Restart and work on the other frequencies, using the Frequency Scaling
Monitor applet to force the CPU to the frequency you want to test.
 On my system the safe values were:
 17 15 13 13
 Making the voltages stick
 One you have found the lowest VID's that your system can safely run
with, enter them on phctools Voltages for both CPU0 and CPU1, then go to
settings and click "restore VID's on load".
 All that is left is to make phctools restore your VID's each time you
boot. Add the command:
 yourphcdirectory/phctools.sh background
 to your startup applications in System > Sessions. It will
automatically start phctools, make it restore your VID's and quit.
 Note that if you do nothing, the original VID's are automatically
reloaded each time you reboot the system.

*** turning off the wireless radios

Turning off the wireless radios
 The X200 has a great feature: a button on the left side to disable all
radios. Use it when you do not need wireless. When you need wireless,
use FN + F5 to turn on/off Wifi and Blutooth.
 The hidden power hog is the 3G broadband modem (Ericsson F3507g), even
when the 3G led is off. To completely shut down power to the modem:
 sudo echo 0 > /sys/devices/platform/thinkpad acpi/wwan enable

*** kill bluetooth

Unused Bluetooth
 Many laptops now come with Bluetooth.
 Just like WiFi, Bluetooth has a radio transmitter, so it can take quite
a bit of power.
 Unlike WiFi, Bluetooth is rarely used, so it's very possible that your
Bluetooth device isn't actually used for anything, and is just consuming
battery life.
 You can see if there are Bluetooth devices active on your system with
the hcitool command:
 # hciconfig
 hci0: Type: USB
 BD Address: 00:00:00:00:00:00 ACL MTU: 0:0 SCO MTU: 0:0
 DOWN
 RX bytes:0 acl:0 sco:0 events:0 errors:0
 TX bytes:0 acl:0 sco:0 commands:0 errors:0
 In the example above, a USB bluetooth dongle is present and active.
 Note that many internal bluetooth adapters in laptops now use USB.
 The easiest way to disable a USB bluetooth device, is to use these
commands:
 hciconfig hci0 down
 rmmod hci usb

*** gen tips

 - General powersaving settings, aka laptop mode: Install and then
activate laptop-mode editing the file
"/etc/laptop-mode/laptop-mode.conf". After that, check all the files in
"/etc/laptop-mode/conf.d/" and activate all the things you can. Except
maybe cpufreq, I rather let cpufreqd do that job, it's much simpler.
Start laptop-mode with "/etc/rc.d/laptop-mode start" and add it to your
daemon list in your rc.conf file. In case you skip something here, I'll
probably mention it anyway, but laptop-mode comes in handy for
automating it.
 - Cpu frequency scaling. I recommend using cpufreqd, it is very very
simple. Install it, do a "echo ondemand > /etc/conf.d/cpufreq" and start
the daemon as shown above, also adding it to the daemon list.
 - Turn off the video outputs. It sounds weird, but with the xorg 1.5
and the old intel 2.4 drivers, the video chipset doesn't detect the
outputs right and turns on HDMI. The newer xorg 1.6 and intel driver 2.6
didn't have this problem when I tried them, but check it anyway. You can
do it with "xrandr". If you see a star (  ) on some line, that output
is active. Turn it off with "xrandr --output HDMI-2 --off". You should
check again on restart.
 - Turn down the wifi power. This is a real power hog, it can drain more
than 1.5W doing nothing. The control file is
"/sys/class/net/wlan0/device/power level". With "echo 5 > file" you
maximize powersaving. Obviously, "cat file" gives you the wifi status.
I've noticed some misbehavior lately, if you are not connected and with
some network manager daemon running, it keeps going back to level 0
(maximum power usage). I usually fix it with:
 # killall wicd-manager
 # /etc/rc.d/wicd stop
 # killall wpa supplicant
 # ifconfig wlan0 up
 # echo 5 > /sys/class/net/wlan0/device/power level
 # ifconfig wlan0 down
 # cat /sys/class/net/wlan0/device/power level
 If the last command shows a "INDEX:5", it'll probably stay that way,
but checking it some time later would be good. As usual, let a script do
that for you. If it is not 5 but 0, repeat the previous 3 steps. If you
are conncected to some network, it usually stays at level 5 without any
issue after a simple echo.
 - Turn off bluetooth if you are not using it. As easy as "echo disable
> /proc/acpi/ibm/bluetooth". Sometimes it doesn't want to wake up again,
try a "lsusb" after re-enabling it. Again, acpid is a great way to
handle it, here is a chunk of my handler:
 1005)
 if [ "$(cat /var/local/bluetooth)" = "disabled" ]; then
 echo "enable" > /proc/acpi/ibm/bluetooth
 echo "enabled" > /var/local/bluetooth
 lsusb > /dev/null
 logger "ACPI bluetooth on"
 else
 echo "disable" > /proc/acpi/ibm/bluetooth
 echo "disabled" > /var/local/bluetooth
 logger "ACPI bluetooth off"
 fi
 ;;
 - Turn on SATA link powersaving. This one is pretty straightforward:
"for i in /sys/class/scsi host/host/link power management policy;
do echo min power > $i; done". Once every power cycle. If you connect
the power plug and disconnect it, only one link file will go back to
powersave, so you have to execute it every time you go on battery.
Acpid, again, is a great way to do that.
 - Turn on PCIe powersaving. The control file is
"/sys/module/pcie aspm/parameters/policy". You can "echo powersave" to
it to turn it on and "echo performance" to turn it off. As always, cat
will tell you the actual status.
 - Activate the sound auto-suspend. Echo the timeout to
"/sys/module/snd hda intel/parameters/power save". If you are not
using the sound at all, mute it with the hardware button, just in case.
 - This one may be VERY DANGEROUS. You can turn off the fan if you are
going to do lightweight work and you trust your programs to be
infinite-loop-free, so firefox is out of the question here. You have to
load the thinkpad acpi module with "fan control=1" parameter and then
manage the control file "/proc/acpi/ibm/fan". Again, "echo" stuff to set
the fan on/off, "cat" to get info. I HIGHLY recommend to use the
watchdog function and some script to make sure the processor won't melt.
You can read the temperatures at "/proc/acpi/ibm/thermal",
"/sys/class/thermal/thermal zone/temp" and
"/sys/bus/platform/devices/coretemp./temp1 input", among others.
Google is your friend ;)
 - If hal is polling you nonexistent (on a X200) CD drive, kill it.
 - If you are not using it, close firefox. The diffrerence may be 1W. If
you plan on use it later, a simple "killall -STOP firefox" will do the
trick. When you are going to use it again, "killall -CONT firefox". Bind
it to a hotkey if you want.
 - Also, "ifconfig eth0 down" sure doesn't hurt if you are not using the
good ol' ethernet interface.
 - Unloading modules doesn't usually work, but you may try it (and post
a comment with your findings!). Some people unloads uhci,
snd hda intel, or iwlagn. I haven't seen any difference trying, but
your mileage may vary. You can also take one core of the cpu offline,
but it seems to cause to actually consume MORE power than sitting idle.
I haven't measured it myself, so if you do, please let me know! The
control file is "/sys/devices/system/cpu/cpu1/online", 0 takes it
offline, 1 brings it back to work.
 - Last but not least: install and run powertop. It's a wise program.
Follow it's suggestions. I use it to activate USB autosuspend and see
which programs and wreaking havoc. Firefox, amarok2 and any java-based
ones are on top positions, but some other programs may be broken and
causing the processor to work more than it should. Knotify4 in KDE 4.1
had a 100Hz timer, for instance.
 If I remember any other tweak, I'll post it here, stay tuned.
 With all these tricks, brightness at minimum, everything off and doing
 nothing , the X200s drains 5.8W. With wifi on, brightness 5/15,
browsing and programming (without heavy compiling), it goes at around
6.5W. On full brightness, no wifi, just above 7W. Full brighness + wifi
it's under 7.5W. You have to do some pretty heavy stuff to take it above
10W, watching HD movies at full volume and brightness will do it, but
anyway, at 10W the battery still lasts more than 8 hours. If you want me
to try any specific combination, let me know.

** dockstar

*** Install Debian

Install Debian Linux on your Dockstar
 This will install Debian Squeeze on a USB drive connected to your
Dockstar.
 1) Find your Pogoplug's IP address (through the router dhcp menu or
through the nmap command) and connect via SSH:
 username: root
 password: stxadmin
 2) in a linux box partition your flash drive using fdisk or gparted:
 fdisk /dev/sda
 # Configure partion 1 as Linux (I'd recommend making this at least
512Mb. The default bare-bones installation uses 280Mb.)
 # Configure partion 2 as Linux Swap (I have no idea what a suitable
value would be. I used 256MB.)
 3)connect usb drive to the dockstar and issue this to make sure sda is
the right drive:
 /sbin/fdisk -l
 and check ouptut to see if thats the drive
 4) on the dockstar through ssh download and run the debian install
script:
 cd /tmp
 wget http://jeff.doozan.com/debian/dockstar.debian-squeeze.sh
 chmod +x dockstar.debian-squeeze.sh
 export PATH=$PATH:/usr/sbin:/sbin
 ./dockstar.debian-squeeze.sh
 The script will take some time to download the debian images and
extract them to your flash drive. The total install time will vary with
the speed of your flash drive and your Internet connection. On my
system, it takes about 20 minutes. Once it's finished, you have the
option of rebooting into your new debian install.
 The default root password in Debian is 'root'. After you've logged in,
I'd recommend changing the root password and configuring
/etc/apt/sources.list to point to something near you.
 passwd
 vi /etc/apt/sources.list
 5)add a user to the system:
 adduser zeltak
 5)add static IP if needed:
 1. First you need to edit /etc/network/interfaces using your favorite
text editor:
 sudo vim /etc/network/interfaces
 2. Next you need to enter your static IP information:
 auto lo
 iface lo inet loopback
 iface eth0 inet static
 address 192.168.0.20
 netmask 255.255.255.0
 gateway 192.168.0.44
 auto eth0
 
 3. Save your changes.
 4. Now you need to point your server to your DNS server. To do this,
you need to edit /etc/resolv.conf:
 sudo vi /etc/resolv.conf
 name server xxx.xxx.xxx.xxx (Replace the x's with the IP address of
your DNS server)
 nameserver 192.115.106.10
 5. Save your changes, then restart your network:
 sudo /etc/init.d/networking restart
 6)install sudo:
 apt-get install sudo
 Add sudo permissions:
 to add a user to the sudors list you need to issue:
 this is done with:
 visudo
 using visudo you need to type "i" to edit something and to type ":wq"
to save and exit
 enter the user name needed:
 zeltak ALL=(ALL) ALL
 7)install software:
 apt-get install vim sudo weechat weechat-plugins rtorrent mc screen
nfs-common portmap
 8)mount nfs dirs and create entry in taskbar

*** current IP

192.168.0.20

*** errors

**** procceses killed

if you get an error about procceses killed IE:

 Generating locales... en US.UTF-8.../usr/sbin/locale-gen: line 41:
27962 Killed localedef -i $input -c -f $charset -A

 this usually meand there is no memory and no swap partiton is avilable
 create a swap partition (see[[#3KeBPFV6TPxLS5pxDtOxyw][THIS]]) and
rerun again

*** swap

by default the pogo app distro comes without a swap partition since swap
kills flash drives but if need occesionally
 create a swap partition (see[[#3KeBPFV6TPxLS5pxDtOxyw][THIS]]) and turn
it off on when needed using [[#KMHV3aORURXCDCZBPt669A][this command]]

*** plugapps

**** install

Install the new Bootloader (U-Boot)
 While connected via SSH to your plug, copy, paste, and run the
following commands to download a bootloader that can boot from USB
drives:
 cd /tmp
 wget http://jeff.doozan.com/debian/uboot/install uboot mtd0.sh
 chmod +x install uboot mtd0.sh
 ./install uboot mtd0.sh
 Format your USB drive

 After the new bootloader is installed, you will need to use fdisk to
partition a storage device. Plug in a 1GB or bigger USB drive. REMOVE
ALL OTHER DRIVES. Move everything you need off of the drive and back it
all up.
 Everything on the USB drive with be deleted and replaced with PlugApps
Linux.
 1a. Now run:
 /sbin/fdisk /dev/sda
 1b. At the fdisk prompt, delete old partitions and create a new one:
 Now type p. This will list any partitions on your disk drive.
 Type d 1, d 2, and so on to delete all partitions.
 Type p to list partitions. There should be no partitions left.
 Now type n, then p for primary, 1 for the first partition on the
drive, and then press ENTER, accepting default values.
 Exit by typing w.
 1c. After you create a new partition, create the ext2 filesystem:
 wget http://plugapps.com/os/pogoplug/mke2fs
 chmod 755 mke2fs
 ./mke2fs /dev/sda1
 mkdir usb
 mount /dev/sda1 usb
 2. Download and install PlugApps Linux:
 cd usb
 wget
http://plugapps.com/os/2011.02/PlugApps-Linux-2011.02-rootfs.tar.gz
 tar -xzvf PlugApps-Linux-2011.02-rootfs.tar.gz # This will take a long
time
 rm PlugApps-Linux-2011.02-rootfs.tar.gz
 sync # Takes a while if you are using a flash drive
 3. Reboot. Cross your fingers and hope for the best.
 cd ..
 umount usb
 /sbin/reboot OR shutdown -h now
 4. The key of your device will be different, so you need to tell Mac OS
X or Linux to remove it from ~/.ssh/known hosts before using SSH again:
 ssh-keygen -R 192.168.1.123 #(using your device's IP)
 Log back in after your Pogoplug rebootsusing username root and
password root.

**** configure static IP

1)edit your /etc/rc.conf
 and make sure ONLY these lines are there in the network station:

eth0="eth0 192.168.0.20 netmask 255.255.255.0 broadcast 192.168.0.255"
 INTERFACES=(eth0)
 gateway="default gw 192.168.0.44"
 ROUTES=(gateway)

 2)IMPORTANT: edit the /etc/resolv.conf and make sure the GW and an
additonal dns server is there just in case:

# Use 'ifconfig -a' or 'ls /sys/class/net/' to see all available
interfaces.
 # Generated by dhcpcd
 # /etc/resolv.conf.head can replace this line
 # /etc/resolv.conf.tail can replace this line
 nameserver 8.8.8.8
 nameserver 192.168.0.44

 reboot to see if it worked

**** config

 rc.conf:

 change the hostname to your computer and timezone
 edit the deamons. make sure nfs-common comes up last
 fstab
mount nfs shares

 Proceed to add a user
ISSUE as root:
 useradd -m -g [initial group] -G [additional groups] -s
[login shell] [username]
 ie
 useradd -m -g users -G audio,lp,optical,storage,video,wheel,games,power
-s /bin/bash zeltak
 followed by passwd USER:
 passwd zeltak
 to set the password

**** installs

pacman -S vim mlocate tmux zip unzip unrar nfs-utils rpcbind ncdu
transmission-cli weechat mc ranger htop python2 rtorrent

**** sudo

Add sudo permissions:
 to add a user to the sudors list you need to issue:
 this is done with vi:
 using visudo you need to type "i" to edit something and to type ":wq"
to save and exit
 enter the user name needed:
 zeltak ALL=(ALL) ALL

**** backup

 you could shutdown, mount it on your linux desktop, and (as root, from
the base directory of the drive) do a
 tar -zcf ~/plug-backup.tgz ./

*** increase rootdelay (solve thumb drives not booting up)

until i made these adjusments the sometimes after a reboot the thumb
drives would not boot up and only would after numerous restarts
 to fix that and get a constant reboot action do this:
 (NOTE- normally you only have to do this once when you buy the new
device or after a firmware upgrade):
 1)login to the dockstar using ssh with original user:password
 2)issue:

killall hbwd

2) run

/usr/sbin/fw printenv | grep -i rootdelay

 and see the output. it should say that the root delay is 10
 3) run

/usr/sbin/fw setenv usb rootdelay 20

 to change the root delay to 20
 4 )rerun step 2 to make sure root delay is 20 now
 5) reboot and it should be fine now

/sbin/reboot

** WDTV

*** flash vs non-flash version (ext3)

The Normal (Flash) version requires Flashing the Firmware into the
WDTV Live. It contains all changes from the Changelog
 This is normally what you want to install
 the Ext3 version (non-flash) version is used either for testing
purposes, or for purposes of modifying the firmware content. It is
identical to the normal flashed version. The main difference is that
while WDLXTV runs from the internal read only NAND flash, the ext3
version is pivoted into and run directly off your external device. This
means the ext3 version gives you full read/write permissions.
 It gets only mounted at boot, if all of the following applies:
 a previously flashed WDLXTV version (0.2+) is already present on
the WDTVLive,
 root.bin is placed on the WDTV-plugged-in USB thumb drive.
 Note that its net.mounts, S00custom-options and smb.conf (if avaliable)
override the ones previously installed.
 Never unmount/unplug the USB thumb drive on which it resides, while the
WDTVLive is plugged-in (even if in standby), otherwise the system will
become unstable.
 For more information on how to use this, see USB Boot

*** install/upgrade custom firmware

This is relevant both for installing from scratch and on upgrades
 1.Download the Firmware
 Download the latest firmware (the flash version) for your device.
Ensure you get firmware appropriate to your device model (G2/Live/Plus).
 Zeltaks version is :
 wdlxtv-live
 EXT3 versions are for non-permanently testing newer builds, so ensure
you download the non-EXT3 version for your model.
 1.Install the Firmware to USB Stick
 Format a USB stick to FAT32. This is easily doable in Windows via
Computer -> Right Click (Driver Letter) -> Format. Quick format is all
that is needed. Linux users should use mkfs with vfat.
 Once your stick is formatted extract the firmware zip you copied and
place at a minimum the wdtvlive.bin and wdtvlive.ver files onto your USB
stick.
 If the archive contains a wdtvlive.fff file put it also on the USB
stick!
 You may also add the S00custom-options file if you wish.
 3.Flash the Firmware
 Turn your WDTV off.
 This means pulling the power plug, not using the remote. Disconnect any
existing USB devices you may have from your WDTV and insert the stick
into the left port.
 Plug the power cable back in, turn the unit on, and follow the onscreen
instructions (updating procedure)
 Notes:

 If the screen stays dark wait at least 15 minutes then remove power
completely again, move the USB stick to the rear port, and re-attempt.
 If the new firmware is not found and you don't get a "New firmware
found", edit the wdtvlive.ver file and change the first version number
to something higher than your currently installed firmware.
 Example:
 You have 1.02.21.WDLXTV LIVE-0.4.5.3 running and want to up- or
downgrade to any other version, change the content of wdtvlive.ver to
 VERSION='1.02.22.WDLXTV LIVE-0.4.5.3'
 If it is still not showing the upgrade notice it's most likely due to
your USB stick. (95% of the cases)
 In this case start over with formating the drive and copying the files
(make sure you safely remove the device after copying!
 If it's still not working try a different USB stick.
 4.Boot
 If all went well you should now be running the latest, greatest version
of WDLXTV!

*** after fresh install

after succesfuly installing wdlxtv on your device for the first time
follow these steps:
 1)You should now use telnet to set your SSH password.
 use telnet to login (using the WD ip adress)
 the user is root and password is emrty
 use the command
 passwd
 to set a unix password
 then logout and ssh in with user root IE:

ssh root@192.168.0.100

 2.Enabling Web Management (Live/Plus)
 Now that your SSH password has been set, you will probably want a more
convenient way to manage your WDTV. Luckily, it comes with a complete
and fully featured web GUI. While still connected via SSH/telnet, enter
the following commands to ensure the Apache web server is running.
 config tool -c APACHE='ON'
 config tool -s
 /etc/init.d/S66apache2 start
 Final Steps
 With the web GUI enabled, you can manage your WDTV much more easily.
Simply point your browser to either the hostname or IP address of your
WDTV box; you can find the IP address under the about system menu.
 The default user/pass for the web GUI is :
 wdlxtv/wdlxtv
 Note that most configuration changes require a reboot

*** WDTV Live - Revert to official firmware without flashing

Prerequisites:
 This procedure is valid if the WDTV Live is flashed with unofficial
firmware explained in http://wiki.wdlxtv.com/Main Page site.
 Procedure:
 - Download last wdtvlive firmware from
http://www.wdc.com/wdproducts/updates/?family=wdfwdtv live
 - unzip wdtvlive 1.04.10 V.zip
 - Download cramfsck-16k binary files from
http://forum.wdlxtv.com/download/file.php?id=4
 - Extract firmware and create system directory:
 - tail -c +33 wdtvlive.bin > wdtvlive.stripped.bin
 - ./cramfsck-16k -x dump wdtvlive.stripped.bin
 - cd dump
 - mkdir -p boot
 - mkdir -p dev
 - mkdir -p mnt/boot
 - mkdir -p mnt/fwup
 - mkdir -p opt
 - mkdir -p proc
 - Create root.bin file with right dimension:
 - dd if=/dev/zero of=new.root.bin bs=1024k count=150
 - Format it ext3:
 - mkfs.ext3 ./new.root.bin
 - Mount it:
 - sudo mkdir /tmp/smaller
 - sudo mount -o loop new.root.bin /tmp/smaller
 - Copy files:
 - sudo rsync -avHS /home/asdf/wdtv/wdtvlive 1.04.10 V/dump/
/tmp/smaller
 - sync
 - Umount it:
 - sudo umount /dev/loop1
 - Rename it:
 - mv new.root.bin root.bin
 - Copy root.bin in a formatted fat 8Gb root directory /
 - Plug-in usb key in wdtvlive
 - Reboot

*** control playback thorugh ssh

here is simple way to control osd from console, just send

echo % > /tmp/ir injection

 where % is char assigned to button u want to send, here;s table
 POWER - w
 HOME - o
 UP - u
 LEFT - l
 ENTER - n
 RIGHT - r
 DOWN - d
 BACK - T
 STOP - t
 OPTION - G
 REWIND - H
 PLAY/PAUSE - p
 FORWARD - I
 PREVIOUS - [
 NEXT - ]
 SEARCH - E
 EJECT - X
 for example
 Code:

echo X > /tmp/ir injection

 do the same as EJECT button.
 it should be quite easy to modify redindian's web-based remote control
page to make it work on live.
 also you can create a script and use it with IR commands
 is it => 1s (your comment on split second) that the 0x001051c memory
location is cleared? If so, then just a delay of 1s and a read would
suffice. We could just do something like this:
 Code:
 while true; do
 if [ $(devmem 0x001051c) != "0x00000000" ]; then
 act on remote code()
 sleep 1
 fi
 done
 #Obviously a bit more needed but this gets the point across.
 This would be very trivial to write if one wanted to use a remote
control that wasn't a programmable universal remote. I just use a
learning remote and this isn't needed I send actual WD TV remote codes
instead.
 We just need you to expose the extra remote options (Vol UP/DOWN, one
key subtitles, one key chapters, etc) and then this would be a perfect
daemon to stay running and act on all the extra remote codes.
 Great info BTW!

*** reboot

issue:

reboot -f

 Pasted from
<[[http://wiki.wdlxtv.com/Appz][http://wiki.wdlxtv.com/Appz]]>

*** plugins/apps

**** 1)initial setup

1.format a usb thumb drive with ext3
 2.download the non flash firmware (the one that supports plugins for
now 1.03.49 )
 3. unzip it to the ext3 thumb drive
 4.boot with it
 note-this will only work if
 a previously flashed WDLXTV version (0.2+) is already present on
the WDTVLive,
 root.bin is placed on the WDTV-plugged-in USB thumb drive.

 5.you will now get the new firmware from the flash drive with
read/write support. when you fo to the plugin button it will first
prompty you to create a plugin folder, accpet and it will create one in
the disk root (.pluginswdltx)
 6)turn off the device and add some plugins now to the .pluginswdltx
folder
 7. turn on the device and then you can install some plugins using the
gui menu
 you need to reboot after every plugin install to make the plugins work
 for apps see next stage

**** 2)ipkg

INSTALL (extremely simple)
 Installs in 4 simple steps:
 - format usb storage with ext3 (alredy done in step1)
 - put the wdlxtv optware.app.bin in it (in the root dir)
 - login from telnet or ssh
 - type optware-install.sh
 - type 'source /etc/profile'
 NOTE:
 - the usb storage needs to be ext3 formatted but this doesn't means
that you need the ext3 version of firmware
 - this port builds the /opt directory inside your usb storage
 every time your WDTV HD Live is booted with the app.bin your shell will
be configured to have the ipkg command type "ipkg list" to realize how
much software you can install (lots!)
 use ipkg install to install apps:

$ipkg install weechat

**** 3)optware install

ipkg install bitlbee mc weechat ncdu vim zsh mlocate mpd htop rsync zip
unzip unrar wget python ruby perl

*** Turn off all LED permanently?

To turn LED's off you can use a script like this:
 (if you name it S99user-script and put it in /conf directory it gets
executed on boot)
 #!/bin/sh
 led-control power led off
 led-control status led off

*** NFS mounting

create a file in the config dir (conf) called :
 net.mounts
 then put the mounts you want in that file:
 xmount 192.168.0.1:/media/tomb/ tomb nfs

*** upnp-cmd

**** example on how to add a media file

use this syntax
 SetAVTransportURI <URI> <URIMetaData> (allowed URI:
"http://server/file", "file:///folder/file"
 IE:

upnp-cmd SetAVTransportURI "file:///tmp/media/usb/tomb/Sesame.m4v"

*** subtitles

to get subtitles to work you must rename it exactly as the movie name
and make sure its in srt format

** sound cards

Unmute "iec958" spdif out
 bring up alsamixer and, using the arrow keys, move over to the "iec958"
device and un-mute it by hitting the "m" key. Hit "esc" to exit and save
the settings.

** boot-shutdown

Rebooting when comp Freezes
 Like Ctrl + Alt + Delete this tip is a three fingered Vulcan neck
pinch. It consists of Alt + SysRq and a selection of one other key (of
which there are thirteen!), the choice of which will determine what
operation is performed. This has been described as a way to communicate
with the Kernel. It used to be that you had to enable this "magic key
combo" when compiling a kernel but this is no longer necessary. (If your
computer does not have a SysRq key then look for the "Print Screen"
key---usually abbreviated to Prt Scr Normally, after certain key combos
you will see "OK" and "Done". If your kernel is really locked up you
might not see them at all. If you have a file called
/proc/sys/kernel/sysrq then you are okay and man proc should list it and
it will be enabled if there is a "1" in it.
 Alt + SysRq + B
 If you're not running any crucial, scheduled tasks or in the middle of
composing a letter or an e-mail then this key combination may be the one
to use. It will reboot the system immediately without bothering to sync
or unmount disks.
 Linux hardware tips
 If you cannot get to a terminal window by using Ctrl + Alt + F2 then
use this key combination (pressed altogether) to get a keyboard (this is
because this key combination turns off what is called keyboard raw mode.
Pressing these keys allows keyboard input even after your X-Windows
session has crashed/frozen). Now, try Ctrl + Alt + F2 again and you can
close down from the terminal. If that fails move on to the next option.
 Alt + SysRq + S
 This key combo does just what it says on the tin: it (S)ync's all
filesystems which reduces the possibility of losing any data and
possibly obviating the need for the system to run fsck upon reboot.
 Alt + SysRq + U
 As you might guess, this one tries to unmount disks and remount them as
read only.
 Alt + SysRq + O
 Not so obvious, but this will power off your machine without syncing or
unmounting disks (but it won't reboot. See above).The main key sequence
is:
Alt + PrintScreen+ R+S+E+U+I+B

** Battery/Powersave
*** Screensavers/DPMS
 Fancy screensavers can be very pretty, however from a power savings
perspective using such a visual screensaver is not a good idea at all.
 First of all, the screensaver will spend quite a bit of CPU time (and
in case of 3D screensavers, GPU time) and that consumes power (moving
parts will wake the cpu up all the time to do the heavy graphics work).
With the fancier screensavers, it's very likely that your machine will
consume more power displaying the screensaver than it will during normal
operation.
 A much more power-friendly approach is to just turn the screen off
entirely (be it a laptop screen or an external screen, as is used by
desktop or server systems).
 One common technology to enable X to turn off the screen is called
"DPMS". You can turn on DPMS with the following command:
 xset +dpms
 or on
 xset -dpms
 You can also control what timeouts are used to turn off the display:
 xset dpms 0 0 120
 The command above will turn off the display after 120 seconds of
inactivity.
 Turn off screen immediately
 xset dpms force offReducing backlight brightness

 As of version 7.3 of X.org, a program called xbacklight is included. It
allows users to use software to directly control the backlight of
machines with integrated Intel graphics, and others. In addition, for
quite a few laptops, the kernel exposes a sysfs interface to control
brightness.
 Interestingly, in our measurements we have found that, at least on
newer laptops, the kernel sysfs method (which tends to use the BIOS on
the machine) seems to not control the actual backlight, but rather
change the colors of the pixels on the screen to appear darker. Using
darker pixels obviously doesn't save as much power as reducing the
intensity of the backlight.
 To set your backlight to 50% brightness, you can use the xbacklight
program like this:
 xbacklight -set 50
 Various Linux desktops also have brightness control applications that
can replace the xbacklight program.
*** PowerTOP
**** auto tune 
to auto enhance battery use this Command

#+NAME: 
#+BEGIN_SRC sh
sudo powertop --auto-tune
#+END_SRC
*** enable power top as a systemd service
add thie file
file:/etc/systemd/system/powertop.service

#+BEGIN_SRC emacs-lisp :results none
[Unit]
Description=Powertop tunings
[Service]
Type=oneshot
RemainAfterExit=no
ExecStart=/usr/bin/powertop --auto-tune
#"powertop --auto-tune" still needs a terminal for some reason.
#Possibly a bug?
Environment="TERM=xterm"

[Install]
WantedBy=multi-user.target
#+END_SRC

** cd-dvd

Make internal DVD Work
 1. look in /dev and see where the dvd is (my machine /dev/dvd1 but You
can have anything ranging from a /dev/dvd, /dev/dvdrw, /dev/dvd1
/dev/dvdrw1
 setup the correct path in Mythdvd settingsEject and close tray from
command line
 eject /dev/cdrom1
 to close tray:
 eject -t /dev/cdrom1

** monitor

Disable X screen saver
 xset s off

** mouse

7 wheel Mouse setup
 To get all wheels in the mouse to work:
 replace the input device section regarding the mouse with this in the
/etc/X11/xorg.conf
 
 Section "InputDevice"
 Identifier "Configured Mouse"
 Driver "mouse"
 Option "CorePointer"
 Option "Device" "/dev/input/mice"
 Option "Protocol" "ExplorerPS/2"
 Option "Emulate3Buttons" "true"
 Option "Buttons" "7"
 Option "ZAxisMapping" "4 5"
 Option "ButtonMapping" "1 2 3 6 7"
 EndSection
 
 then restart
 to test if it worked in the command line paste:
 xev and test all buttons in the square
 
** alsa

*** test 5.1 speakers

issue:
 speaker-test -t wav -c 6

* shortcuts-cheatsheets-Audio
** zeltak legends (rating etc...)
**** Zeltak's Premium Photo Collection Rating System
 5: Zeltaks GH (Pics I NEVER get tired of)
 4: The best Pics
 3: Good pics
 2: Normal pics (the bulk of Zeltak collection)
 1: Not good (bad pics)
 0: Unrated Zeltak's Premium Music Collection Rating System
**** SONGS
 5: Zeltaks GH (Songs I NEVER get tired of)
 4: The best Songs
 3: Good music (stuff i can listen to)
 2: Normal Music (the stuff that suck in albums)
 1: Not good (Dont ever listen)
 0: Unrated

** Audio
*** albumartist
    :PROPERTIES:
    :ID:       e3878562-df9e-44b5-813e-df4c32b3cfe7
    :END:
**** basics 
`albumartist` is the artist that actually on the whole album 
`artist` is the artist that preforming the current song

[[~/Dropbox/Org/Tech/linux_files/Image_ygeUDVxk4TCc5gzAYvCANg_0001.png
]]you simply add an albumartist tag to a release. for example:

albumartist=tribute

this way you have the artist field free for the individual artists of
the tracks
[[
~/Dropbox/Org/Tech/linux_files/Image_ygeUDVxk4TCc5gzAYvCANg_0002.png]]

example:
[[
~/Dropbox/Org/Tech/linux_files/pA8d9.jpeg]]

**** rasi blog post in depth (focused on mpd)
Grouping VA albums in mpd
http://journal.53280.de/mpd.html

The issue:
Every once in a while some user joins #mpd and asks how albums with several artists can be grouped together instead of displaying each artist individually in library. And while I agree that this is annoying, their assumptions are wrong. They assume this is a player issue, while in reality it's caused by missing tags in the music files.

Messed up Compilation album

Say hello to the albumartist tag
The solution is in fact relatively simple. The artist tag that everyone knows just represents the artist for the current title. There is another artist tag, called "albumartist", which represents the artist of the album.

Wrong usage of albumartist - a common problem
Many users know the albumartist tag, but only tag their Multi-artist albums accordingly. This is wrong, because for this to work, the music player has to make exceptions what to do with files that don't have an albumartist tag.

You see: EVERY album has a global artist. It just happens to be the same artist for all tracks on regular albums. It's still a album-related artist.

Long story short: Every album needs an albumartist tag. For regular albums the albumartist tag is the same as the artist tag. For multi-artist releases it can be something like "Various Artists" or "Soundtrack"

I have thousands of albums, how to sort this mess?
Don't worry, the process of fixing your files is a short one. It's a 2 step process.

1. Fixing of your multi-artist releases.
First step is to get a tagger, for this example I use the excellent picard tagger. Install it from your repository. Now load all your multi-artist albums into it, by simply dragging the folders on picards window.

When all files were properly added, select them all and watch the lower part of picards window. As you can see my files already have the albumartist tag. If you have such a line too, simply click in the right column and give it a name (e.g. Various Artists)

Adding albumartist tag in picard

If no "Album Artist" line is visible right click and chose "Add New Tag" type "albumartist" and fill the value as above.

Now make sure that "Move Files" and "Rename Files" is disabled in the Options menu on top.

Finally hit save. You have successfully fixed your Multi-Artist albums.

2. Fix your regular albums
But remember, all albums need an albumartist tag. Luckily ncmpcpp has a little tool to fix this automatically for you, but we need to build it.

Open a terminal. Create an empty directory and cd into it. run these commands:

wget http://repo.or.cz/w/ncmpcpp.git/blob_plain/HEAD:/extras/Makefile
wget http://repo.or.cz/w/ncmpcpp.git/blob_plain/HEAD:/extras/artist_to_albumartist.cpp
make
This will build a little programm, called artist_to_albumartist, that you can find in the same directory now. To use it simply run this command:

find /PATH/TO/YOUR/MUSIC \( -name "*.flac" -o -name "*.mp3" -o -name "*.ogg" \) -exec ./artist_to_albumartist {} \;
Replace /PATH/TO/YOUR/MUSIC with your actual music root. This will copy the artist tag of all files to the albumartist tag, skipping those files that already have one (aka the multi-artist releases we fixed earlier)

Finally to make ncmpcpp use this new tag add this to your ~/.ncmpcpp/config file:

media_library_primary_tag = "album_artist"
Result
See the same track from first image properly grouped under its album:

*** convert album to albumartist script
use this script to convert

file:/home/zeltak/bin/artist_to_albumartist

The little script copies Artist tag (if present) to
AlbumArtist (if not present) for given mp3/ogg/flac files.
₆In example₆ 

#+BEGIN_SRC sh
/home/zeltak/bin/artist_to_albumartist [--dry-run] files
#+END_SRC

$Note to run it recursively for all your files, you can use$:
#+BEGIN_SRC sh
find DIRECTORY \( -name ".flac" -o -name ".mp3" -o -name ".ogg" \) -exec ./artist_to_albumartist [--dry-run] {} \; 
#+END_SRC

*** Importing music workflow
**** import to beets
for an album use:

#+BEGIN_SRC sh
beets import /PATH/TO
#+END_SRC

for a single or a bunch of songs:
$Note: change in the beets config before importing singles based on weather its a single/1 hit wonder or a few tracks from an aritst you have albums for, see config file for more info$:

#+BEGIN_SRC sh
beets import -T /PATH/TO
#+END_SRC

file:/home/zeltak/.config/beets/config.yaml

**** replay gain  
***** basic
%Tip we always want replaygain by album%
***** using foobar
%Tip-look also here to add columns to foobar:%
[[file:tech.org::add%20the%20replygain%20column%20in%20playlist%20view][add the replygain column in playlist view]]

this is a good method when you need to mass tag a whole collection, or retag your whole collection

install foobar through wine and launch it
add a folder with all your music
select all files and right click Replaygain then choose the 'scan selection by albums (by tags)'
***** using beets
if you have the replaygain plugin enabled in beets it will auto assign replaygain while importing
***** using caudec
#+BEGIN_SRC sh
caudec -g /path/to/folder/.flac
#+END_SRC
*** convert FLAC/APE cue to flac 
for 'FLAC' use flacon to split the large flac to tracs
for 'ape' files first use gnome soundconverter to convert from ape to flac (the bug music file) and then flacon to split to tracks
*** fix broken tags for clerk proper operation
if beets screws your tags do the following
delete uneeded tags:

#+BEGIN_EXAMPLE
album artist
trackc 
discc 
#+END_EXAMPLE

also make sure there is no missing Dates/year and album etc entries (all base entries if tags need to be complete)

** Video 
*** Importing Video workflow
**** clean crap and junk files 
use this script to clean the folders from junk files

#+begin_src sh
#!/bin/bash
find . '(' -iname '.nfo' -o -iname '.jpg'  -o -iname '.JPEG'    -o -iname '.png'  -o -iname '.PNG'  -o -iname '.jpeg'  -o -iname '.JPEG'  -o -iname '.log'  -o -iname '.m3u'  -o -iname '.accurip' -iname '.nfo' -o -iname '.tbn' -o -iname '.txt' ')' -exec rm {} \;
#+end_src

$Note- its already built in wokrer$ 

**** move downloaded files to sorting 
manually (or with a script) move movie to the sort folders here:

file:/home/zeltak/mounts/lraid/Download/transmission/completed/1.In/

if needed for movies auto move files to folder using this script

#+begin_src sh
#!/bin/bash
find . -type f | while read file;
do
    f=$(basename "$file")
    f1=${f%.}
    mkdir "$f1"
    mv "$f" "$f1"
done 
#+end_src

$Note- its already built in wokrer$ 

Then proceed to movie or TV processing
**** Movies
use 'tinymoviemanager' to process the files for xbmc



* EOF settings
Local variables:
buffer-read-only: t
End:
#+END_SRC
 
